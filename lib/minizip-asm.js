(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("minizip", [], factory);
	else if(typeof exports === 'object')
		exports["minizip"] = factory();
	else
		root["minizip"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Buffer = __webpack_require__(1).Buffer;
	
	var _zip = __webpack_require__(8);
	
	var _unzip = __webpack_require__(31);
	
	module.exports = {
	
		zip: function zip(data, password, perf, cbMessage, noBuf) {
	
			var _data = _zip(data, password, perf, cbMessage);
	
			if (!noBuf) {
	
				_data = Buffer.from(_data);
			}
	
			return _data;
		},
	
		unzip: function unzip(data, password, cbMessage, noBuf) {
	
			var _data = _unzip(data, password, cbMessage);
	
			if (!_data) {
	
				throw new Error('Require valid password!');
			}
	
			if (!noBuf) {
	
				this.walk(_data, function (o) {
	
					o.contents = Buffer.from(o.contents);
				});
			}
	
			return _data;
		},
	
		encrypt: function encrypt(data, password, perf, cbMessage, noBuf) {
	
			var _data = this.unzip(data, null, cbMessage, true);
	
			_data = this.zip(_data, password, perf, cbMessage, noBuf);
	
			return _data;
		},
	
		decrypt: function decrypt(data, password, perf, cbMessage, noBuf) {
	
			var _data = this.unzip(data, password, cbMessage, true);
	
			_data = this.zip(_data, null, perf, cbMessage, noBuf);
	
			return _data;
		},
	
		walk: function walk(data, cb) {
	
			cb = cb ? cb : function () {};
	
			var files = [];
	
			function _walk(data, filepath) {
	
				Object.keys(data).forEach(function (key) {
	
					var _filepath = (filepath ? filepath + '/' : '') + key;
	
					if (data[key].isDir) {
	
						_walk(data[key].contents, _filepath);
					} else {
	
						cb(data[key]);
	
						files.push({
	
							filepath: _filepath,
	
							contents: data[key].contents
	
						});
					}
				});
			}
	
			_walk(data);
	
			return files;
		}
	
	};

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(6)
	var ieee754 = __webpack_require__(7)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	var K_MAX_LENGTH = 0x7fffffff
	exports.kMaxLength = K_MAX_LENGTH
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
	 *               implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * We report that the browser does not support typed arrays if the are not subclassable
	 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
	 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
	 * for __proto__ and has a buggy typed array implementation.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()
	
	if (!Buffer.TYPED_ARRAY_SUPPORT) {
	  console.error(
	    'This browser lacks typed array (Uint8Array) support which is required by ' +
	    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.')
	}
	
	function typedArraySupport () {
	  // Can typed array instances can be augmented?
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42
	  } catch (e) {
	    return false
	  }
	}
	
	function createBuffer (length) {
	  if (length > K_MAX_LENGTH) {
	    throw new RangeError('Invalid typed array length')
	  }
	  // Return an augmented `Uint8Array` instance
	  var buf = new Uint8Array(length)
	  buf.__proto__ = Buffer.prototype
	  return buf
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(arg)
	  }
	  return from(arg, encodingOrOffset, length)
	}
	
	// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	if (typeof Symbol !== 'undefined' && Symbol.species &&
	    Buffer[Symbol.species] === Buffer) {
	  Object.defineProperty(Buffer, Symbol.species, {
	    value: null,
	    configurable: true,
	    enumerable: false,
	    writable: false
	  })
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	function from (value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(value, encodingOrOffset)
	  }
	
	  return fromObject(value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(value, encodingOrOffset, length)
	}
	
	// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
	// https://github.com/feross/buffer/pull/148
	Buffer.prototype.__proto__ = Uint8Array.prototype
	Buffer.__proto__ = Uint8Array
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(size).fill(fill, encoding)
	      : createBuffer(size).fill(fill)
	  }
	  return createBuffer(size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(size, fill, encoding)
	}
	
	function allocUnsafe (size) {
	  assertSize(size)
	  return createBuffer(size < 0 ? 0 : checked(size) | 0)
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(size)
	}
	
	function fromString (string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  var buf = createBuffer(length)
	
	  var actual = buf.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    buf = buf.slice(0, actual)
	  }
	
	  return buf
	}
	
	function fromArrayLike (array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  var buf = createBuffer(length)
	  for (var i = 0; i < length; i += 1) {
	    buf[i] = array[i] & 255
	  }
	  return buf
	}
	
	function fromArrayBuffer (array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  var buf
	  if (byteOffset === undefined && length === undefined) {
	    buf = new Uint8Array(array)
	  } else if (length === undefined) {
	    buf = new Uint8Array(array, byteOffset)
	  } else {
	    buf = new Uint8Array(array, byteOffset, length)
	  }
	
	  // Return an augmented `Uint8Array` instance
	  buf.__proto__ = Buffer.prototype
	  return buf
	}
	
	function fromObject (obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    var buf = createBuffer(len)
	
	    if (buf.length === 0) {
	      return buf
	    }
	
	    obj.copy(buf, 0, 0, len)
	    return buf
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(0)
	      }
	      return fromArrayLike(obj)
	    }
	
	    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
	      return fromArrayLike(obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= K_MAX_LENGTH) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!Array.isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset >>> 0
	    if (isFinite(length)) {
	      length = length >>> 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf = this.subarray(start, end)
	  // Return an augmented `Uint8Array` instance
	  newBuf.__proto__ = Buffer.prototype
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  offset = offset >>> 0
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  byteLength = byteLength >>> 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  this[offset] = (value & 0xff)
	  this[offset + 1] = (value >>> 8)
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  this[offset] = (value >>> 8)
	  this[offset + 1] = (value & 0xff)
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  this[offset + 3] = (value >>> 24)
	  this[offset + 2] = (value >>> 16)
	  this[offset + 1] = (value >>> 8)
	  this[offset] = (value & 0xff)
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  this[offset] = (value >>> 24)
	  this[offset + 1] = (value >>> 16)
	  this[offset + 2] = (value >>> 8)
	  this[offset + 3] = (value & 0xff)
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  this[offset] = (value & 0xff)
	  this[offset + 1] = (value >>> 8)
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  this[offset] = (value >>> 8)
	  this[offset + 1] = (value & 0xff)
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  this[offset] = (value & 0xff)
	  this[offset + 1] = (value >>> 8)
	  this[offset + 2] = (value >>> 16)
	  this[offset + 3] = (value >>> 24)
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  this[offset] = (value >>> 24)
	  this[offset + 1] = (value >>> 16)
	  this[offset + 2] = (value >>> 8)
	  this[offset + 3] = (value & 0xff)
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  value = +value
	  offset = offset >>> 0
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : new Buffer(val, encoding)
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(3)
	var ieee754 = __webpack_require__(4)
	var isArray = __webpack_require__(5)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()
	
	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }
	
	  return that
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}
	
	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }
	
	  return fromObject(that, value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}
	
	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)
	
	  var actual = that.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }
	
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }
	
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}
	
	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)
	
	    if (that.length === 0) {
	      return that
	    }
	
	    obj.copy(that, 0, 0, len)
	    return that
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }
	
	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer, (function() { return this; }())))

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}
	
	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}
	
	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)
	
	  arr = new Arr(len * 3 / 4 - placeHolders)
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len
	
	  var L = 0
	
	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }
	
	  parts.push(output)
	
	  return parts.join('')
	}


/***/ },
/* 4 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 5 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}
	
	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}
	
	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)
	
	  arr = new Arr(len * 3 / 4 - placeHolders)
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len
	
	  var L = 0
	
	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }
	
	  parts.push(output)
	
	  return parts.join('')
	}


/***/ },
/* 7 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, module, Buffer) {"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var zip = function zip(data, password, perf, cbMessage) {
	  perf = perf ? perf : 3;cbMessage = cbMessage ? cbMessage : function () {};var filepath = "file.zip";var Module = { ENVIRONMENT: "WEB", data: data, password: password, perf: perf, cbMessage: cbMessage, filepath: filepath, arguments: ["-o", "-" + perf.toString()], print: function print(message) {
	      Module["cbMessage"](message);
	    }, preRun: function preRun() {
	      pasteFileTree(Module["data"], "/");function pasteFileTree(data, filepath) {
	        Object.keys(data).forEach(function (key) {
	          var _filepath = filepath + "/" + key;if (data[key].isDir) {
	            FS.mkdir(_filepath);pasteFileTree(data[key].contents, _filepath);
	          } else {
	            FS.writeFile(_filepath, data[key].contents, { encoding: "binary" });Module["arguments"].push(_filepath);
	          }
	        });
	      }
	    }, postRun: function postRun() {
	      Module["return"] = FS.readFile(Module["filepath"]);
	    }, noExitRuntime: true };if (password) {
	    Module["arguments"].push("-p", password);
	  }Module["arguments"].push(filepath);var Module;if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};var moduleOverrides = {};for (var key in Module) {
	    if (Module.hasOwnProperty(key)) {
	      moduleOverrides[key] = Module[key];
	    }
	  }var ENVIRONMENT_IS_WEB = false;var ENVIRONMENT_IS_WORKER = false;var ENVIRONMENT_IS_NODE = false;var ENVIRONMENT_IS_SHELL = false;if (Module["ENVIRONMENT"]) {
	    if (Module["ENVIRONMENT"] === "WEB") {
	      ENVIRONMENT_IS_WEB = true;
	    } else if (Module["ENVIRONMENT"] === "WORKER") {
	      ENVIRONMENT_IS_WORKER = true;
	    } else if (Module["ENVIRONMENT"] === "NODE") {
	      ENVIRONMENT_IS_NODE = true;
	    } else if (Module["ENVIRONMENT"] === "SHELL") {
	      ENVIRONMENT_IS_SHELL = true;
	    } else {
	      throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
	    }
	  } else {
	    ENVIRONMENT_IS_WEB = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object";ENVIRONMENT_IS_WORKER = typeof importScripts === "function";ENVIRONMENT_IS_NODE = (typeof process === "undefined" ? "undefined" : _typeof(process)) === "object" && "function" === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
	  }if (ENVIRONMENT_IS_NODE) {
	    if (!Module["print"]) Module["print"] = console.log;if (!Module["printErr"]) Module["printErr"] = console.warn;var nodeFS;var nodePath;Module["read"] = function read(filename, binary) {
	      if (!nodeFS) nodeFS = __webpack_require__(11);if (!nodePath) nodePath = __webpack_require__(12);filename = nodePath["normalize"](filename);var ret = nodeFS["readFileSync"](filename);return binary ? ret : ret.toString();
	    };Module["readBinary"] = function readBinary(filename) {
	      var ret = Module["read"](filename, true);if (!ret.buffer) {
	        ret = new Uint8Array(ret);
	      }assert(ret.buffer);return ret;
	    };Module["load"] = function load(f) {
	      globalEval(read(f));
	    };if (!Module["thisProgram"]) {
	      if (process["argv"].length > 1) {
	        Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
	      } else {
	        Module["thisProgram"] = "unknown-program";
	      }
	    }Module["arguments"] = process["argv"].slice(2);if (true) {
	      module["exports"] = Module;
	    }process["on"]("uncaughtException", function (ex) {
	      if (!(ex instanceof ExitStatus)) {
	        throw ex;
	      }
	    });Module["inspect"] = function () {
	      return "[Emscripten Module object]";
	    };
	  } else if (ENVIRONMENT_IS_SHELL) {
	    if (!Module["print"]) Module["print"] = print;if (typeof printErr != "undefined") Module["printErr"] = printErr;if (typeof read != "undefined") {
	      Module["read"] = read;
	    } else {
	      Module["read"] = function read() {
	        throw "no read() available";
	      };
	    }Module["readBinary"] = function readBinary(f) {
	      if (typeof readbuffer === "function") {
	        return new Uint8Array(readbuffer(f));
	      }var data = read(f, "binary");assert((typeof data === "undefined" ? "undefined" : _typeof(data)) === "object");return data;
	    };if (typeof scriptArgs != "undefined") {
	      Module["arguments"] = scriptArgs;
	    } else if (typeof arguments != "undefined") {
	      Module["arguments"] = arguments;
	    }
	  } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
	    Module["read"] = function read(url) {
	      var xhr = new XMLHttpRequest();xhr.open("GET", url, false);xhr.send(null);return xhr.responseText;
	    };Module["readAsync"] = function readAsync(url, onload, onerror) {
	      var xhr = new XMLHttpRequest();xhr.open("GET", url, true);xhr.responseType = "arraybuffer";xhr.onload = function xhr_onload() {
	        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
	          onload(xhr.response);
	        } else {
	          onerror();
	        }
	      };xhr.onerror = onerror;xhr.send(null);
	    };if (typeof arguments != "undefined") {
	      Module["arguments"] = arguments;
	    }if (typeof console !== "undefined") {
	      if (!Module["print"]) Module["print"] = function print(x) {
	        console.log(x);
	      };if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
	        console.warn(x);
	      };
	    } else {
	      var TRY_USE_DUMP = false;if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function (x) {
	        dump(x);
	      } : function (x) {};
	    }if (ENVIRONMENT_IS_WORKER) {
	      Module["load"] = importScripts;
	    }if (typeof Module["setWindowTitle"] === "undefined") {
	      Module["setWindowTitle"] = function (title) {
	        document.title = title;
	      };
	    }
	  } else {
	    throw "Unknown runtime environment. Where are we?";
	  }function globalEval(x) {
	    eval.call(null, x);
	  }if (!Module["load"] && Module["read"]) {
	    Module["load"] = function load(f) {
	      globalEval(Module["read"](f));
	    };
	  }if (!Module["print"]) {
	    Module["print"] = function () {};
	  }if (!Module["printErr"]) {
	    Module["printErr"] = Module["print"];
	  }if (!Module["arguments"]) {
	    Module["arguments"] = [];
	  }if (!Module["thisProgram"]) {
	    Module["thisProgram"] = "./this.program";
	  }Module.print = Module["print"];Module.printErr = Module["printErr"];Module["preRun"] = [];Module["postRun"] = [];for (var key in moduleOverrides) {
	    if (moduleOverrides.hasOwnProperty(key)) {
	      Module[key] = moduleOverrides[key];
	    }
	  }moduleOverrides = undefined;var Runtime = { setTempRet0: function setTempRet0(value) {
	      tempRet0 = value;
	    }, getTempRet0: function getTempRet0() {
	      return tempRet0;
	    }, stackSave: function stackSave() {
	      return STACKTOP;
	    }, stackRestore: function stackRestore(stackTop) {
	      STACKTOP = stackTop;
	    }, getNativeTypeSize: function getNativeTypeSize(type) {
	      switch (type) {case "i1":case "i8":
	          return 1;case "i16":
	          return 2;case "i32":
	          return 4;case "i64":
	          return 8;case "float":
	          return 4;case "double":
	          return 8;default:
	          {
	            if (type[type.length - 1] === "*") {
	              return Runtime.QUANTUM_SIZE;
	            } else if (type[0] === "i") {
	              var bits = parseInt(type.substr(1));assert(bits % 8 === 0);return bits / 8;
	            } else {
	              return 0;
	            }
	          }}
	    }, getNativeFieldSize: function getNativeFieldSize(type) {
	      return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
	    }, STACK_ALIGN: 16, prepVararg: function prepVararg(ptr, type) {
	      if (type === "double" || type === "i64") {
	        if (ptr & 7) {
	          assert((ptr & 7) === 4);ptr += 4;
	        }
	      } else {
	        assert((ptr & 3) === 0);
	      }return ptr;
	    }, getAlignSize: function getAlignSize(type, size, vararg) {
	      if (!vararg && (type == "i64" || type == "double")) return 8;if (!type) return Math.min(size, 8);return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
	    }, dynCall: function dynCall(sig, ptr, args) {
	      if (args && args.length) {
	        return Module["dynCall_" + sig].apply(null, [ptr].concat(args));
	      } else {
	        return Module["dynCall_" + sig].call(null, ptr);
	      }
	    }, functionPointers: [], addFunction: function addFunction(func) {
	      for (var i = 0; i < Runtime.functionPointers.length; i++) {
	        if (!Runtime.functionPointers[i]) {
	          Runtime.functionPointers[i] = func;return 2 * (1 + i);
	        }
	      }throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
	    }, removeFunction: function removeFunction(index) {
	      Runtime.functionPointers[(index - 2) / 2] = null;
	    }, warnOnce: function warnOnce(text) {
	      if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};if (!Runtime.warnOnce.shown[text]) {
	        Runtime.warnOnce.shown[text] = 1;Module.printErr(text);
	      }
	    }, funcWrappers: {}, getFuncWrapper: function getFuncWrapper(func, sig) {
	      assert(sig);if (!Runtime.funcWrappers[sig]) {
	        Runtime.funcWrappers[sig] = {};
	      }var sigCache = Runtime.funcWrappers[sig];if (!sigCache[func]) {
	        if (sig.length === 1) {
	          sigCache[func] = function dynCall_wrapper() {
	            return Runtime.dynCall(sig, func);
	          };
	        } else if (sig.length === 2) {
	          sigCache[func] = function dynCall_wrapper(arg) {
	            return Runtime.dynCall(sig, func, [arg]);
	          };
	        } else {
	          sigCache[func] = function dynCall_wrapper() {
	            return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
	          };
	        }
	      }return sigCache[func];
	    }, getCompilerSetting: function getCompilerSetting(name) {
	      throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
	    }, stackAlloc: function stackAlloc(size) {
	      var ret = STACKTOP;STACKTOP = STACKTOP + size | 0;STACKTOP = STACKTOP + 15 & -16;return ret;
	    }, staticAlloc: function staticAlloc(size) {
	      var ret = STATICTOP;STATICTOP = STATICTOP + size | 0;STATICTOP = STATICTOP + 15 & -16;return ret;
	    }, dynamicAlloc: function dynamicAlloc(size) {
	      var ret = HEAP32[DYNAMICTOP_PTR >> 2];var end = (ret + size + 15 | 0) & -16;HEAP32[DYNAMICTOP_PTR >> 2] = end;if (end >= TOTAL_MEMORY) {
	        var success = enlargeMemory();if (!success) {
	          HEAP32[DYNAMICTOP_PTR >> 2] = ret;return 0;
	        }
	      }return ret;
	    }, alignMemory: function alignMemory(size, quantum) {
	      var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);return ret;
	    }, makeBigInt: function makeBigInt(low, high, unsigned) {
	      var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;return ret;
	    }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };Module["Runtime"] = Runtime;var ABORT = 0;var EXITSTATUS = 0;function assert(condition, text) {
	    if (!condition) {
	      abort("Assertion failed: " + text);
	    }
	  }function getCFunc(ident) {
	    var func = Module["_" + ident];if (!func) {
	      try {
	        func = eval("_" + ident);
	      } catch (e) {}
	    }assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");return func;
	  }var cwrap, ccall;(function () {
	    var JSfuncs = { "stackSave": function stackSave() {
	        Runtime.stackSave();
	      }, "stackRestore": function stackRestore() {
	        Runtime.stackRestore();
	      }, "arrayToC": function arrayToC(arr) {
	        var ret = Runtime.stackAlloc(arr.length);writeArrayToMemory(arr, ret);return ret;
	      }, "stringToC": function stringToC(str) {
	        var ret = 0;if (str !== null && str !== undefined && str !== 0) {
	          var len = (str.length << 2) + 1;ret = Runtime.stackAlloc(len);stringToUTF8(str, ret, len);
	        }return ret;
	      } };var toC = { "string": JSfuncs["stringToC"], "array": JSfuncs["arrayToC"] };ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
	      var func = getCFunc(ident);var cArgs = [];var stack = 0;if (args) {
	        for (var i = 0; i < args.length; i++) {
	          var converter = toC[argTypes[i]];if (converter) {
	            if (stack === 0) stack = Runtime.stackSave();cArgs[i] = converter(args[i]);
	          } else {
	            cArgs[i] = args[i];
	          }
	        }
	      }var ret = func.apply(null, cArgs);if (returnType === "string") ret = Pointer_stringify(ret);if (stack !== 0) {
	        if (opts && opts.async) {
	          EmterpreterAsync.asyncFinalizers.push(function () {
	            Runtime.stackRestore(stack);
	          });return;
	        }Runtime.stackRestore(stack);
	      }return ret;
	    };var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc) {
	      var parsed = jsfunc.toString().match(sourceRegex).slice(1);return { arguments: parsed[0], body: parsed[1], returnValue: parsed[2] };
	    }var JSsource = null;function ensureJSsource() {
	      if (!JSsource) {
	        JSsource = {};for (var fun in JSfuncs) {
	          if (JSfuncs.hasOwnProperty(fun)) {
	            JSsource[fun] = parseJSFunc(JSfuncs[fun]);
	          }
	        }
	      }
	    }cwrap = function cwrap(ident, returnType, argTypes) {
	      argTypes = argTypes || [];var cfunc = getCFunc(ident);var numericArgs = argTypes.every(function (type) {
	        return type === "number";
	      });var numericRet = returnType !== "string";if (numericRet && numericArgs) {
	        return cfunc;
	      }var argNames = argTypes.map(function (x, i) {
	        return "$" + i;
	      });var funcstr = "(function(" + argNames.join(",") + ") {";var nargs = argTypes.length;if (!numericArgs) {
	        ensureJSsource();funcstr += "var stack = " + JSsource["stackSave"].body + ";";for (var i = 0; i < nargs; i++) {
	          var arg = argNames[i],
	              type = argTypes[i];if (type === "number") continue;var convertCode = JSsource[type + "ToC"];funcstr += "var " + convertCode.arguments + " = " + arg + ";";funcstr += convertCode.body + ";";funcstr += arg + "=(" + convertCode.returnValue + ");";
	        }
	      }var cfuncname = parseJSFunc(function () {
	        return cfunc;
	      }).returnValue;funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";if (!numericRet) {
	        var strgfy = parseJSFunc(function () {
	          return Pointer_stringify;
	        }).returnValue;funcstr += "ret = " + strgfy + "(ret);";
	      }if (!numericArgs) {
	        ensureJSsource();funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
	      }funcstr += "return ret})";return eval(funcstr);
	    };
	  })();Module["ccall"] = ccall;Module["cwrap"] = cwrap;function setValue(ptr, value, type, noSafe) {
	    type = type || "i8";if (type.charAt(type.length - 1) === "*") type = "i32";switch (type) {case "i1":
	        HEAP8[ptr >> 0] = value;break;case "i8":
	        HEAP8[ptr >> 0] = value;break;case "i16":
	        HEAP16[ptr >> 1] = value;break;case "i32":
	        HEAP32[ptr >> 2] = value;break;case "i64":
	        tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];break;case "float":
	        HEAPF32[ptr >> 2] = value;break;case "double":
	        HEAPF64[ptr >> 3] = value;break;default:
	        abort("invalid type for setValue: " + type);}
	  }Module["setValue"] = setValue;function getValue(ptr, type, noSafe) {
	    type = type || "i8";if (type.charAt(type.length - 1) === "*") type = "i32";switch (type) {case "i1":
	        return HEAP8[ptr >> 0];case "i8":
	        return HEAP8[ptr >> 0];case "i16":
	        return HEAP16[ptr >> 1];case "i32":
	        return HEAP32[ptr >> 2];case "i64":
	        return HEAP32[ptr >> 2];case "float":
	        return HEAPF32[ptr >> 2];case "double":
	        return HEAPF64[ptr >> 3];default:
	        abort("invalid type for setValue: " + type);}return null;
	  }Module["getValue"] = getValue;var ALLOC_NORMAL = 0;var ALLOC_STACK = 1;var ALLOC_STATIC = 2;var ALLOC_DYNAMIC = 3;var ALLOC_NONE = 4;Module["ALLOC_NORMAL"] = ALLOC_NORMAL;Module["ALLOC_STACK"] = ALLOC_STACK;Module["ALLOC_STATIC"] = ALLOC_STATIC;Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;Module["ALLOC_NONE"] = ALLOC_NONE;function allocate(slab, types, allocator, ptr) {
	    var zeroinit, size;if (typeof slab === "number") {
	      zeroinit = true;size = slab;
	    } else {
	      zeroinit = false;size = slab.length;
	    }var singleType = typeof types === "string" ? types : null;var ret;if (allocator == ALLOC_NONE) {
	      ret = ptr;
	    } else {
	      ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
	    }if (zeroinit) {
	      var ptr = ret,
	          stop;assert((ret & 3) == 0);stop = ret + (size & ~3);for (; ptr < stop; ptr += 4) {
	        HEAP32[ptr >> 2] = 0;
	      }stop = ret + size;while (ptr < stop) {
	        HEAP8[ptr++ >> 0] = 0;
	      }return ret;
	    }if (singleType === "i8") {
	      if (slab.subarray || slab.slice) {
	        HEAPU8.set(slab, ret);
	      } else {
	        HEAPU8.set(new Uint8Array(slab), ret);
	      }return ret;
	    }var i = 0,
	        type,
	        typeSize,
	        previousType;while (i < size) {
	      var curr = slab[i];if (typeof curr === "function") {
	        curr = Runtime.getFunctionIndex(curr);
	      }type = singleType || types[i];if (type === 0) {
	        i++;continue;
	      }if (type == "i64") type = "i32";setValue(ret + i, curr, type);if (previousType !== type) {
	        typeSize = Runtime.getNativeTypeSize(type);previousType = type;
	      }i += typeSize;
	    }return ret;
	  }Module["allocate"] = allocate;function getMemory(size) {
	    if (!staticSealed) return Runtime.staticAlloc(size);if (!runtimeInitialized) return Runtime.dynamicAlloc(size);return _malloc(size);
	  }Module["getMemory"] = getMemory;function Pointer_stringify(ptr, length) {
	    if (length === 0 || !ptr) return "";var hasUtf = 0;var t;var i = 0;while (1) {
	      t = HEAPU8[ptr + i >> 0];hasUtf |= t;if (t == 0 && !length) break;i++;if (length && i == length) break;
	    }if (!length) length = i;var ret = "";if (hasUtf < 128) {
	      var MAX_CHUNK = 1024;var curr;while (length > 0) {
	        curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));ret = ret ? ret + curr : curr;ptr += MAX_CHUNK;length -= MAX_CHUNK;
	      }return ret;
	    }return Module["UTF8ToString"](ptr);
	  }Module["Pointer_stringify"] = Pointer_stringify;function AsciiToString(ptr) {
	    var str = "";while (1) {
	      var ch = HEAP8[ptr++ >> 0];if (!ch) return str;str += String.fromCharCode(ch);
	    }
	  }Module["AsciiToString"] = AsciiToString;function stringToAscii(str, outPtr) {
	    return writeAsciiToMemory(str, outPtr, false);
	  }Module["stringToAscii"] = stringToAscii;var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;function UTF8ArrayToString(u8Array, idx) {
	    var endPtr = idx;while (u8Array[endPtr]) {
	      ++endPtr;
	    }if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
	      return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
	    } else {
	      var u0, u1, u2, u3, u4, u5;var str = "";while (1) {
	        u0 = u8Array[idx++];if (!u0) return str;if (!(u0 & 128)) {
	          str += String.fromCharCode(u0);continue;
	        }u1 = u8Array[idx++] & 63;if ((u0 & 224) == 192) {
	          str += String.fromCharCode((u0 & 31) << 6 | u1);continue;
	        }u2 = u8Array[idx++] & 63;if ((u0 & 240) == 224) {
	          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
	        } else {
	          u3 = u8Array[idx++] & 63;if ((u0 & 248) == 240) {
	            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
	          } else {
	            u4 = u8Array[idx++] & 63;if ((u0 & 252) == 248) {
	              u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
	            } else {
	              u5 = u8Array[idx++] & 63;u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
	            }
	          }
	        }if (u0 < 65536) {
	          str += String.fromCharCode(u0);
	        } else {
	          var ch = u0 - 65536;str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
	        }
	      }
	    }
	  }Module["UTF8ArrayToString"] = UTF8ArrayToString;function UTF8ToString(ptr) {
	    return UTF8ArrayToString(HEAPU8, ptr);
	  }Module["UTF8ToString"] = UTF8ToString;function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
	    if (!(maxBytesToWrite > 0)) return 0;var startIdx = outIdx;var endIdx = outIdx + maxBytesToWrite - 1;for (var i = 0; i < str.length; ++i) {
	      var u = str.charCodeAt(i);if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;if (u <= 127) {
	        if (outIdx >= endIdx) break;outU8Array[outIdx++] = u;
	      } else if (u <= 2047) {
	        if (outIdx + 1 >= endIdx) break;outU8Array[outIdx++] = 192 | u >> 6;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 65535) {
	        if (outIdx + 2 >= endIdx) break;outU8Array[outIdx++] = 224 | u >> 12;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 2097151) {
	        if (outIdx + 3 >= endIdx) break;outU8Array[outIdx++] = 240 | u >> 18;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 67108863) {
	        if (outIdx + 4 >= endIdx) break;outU8Array[outIdx++] = 248 | u >> 24;outU8Array[outIdx++] = 128 | u >> 18 & 63;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else {
	        if (outIdx + 5 >= endIdx) break;outU8Array[outIdx++] = 252 | u >> 30;outU8Array[outIdx++] = 128 | u >> 24 & 63;outU8Array[outIdx++] = 128 | u >> 18 & 63;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      }
	    }outU8Array[outIdx] = 0;return outIdx - startIdx;
	  }Module["stringToUTF8Array"] = stringToUTF8Array;function stringToUTF8(str, outPtr, maxBytesToWrite) {
	    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
	  }Module["stringToUTF8"] = stringToUTF8;function lengthBytesUTF8(str) {
	    var len = 0;for (var i = 0; i < str.length; ++i) {
	      var u = str.charCodeAt(i);if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;if (u <= 127) {
	        ++len;
	      } else if (u <= 2047) {
	        len += 2;
	      } else if (u <= 65535) {
	        len += 3;
	      } else if (u <= 2097151) {
	        len += 4;
	      } else if (u <= 67108863) {
	        len += 5;
	      } else {
	        len += 6;
	      }
	    }return len;
	  }Module["lengthBytesUTF8"] = lengthBytesUTF8;var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;function demangle(func) {
	    var hasLibcxxabi = !!Module["___cxa_demangle"];if (hasLibcxxabi) {
	      try {
	        var s = func.substr(1);var len = lengthBytesUTF8(s) + 1;var buf = _malloc(len);stringToUTF8(s, buf, len);var status = _malloc(4);var ret = Module["___cxa_demangle"](buf, 0, 0, status);if (getValue(status, "i32") === 0 && ret) {
	          return Pointer_stringify(ret);
	        }
	      } catch (e) {} finally {
	        if (buf) _free(buf);if (status) _free(status);if (ret) _free(ret);
	      }return func;
	    }Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func;
	  }function demangleAll(text) {
	    return text.replace(/__Z[\w\d_]+/g, function (x) {
	      var y = demangle(x);return x === y ? x : x + " [" + y + "]";
	    });
	  }function jsStackTrace() {
	    var err = new Error();if (!err.stack) {
	      try {
	        throw new Error(0);
	      } catch (e) {
	        err = e;
	      }if (!err.stack) {
	        return "(no stack trace available)";
	      }
	    }return err.stack.toString();
	  }function stackTrace() {
	    var js = jsStackTrace();if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();return demangleAll(js);
	  }Module["stackTrace"] = stackTrace;var HEAP;var buffer;var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;function updateGlobalBufferViews() {
	    Module["HEAP8"] = HEAP8 = new Int8Array(buffer);Module["HEAP16"] = HEAP16 = new Int16Array(buffer);Module["HEAP32"] = HEAP32 = new Int32Array(buffer);Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
	  }var STATIC_BASE, STATICTOP, staticSealed;var STACK_BASE, STACKTOP, STACK_MAX;var DYNAMIC_BASE, DYNAMICTOP_PTR;STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;staticSealed = false;function abortOnCannotGrowMemory() {
	    abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
	  }function enlargeMemory() {
	    abortOnCannotGrowMemory();
	  }var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;var WASM_PAGE_SIZE = 64 * 1024;var totalMemory = WASM_PAGE_SIZE;while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
	    if (totalMemory < 16 * 1024 * 1024) {
	      totalMemory *= 2;
	    } else {
	      totalMemory += 16 * 1024 * 1024;
	    }
	  }if (totalMemory !== TOTAL_MEMORY) {
	    TOTAL_MEMORY = totalMemory;
	  }if (Module["buffer"]) {
	    buffer = Module["buffer"];
	  } else {
	    {
	      buffer = new ArrayBuffer(TOTAL_MEMORY);
	    }
	  }updateGlobalBufferViews();function getTotalMemory() {
	    return TOTAL_MEMORY;
	  }HEAP32[0] = 1668509029;HEAP16[1] = 25459;if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";Module["HEAP"] = HEAP;Module["buffer"] = buffer;Module["HEAP8"] = HEAP8;Module["HEAP16"] = HEAP16;Module["HEAP32"] = HEAP32;Module["HEAPU8"] = HEAPU8;Module["HEAPU16"] = HEAPU16;Module["HEAPU32"] = HEAPU32;Module["HEAPF32"] = HEAPF32;Module["HEAPF64"] = HEAPF64;function callRuntimeCallbacks(callbacks) {
	    while (callbacks.length > 0) {
	      var callback = callbacks.shift();if (typeof callback == "function") {
	        callback();continue;
	      }var func = callback.func;if (typeof func === "number") {
	        if (callback.arg === undefined) {
	          Runtime.dynCall("v", func);
	        } else {
	          Runtime.dynCall("vi", func, [callback.arg]);
	        }
	      } else {
	        func(callback.arg === undefined ? null : callback.arg);
	      }
	    }
	  }var __ATPRERUN__ = [];var __ATINIT__ = [];var __ATMAIN__ = [];var __ATEXIT__ = [];var __ATPOSTRUN__ = [];var runtimeInitialized = false;var runtimeExited = false;function preRun() {
	    if (Module["preRun"]) {
	      if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];while (Module["preRun"].length) {
	        addOnPreRun(Module["preRun"].shift());
	      }
	    }callRuntimeCallbacks(__ATPRERUN__);
	  }function ensureInitRuntime() {
	    if (runtimeInitialized) return;runtimeInitialized = true;callRuntimeCallbacks(__ATINIT__);
	  }function preMain() {
	    callRuntimeCallbacks(__ATMAIN__);
	  }function exitRuntime() {
	    callRuntimeCallbacks(__ATEXIT__);runtimeExited = true;
	  }function postRun() {
	    if (Module["postRun"]) {
	      if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];while (Module["postRun"].length) {
	        addOnPostRun(Module["postRun"].shift());
	      }
	    }callRuntimeCallbacks(__ATPOSTRUN__);
	  }function addOnPreRun(cb) {
	    __ATPRERUN__.unshift(cb);
	  }Module["addOnPreRun"] = addOnPreRun;function addOnInit(cb) {
	    __ATINIT__.unshift(cb);
	  }Module["addOnInit"] = addOnInit;function addOnPreMain(cb) {
	    __ATMAIN__.unshift(cb);
	  }Module["addOnPreMain"] = addOnPreMain;function addOnExit(cb) {
	    __ATEXIT__.unshift(cb);
	  }Module["addOnExit"] = addOnExit;function addOnPostRun(cb) {
	    __ATPOSTRUN__.unshift(cb);
	  }Module["addOnPostRun"] = addOnPostRun;function intArrayFromString(stringy, dontAddNull, length) {
	    var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;var u8array = new Array(len);var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);if (dontAddNull) u8array.length = numBytesWritten;return u8array;
	  }Module["intArrayFromString"] = intArrayFromString;function intArrayToString(array) {
	    var ret = [];for (var i = 0; i < array.length; i++) {
	      var chr = array[i];if (chr > 255) {
	        chr &= 255;
	      }ret.push(String.fromCharCode(chr));
	    }return ret.join("");
	  }Module["intArrayToString"] = intArrayToString;function writeStringToMemory(string, buffer, dontAddNull) {
	    Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var lastChar, end;if (dontAddNull) {
	      end = buffer + lengthBytesUTF8(string);lastChar = HEAP8[end];
	    }stringToUTF8(string, buffer, Infinity);if (dontAddNull) HEAP8[end] = lastChar;
	  }Module["writeStringToMemory"] = writeStringToMemory;function writeArrayToMemory(array, buffer) {
	    HEAP8.set(array, buffer);
	  }Module["writeArrayToMemory"] = writeArrayToMemory;function writeAsciiToMemory(str, buffer, dontAddNull) {
	    for (var i = 0; i < str.length; ++i) {
	      HEAP8[buffer++ >> 0] = str.charCodeAt(i);
	    }if (!dontAddNull) HEAP8[buffer >> 0] = 0;
	  }Module["writeAsciiToMemory"] = writeAsciiToMemory;if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
	    var ah = a >>> 16;var al = a & 65535;var bh = b >>> 16;var bl = b & 65535;return al * bl + (ah * bl + al * bh << 16) | 0;
	  };Math.imul = Math["imul"];if (!Math["clz32"]) Math["clz32"] = function (x) {
	    x = x >>> 0;for (var i = 0; i < 32; i++) {
	      if (x & 1 << 31 - i) return i;
	    }return 32;
	  };Math.clz32 = Math["clz32"];if (!Math["trunc"]) Math["trunc"] = function (x) {
	    return x < 0 ? Math.ceil(x) : Math.floor(x);
	  };Math.trunc = Math["trunc"];var Math_abs = Math.abs;var Math_cos = Math.cos;var Math_sin = Math.sin;var Math_tan = Math.tan;var Math_acos = Math.acos;var Math_asin = Math.asin;var Math_atan = Math.atan;var Math_atan2 = Math.atan2;var Math_exp = Math.exp;var Math_log = Math.log;var Math_sqrt = Math.sqrt;var Math_ceil = Math.ceil;var Math_floor = Math.floor;var Math_pow = Math.pow;var Math_imul = Math.imul;var Math_fround = Math.fround;var Math_round = Math.round;var Math_min = Math.min;var Math_clz32 = Math.clz32;var Math_trunc = Math.trunc;var runDependencies = 0;var runDependencyWatcher = null;var dependenciesFulfilled = null;function getUniqueRunDependency(id) {
	    return id;
	  }function addRunDependency(id) {
	    runDependencies++;if (Module["monitorRunDependencies"]) {
	      Module["monitorRunDependencies"](runDependencies);
	    }
	  }Module["addRunDependency"] = addRunDependency;function removeRunDependency(id) {
	    runDependencies--;if (Module["monitorRunDependencies"]) {
	      Module["monitorRunDependencies"](runDependencies);
	    }if (runDependencies == 0) {
	      if (runDependencyWatcher !== null) {
	        clearInterval(runDependencyWatcher);runDependencyWatcher = null;
	      }if (dependenciesFulfilled) {
	        var callback = dependenciesFulfilled;dependenciesFulfilled = null;callback();
	      }
	    }
	  }Module["removeRunDependency"] = removeRunDependency;Module["preloadedImages"] = {};Module["preloadedAudios"] = {};var ASM_CONSTS = [];STATIC_BASE = 8;STATICTOP = STATIC_BASE + 17728;__ATINIT__.push();allocate([0, 0, 0, 0, 150, 48, 7, 119, 44, 97, 14, 238, 186, 81, 9, 153, 25, 196, 109, 7, 143, 244, 106, 112, 53, 165, 99, 233, 163, 149, 100, 158, 50, 136, 219, 14, 164, 184, 220, 121, 30, 233, 213, 224, 136, 217, 210, 151, 43, 76, 182, 9, 189, 124, 177, 126, 7, 45, 184, 231, 145, 29, 191, 144, 100, 16, 183, 29, 242, 32, 176, 106, 72, 113, 185, 243, 222, 65, 190, 132, 125, 212, 218, 26, 235, 228, 221, 109, 81, 181, 212, 244, 199, 133, 211, 131, 86, 152, 108, 19, 192, 168, 107, 100, 122, 249, 98, 253, 236, 201, 101, 138, 79, 92, 1, 20, 217, 108, 6, 99, 99, 61, 15, 250, 245, 13, 8, 141, 200, 32, 110, 59, 94, 16, 105, 76, 228, 65, 96, 213, 114, 113, 103, 162, 209, 228, 3, 60, 71, 212, 4, 75, 253, 133, 13, 210, 107, 181, 10, 165, 250, 168, 181, 53, 108, 152, 178, 66, 214, 201, 187, 219, 64, 249, 188, 172, 227, 108, 216, 50, 117, 92, 223, 69, 207, 13, 214, 220, 89, 61, 209, 171, 172, 48, 217, 38, 58, 0, 222, 81, 128, 81, 215, 200, 22, 97, 208, 191, 181, 244, 180, 33, 35, 196, 179, 86, 153, 149, 186, 207, 15, 165, 189, 184, 158, 184, 2, 40, 8, 136, 5, 95, 178, 217, 12, 198, 36, 233, 11, 177, 135, 124, 111, 47, 17, 76, 104, 88, 171, 29, 97, 193, 61, 45, 102, 182, 144, 65, 220, 118, 6, 113, 219, 1, 188, 32, 210, 152, 42, 16, 213, 239, 137, 133, 177, 113, 31, 181, 182, 6, 165, 228, 191, 159, 51, 212, 184, 232, 162, 201, 7, 120, 52, 249, 0, 15, 142, 168, 9, 150, 24, 152, 14, 225, 187, 13, 106, 127, 45, 61, 109, 8, 151, 108, 100, 145, 1, 92, 99, 230, 244, 81, 107, 107, 98, 97, 108, 28, 216, 48, 101, 133, 78, 0, 98, 242, 237, 149, 6, 108, 123, 165, 1, 27, 193, 244, 8, 130, 87, 196, 15, 245, 198, 217, 176, 101, 80, 233, 183, 18, 234, 184, 190, 139, 124, 136, 185, 252, 223, 29, 221, 98, 73, 45, 218, 21, 243, 124, 211, 140, 101, 76, 212, 251, 88, 97, 178, 77, 206, 81, 181, 58, 116, 0, 188, 163, 226, 48, 187, 212, 65, 165, 223, 74, 215, 149, 216, 61, 109, 196, 209, 164, 251, 244, 214, 211, 106, 233, 105, 67, 252, 217, 110, 52, 70, 136, 103, 173, 208, 184, 96, 218, 115, 45, 4, 68, 229, 29, 3, 51, 95, 76, 10, 170, 201, 124, 13, 221, 60, 113, 5, 80, 170, 65, 2, 39, 16, 16, 11, 190, 134, 32, 12, 201, 37, 181, 104, 87, 179, 133, 111, 32, 9, 212, 102, 185, 159, 228, 97, 206, 14, 249, 222, 94, 152, 201, 217, 41, 34, 152, 208, 176, 180, 168, 215, 199, 23, 61, 179, 89, 129, 13, 180, 46, 59, 92, 189, 183, 173, 108, 186, 192, 32, 131, 184, 237, 182, 179, 191, 154, 12, 226, 182, 3, 154, 210, 177, 116, 57, 71, 213, 234, 175, 119, 210, 157, 21, 38, 219, 4, 131, 22, 220, 115, 18, 11, 99, 227, 132, 59, 100, 148, 62, 106, 109, 13, 168, 90, 106, 122, 11, 207, 14, 228, 157, 255, 9, 147, 39, 174, 0, 10, 177, 158, 7, 125, 68, 147, 15, 240, 210, 163, 8, 135, 104, 242, 1, 30, 254, 194, 6, 105, 93, 87, 98, 247, 203, 103, 101, 128, 113, 54, 108, 25, 231, 6, 107, 110, 118, 27, 212, 254, 224, 43, 211, 137, 90, 122, 218, 16, 204, 74, 221, 103, 111, 223, 185, 249, 249, 239, 190, 142, 67, 190, 183, 23, 213, 142, 176, 96, 232, 163, 214, 214, 126, 147, 209, 161, 196, 194, 216, 56, 82, 242, 223, 79, 241, 103, 187, 209, 103, 87, 188, 166, 221, 6, 181, 63, 75, 54, 178, 72, 218, 43, 13, 216, 76, 27, 10, 175, 246, 74, 3, 54, 96, 122, 4, 65, 195, 239, 96, 223, 85, 223, 103, 168, 239, 142, 110, 49, 121, 190, 105, 70, 140, 179, 97, 203, 26, 131, 102, 188, 160, 210, 111, 37, 54, 226, 104, 82, 149, 119, 12, 204, 3, 71, 11, 187, 185, 22, 2, 34, 47, 38, 5, 85, 190, 59, 186, 197, 40, 11, 189, 178, 146, 90, 180, 43, 4, 106, 179, 92, 167, 255, 215, 194, 49, 207, 208, 181, 139, 158, 217, 44, 29, 174, 222, 91, 176, 194, 100, 155, 38, 242, 99, 236, 156, 163, 106, 117, 10, 147, 109, 2, 169, 6, 9, 156, 63, 54, 14, 235, 133, 103, 7, 114, 19, 87, 0, 5, 130, 74, 191, 149, 20, 122, 184, 226, 174, 43, 177, 123, 56, 27, 182, 12, 155, 142, 210, 146, 13, 190, 213, 229, 183, 239, 220, 124, 33, 223, 219, 11, 212, 210, 211, 134, 66, 226, 212, 241, 248, 179, 221, 104, 110, 131, 218, 31, 205, 22, 190, 129, 91, 38, 185, 246, 225, 119, 176, 111, 119, 71, 183, 24, 230, 90, 8, 136, 112, 106, 15, 255, 202, 59, 6, 102, 92, 11, 1, 17, 255, 158, 101, 143, 105, 174, 98, 248, 211, 255, 107, 97, 69, 207, 108, 22, 120, 226, 10, 160, 238, 210, 13, 215, 84, 131, 4, 78, 194, 179, 3, 57, 97, 38, 103, 167, 247, 22, 96, 208, 77, 71, 105, 73, 219, 119, 110, 62, 74, 106, 209, 174, 220, 90, 214, 217, 102, 11, 223, 64, 240, 59, 216, 55, 83, 174, 188, 169, 197, 158, 187, 222, 127, 207, 178, 71, 233, 255, 181, 48, 28, 242, 189, 189, 138, 194, 186, 202, 48, 147, 179, 83, 166, 163, 180, 36, 5, 54, 208, 186, 147, 6, 215, 205, 41, 87, 222, 84, 191, 103, 217, 35, 46, 122, 102, 179, 184, 74, 97, 196, 2, 27, 104, 93, 148, 43, 111, 42, 55, 190, 11, 180, 161, 142, 12, 195, 27, 223, 5, 90, 141, 239, 2, 45, 0, 0, 0, 0, 65, 49, 27, 25, 130, 98, 54, 50, 195, 83, 45, 43, 4, 197, 108, 100, 69, 244, 119, 125, 134, 167, 90, 86, 199, 150, 65, 79, 8, 138, 217, 200, 73, 187, 194, 209, 138, 232, 239, 250, 203, 217, 244, 227, 12, 79, 181, 172, 77, 126, 174, 181, 142, 45, 131, 158, 207, 28, 152, 135, 81, 18, 194, 74, 16, 35, 217, 83, 211, 112, 244, 120, 146, 65, 239, 97, 85, 215, 174, 46, 20, 230, 181, 55, 215, 181, 152, 28, 150, 132, 131, 5, 89, 152, 27, 130, 24, 169, 0, 155, 219, 250, 45, 176, 154, 203, 54, 169, 93, 93, 119, 230, 28, 108, 108, 255, 223, 63, 65, 212, 158, 14, 90, 205, 162, 36, 132, 149, 227, 21, 159, 140, 32, 70, 178, 167, 97, 119, 169, 190, 166, 225, 232, 241, 231, 208, 243, 232, 36, 131, 222, 195, 101, 178, 197, 218, 170, 174, 93, 93, 235, 159, 70, 68, 40, 204, 107, 111, 105, 253, 112, 118, 174, 107, 49, 57, 239, 90, 42, 32, 44, 9, 7, 11, 109, 56, 28, 18, 243, 54, 70, 223, 178, 7, 93, 198, 113, 84, 112, 237, 48, 101, 107, 244, 247, 243, 42, 187, 182, 194, 49, 162, 117, 145, 28, 137, 52, 160, 7, 144, 251, 188, 159, 23, 186, 141, 132, 14, 121, 222, 169, 37, 56, 239, 178, 60, 255, 121, 243, 115, 190, 72, 232, 106, 125, 27, 197, 65, 60, 42, 222, 88, 5, 79, 121, 240, 68, 126, 98, 233, 135, 45, 79, 194, 198, 28, 84, 219, 1, 138, 21, 148, 64, 187, 14, 141, 131, 232, 35, 166, 194, 217, 56, 191, 13, 197, 160, 56, 76, 244, 187, 33, 143, 167, 150, 10, 206, 150, 141, 19, 9, 0, 204, 92, 72, 49, 215, 69, 139, 98, 250, 110, 202, 83, 225, 119, 84, 93, 187, 186, 21, 108, 160, 163, 214, 63, 141, 136, 151, 14, 150, 145, 80, 152, 215, 222, 17, 169, 204, 199, 210, 250, 225, 236, 147, 203, 250, 245, 92, 215, 98, 114, 29, 230, 121, 107, 222, 181, 84, 64, 159, 132, 79, 89, 88, 18, 14, 22, 25, 35, 21, 15, 218, 112, 56, 36, 155, 65, 35, 61, 167, 107, 253, 101, 230, 90, 230, 124, 37, 9, 203, 87, 100, 56, 208, 78, 163, 174, 145, 1, 226, 159, 138, 24, 33, 204, 167, 51, 96, 253, 188, 42, 175, 225, 36, 173, 238, 208, 63, 180, 45, 131, 18, 159, 108, 178, 9, 134, 171, 36, 72, 201, 234, 21, 83, 208, 41, 70, 126, 251, 104, 119, 101, 226, 246, 121, 63, 47, 183, 72, 36, 54, 116, 27, 9, 29, 53, 42, 18, 4, 242, 188, 83, 75, 179, 141, 72, 82, 112, 222, 101, 121, 49, 239, 126, 96, 254, 243, 230, 231, 191, 194, 253, 254, 124, 145, 208, 213, 61, 160, 203, 204, 250, 54, 138, 131, 187, 7, 145, 154, 120, 84, 188, 177, 57, 101, 167, 168, 75, 152, 131, 59, 10, 169, 152, 34, 201, 250, 181, 9, 136, 203, 174, 16, 79, 93, 239, 95, 14, 108, 244, 70, 205, 63, 217, 109, 140, 14, 194, 116, 67, 18, 90, 243, 2, 35, 65, 234, 193, 112, 108, 193, 128, 65, 119, 216, 71, 215, 54, 151, 6, 230, 45, 142, 197, 181, 0, 165, 132, 132, 27, 188, 26, 138, 65, 113, 91, 187, 90, 104, 152, 232, 119, 67, 217, 217, 108, 90, 30, 79, 45, 21, 95, 126, 54, 12, 156, 45, 27, 39, 221, 28, 0, 62, 18, 0, 152, 185, 83, 49, 131, 160, 144, 98, 174, 139, 209, 83, 181, 146, 22, 197, 244, 221, 87, 244, 239, 196, 148, 167, 194, 239, 213, 150, 217, 246, 233, 188, 7, 174, 168, 141, 28, 183, 107, 222, 49, 156, 42, 239, 42, 133, 237, 121, 107, 202, 172, 72, 112, 211, 111, 27, 93, 248, 46, 42, 70, 225, 225, 54, 222, 102, 160, 7, 197, 127, 99, 84, 232, 84, 34, 101, 243, 77, 229, 243, 178, 2, 164, 194, 169, 27, 103, 145, 132, 48, 38, 160, 159, 41, 184, 174, 197, 228, 249, 159, 222, 253, 58, 204, 243, 214, 123, 253, 232, 207, 188, 107, 169, 128, 253, 90, 178, 153, 62, 9, 159, 178, 127, 56, 132, 171, 176, 36, 28, 44, 241, 21, 7, 53, 50, 70, 42, 30, 115, 119, 49, 7, 180, 225, 112, 72, 245, 208, 107, 81, 54, 131, 70, 122, 119, 178, 93, 99, 78, 215, 250, 203, 15, 230, 225, 210, 204, 181, 204, 249, 141, 132, 215, 224, 74, 18, 150, 175, 11, 35, 141, 182, 200, 112, 160, 157, 137, 65, 187, 132, 70, 93, 35, 3, 7, 108, 56, 26, 196, 63, 21, 49, 133, 14, 14, 40, 66, 152, 79, 103, 3, 169, 84, 126, 192, 250, 121, 85, 129, 203, 98, 76, 31, 197, 56, 129, 94, 244, 35, 152, 157, 167, 14, 179, 220, 150, 21, 170, 27, 0, 84, 229, 90, 49, 79, 252, 153, 98, 98, 215, 216, 83, 121, 206, 23, 79, 225, 73, 86, 126, 250, 80, 149, 45, 215, 123, 212, 28, 204, 98, 19, 138, 141, 45, 82, 187, 150, 52, 145, 232, 187, 31, 208, 217, 160, 6, 236, 243, 126, 94, 173, 194, 101, 71, 110, 145, 72, 108, 47, 160, 83, 117, 232, 54, 18, 58, 169, 7, 9, 35, 106, 84, 36, 8, 43, 101, 63, 17, 228, 121, 167, 150, 165, 72, 188, 143, 102, 27, 145, 164, 39, 42, 138, 189, 224, 188, 203, 242, 161, 141, 208, 235, 98, 222, 253, 192, 35, 239, 230, 217, 189, 225, 188, 20, 252, 208, 167, 13, 63, 131, 138, 38, 126, 178, 145, 63, 185, 36, 208, 112, 248, 21, 203, 105, 59, 70, 230, 66, 122, 119, 253, 91, 181, 107, 101, 220, 244, 90, 126, 197, 55, 9, 83, 238, 118, 56, 72, 247, 177, 174, 9, 184, 240, 159, 18, 161, 51, 204, 63, 138, 114, 253, 36, 147, 0, 0, 0, 0, 55, 106, 194, 1, 110, 212, 132, 3, 89, 190, 70, 2, 220, 168, 9, 7, 235, 194, 203, 6, 178, 124, 141, 4, 133, 22, 79, 5, 184, 81, 19, 14, 143, 59, 209, 15, 214, 133, 151, 13, 225, 239, 85, 12, 100, 249, 26, 9, 83, 147, 216, 8, 10, 45, 158, 10, 61, 71, 92, 11, 112, 163, 38, 28, 71, 201, 228, 29, 30, 119, 162, 31, 41, 29, 96, 30, 172, 11, 47, 27, 155, 97, 237, 26, 194, 223, 171, 24, 245, 181, 105, 25, 200, 242, 53, 18, 255, 152, 247, 19, 166, 38, 177, 17, 145, 76, 115, 16, 20, 90, 60, 21, 35, 48, 254, 20, 122, 142, 184, 22, 77, 228, 122, 23, 224, 70, 77, 56, 215, 44, 143, 57, 142, 146, 201, 59, 185, 248, 11, 58, 60, 238, 68, 63, 11, 132, 134, 62, 82, 58, 192, 60, 101, 80, 2, 61, 88, 23, 94, 54, 111, 125, 156, 55, 54, 195, 218, 53, 1, 169, 24, 52, 132, 191, 87, 49, 179, 213, 149, 48, 234, 107, 211, 50, 221, 1, 17, 51, 144, 229, 107, 36, 167, 143, 169, 37, 254, 49, 239, 39, 201, 91, 45, 38, 76, 77, 98, 35, 123, 39, 160, 34, 34, 153, 230, 32, 21, 243, 36, 33, 40, 180, 120, 42, 31, 222, 186, 43, 70, 96, 252, 41, 113, 10, 62, 40, 244, 28, 113, 45, 195, 118, 179, 44, 154, 200, 245, 46, 173, 162, 55, 47, 192, 141, 154, 112, 247, 231, 88, 113, 174, 89, 30, 115, 153, 51, 220, 114, 28, 37, 147, 119, 43, 79, 81, 118, 114, 241, 23, 116, 69, 155, 213, 117, 120, 220, 137, 126, 79, 182, 75, 127, 22, 8, 13, 125, 33, 98, 207, 124, 164, 116, 128, 121, 147, 30, 66, 120, 202, 160, 4, 122, 253, 202, 198, 123, 176, 46, 188, 108, 135, 68, 126, 109, 222, 250, 56, 111, 233, 144, 250, 110, 108, 134, 181, 107, 91, 236, 119, 106, 2, 82, 49, 104, 53, 56, 243, 105, 8, 127, 175, 98, 63, 21, 109, 99, 102, 171, 43, 97, 81, 193, 233, 96, 212, 215, 166, 101, 227, 189, 100, 100, 186, 3, 34, 102, 141, 105, 224, 103, 32, 203, 215, 72, 23, 161, 21, 73, 78, 31, 83, 75, 121, 117, 145, 74, 252, 99, 222, 79, 203, 9, 28, 78, 146, 183, 90, 76, 165, 221, 152, 77, 152, 154, 196, 70, 175, 240, 6, 71, 246, 78, 64, 69, 193, 36, 130, 68, 68, 50, 205, 65, 115, 88, 15, 64, 42, 230, 73, 66, 29, 140, 139, 67, 80, 104, 241, 84, 103, 2, 51, 85, 62, 188, 117, 87, 9, 214, 183, 86, 140, 192, 248, 83, 187, 170, 58, 82, 226, 20, 124, 80, 213, 126, 190, 81, 232, 57, 226, 90, 223, 83, 32, 91, 134, 237, 102, 89, 177, 135, 164, 88, 52, 145, 235, 93, 3, 251, 41, 92, 90, 69, 111, 94, 109, 47, 173, 95, 128, 27, 53, 225, 183, 113, 247, 224, 238, 207, 177, 226, 217, 165, 115, 227, 92, 179, 60, 230, 107, 217, 254, 231, 50, 103, 184, 229, 5, 13, 122, 228, 56, 74, 38, 239, 15, 32, 228, 238, 86, 158, 162, 236, 97, 244, 96, 237, 228, 226, 47, 232, 211, 136, 237, 233, 138, 54, 171, 235, 189, 92, 105, 234, 240, 184, 19, 253, 199, 210, 209, 252, 158, 108, 151, 254, 169, 6, 85, 255, 44, 16, 26, 250, 27, 122, 216, 251, 66, 196, 158, 249, 117, 174, 92, 248, 72, 233, 0, 243, 127, 131, 194, 242, 38, 61, 132, 240, 17, 87, 70, 241, 148, 65, 9, 244, 163, 43, 203, 245, 250, 149, 141, 247, 205, 255, 79, 246, 96, 93, 120, 217, 87, 55, 186, 216, 14, 137, 252, 218, 57, 227, 62, 219, 188, 245, 113, 222, 139, 159, 179, 223, 210, 33, 245, 221, 229, 75, 55, 220, 216, 12, 107, 215, 239, 102, 169, 214, 182, 216, 239, 212, 129, 178, 45, 213, 4, 164, 98, 208, 51, 206, 160, 209, 106, 112, 230, 211, 93, 26, 36, 210, 16, 254, 94, 197, 39, 148, 156, 196, 126, 42, 218, 198, 73, 64, 24, 199, 204, 86, 87, 194, 251, 60, 149, 195, 162, 130, 211, 193, 149, 232, 17, 192, 168, 175, 77, 203, 159, 197, 143, 202, 198, 123, 201, 200, 241, 17, 11, 201, 116, 7, 68, 204, 67, 109, 134, 205, 26, 211, 192, 207, 45, 185, 2, 206, 64, 150, 175, 145, 119, 252, 109, 144, 46, 66, 43, 146, 25, 40, 233, 147, 156, 62, 166, 150, 171, 84, 100, 151, 242, 234, 34, 149, 197, 128, 224, 148, 248, 199, 188, 159, 207, 173, 126, 158, 150, 19, 56, 156, 161, 121, 250, 157, 36, 111, 181, 152, 19, 5, 119, 153, 74, 187, 49, 155, 125, 209, 243, 154, 48, 53, 137, 141, 7, 95, 75, 140, 94, 225, 13, 142, 105, 139, 207, 143, 236, 157, 128, 138, 219, 247, 66, 139, 130, 73, 4, 137, 181, 35, 198, 136, 136, 100, 154, 131, 191, 14, 88, 130, 230, 176, 30, 128, 209, 218, 220, 129, 84, 204, 147, 132, 99, 166, 81, 133, 58, 24, 23, 135, 13, 114, 213, 134, 160, 208, 226, 169, 151, 186, 32, 168, 206, 4, 102, 170, 249, 110, 164, 171, 124, 120, 235, 174, 75, 18, 41, 175, 18, 172, 111, 173, 37, 198, 173, 172, 24, 129, 241, 167, 47, 235, 51, 166, 118, 85, 117, 164, 65, 63, 183, 165, 196, 41, 248, 160, 243, 67, 58, 161, 170, 253, 124, 163, 157, 151, 190, 162, 208, 115, 196, 181, 231, 25, 6, 180, 190, 167, 64, 182, 137, 205, 130, 183, 12, 219, 205, 178, 59, 177, 15, 179, 98, 15, 73, 177, 85, 101, 139, 176, 104, 34, 215, 187, 95, 72, 21, 186, 6, 246, 83, 184, 49, 156, 145, 185, 180, 138, 222, 188, 131, 224, 28, 189, 218, 94, 90, 191, 237, 52, 152, 190, 0, 0, 0, 0, 101, 103, 188, 184, 139, 200, 9, 170, 238, 175, 181, 18, 87, 151, 98, 143, 50, 240, 222, 55, 220, 95, 107, 37, 185, 56, 215, 157, 239, 40, 180, 197, 138, 79, 8, 125, 100, 224, 189, 111, 1, 135, 1, 215, 184, 191, 214, 74, 221, 216, 106, 242, 51, 119, 223, 224, 86, 16, 99, 88, 159, 87, 25, 80, 250, 48, 165, 232, 20, 159, 16, 250, 113, 248, 172, 66, 200, 192, 123, 223, 173, 167, 199, 103, 67, 8, 114, 117, 38, 111, 206, 205, 112, 127, 173, 149, 21, 24, 17, 45, 251, 183, 164, 63, 158, 208, 24, 135, 39, 232, 207, 26, 66, 143, 115, 162, 172, 32, 198, 176, 201, 71, 122, 8, 62, 175, 50, 160, 91, 200, 142, 24, 181, 103, 59, 10, 208, 0, 135, 178, 105, 56, 80, 47, 12, 95, 236, 151, 226, 240, 89, 133, 135, 151, 229, 61, 209, 135, 134, 101, 180, 224, 58, 221, 90, 79, 143, 207, 63, 40, 51, 119, 134, 16, 228, 234, 227, 119, 88, 82, 13, 216, 237, 64, 104, 191, 81, 248, 161, 248, 43, 240, 196, 159, 151, 72, 42, 48, 34, 90, 79, 87, 158, 226, 246, 111, 73, 127, 147, 8, 245, 199, 125, 167, 64, 213, 24, 192, 252, 109, 78, 208, 159, 53, 43, 183, 35, 141, 197, 24, 150, 159, 160, 127, 42, 39, 25, 71, 253, 186, 124, 32, 65, 2, 146, 143, 244, 16, 247, 232, 72, 168, 61, 88, 20, 155, 88, 63, 168, 35, 182, 144, 29, 49, 211, 247, 161, 137, 106, 207, 118, 20, 15, 168, 202, 172, 225, 7, 127, 190, 132, 96, 195, 6, 210, 112, 160, 94, 183, 23, 28, 230, 89, 184, 169, 244, 60, 223, 21, 76, 133, 231, 194, 209, 224, 128, 126, 105, 14, 47, 203, 123, 107, 72, 119, 195, 162, 15, 13, 203, 199, 104, 177, 115, 41, 199, 4, 97, 76, 160, 184, 217, 245, 152, 111, 68, 144, 255, 211, 252, 126, 80, 102, 238, 27, 55, 218, 86, 77, 39, 185, 14, 40, 64, 5, 182, 198, 239, 176, 164, 163, 136, 12, 28, 26, 176, 219, 129, 127, 215, 103, 57, 145, 120, 210, 43, 244, 31, 110, 147, 3, 247, 38, 59, 102, 144, 154, 131, 136, 63, 47, 145, 237, 88, 147, 41, 84, 96, 68, 180, 49, 7, 248, 12, 223, 168, 77, 30, 186, 207, 241, 166, 236, 223, 146, 254, 137, 184, 46, 70, 103, 23, 155, 84, 2, 112, 39, 236, 187, 72, 240, 113, 222, 47, 76, 201, 48, 128, 249, 219, 85, 231, 69, 99, 156, 160, 63, 107, 249, 199, 131, 211, 23, 104, 54, 193, 114, 15, 138, 121, 203, 55, 93, 228, 174, 80, 225, 92, 64, 255, 84, 78, 37, 152, 232, 246, 115, 136, 139, 174, 22, 239, 55, 22, 248, 64, 130, 4, 157, 39, 62, 188, 36, 31, 233, 33, 65, 120, 85, 153, 175, 215, 224, 139, 202, 176, 92, 51, 59, 182, 89, 237, 94, 209, 229, 85, 176, 126, 80, 71, 213, 25, 236, 255, 108, 33, 59, 98, 9, 70, 135, 218, 231, 233, 50, 200, 130, 142, 142, 112, 212, 158, 237, 40, 177, 249, 81, 144, 95, 86, 228, 130, 58, 49, 88, 58, 131, 9, 143, 167, 230, 110, 51, 31, 8, 193, 134, 13, 109, 166, 58, 181, 164, 225, 64, 189, 193, 134, 252, 5, 47, 41, 73, 23, 74, 78, 245, 175, 243, 118, 34, 50, 150, 17, 158, 138, 120, 190, 43, 152, 29, 217, 151, 32, 75, 201, 244, 120, 46, 174, 72, 192, 192, 1, 253, 210, 165, 102, 65, 106, 28, 94, 150, 247, 121, 57, 42, 79, 151, 150, 159, 93, 242, 241, 35, 229, 5, 25, 107, 77, 96, 126, 215, 245, 142, 209, 98, 231, 235, 182, 222, 95, 82, 142, 9, 194, 55, 233, 181, 122, 217, 70, 0, 104, 188, 33, 188, 208, 234, 49, 223, 136, 143, 86, 99, 48, 97, 249, 214, 34, 4, 158, 106, 154, 189, 166, 189, 7, 216, 193, 1, 191, 54, 110, 180, 173, 83, 9, 8, 21, 154, 78, 114, 29, 255, 41, 206, 165, 17, 134, 123, 183, 116, 225, 199, 15, 205, 217, 16, 146, 168, 190, 172, 42, 70, 17, 25, 56, 35, 118, 165, 128, 117, 102, 198, 216, 16, 1, 122, 96, 254, 174, 207, 114, 155, 201, 115, 202, 34, 241, 164, 87, 71, 150, 24, 239, 169, 57, 173, 253, 204, 94, 17, 69, 6, 238, 77, 118, 99, 137, 241, 206, 141, 38, 68, 220, 232, 65, 248, 100, 81, 121, 47, 249, 52, 30, 147, 65, 218, 177, 38, 83, 191, 214, 154, 235, 233, 198, 249, 179, 140, 161, 69, 11, 98, 14, 240, 25, 7, 105, 76, 161, 190, 81, 155, 60, 219, 54, 39, 132, 53, 153, 146, 150, 80, 254, 46, 46, 153, 185, 84, 38, 252, 222, 232, 158, 18, 113, 93, 140, 119, 22, 225, 52, 206, 46, 54, 169, 171, 73, 138, 17, 69, 230, 63, 3, 32, 129, 131, 187, 118, 145, 224, 227, 19, 246, 92, 91, 253, 89, 233, 73, 152, 62, 85, 241, 33, 6, 130, 108, 68, 97, 62, 212, 170, 206, 139, 198, 207, 169, 55, 126, 56, 65, 127, 214, 93, 38, 195, 110, 179, 137, 118, 124, 214, 238, 202, 196, 111, 214, 29, 89, 10, 177, 161, 225, 228, 30, 20, 243, 129, 121, 168, 75, 215, 105, 203, 19, 178, 14, 119, 171, 92, 161, 194, 185, 57, 198, 126, 1, 128, 254, 169, 156, 229, 153, 21, 36, 11, 54, 160, 54, 110, 81, 28, 142, 167, 22, 102, 134, 194, 113, 218, 62, 44, 222, 111, 44, 73, 185, 211, 148, 240, 129, 4, 9, 149, 230, 184, 177, 123, 73, 13, 163, 30, 46, 177, 27, 72, 62, 210, 67, 45, 89, 110, 251, 195, 246, 219, 233, 166, 145, 103, 81, 31, 169, 176, 204, 122, 206, 12, 116, 148, 97, 185, 102, 241, 6, 5, 222, 0, 0, 0, 0, 119, 7, 48, 150, 238, 14, 97, 44, 153, 9, 81, 186, 7, 109, 196, 25, 112, 106, 244, 143, 233, 99, 165, 53, 158, 100, 149, 163, 14, 219, 136, 50, 121, 220, 184, 164, 224, 213, 233, 30, 151, 210, 217, 136, 9, 182, 76, 43, 126, 177, 124, 189, 231, 184, 45, 7, 144, 191, 29, 145, 29, 183, 16, 100, 106, 176, 32, 242, 243, 185, 113, 72, 132, 190, 65, 222, 26, 218, 212, 125, 109, 221, 228, 235, 244, 212, 181, 81, 131, 211, 133, 199, 19, 108, 152, 86, 100, 107, 168, 192, 253, 98, 249, 122, 138, 101, 201, 236, 20, 1, 92, 79, 99, 6, 108, 217, 250, 15, 61, 99, 141, 8, 13, 245, 59, 110, 32, 200, 76, 105, 16, 94, 213, 96, 65, 228, 162, 103, 113, 114, 60, 3, 228, 209, 75, 4, 212, 71, 210, 13, 133, 253, 165, 10, 181, 107, 53, 181, 168, 250, 66, 178, 152, 108, 219, 187, 201, 214, 172, 188, 249, 64, 50, 216, 108, 227, 69, 223, 92, 117, 220, 214, 13, 207, 171, 209, 61, 89, 38, 217, 48, 172, 81, 222, 0, 58, 200, 215, 81, 128, 191, 208, 97, 22, 33, 180, 244, 181, 86, 179, 196, 35, 207, 186, 149, 153, 184, 189, 165, 15, 40, 2, 184, 158, 95, 5, 136, 8, 198, 12, 217, 178, 177, 11, 233, 36, 47, 111, 124, 135, 88, 104, 76, 17, 193, 97, 29, 171, 182, 102, 45, 61, 118, 220, 65, 144, 1, 219, 113, 6, 152, 210, 32, 188, 239, 213, 16, 42, 113, 177, 133, 137, 6, 182, 181, 31, 159, 191, 228, 165, 232, 184, 212, 51, 120, 7, 201, 162, 15, 0, 249, 52, 150, 9, 168, 142, 225, 14, 152, 24, 127, 106, 13, 187, 8, 109, 61, 45, 145, 100, 108, 151, 230, 99, 92, 1, 107, 107, 81, 244, 28, 108, 97, 98, 133, 101, 48, 216, 242, 98, 0, 78, 108, 6, 149, 237, 27, 1, 165, 123, 130, 8, 244, 193, 245, 15, 196, 87, 101, 176, 217, 198, 18, 183, 233, 80, 139, 190, 184, 234, 252, 185, 136, 124, 98, 221, 29, 223, 21, 218, 45, 73, 140, 211, 124, 243, 251, 212, 76, 101, 77, 178, 97, 88, 58, 181, 81, 206, 163, 188, 0, 116, 212, 187, 48, 226, 74, 223, 165, 65, 61, 216, 149, 215, 164, 209, 196, 109, 211, 214, 244, 251, 67, 105, 233, 106, 52, 110, 217, 252, 173, 103, 136, 70, 218, 96, 184, 208, 68, 4, 45, 115, 51, 3, 29, 229, 170, 10, 76, 95, 221, 13, 124, 201, 80, 5, 113, 60, 39, 2, 65, 170, 190, 11, 16, 16, 201, 12, 32, 134, 87, 104, 181, 37, 32, 111, 133, 179, 185, 102, 212, 9, 206, 97, 228, 159, 94, 222, 249, 14, 41, 217, 201, 152, 176, 208, 152, 34, 199, 215, 168, 180, 89, 179, 61, 23, 46, 180, 13, 129, 183, 189, 92, 59, 192, 186, 108, 173, 237, 184, 131, 32, 154, 191, 179, 182, 3, 182, 226, 12, 116, 177, 210, 154, 234, 213, 71, 57, 157, 210, 119, 175, 4, 219, 38, 21, 115, 220, 22, 131, 227, 99, 11, 18, 148, 100, 59, 132, 13, 109, 106, 62, 122, 106, 90, 168, 228, 14, 207, 11, 147, 9, 255, 157, 10, 0, 174, 39, 125, 7, 158, 177, 240, 15, 147, 68, 135, 8, 163, 210, 30, 1, 242, 104, 105, 6, 194, 254, 247, 98, 87, 93, 128, 101, 103, 203, 25, 108, 54, 113, 110, 107, 6, 231, 254, 212, 27, 118, 137, 211, 43, 224, 16, 218, 122, 90, 103, 221, 74, 204, 249, 185, 223, 111, 142, 190, 239, 249, 23, 183, 190, 67, 96, 176, 142, 213, 214, 214, 163, 232, 161, 209, 147, 126, 56, 216, 194, 196, 79, 223, 242, 82, 209, 187, 103, 241, 166, 188, 87, 103, 63, 181, 6, 221, 72, 178, 54, 75, 216, 13, 43, 218, 175, 10, 27, 76, 54, 3, 74, 246, 65, 4, 122, 96, 223, 96, 239, 195, 168, 103, 223, 85, 49, 110, 142, 239, 70, 105, 190, 121, 203, 97, 179, 140, 188, 102, 131, 26, 37, 111, 210, 160, 82, 104, 226, 54, 204, 12, 119, 149, 187, 11, 71, 3, 34, 2, 22, 185, 85, 5, 38, 47, 197, 186, 59, 190, 178, 189, 11, 40, 43, 180, 90, 146, 92, 179, 106, 4, 194, 215, 255, 167, 181, 208, 207, 49, 44, 217, 158, 139, 91, 222, 174, 29, 155, 100, 194, 176, 236, 99, 242, 38, 117, 106, 163, 156, 2, 109, 147, 10, 156, 9, 6, 169, 235, 14, 54, 63, 114, 7, 103, 133, 5, 0, 87, 19, 149, 191, 74, 130, 226, 184, 122, 20, 123, 177, 43, 174, 12, 182, 27, 56, 146, 210, 142, 155, 229, 213, 190, 13, 124, 220, 239, 183, 11, 219, 223, 33, 134, 211, 210, 212, 241, 212, 226, 66, 104, 221, 179, 248, 31, 218, 131, 110, 129, 190, 22, 205, 246, 185, 38, 91, 111, 176, 119, 225, 24, 183, 71, 119, 136, 8, 90, 230, 255, 15, 106, 112, 102, 6, 59, 202, 17, 1, 11, 92, 143, 101, 158, 255, 248, 98, 174, 105, 97, 107, 255, 211, 22, 108, 207, 69, 160, 10, 226, 120, 215, 13, 210, 238, 78, 4, 131, 84, 57, 3, 179, 194, 167, 103, 38, 97, 208, 96, 22, 247, 73, 105, 71, 77, 62, 110, 119, 219, 174, 209, 106, 74, 217, 214, 90, 220, 64, 223, 11, 102, 55, 216, 59, 240, 169, 188, 174, 83, 222, 187, 158, 197, 71, 178, 207, 127, 48, 181, 255, 233, 189, 189, 242, 28, 202, 186, 194, 138, 83, 179, 147, 48, 36, 180, 163, 166, 186, 208, 54, 5, 205, 215, 6, 147, 84, 222, 87, 41, 35, 217, 103, 191, 179, 102, 122, 46, 196, 97, 74, 184, 93, 104, 27, 2, 42, 111, 43, 148, 180, 11, 190, 55, 195, 12, 142, 161, 90, 5, 223, 27, 45, 2, 239, 141, 0, 0, 0, 0, 25, 27, 49, 65, 50, 54, 98, 130, 43, 45, 83, 195, 100, 108, 197, 4, 125, 119, 244, 69, 86, 90, 167, 134, 79, 65, 150, 199, 200, 217, 138, 8, 209, 194, 187, 73, 250, 239, 232, 138, 227, 244, 217, 203, 172, 181, 79, 12, 181, 174, 126, 77, 158, 131, 45, 142, 135, 152, 28, 207, 74, 194, 18, 81, 83, 217, 35, 16, 120, 244, 112, 211, 97, 239, 65, 146, 46, 174, 215, 85, 55, 181, 230, 20, 28, 152, 181, 215, 5, 131, 132, 150, 130, 27, 152, 89, 155, 0, 169, 24, 176, 45, 250, 219, 169, 54, 203, 154, 230, 119, 93, 93, 255, 108, 108, 28, 212, 65, 63, 223, 205, 90, 14, 158, 149, 132, 36, 162, 140, 159, 21, 227, 167, 178, 70, 32, 190, 169, 119, 97, 241, 232, 225, 166, 232, 243, 208, 231, 195, 222, 131, 36, 218, 197, 178, 101, 93, 93, 174, 170, 68, 70, 159, 235, 111, 107, 204, 40, 118, 112, 253, 105, 57, 49, 107, 174, 32, 42, 90, 239, 11, 7, 9, 44, 18, 28, 56, 109, 223, 70, 54, 243, 198, 93, 7, 178, 237, 112, 84, 113, 244, 107, 101, 48, 187, 42, 243, 247, 162, 49, 194, 182, 137, 28, 145, 117, 144, 7, 160, 52, 23, 159, 188, 251, 14, 132, 141, 186, 37, 169, 222, 121, 60, 178, 239, 56, 115, 243, 121, 255, 106, 232, 72, 190, 65, 197, 27, 125, 88, 222, 42, 60, 240, 121, 79, 5, 233, 98, 126, 68, 194, 79, 45, 135, 219, 84, 28, 198, 148, 21, 138, 1, 141, 14, 187, 64, 166, 35, 232, 131, 191, 56, 217, 194, 56, 160, 197, 13, 33, 187, 244, 76, 10, 150, 167, 143, 19, 141, 150, 206, 92, 204, 0, 9, 69, 215, 49, 72, 110, 250, 98, 139, 119, 225, 83, 202, 186, 187, 93, 84, 163, 160, 108, 21, 136, 141, 63, 214, 145, 150, 14, 151, 222, 215, 152, 80, 199, 204, 169, 17, 236, 225, 250, 210, 245, 250, 203, 147, 114, 98, 215, 92, 107, 121, 230, 29, 64, 84, 181, 222, 89, 79, 132, 159, 22, 14, 18, 88, 15, 21, 35, 25, 36, 56, 112, 218, 61, 35, 65, 155, 101, 253, 107, 167, 124, 230, 90, 230, 87, 203, 9, 37, 78, 208, 56, 100, 1, 145, 174, 163, 24, 138, 159, 226, 51, 167, 204, 33, 42, 188, 253, 96, 173, 36, 225, 175, 180, 63, 208, 238, 159, 18, 131, 45, 134, 9, 178, 108, 201, 72, 36, 171, 208, 83, 21, 234, 251, 126, 70, 41, 226, 101, 119, 104, 47, 63, 121, 246, 54, 36, 72, 183, 29, 9, 27, 116, 4, 18, 42, 53, 75, 83, 188, 242, 82, 72, 141, 179, 121, 101, 222, 112, 96, 126, 239, 49, 231, 230, 243, 254, 254, 253, 194, 191, 213, 208, 145, 124, 204, 203, 160, 61, 131, 138, 54, 250, 154, 145, 7, 187, 177, 188, 84, 120, 168, 167, 101, 57, 59, 131, 152, 75, 34, 152, 169, 10, 9, 181, 250, 201, 16, 174, 203, 136, 95, 239, 93, 79, 70, 244, 108, 14, 109, 217, 63, 205, 116, 194, 14, 140, 243, 90, 18, 67, 234, 65, 35, 2, 193, 108, 112, 193, 216, 119, 65, 128, 151, 54, 215, 71, 142, 45, 230, 6, 165, 0, 181, 197, 188, 27, 132, 132, 113, 65, 138, 26, 104, 90, 187, 91, 67, 119, 232, 152, 90, 108, 217, 217, 21, 45, 79, 30, 12, 54, 126, 95, 39, 27, 45, 156, 62, 0, 28, 221, 185, 152, 0, 18, 160, 131, 49, 83, 139, 174, 98, 144, 146, 181, 83, 209, 221, 244, 197, 22, 196, 239, 244, 87, 239, 194, 167, 148, 246, 217, 150, 213, 174, 7, 188, 233, 183, 28, 141, 168, 156, 49, 222, 107, 133, 42, 239, 42, 202, 107, 121, 237, 211, 112, 72, 172, 248, 93, 27, 111, 225, 70, 42, 46, 102, 222, 54, 225, 127, 197, 7, 160, 84, 232, 84, 99, 77, 243, 101, 34, 2, 178, 243, 229, 27, 169, 194, 164, 48, 132, 145, 103, 41, 159, 160, 38, 228, 197, 174, 184, 253, 222, 159, 249, 214, 243, 204, 58, 207, 232, 253, 123, 128, 169, 107, 188, 153, 178, 90, 253, 178, 159, 9, 62, 171, 132, 56, 127, 44, 28, 36, 176, 53, 7, 21, 241, 30, 42, 70, 50, 7, 49, 119, 115, 72, 112, 225, 180, 81, 107, 208, 245, 122, 70, 131, 54, 99, 93, 178, 119, 203, 250, 215, 78, 210, 225, 230, 15, 249, 204, 181, 204, 224, 215, 132, 141, 175, 150, 18, 74, 182, 141, 35, 11, 157, 160, 112, 200, 132, 187, 65, 137, 3, 35, 93, 70, 26, 56, 108, 7, 49, 21, 63, 196, 40, 14, 14, 133, 103, 79, 152, 66, 126, 84, 169, 3, 85, 121, 250, 192, 76, 98, 203, 129, 129, 56, 197, 31, 152, 35, 244, 94, 179, 14, 167, 157, 170, 21, 150, 220, 229, 84, 0, 27, 252, 79, 49, 90, 215, 98, 98, 153, 206, 121, 83, 216, 73, 225, 79, 23, 80, 250, 126, 86, 123, 215, 45, 149, 98, 204, 28, 212, 45, 141, 138, 19, 52, 150, 187, 82, 31, 187, 232, 145, 6, 160, 217, 208, 94, 126, 243, 236, 71, 101, 194, 173, 108, 72, 145, 110, 117, 83, 160, 47, 58, 18, 54, 232, 35, 9, 7, 169, 8, 36, 84, 106, 17, 63, 101, 43, 150, 167, 121, 228, 143, 188, 72, 165, 164, 145, 27, 102, 189, 138, 42, 39, 242, 203, 188, 224, 235, 208, 141, 161, 192, 253, 222, 98, 217, 230, 239, 35, 20, 188, 225, 189, 13, 167, 208, 252, 38, 138, 131, 63, 63, 145, 178, 126, 112, 208, 36, 185, 105, 203, 21, 248, 66, 230, 70, 59, 91, 253, 119, 122, 220, 101, 107, 181, 197, 126, 90, 244, 238, 83, 9, 55, 247, 72, 56, 118, 184, 9, 174, 177, 161, 18, 159, 240, 138, 63, 204, 51, 147, 36, 253, 114, 0, 0, 0, 0, 1, 194, 106, 55, 3, 132, 212, 110, 2, 70, 190, 89, 7, 9, 168, 220, 6, 203, 194, 235, 4, 141, 124, 178, 5, 79, 22, 133, 14, 19, 81, 184, 15, 209, 59, 143, 13, 151, 133, 214, 12, 85, 239, 225, 9, 26, 249, 100, 8, 216, 147, 83, 10, 158, 45, 10, 11, 92, 71, 61, 28, 38, 163, 112, 29, 228, 201, 71, 31, 162, 119, 30, 30, 96, 29, 41, 27, 47, 11, 172, 26, 237, 97, 155, 24, 171, 223, 194, 25, 105, 181, 245, 18, 53, 242, 200, 19, 247, 152, 255, 17, 177, 38, 166, 16, 115, 76, 145, 21, 60, 90, 20, 20, 254, 48, 35, 22, 184, 142, 122, 23, 122, 228, 77, 56, 77, 70, 224, 57, 143, 44, 215, 59, 201, 146, 142, 58, 11, 248, 185, 63, 68, 238, 60, 62, 134, 132, 11, 60, 192, 58, 82, 61, 2, 80, 101, 54, 94, 23, 88, 55, 156, 125, 111, 53, 218, 195, 54, 52, 24, 169, 1, 49, 87, 191, 132, 48, 149, 213, 179, 50, 211, 107, 234, 51, 17, 1, 221, 36, 107, 229, 144, 37, 169, 143, 167, 39, 239, 49, 254, 38, 45, 91, 201, 35, 98, 77, 76, 34, 160, 39, 123, 32, 230, 153, 34, 33, 36, 243, 21, 42, 120, 180, 40, 43, 186, 222, 31, 41, 252, 96, 70, 40, 62, 10, 113, 45, 113, 28, 244, 44, 179, 118, 195, 46, 245, 200, 154, 47, 55, 162, 173, 112, 154, 141, 192, 113, 88, 231, 247, 115, 30, 89, 174, 114, 220, 51, 153, 119, 147, 37, 28, 118, 81, 79, 43, 116, 23, 241, 114, 117, 213, 155, 69, 126, 137, 220, 120, 127, 75, 182, 79, 125, 13, 8, 22, 124, 207, 98, 33, 121, 128, 116, 164, 120, 66, 30, 147, 122, 4, 160, 202, 123, 198, 202, 253, 108, 188, 46, 176, 109, 126, 68, 135, 111, 56, 250, 222, 110, 250, 144, 233, 107, 181, 134, 108, 106, 119, 236, 91, 104, 49, 82, 2, 105, 243, 56, 53, 98, 175, 127, 8, 99, 109, 21, 63, 97, 43, 171, 102, 96, 233, 193, 81, 101, 166, 215, 212, 100, 100, 189, 227, 102, 34, 3, 186, 103, 224, 105, 141, 72, 215, 203, 32, 73, 21, 161, 23, 75, 83, 31, 78, 74, 145, 117, 121, 79, 222, 99, 252, 78, 28, 9, 203, 76, 90, 183, 146, 77, 152, 221, 165, 70, 196, 154, 152, 71, 6, 240, 175, 69, 64, 78, 246, 68, 130, 36, 193, 65, 205, 50, 68, 64, 15, 88, 115, 66, 73, 230, 42, 67, 139, 140, 29, 84, 241, 104, 80, 85, 51, 2, 103, 87, 117, 188, 62, 86, 183, 214, 9, 83, 248, 192, 140, 82, 58, 170, 187, 80, 124, 20, 226, 81, 190, 126, 213, 90, 226, 57, 232, 91, 32, 83, 223, 89, 102, 237, 134, 88, 164, 135, 177, 93, 235, 145, 52, 92, 41, 251, 3, 94, 111, 69, 90, 95, 173, 47, 109, 225, 53, 27, 128, 224, 247, 113, 183, 226, 177, 207, 238, 227, 115, 165, 217, 230, 60, 179, 92, 231, 254, 217, 107, 229, 184, 103, 50, 228, 122, 13, 5, 239, 38, 74, 56, 238, 228, 32, 15, 236, 162, 158, 86, 237, 96, 244, 97, 232, 47, 226, 228, 233, 237, 136, 211, 235, 171, 54, 138, 234, 105, 92, 189, 253, 19, 184, 240, 252, 209, 210, 199, 254, 151, 108, 158, 255, 85, 6, 169, 250, 26, 16, 44, 251, 216, 122, 27, 249, 158, 196, 66, 248, 92, 174, 117, 243, 0, 233, 72, 242, 194, 131, 127, 240, 132, 61, 38, 241, 70, 87, 17, 244, 9, 65, 148, 245, 203, 43, 163, 247, 141, 149, 250, 246, 79, 255, 205, 217, 120, 93, 96, 216, 186, 55, 87, 218, 252, 137, 14, 219, 62, 227, 57, 222, 113, 245, 188, 223, 179, 159, 139, 221, 245, 33, 210, 220, 55, 75, 229, 215, 107, 12, 216, 214, 169, 102, 239, 212, 239, 216, 182, 213, 45, 178, 129, 208, 98, 164, 4, 209, 160, 206, 51, 211, 230, 112, 106, 210, 36, 26, 93, 197, 94, 254, 16, 196, 156, 148, 39, 198, 218, 42, 126, 199, 24, 64, 73, 194, 87, 86, 204, 195, 149, 60, 251, 193, 211, 130, 162, 192, 17, 232, 149, 203, 77, 175, 168, 202, 143, 197, 159, 200, 201, 123, 198, 201, 11, 17, 241, 204, 68, 7, 116, 205, 134, 109, 67, 207, 192, 211, 26, 206, 2, 185, 45, 145, 175, 150, 64, 144, 109, 252, 119, 146, 43, 66, 46, 147, 233, 40, 25, 150, 166, 62, 156, 151, 100, 84, 171, 149, 34, 234, 242, 148, 224, 128, 197, 159, 188, 199, 248, 158, 126, 173, 207, 156, 56, 19, 150, 157, 250, 121, 161, 152, 181, 111, 36, 153, 119, 5, 19, 155, 49, 187, 74, 154, 243, 209, 125, 141, 137, 53, 48, 140, 75, 95, 7, 142, 13, 225, 94, 143, 207, 139, 105, 138, 128, 157, 236, 139, 66, 247, 219, 137, 4, 73, 130, 136, 198, 35, 181, 131, 154, 100, 136, 130, 88, 14, 191, 128, 30, 176, 230, 129, 220, 218, 209, 132, 147, 204, 84, 133, 81, 166, 99, 135, 23, 24, 58, 134, 213, 114, 13, 169, 226, 208, 160, 168, 32, 186, 151, 170, 102, 4, 206, 171, 164, 110, 249, 174, 235, 120, 124, 175, 41, 18, 75, 173, 111, 172, 18, 172, 173, 198, 37, 167, 241, 129, 24, 166, 51, 235, 47, 164, 117, 85, 118, 165, 183, 63, 65, 160, 248, 41, 196, 161, 58, 67, 243, 163, 124, 253, 170, 162, 190, 151, 157, 181, 196, 115, 208, 180, 6, 25, 231, 182, 64, 167, 190, 183, 130, 205, 137, 178, 205, 219, 12, 179, 15, 177, 59, 177, 73, 15, 98, 176, 139, 101, 85, 187, 215, 34, 104, 186, 21, 72, 95, 184, 83, 246, 6, 185, 145, 156, 49, 188, 222, 138, 180, 189, 28, 224, 131, 191, 90, 94, 218, 190, 152, 52, 237, 0, 0, 0, 0, 184, 188, 103, 101, 170, 9, 200, 139, 18, 181, 175, 238, 143, 98, 151, 87, 55, 222, 240, 50, 37, 107, 95, 220, 157, 215, 56, 185, 197, 180, 40, 239, 125, 8, 79, 138, 111, 189, 224, 100, 215, 1, 135, 1, 74, 214, 191, 184, 242, 106, 216, 221, 224, 223, 119, 51, 88, 99, 16, 86, 80, 25, 87, 159, 232, 165, 48, 250, 250, 16, 159, 20, 66, 172, 248, 113, 223, 123, 192, 200, 103, 199, 167, 173, 117, 114, 8, 67, 205, 206, 111, 38, 149, 173, 127, 112, 45, 17, 24, 21, 63, 164, 183, 251, 135, 24, 208, 158, 26, 207, 232, 39, 162, 115, 143, 66, 176, 198, 32, 172, 8, 122, 71, 201, 160, 50, 175, 62, 24, 142, 200, 91, 10, 59, 103, 181, 178, 135, 0, 208, 47, 80, 56, 105, 151, 236, 95, 12, 133, 89, 240, 226, 61, 229, 151, 135, 101, 134, 135, 209, 221, 58, 224, 180, 207, 143, 79, 90, 119, 51, 40, 63, 234, 228, 16, 134, 82, 88, 119, 227, 64, 237, 216, 13, 248, 81, 191, 104, 240, 43, 248, 161, 72, 151, 159, 196, 90, 34, 48, 42, 226, 158, 87, 79, 127, 73, 111, 246, 199, 245, 8, 147, 213, 64, 167, 125, 109, 252, 192, 24, 53, 159, 208, 78, 141, 35, 183, 43, 159, 150, 24, 197, 39, 42, 127, 160, 186, 253, 71, 25, 2, 65, 32, 124, 16, 244, 143, 146, 168, 72, 232, 247, 155, 20, 88, 61, 35, 168, 63, 88, 49, 29, 144, 182, 137, 161, 247, 211, 20, 118, 207, 106, 172, 202, 168, 15, 190, 127, 7, 225, 6, 195, 96, 132, 94, 160, 112, 210, 230, 28, 23, 183, 244, 169, 184, 89, 76, 21, 223, 60, 209, 194, 231, 133, 105, 126, 128, 224, 123, 203, 47, 14, 195, 119, 72, 107, 203, 13, 15, 162, 115, 177, 104, 199, 97, 4, 199, 41, 217, 184, 160, 76, 68, 111, 152, 245, 252, 211, 255, 144, 238, 102, 80, 126, 86, 218, 55, 27, 14, 185, 39, 77, 182, 5, 64, 40, 164, 176, 239, 198, 28, 12, 136, 163, 129, 219, 176, 26, 57, 103, 215, 127, 43, 210, 120, 145, 147, 110, 31, 244, 59, 38, 247, 3, 131, 154, 144, 102, 145, 47, 63, 136, 41, 147, 88, 237, 180, 68, 96, 84, 12, 248, 7, 49, 30, 77, 168, 223, 166, 241, 207, 186, 254, 146, 223, 236, 70, 46, 184, 137, 84, 155, 23, 103, 236, 39, 112, 2, 113, 240, 72, 187, 201, 76, 47, 222, 219, 249, 128, 48, 99, 69, 231, 85, 107, 63, 160, 156, 211, 131, 199, 249, 193, 54, 104, 23, 121, 138, 15, 114, 228, 93, 55, 203, 92, 225, 80, 174, 78, 84, 255, 64, 246, 232, 152, 37, 174, 139, 136, 115, 22, 55, 239, 22, 4, 130, 64, 248, 188, 62, 39, 157, 33, 233, 31, 36, 153, 85, 120, 65, 139, 224, 215, 175, 51, 92, 176, 202, 237, 89, 182, 59, 85, 229, 209, 94, 71, 80, 126, 176, 255, 236, 25, 213, 98, 59, 33, 108, 218, 135, 70, 9, 200, 50, 233, 231, 112, 142, 142, 130, 40, 237, 158, 212, 144, 81, 249, 177, 130, 228, 86, 95, 58, 88, 49, 58, 167, 143, 9, 131, 31, 51, 110, 230, 13, 134, 193, 8, 181, 58, 166, 109, 189, 64, 225, 164, 5, 252, 134, 193, 23, 73, 41, 47, 175, 245, 78, 74, 50, 34, 118, 243, 138, 158, 17, 150, 152, 43, 190, 120, 32, 151, 217, 29, 120, 244, 201, 75, 192, 72, 174, 46, 210, 253, 1, 192, 106, 65, 102, 165, 247, 150, 94, 28, 79, 42, 57, 121, 93, 159, 150, 151, 229, 35, 241, 242, 77, 107, 25, 5, 245, 215, 126, 96, 231, 98, 209, 142, 95, 222, 182, 235, 194, 9, 142, 82, 122, 181, 233, 55, 104, 0, 70, 217, 208, 188, 33, 188, 136, 223, 49, 234, 48, 99, 86, 143, 34, 214, 249, 97, 154, 106, 158, 4, 7, 189, 166, 189, 191, 1, 193, 216, 173, 180, 110, 54, 21, 8, 9, 83, 29, 114, 78, 154, 165, 206, 41, 255, 183, 123, 134, 17, 15, 199, 225, 116, 146, 16, 217, 205, 42, 172, 190, 168, 56, 25, 17, 70, 128, 165, 118, 35, 216, 198, 102, 117, 96, 122, 1, 16, 114, 207, 174, 254, 202, 115, 201, 155, 87, 164, 241, 34, 239, 24, 150, 71, 253, 173, 57, 169, 69, 17, 94, 204, 118, 77, 238, 6, 206, 241, 137, 99, 220, 68, 38, 141, 100, 248, 65, 232, 249, 47, 121, 81, 65, 147, 30, 52, 83, 38, 177, 218, 235, 154, 214, 191, 179, 249, 198, 233, 11, 69, 161, 140, 25, 240, 14, 98, 161, 76, 105, 7, 60, 155, 81, 190, 132, 39, 54, 219, 150, 146, 153, 53, 46, 46, 254, 80, 38, 84, 185, 153, 158, 232, 222, 252, 140, 93, 113, 18, 52, 225, 22, 119, 169, 54, 46, 206, 17, 138, 73, 171, 3, 63, 230, 69, 187, 131, 129, 32, 227, 224, 145, 118, 91, 92, 246, 19, 73, 233, 89, 253, 241, 85, 62, 152, 108, 130, 6, 33, 212, 62, 97, 68, 198, 139, 206, 170, 126, 55, 169, 207, 214, 127, 65, 56, 110, 195, 38, 93, 124, 118, 137, 179, 196, 202, 238, 214, 89, 29, 214, 111, 225, 161, 177, 10, 243, 20, 30, 228, 75, 168, 121, 129, 19, 203, 105, 215, 171, 119, 14, 178, 185, 194, 161, 92, 1, 126, 198, 57, 156, 169, 254, 128, 36, 21, 153, 229, 54, 160, 54, 11, 142, 28, 81, 110, 134, 102, 22, 167, 62, 218, 113, 194, 44, 111, 222, 44, 148, 211, 185, 73, 9, 4, 129, 240, 177, 184, 230, 149, 163, 13, 73, 123, 27, 177, 46, 30, 67, 210, 62, 72, 251, 110, 89, 45, 233, 219, 246, 195, 81, 103, 145, 166, 204, 176, 169, 31, 116, 12, 206, 122, 102, 185, 97, 148, 222, 5, 6, 241, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 4, 0, 8, 0, 4, 0, 2, 0, 0, 0, 4, 0, 5, 0, 16, 0, 8, 0, 2, 0, 0, 0, 4, 0, 6, 0, 32, 0, 32, 0, 2, 0, 0, 0, 4, 0, 4, 0, 16, 0, 16, 0, 3, 0, 0, 0, 8, 0, 16, 0, 32, 0, 32, 0, 3, 0, 0, 0, 8, 0, 16, 0, 128, 0, 128, 0, 3, 0, 0, 0, 8, 0, 32, 0, 128, 0, 0, 1, 3, 0, 0, 0, 32, 0, 128, 0, 2, 1, 0, 4, 3, 0, 0, 0, 32, 0, 2, 1, 2, 1, 0, 16, 3, 0, 0, 0, 96, 37, 0, 0, 128, 33, 0, 0, 1, 1, 0, 0, 30, 1, 0, 0, 15, 0, 0, 0, 232, 36, 0, 0, 8, 33, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 188, 32, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 28, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 48, 0, 0, 0, 56, 0, 0, 0, 64, 0, 0, 0, 80, 0, 0, 0, 96, 0, 0, 0, 112, 0, 0, 0, 128, 0, 0, 0, 160, 0, 0, 0, 192, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 16, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 64, 0, 0, 0, 96, 0, 0, 0, 128, 0, 0, 0, 192, 0, 0, 0, 0, 1, 0, 0, 128, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 16, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 64, 0, 0, 0, 96, 0, 0, 237, 47, 0, 0, 253, 47, 0, 0, 40, 61, 0, 0, 8, 48, 0, 0, 19, 48, 0, 0, 32, 48, 0, 0, 43, 48, 0, 0, 63, 48, 0, 0, 76, 48, 0, 0, 40, 61, 0, 0, 12, 35, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 49, 61, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 35, 0, 0, 132, 35, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 57, 65, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 192, 3, 0, 0, 192, 4, 0, 0, 192, 5, 0, 0, 192, 6, 0, 0, 192, 7, 0, 0, 192, 8, 0, 0, 192, 9, 0, 0, 192, 10, 0, 0, 192, 11, 0, 0, 192, 12, 0, 0, 192, 13, 0, 0, 192, 14, 0, 0, 192, 15, 0, 0, 192, 16, 0, 0, 192, 17, 0, 0, 192, 18, 0, 0, 192, 19, 0, 0, 192, 20, 0, 0, 192, 21, 0, 0, 192, 22, 0, 0, 192, 23, 0, 0, 192, 24, 0, 0, 192, 25, 0, 0, 192, 26, 0, 0, 192, 27, 0, 0, 192, 28, 0, 0, 192, 29, 0, 0, 192, 30, 0, 0, 192, 31, 0, 0, 192, 0, 0, 0, 179, 1, 0, 0, 195, 2, 0, 0, 195, 3, 0, 0, 195, 4, 0, 0, 195, 5, 0, 0, 195, 6, 0, 0, 195, 7, 0, 0, 195, 8, 0, 0, 195, 9, 0, 0, 195, 10, 0, 0, 195, 11, 0, 0, 195, 12, 0, 0, 195, 13, 0, 0, 211, 14, 0, 0, 195, 15, 0, 0, 195, 0, 0, 12, 187, 1, 0, 12, 195, 2, 0, 12, 195, 3, 0, 12, 195, 4, 0, 12, 211, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 95, 112, 137, 0, 255, 9, 47, 15, 0, 0, 5, 0, 16, 0, 5, 0, 8, 0, 5, 0, 24, 0, 5, 0, 4, 0, 5, 0, 20, 0, 5, 0, 12, 0, 5, 0, 28, 0, 5, 0, 2, 0, 5, 0, 18, 0, 5, 0, 10, 0, 5, 0, 26, 0, 5, 0, 6, 0, 5, 0, 22, 0, 5, 0, 14, 0, 5, 0, 30, 0, 5, 0, 1, 0, 5, 0, 17, 0, 5, 0, 9, 0, 5, 0, 25, 0, 5, 0, 5, 0, 5, 0, 21, 0, 5, 0, 13, 0, 5, 0, 29, 0, 5, 0, 3, 0, 5, 0, 19, 0, 5, 0, 11, 0, 5, 0, 27, 0, 5, 0, 7, 0, 5, 0, 23, 0, 5, 0, 12, 0, 8, 0, 140, 0, 8, 0, 76, 0, 8, 0, 204, 0, 8, 0, 44, 0, 8, 0, 172, 0, 8, 0, 108, 0, 8, 0, 236, 0, 8, 0, 28, 0, 8, 0, 156, 0, 8, 0, 92, 0, 8, 0, 220, 0, 8, 0, 60, 0, 8, 0, 188, 0, 8, 0, 124, 0, 8, 0, 252, 0, 8, 0, 2, 0, 8, 0, 130, 0, 8, 0, 66, 0, 8, 0, 194, 0, 8, 0, 34, 0, 8, 0, 162, 0, 8, 0, 98, 0, 8, 0, 226, 0, 8, 0, 18, 0, 8, 0, 146, 0, 8, 0, 82, 0, 8, 0, 210, 0, 8, 0, 50, 0, 8, 0, 178, 0, 8, 0, 114, 0, 8, 0, 242, 0, 8, 0, 10, 0, 8, 0, 138, 0, 8, 0, 74, 0, 8, 0, 202, 0, 8, 0, 42, 0, 8, 0, 170, 0, 8, 0, 106, 0, 8, 0, 234, 0, 8, 0, 26, 0, 8, 0, 154, 0, 8, 0, 90, 0, 8, 0, 218, 0, 8, 0, 58, 0, 8, 0, 186, 0, 8, 0, 122, 0, 8, 0, 250, 0, 8, 0, 6, 0, 8, 0, 134, 0, 8, 0, 70, 0, 8, 0, 198, 0, 8, 0, 38, 0, 8, 0, 166, 0, 8, 0, 102, 0, 8, 0, 230, 0, 8, 0, 22, 0, 8, 0, 150, 0, 8, 0, 86, 0, 8, 0, 214, 0, 8, 0, 54, 0, 8, 0, 182, 0, 8, 0, 118, 0, 8, 0, 246, 0, 8, 0, 14, 0, 8, 0, 142, 0, 8, 0, 78, 0, 8, 0, 206, 0, 8, 0, 46, 0, 8, 0, 174, 0, 8, 0, 110, 0, 8, 0, 238, 0, 8, 0, 30, 0, 8, 0, 158, 0, 8, 0, 94, 0, 8, 0, 222, 0, 8, 0, 62, 0, 8, 0, 190, 0, 8, 0, 126, 0, 8, 0, 254, 0, 8, 0, 1, 0, 8, 0, 129, 0, 8, 0, 65, 0, 8, 0, 193, 0, 8, 0, 33, 0, 8, 0, 161, 0, 8, 0, 97, 0, 8, 0, 225, 0, 8, 0, 17, 0, 8, 0, 145, 0, 8, 0, 81, 0, 8, 0, 209, 0, 8, 0, 49, 0, 8, 0, 177, 0, 8, 0, 113, 0, 8, 0, 241, 0, 8, 0, 9, 0, 8, 0, 137, 0, 8, 0, 73, 0, 8, 0, 201, 0, 8, 0, 41, 0, 8, 0, 169, 0, 8, 0, 105, 0, 8, 0, 233, 0, 8, 0, 25, 0, 8, 0, 153, 0, 8, 0, 89, 0, 8, 0, 217, 0, 8, 0, 57, 0, 8, 0, 185, 0, 8, 0, 121, 0, 8, 0, 249, 0, 8, 0, 5, 0, 8, 0, 133, 0, 8, 0, 69, 0, 8, 0, 197, 0, 8, 0, 37, 0, 8, 0, 165, 0, 8, 0, 101, 0, 8, 0, 229, 0, 8, 0, 21, 0, 8, 0, 149, 0, 8, 0, 85, 0, 8, 0, 213, 0, 8, 0, 53, 0, 8, 0, 181, 0, 8, 0, 117, 0, 8, 0, 245, 0, 8, 0, 13, 0, 8, 0, 141, 0, 8, 0, 77, 0, 8, 0, 205, 0, 8, 0, 45, 0, 8, 0, 173, 0, 8, 0, 109, 0, 8, 0, 237, 0, 8, 0, 29, 0, 8, 0, 157, 0, 8, 0, 93, 0, 8, 0, 221, 0, 8, 0, 61, 0, 8, 0, 189, 0, 8, 0, 125, 0, 8, 0, 253, 0, 8, 0, 19, 0, 9, 0, 19, 1, 9, 0, 147, 0, 9, 0, 147, 1, 9, 0, 83, 0, 9, 0, 83, 1, 9, 0, 211, 0, 9, 0, 211, 1, 9, 0, 51, 0, 9, 0, 51, 1, 9, 0, 179, 0, 9, 0, 179, 1, 9, 0, 115, 0, 9, 0, 115, 1, 9, 0, 243, 0, 9, 0, 243, 1, 9, 0, 11, 0, 9, 0, 11, 1, 9, 0, 139, 0, 9, 0, 139, 1, 9, 0, 75, 0, 9, 0, 75, 1, 9, 0, 203, 0, 9, 0, 203, 1, 9, 0, 43, 0, 9, 0, 43, 1, 9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);allocate([171, 0, 9, 0, 171, 1, 9, 0, 107, 0, 9, 0, 107, 1, 9, 0, 235, 0, 9, 0, 235, 1, 9, 0, 27, 0, 9, 0, 27, 1, 9, 0, 155, 0, 9, 0, 155, 1, 9, 0, 91, 0, 9, 0, 91, 1, 9, 0, 219, 0, 9, 0, 219, 1, 9, 0, 59, 0, 9, 0, 59, 1, 9, 0, 187, 0, 9, 0, 187, 1, 9, 0, 123, 0, 9, 0, 123, 1, 9, 0, 251, 0, 9, 0, 251, 1, 9, 0, 7, 0, 9, 0, 7, 1, 9, 0, 135, 0, 9, 0, 135, 1, 9, 0, 71, 0, 9, 0, 71, 1, 9, 0, 199, 0, 9, 0, 199, 1, 9, 0, 39, 0, 9, 0, 39, 1, 9, 0, 167, 0, 9, 0, 167, 1, 9, 0, 103, 0, 9, 0, 103, 1, 9, 0, 231, 0, 9, 0, 231, 1, 9, 0, 23, 0, 9, 0, 23, 1, 9, 0, 151, 0, 9, 0, 151, 1, 9, 0, 87, 0, 9, 0, 87, 1, 9, 0, 215, 0, 9, 0, 215, 1, 9, 0, 55, 0, 9, 0, 55, 1, 9, 0, 183, 0, 9, 0, 183, 1, 9, 0, 119, 0, 9, 0, 119, 1, 9, 0, 247, 0, 9, 0, 247, 1, 9, 0, 15, 0, 9, 0, 15, 1, 9, 0, 143, 0, 9, 0, 143, 1, 9, 0, 79, 0, 9, 0, 79, 1, 9, 0, 207, 0, 9, 0, 207, 1, 9, 0, 47, 0, 9, 0, 47, 1, 9, 0, 175, 0, 9, 0, 175, 1, 9, 0, 111, 0, 9, 0, 111, 1, 9, 0, 239, 0, 9, 0, 239, 1, 9, 0, 31, 0, 9, 0, 31, 1, 9, 0, 159, 0, 9, 0, 159, 1, 9, 0, 95, 0, 9, 0, 95, 1, 9, 0, 223, 0, 9, 0, 223, 1, 9, 0, 63, 0, 9, 0, 63, 1, 9, 0, 191, 0, 9, 0, 191, 1, 9, 0, 127, 0, 9, 0, 127, 1, 9, 0, 255, 0, 9, 0, 255, 1, 9, 0, 0, 0, 7, 0, 64, 0, 7, 0, 32, 0, 7, 0, 96, 0, 7, 0, 16, 0, 7, 0, 80, 0, 7, 0, 48, 0, 7, 0, 112, 0, 7, 0, 8, 0, 7, 0, 72, 0, 7, 0, 40, 0, 7, 0, 104, 0, 7, 0, 24, 0, 7, 0, 88, 0, 7, 0, 56, 0, 7, 0, 120, 0, 7, 0, 4, 0, 7, 0, 68, 0, 7, 0, 36, 0, 7, 0, 100, 0, 7, 0, 20, 0, 7, 0, 84, 0, 7, 0, 52, 0, 7, 0, 116, 0, 7, 0, 3, 0, 8, 0, 131, 0, 8, 0, 67, 0, 8, 0, 195, 0, 8, 0, 35, 0, 8, 0, 163, 0, 8, 0, 99, 0, 8, 0, 227, 0, 8, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 114, 101, 97, 100, 105, 110, 103, 32, 37, 115, 10, 0, 102, 105, 108, 101, 32, 37, 115, 32, 99, 114, 99, 32, 37, 108, 120, 10, 0, 70, 105, 108, 101, 32, 58, 32, 37, 115, 32, 105, 115, 32, 37, 108, 108, 100, 32, 98, 121, 116, 101, 115, 10, 0, 46, 122, 105, 112, 0, 84, 104, 101, 32, 102, 105, 108, 101, 32, 37, 115, 32, 101, 120, 105, 115, 116, 115, 46, 32, 79, 118, 101, 114, 119, 114, 105, 116, 101, 32, 63, 32, 91, 121, 93, 101, 115, 44, 32, 91, 110, 93, 111, 44, 32, 91, 97, 93, 112, 112, 101, 110, 100, 32, 58, 32, 0, 37, 49, 115, 0, 101, 114, 114, 111, 114, 32, 111, 112, 101, 110, 105, 110, 103, 32, 37, 115, 10, 0, 99, 114, 101, 97, 116, 105, 110, 103, 32, 37, 115, 10, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 111, 112, 101, 110, 105, 110, 103, 32, 37, 115, 32, 105, 110, 32, 122, 105, 112, 102, 105, 108, 101, 10, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 111, 112, 101, 110, 105, 110, 103, 32, 37, 115, 32, 102, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 10, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 119, 114, 105, 116, 105, 110, 103, 32, 37, 115, 32, 105, 110, 32, 116, 104, 101, 32, 122, 105, 112, 102, 105, 108, 101, 10, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 99, 108, 111, 115, 105, 110, 103, 32, 37, 115, 32, 105, 110, 32, 116, 104, 101, 32, 122, 105, 112, 102, 105, 108, 101, 10, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 99, 108, 111, 115, 105, 110, 103, 32, 37, 115, 10, 0, 77, 105, 110, 105, 90, 105, 112, 32, 49, 46, 49, 44, 32, 100, 101, 109, 111, 32, 111, 102, 32, 122, 76, 105, 98, 32, 43, 32, 77, 105, 110, 105, 90, 105, 112, 54, 52, 32, 112, 97, 99, 107, 97, 103, 101, 44, 32, 119, 114, 105, 116, 116, 101, 110, 32, 98, 121, 32, 71, 105, 108, 108, 101, 115, 32, 86, 111, 108, 108, 97, 110, 116, 0, 109, 111, 114, 101, 32, 105, 110, 102, 111, 32, 111, 110, 32, 77, 105, 110, 105, 90, 105, 112, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 105, 110, 105, 109, 97, 103, 101, 46, 99, 111, 109, 47, 122, 76, 105, 98, 68, 108, 108, 47, 109, 105, 110, 105, 122, 105, 112, 46, 104, 116, 109, 108, 10, 0, 85, 115, 97, 103, 101, 32, 58, 32, 109, 105, 110, 105, 122, 105, 112, 32, 91, 45, 111, 93, 32, 91, 45, 97, 93, 32, 91, 45, 48, 32, 116, 111, 32, 45, 57, 93, 32, 91, 45, 112, 32, 112, 97, 115, 115, 119, 111, 114, 100, 93, 32, 91, 45, 106, 93, 32, 102, 105, 108, 101, 46, 122, 105, 112, 32, 91, 102, 105, 108, 101, 115, 95, 116, 111, 95, 97, 100, 100, 93, 10, 10, 32, 32, 45, 111, 32, 32, 79, 118, 101, 114, 119, 114, 105, 116, 101, 32, 101, 120, 105, 115, 116, 105, 110, 103, 32, 102, 105, 108, 101, 46, 122, 105, 112, 10, 32, 32, 45, 97, 32, 32, 65, 112, 112, 101, 110, 100, 32, 116, 111, 32, 101, 120, 105, 115, 116, 105, 110, 103, 32, 102, 105, 108, 101, 46, 122, 105, 112, 10, 32, 32, 45, 48, 32, 32, 83, 116, 111, 114, 101, 32, 111, 110, 108, 121, 10, 32, 32, 45, 49, 32, 32, 67, 111, 109, 112, 114, 101, 115, 115, 32, 102, 97, 115, 116, 101, 114, 10, 32, 32, 45, 57, 32, 32, 67, 111, 109, 112, 114, 101, 115, 115, 32, 98, 101, 116, 116, 101, 114, 10, 10, 32, 32, 45, 106, 32, 32, 101, 120, 99, 108, 117, 100, 101, 32, 112, 97, 116, 104, 46, 32, 115, 116, 111, 114, 101, 32, 111, 110, 108, 121, 32, 116, 104, 101, 32, 102, 105, 108, 101, 32, 110, 97, 109, 101, 46, 10, 0, 69, 114, 114, 111, 114, 32, 97, 108, 108, 111, 99, 97, 116, 105, 110, 103, 32, 109, 101, 109, 111, 114, 121, 0, 45, 0, 49, 46, 50, 46, 49, 48, 0, 119, 98, 0, 114, 98, 0, 114, 43, 98, 0, 0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15, 110, 101, 101, 100, 32, 100, 105, 99, 116, 105, 111, 110, 97, 114, 121, 0, 115, 116, 114, 101, 97, 109, 32, 101, 110, 100, 0, 102, 105, 108, 101, 32, 101, 114, 114, 111, 114, 0, 115, 116, 114, 101, 97, 109, 32, 101, 114, 114, 111, 114, 0, 100, 97, 116, 97, 32, 101, 114, 114, 111, 114, 0, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 32, 109, 101, 109, 111, 114, 121, 0, 98, 117, 102, 102, 101, 114, 32, 101, 114, 114, 111, 114, 0, 105, 110, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 32, 118, 101, 114, 115, 105, 111, 110, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 4, 7, 3, 6, 5, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 114, 119, 97, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);var tempDoublePtr = STATICTOP;STATICTOP += 16;Module["_i64Subtract"] = _i64Subtract;Module["_i64Add"] = _i64Add;Module["_memset"] = _memset;function _pthread_cleanup_push(routine, arg) {
	    __ATEXIT__.push(function () {
	      Runtime.dynCall("vi", routine, [arg]);
	    });_pthread_cleanup_push.level = __ATEXIT__.length;
	  }Module["_bitshift64Lshr"] = _bitshift64Lshr;Module["_bitshift64Shl"] = _bitshift64Shl;function _pthread_cleanup_pop() {
	    assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level = __ATEXIT__.length;
	  }function _abort() {
	    Module["abort"]();
	  }var ERRNO_CODES = { EPERM: 1, ENOENT: 2, ESRCH: 3, EINTR: 4, EIO: 5, ENXIO: 6, E2BIG: 7, ENOEXEC: 8, EBADF: 9, ECHILD: 10, EAGAIN: 11, EWOULDBLOCK: 11, ENOMEM: 12, EACCES: 13, EFAULT: 14, ENOTBLK: 15, EBUSY: 16, EEXIST: 17, EXDEV: 18, ENODEV: 19, ENOTDIR: 20, EISDIR: 21, EINVAL: 22, ENFILE: 23, EMFILE: 24, ENOTTY: 25, ETXTBSY: 26, EFBIG: 27, ENOSPC: 28, ESPIPE: 29, EROFS: 30, EMLINK: 31, EPIPE: 32, EDOM: 33, ERANGE: 34, ENOMSG: 42, EIDRM: 43, ECHRNG: 44, EL2NSYNC: 45, EL3HLT: 46, EL3RST: 47, ELNRNG: 48, EUNATCH: 49, ENOCSI: 50, EL2HLT: 51, EDEADLK: 35, ENOLCK: 37, EBADE: 52, EBADR: 53, EXFULL: 54, ENOANO: 55, EBADRQC: 56, EBADSLT: 57, EDEADLOCK: 35, EBFONT: 59, ENOSTR: 60, ENODATA: 61, ETIME: 62, ENOSR: 63, ENONET: 64, ENOPKG: 65, EREMOTE: 66, ENOLINK: 67, EADV: 68, ESRMNT: 69, ECOMM: 70, EPROTO: 71, EMULTIHOP: 72, EDOTDOT: 73, EBADMSG: 74, ENOTUNIQ: 76, EBADFD: 77, EREMCHG: 78, ELIBACC: 79, ELIBBAD: 80, ELIBSCN: 81, ELIBMAX: 82, ELIBEXEC: 83, ENOSYS: 38, ENOTEMPTY: 39, ENAMETOOLONG: 36, ELOOP: 40, EOPNOTSUPP: 95, EPFNOSUPPORT: 96, ECONNRESET: 104, ENOBUFS: 105, EAFNOSUPPORT: 97, EPROTOTYPE: 91, ENOTSOCK: 88, ENOPROTOOPT: 92, ESHUTDOWN: 108, ECONNREFUSED: 111, EADDRINUSE: 98, ECONNABORTED: 103, ENETUNREACH: 101, ENETDOWN: 100, ETIMEDOUT: 110, EHOSTDOWN: 112, EHOSTUNREACH: 113, EINPROGRESS: 115, EALREADY: 114, EDESTADDRREQ: 89, EMSGSIZE: 90, EPROTONOSUPPORT: 93, ESOCKTNOSUPPORT: 94, EADDRNOTAVAIL: 99, ENETRESET: 102, EISCONN: 106, ENOTCONN: 107, ETOOMANYREFS: 109, EUSERS: 87, EDQUOT: 122, ESTALE: 116, ENOTSUP: 95, ENOMEDIUM: 123, EILSEQ: 84, EOVERFLOW: 75, ECANCELED: 125, ENOTRECOVERABLE: 131, EOWNERDEAD: 130, ESTRPIPE: 86 };var ERRNO_MESSAGES = { 0: "Success", 1: "Not super-user", 2: "No such file or directory", 3: "No such process", 4: "Interrupted system call", 5: "I/O error", 6: "No such device or address", 7: "Arg list too long", 8: "Exec format error", 9: "Bad file number", 10: "No children", 11: "No more processes", 12: "Not enough core", 13: "Permission denied", 14: "Bad address", 15: "Block device required", 16: "Mount device busy", 17: "File exists", 18: "Cross-device link", 19: "No such device", 20: "Not a directory", 21: "Is a directory", 22: "Invalid argument", 23: "Too many open files in system", 24: "Too many open files", 25: "Not a typewriter", 26: "Text file busy", 27: "File too large", 28: "No space left on device", 29: "Illegal seek", 30: "Read only file system", 31: "Too many links", 32: "Broken pipe", 33: "Math arg out of domain of func", 34: "Math result not representable", 35: "File locking deadlock error", 36: "File or path name too long", 37: "No record locks available", 38: "Function not implemented", 39: "Directory not empty", 40: "Too many symbolic links", 42: "No message of desired type", 43: "Identifier removed", 44: "Channel number out of range", 45: "Level 2 not synchronized", 46: "Level 3 halted", 47: "Level 3 reset", 48: "Link number out of range", 49: "Protocol driver not attached", 50: "No CSI structure available", 51: "Level 2 halted", 52: "Invalid exchange", 53: "Invalid request descriptor", 54: "Exchange full", 55: "No anode", 56: "Invalid request code", 57: "Invalid slot", 59: "Bad font file fmt", 60: "Device not a stream", 61: "No data (for no delay io)", 62: "Timer expired", 63: "Out of streams resources", 64: "Machine is not on the network", 65: "Package not installed", 66: "The object is remote", 67: "The link has been severed", 68: "Advertise error", 69: "Srmount error", 70: "Communication error on send", 71: "Protocol error", 72: "Multihop attempted", 73: "Cross mount point (not really error)", 74: "Trying to read unreadable message", 75: "Value too large for defined data type", 76: "Given log. name not unique", 77: "f.d. invalid for this operation", 78: "Remote address changed", 79: "Can   access a needed shared lib", 80: "Accessing a corrupted shared lib", 81: ".lib section in a.out corrupted", 82: "Attempting to link in too many libs", 83: "Attempting to exec a shared library", 84: "Illegal byte sequence", 86: "Streams pipe error", 87: "Too many users", 88: "Socket operation on non-socket", 89: "Destination address required", 90: "Message too long", 91: "Protocol wrong type for socket", 92: "Protocol not available", 93: "Unknown protocol", 94: "Socket type not supported", 95: "Not supported", 96: "Protocol family not supported", 97: "Address family not supported by protocol family", 98: "Address already in use", 99: "Address not available", 100: "Network interface is not configured", 101: "Network is unreachable", 102: "Connection reset by network", 103: "Connection aborted", 104: "Connection reset by peer", 105: "No buffer space available", 106: "Socket is already connected", 107: "Socket is not connected", 108: "Can't send after socket shutdown", 109: "Too many references", 110: "Connection timed out", 111: "Connection refused", 112: "Host is down", 113: "Host is unreachable", 114: "Socket already connected", 115: "Connection already in progress", 116: "Stale file handle", 122: "Quota exceeded", 123: "No medium (in tape drive)", 125: "Operation canceled", 130: "Previous owner died", 131: "State not recoverable" };function ___setErrNo(value) {
	    if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;return value;
	  }var PATH = { splitPath: function splitPath(filename) {
	      var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1);
	    }, normalizeArray: function normalizeArray(parts, allowAboveRoot) {
	      var up = 0;for (var i = parts.length - 1; i >= 0; i--) {
	        var last = parts[i];if (last === ".") {
	          parts.splice(i, 1);
	        } else if (last === "..") {
	          parts.splice(i, 1);up++;
	        } else if (up) {
	          parts.splice(i, 1);up--;
	        }
	      }if (allowAboveRoot) {
	        for (; up--; up) {
	          parts.unshift("..");
	        }
	      }return parts;
	    }, normalize: function normalize(path) {
	      var isAbsolute = path.charAt(0) === "/",
	          trailingSlash = path.substr(-1) === "/";path = PATH.normalizeArray(path.split("/").filter(function (p) {
	        return !!p;
	      }), !isAbsolute).join("/");if (!path && !isAbsolute) {
	        path = ".";
	      }if (path && trailingSlash) {
	        path += "/";
	      }return (isAbsolute ? "/" : "") + path;
	    }, dirname: function dirname(path) {
	      var result = PATH.splitPath(path),
	          root = result[0],
	          dir = result[1];if (!root && !dir) {
	        return ".";
	      }if (dir) {
	        dir = dir.substr(0, dir.length - 1);
	      }return root + dir;
	    }, basename: function basename(path) {
	      if (path === "/") return "/";var lastSlash = path.lastIndexOf("/");if (lastSlash === -1) return path;return path.substr(lastSlash + 1);
	    }, extname: function extname(path) {
	      return PATH.splitPath(path)[3];
	    }, join: function join() {
	      var paths = Array.prototype.slice.call(arguments, 0);return PATH.normalize(paths.join("/"));
	    }, join2: function join2(l, r) {
	      return PATH.normalize(l + "/" + r);
	    }, resolve: function resolve() {
	      var resolvedPath = "",
	          resolvedAbsolute = false;for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	        var path = i >= 0 ? arguments[i] : FS.cwd();if (typeof path !== "string") {
	          throw new TypeError("Arguments to path.resolve must be strings");
	        } else if (!path) {
	          return "";
	        }resolvedPath = path + "/" + resolvedPath;resolvedAbsolute = path.charAt(0) === "/";
	      }resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function (p) {
	        return !!p;
	      }), !resolvedAbsolute).join("/");return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
	    }, relative: function relative(from, to) {
	      from = PATH.resolve(from).substr(1);to = PATH.resolve(to).substr(1);function trim(arr) {
	        var start = 0;for (; start < arr.length; start++) {
	          if (arr[start] !== "") break;
	        }var end = arr.length - 1;for (; end >= 0; end--) {
	          if (arr[end] !== "") break;
	        }if (start > end) return [];return arr.slice(start, end - start + 1);
	      }var fromParts = trim(from.split("/"));var toParts = trim(to.split("/"));var length = Math.min(fromParts.length, toParts.length);var samePartsLength = length;for (var i = 0; i < length; i++) {
	        if (fromParts[i] !== toParts[i]) {
	          samePartsLength = i;break;
	        }
	      }var outputParts = [];for (var i = samePartsLength; i < fromParts.length; i++) {
	        outputParts.push("..");
	      }outputParts = outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/");
	    } };var TTY = { ttys: [], init: function init() {}, shutdown: function shutdown() {}, register: function register(dev, ops) {
	      TTY.ttys[dev] = { input: [], output: [], ops: ops };FS.registerDevice(dev, TTY.stream_ops);
	    }, stream_ops: { open: function open(stream) {
	        var tty = TTY.ttys[stream.node.rdev];if (!tty) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }stream.tty = tty;stream.seekable = false;
	      }, close: function close(stream) {
	        stream.tty.ops.flush(stream.tty);
	      }, flush: function flush(stream) {
	        stream.tty.ops.flush(stream.tty);
	      }, read: function read(stream, buffer, offset, length, pos) {
	        if (!stream.tty || !stream.tty.ops.get_char) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	        }var bytesRead = 0;for (var i = 0; i < length; i++) {
	          var result;try {
	            result = stream.tty.ops.get_char(stream.tty);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }if (result === undefined && bytesRead === 0) {
	            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	          }if (result === null || result === undefined) break;bytesRead++;buffer[offset + i] = result;
	        }if (bytesRead) {
	          stream.node.timestamp = Date.now();
	        }return bytesRead;
	      }, write: function write(stream, buffer, offset, length, pos) {
	        if (!stream.tty || !stream.tty.ops.put_char) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	        }for (var i = 0; i < length; i++) {
	          try {
	            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }
	        }if (length) {
	          stream.node.timestamp = Date.now();
	        }return i;
	      } }, default_tty_ops: { get_char: function get_char(tty) {
	        if (!tty.input.length) {
	          var result = null;if (ENVIRONMENT_IS_NODE) {
	            var BUFSIZE = 256;var buf = new Buffer(BUFSIZE);var bytesRead = 0;var isPosixPlatform = process.platform != "win32";var fd = process.stdin.fd;if (isPosixPlatform) {
	              var usingDevice = false;try {
	                fd = fs.openSync("/dev/stdin", "r");usingDevice = true;
	              } catch (e) {}
	            }try {
	              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
	            } catch (e) {
	              if (e.toString().indexOf("EOF") != -1) bytesRead = 0;else throw e;
	            }if (usingDevice) {
	              fs.closeSync(fd);
	            }if (bytesRead > 0) {
	              result = buf.slice(0, bytesRead).toString("utf-8");
	            } else {
	              result = null;
	            }
	          } else if (typeof window != "undefined" && typeof window.prompt == "function") {
	            result = window.prompt("Input: ");if (result !== null) {
	              result += "\n";
	            }
	          } else if (typeof readline == "function") {
	            result = readline();if (result !== null) {
	              result += "\n";
	            }
	          }if (!result) {
	            return null;
	          }tty.input = intArrayFromString(result, true);
	        }return tty.input.shift();
	      }, put_char: function put_char(tty, val) {
	        if (val === null || val === 10) {
	          Module["print"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        } else {
	          if (val != 0) tty.output.push(val);
	        }
	      }, flush: function flush(tty) {
	        if (tty.output && tty.output.length > 0) {
	          Module["print"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        }
	      } }, default_tty1_ops: { put_char: function put_char(tty, val) {
	        if (val === null || val === 10) {
	          Module["printErr"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        } else {
	          if (val != 0) tty.output.push(val);
	        }
	      }, flush: function flush(tty) {
	        if (tty.output && tty.output.length > 0) {
	          Module["printErr"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        }
	      } } };var MEMFS = { ops_table: null, mount: function mount(_mount) {
	      return MEMFS.createNode(null, "/", 16384 | 511, 0);
	    }, createNode: function createNode(parent, name, mode, dev) {
	      if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (!MEMFS.ops_table) {
	        MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };
	      }var node = FS.createNode(parent, name, mode, dev);if (FS.isDir(node.mode)) {
	        node.node_ops = MEMFS.ops_table.dir.node;node.stream_ops = MEMFS.ops_table.dir.stream;node.contents = {};
	      } else if (FS.isFile(node.mode)) {
	        node.node_ops = MEMFS.ops_table.file.node;node.stream_ops = MEMFS.ops_table.file.stream;node.usedBytes = 0;node.contents = null;
	      } else if (FS.isLink(node.mode)) {
	        node.node_ops = MEMFS.ops_table.link.node;node.stream_ops = MEMFS.ops_table.link.stream;
	      } else if (FS.isChrdev(node.mode)) {
	        node.node_ops = MEMFS.ops_table.chrdev.node;node.stream_ops = MEMFS.ops_table.chrdev.stream;
	      }node.timestamp = Date.now();if (parent) {
	        parent.contents[name] = node;
	      }return node;
	    }, getFileDataAsRegularArray: function getFileDataAsRegularArray(node) {
	      if (node.contents && node.contents.subarray) {
	        var arr = [];for (var i = 0; i < node.usedBytes; ++i) {
	          arr.push(node.contents[i]);
	        }return arr;
	      }return node.contents;
	    }, getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {
	      if (!node.contents) return new Uint8Array();if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);return new Uint8Array(node.contents);
	    }, expandFileStorage: function expandFileStorage(node, newCapacity) {
	      if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
	        node.contents = MEMFS.getFileDataAsRegularArray(node);node.usedBytes = node.contents.length;
	      }if (!node.contents || node.contents.subarray) {
	        var prevCapacity = node.contents ? node.contents.length : 0;if (prevCapacity >= newCapacity) return;var CAPACITY_DOUBLING_MAX = 1024 * 1024;newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);var oldContents = node.contents;node.contents = new Uint8Array(newCapacity);if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);return;
	      }if (!node.contents && newCapacity > 0) node.contents = [];while (node.contents.length < newCapacity) {
	        node.contents.push(0);
	      }
	    }, resizeFileStorage: function resizeFileStorage(node, newSize) {
	      if (node.usedBytes == newSize) return;if (newSize == 0) {
	        node.contents = null;node.usedBytes = 0;return;
	      }if (!node.contents || node.contents.subarray) {
	        var oldContents = node.contents;node.contents = new Uint8Array(new ArrayBuffer(newSize));if (oldContents) {
	          node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
	        }node.usedBytes = newSize;return;
	      }if (!node.contents) node.contents = [];if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) {
	        node.contents.push(0);
	      }node.usedBytes = newSize;
	    }, node_ops: { getattr: function getattr(node) {
	        var attr = {};attr.dev = FS.isChrdev(node.mode) ? node.id : 1;attr.ino = node.id;attr.mode = node.mode;attr.nlink = 1;attr.uid = 0;attr.gid = 0;attr.rdev = node.rdev;if (FS.isDir(node.mode)) {
	          attr.size = 4096;
	        } else if (FS.isFile(node.mode)) {
	          attr.size = node.usedBytes;
	        } else if (FS.isLink(node.mode)) {
	          attr.size = node.link.length;
	        } else {
	          attr.size = 0;
	        }attr.atime = new Date(node.timestamp);attr.mtime = new Date(node.timestamp);attr.ctime = new Date(node.timestamp);attr.blksize = 4096;attr.blocks = Math.ceil(attr.size / attr.blksize);return attr;
	      }, setattr: function setattr(node, attr) {
	        if (attr.mode !== undefined) {
	          node.mode = attr.mode;
	        }if (attr.timestamp !== undefined) {
	          node.timestamp = attr.timestamp;
	        }if (attr.size !== undefined) {
	          MEMFS.resizeFileStorage(node, attr.size);
	        }
	      }, lookup: function lookup(parent, name) {
	        throw FS.genericErrors[ERRNO_CODES.ENOENT];
	      }, mknod: function mknod(parent, name, mode, dev) {
	        return MEMFS.createNode(parent, name, mode, dev);
	      }, rename: function rename(old_node, new_dir, new_name) {
	        if (FS.isDir(old_node.mode)) {
	          var new_node;try {
	            new_node = FS.lookupNode(new_dir, new_name);
	          } catch (e) {}if (new_node) {
	            for (var i in new_node.contents) {
	              throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	            }
	          }
	        }delete old_node.parent.contents[old_node.name];old_node.name = new_name;new_dir.contents[new_name] = old_node;old_node.parent = new_dir;
	      }, unlink: function unlink(parent, name) {
	        delete parent.contents[name];
	      }, rmdir: function rmdir(parent, name) {
	        var node = FS.lookupNode(parent, name);for (var i in node.contents) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	        }delete parent.contents[name];
	      }, readdir: function readdir(node) {
	        var entries = [".", ".."];for (var key in node.contents) {
	          if (!node.contents.hasOwnProperty(key)) {
	            continue;
	          }entries.push(key);
	        }return entries;
	      }, symlink: function symlink(parent, newname, oldpath) {
	        var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);node.link = oldpath;return node;
	      }, readlink: function readlink(node) {
	        if (!FS.isLink(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return node.link;
	      } }, stream_ops: { read: function read(stream, buffer, offset, length, position) {
	        var contents = stream.node.contents;if (position >= stream.node.usedBytes) return 0;var size = Math.min(stream.node.usedBytes - position, length);assert(size >= 0);if (size > 8 && contents.subarray) {
	          buffer.set(contents.subarray(position, position + size), offset);
	        } else {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents[position + i];
	          }
	        }return size;
	      }, write: function write(stream, buffer, offset, length, position, canOwn) {
	        if (!length) return 0;var node = stream.node;node.timestamp = Date.now();if (buffer.subarray && (!node.contents || node.contents.subarray)) {
	          if (canOwn) {
	            node.contents = buffer.subarray(offset, offset + length);node.usedBytes = length;return length;
	          } else if (node.usedBytes === 0 && position === 0) {
	            node.contents = new Uint8Array(buffer.subarray(offset, offset + length));node.usedBytes = length;return length;
	          } else if (position + length <= node.usedBytes) {
	            node.contents.set(buffer.subarray(offset, offset + length), position);return length;
	          }
	        }MEMFS.expandFileStorage(node, position + length);if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position);else {
	          for (var i = 0; i < length; i++) {
	            node.contents[position + i] = buffer[offset + i];
	          }
	        }node.usedBytes = Math.max(node.usedBytes, position + length);return length;
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            position += stream.node.usedBytes;
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      }, allocate: function allocate(stream, offset, length) {
	        MEMFS.expandFileStorage(stream.node, offset + length);stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
	      }, mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {
	        if (!FS.isFile(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }var ptr;var allocated;var contents = stream.node.contents;if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
	          allocated = false;ptr = contents.byteOffset;
	        } else {
	          if (position > 0 || position + length < stream.node.usedBytes) {
	            if (contents.subarray) {
	              contents = contents.subarray(position, position + length);
	            } else {
	              contents = Array.prototype.slice.call(contents, position, position + length);
	            }
	          }allocated = true;ptr = _malloc(length);if (!ptr) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
	          }buffer.set(contents, ptr);
	        }return { ptr: ptr, allocated: allocated };
	      }, msync: function msync(stream, buffer, offset, length, mmapFlags) {
	        if (!FS.isFile(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }if (mmapFlags & 2) {
	          return 0;
	        }var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);return 0;
	      } } };var IDBFS = { dbs: {}, indexedDB: function (_indexedDB) {
	      function indexedDB() {
	        return _indexedDB.apply(this, arguments);
	      }
	
	      indexedDB.toString = function () {
	        return _indexedDB.toString();
	      };
	
	      return indexedDB;
	    }(function () {
	      if (typeof indexedDB !== "undefined") return indexedDB;var ret = null;if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;assert(ret, "IDBFS used, but indexedDB not supported");return ret;
	    }), DB_VERSION: 21, DB_STORE_NAME: "FILE_DATA", mount: function mount(_mount2) {
	      return MEMFS.mount.apply(null, arguments);
	    }, syncfs: function syncfs(mount, populate, callback) {
	      IDBFS.getLocalSet(mount, function (err, local) {
	        if (err) return callback(err);IDBFS.getRemoteSet(mount, function (err, remote) {
	          if (err) return callback(err);var src = populate ? remote : local;var dst = populate ? local : remote;IDBFS.reconcile(src, dst, callback);
	        });
	      });
	    }, getDB: function getDB(name, callback) {
	      var db = IDBFS.dbs[name];if (db) {
	        return callback(null, db);
	      }var req;try {
	        req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
	      } catch (e) {
	        return callback(e);
	      }if (!req) {
	        return callback("Unable to connect to IndexedDB");
	      }req.onupgradeneeded = function (e) {
	        var db = e.target.result;var transaction = e.target.transaction;var fileStore;if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
	          fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
	        } else {
	          fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
	        }if (!fileStore.indexNames.contains("timestamp")) {
	          fileStore.createIndex("timestamp", "timestamp", { unique: false });
	        }
	      };req.onsuccess = function () {
	        db = req.result;IDBFS.dbs[name] = db;callback(null, db);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, getLocalSet: function getLocalSet(mount, callback) {
	      var entries = {};function isRealDir(p) {
	        return p !== "." && p !== "..";
	      }function toAbsolute(root) {
	        return function (p) {
	          return PATH.join2(root, p);
	        };
	      }var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while (check.length) {
	        var path = check.pop();var stat;try {
	          stat = FS.stat(path);
	        } catch (e) {
	          return callback(e);
	        }if (FS.isDir(stat.mode)) {
	          check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
	        }entries[path] = { timestamp: stat.mtime };
	      }return callback(null, { type: "local", entries: entries });
	    }, getRemoteSet: function getRemoteSet(mount, callback) {
	      var entries = {};IDBFS.getDB(mount.mountpoint, function (err, db) {
	        if (err) return callback(err);var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");transaction.onerror = function (e) {
	          callback(this.error);e.preventDefault();
	        };var store = transaction.objectStore(IDBFS.DB_STORE_NAME);var index = store.index("timestamp");index.openKeyCursor().onsuccess = function (event) {
	          var cursor = event.target.result;if (!cursor) {
	            return callback(null, { type: "remote", db: db, entries: entries });
	          }entries[cursor.primaryKey] = { timestamp: cursor.key };cursor.continue();
	        };
	      });
	    }, loadLocalEntry: function loadLocalEntry(path, callback) {
	      var stat, node;try {
	        var lookup = FS.lookupPath(path);node = lookup.node;stat = FS.stat(path);
	      } catch (e) {
	        return callback(e);
	      }if (FS.isDir(stat.mode)) {
	        return callback(null, { timestamp: stat.mtime, mode: stat.mode });
	      } else if (FS.isFile(stat.mode)) {
	        node.contents = MEMFS.getFileDataAsTypedArray(node);return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
	      } else {
	        return callback(new Error("node type not supported"));
	      }
	    }, storeLocalEntry: function storeLocalEntry(path, entry, callback) {
	      try {
	        if (FS.isDir(entry.mode)) {
	          FS.mkdir(path, entry.mode);
	        } else if (FS.isFile(entry.mode)) {
	          FS.writeFile(path, entry.contents, { encoding: "binary", canOwn: true });
	        } else {
	          return callback(new Error("node type not supported"));
	        }FS.chmod(path, entry.mode);FS.utime(path, entry.timestamp, entry.timestamp);
	      } catch (e) {
	        return callback(e);
	      }callback(null);
	    }, removeLocalEntry: function removeLocalEntry(path, callback) {
	      try {
	        var lookup = FS.lookupPath(path);var stat = FS.stat(path);if (FS.isDir(stat.mode)) {
	          FS.rmdir(path);
	        } else if (FS.isFile(stat.mode)) {
	          FS.unlink(path);
	        }
	      } catch (e) {
	        return callback(e);
	      }callback(null);
	    }, loadRemoteEntry: function loadRemoteEntry(store, path, callback) {
	      var req = store.get(path);req.onsuccess = function (event) {
	        callback(null, event.target.result);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, storeRemoteEntry: function storeRemoteEntry(store, path, entry, callback) {
	      var req = store.put(entry, path);req.onsuccess = function () {
	        callback(null);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, removeRemoteEntry: function removeRemoteEntry(store, path, callback) {
	      var req = store.delete(path);req.onsuccess = function () {
	        callback(null);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, reconcile: function reconcile(src, dst, callback) {
	      var total = 0;var create = [];Object.keys(src.entries).forEach(function (key) {
	        var e = src.entries[key];var e2 = dst.entries[key];if (!e2 || e.timestamp > e2.timestamp) {
	          create.push(key);total++;
	        }
	      });var remove = [];Object.keys(dst.entries).forEach(function (key) {
	        var e = dst.entries[key];var e2 = src.entries[key];if (!e2) {
	          remove.push(key);total++;
	        }
	      });if (!total) {
	        return callback(null);
	      }var completed = 0;var db = src.type === "remote" ? src.db : dst.db;var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readwrite");var store = transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err) {
	        if (err) {
	          if (!done.errored) {
	            done.errored = true;return callback(err);
	          }return;
	        }if (++completed >= total) {
	          return callback(null);
	        }
	      }transaction.onerror = function (e) {
	        done(this.error);e.preventDefault();
	      };create.sort().forEach(function (path) {
	        if (dst.type === "local") {
	          IDBFS.loadRemoteEntry(store, path, function (err, entry) {
	            if (err) return done(err);IDBFS.storeLocalEntry(path, entry, done);
	          });
	        } else {
	          IDBFS.loadLocalEntry(path, function (err, entry) {
	            if (err) return done(err);IDBFS.storeRemoteEntry(store, path, entry, done);
	          });
	        }
	      });remove.sort().reverse().forEach(function (path) {
	        if (dst.type === "local") {
	          IDBFS.removeLocalEntry(path, done);
	        } else {
	          IDBFS.removeRemoteEntry(store, path, done);
	        }
	      });
	    } };var NODEFS = { isWindows: false, staticInit: function staticInit() {
	      NODEFS.isWindows = !!process.platform.match(/^win/);
	    }, mount: function mount(_mount3) {
	      assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null, "/", NODEFS.getMode(_mount3.opts.root), 0);
	    }, createNode: function createNode(parent, name, mode, dev) {
	      if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node = FS.createNode(parent, name, mode);node.node_ops = NODEFS.node_ops;node.stream_ops = NODEFS.stream_ops;return node;
	    }, getMode: function getMode(path) {
	      var stat;try {
	        stat = fs.lstatSync(path);if (NODEFS.isWindows) {
	          stat.mode = stat.mode | (stat.mode & 146) >> 1;
	        }
	      } catch (e) {
	        if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	      }return stat.mode;
	    }, realPath: function realPath(node) {
	      var parts = [];while (node.parent !== node) {
	        parts.push(node.name);node = node.parent;
	      }parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null, parts);
	    }, flagsToPermissionStringMap: { 0: "r", 1: "r+", 2: "r+", 64: "r", 65: "r+", 66: "r+", 129: "rx+", 193: "rx+", 514: "w+", 577: "w", 578: "w+", 705: "wx", 706: "wx+", 1024: "a", 1025: "a", 1026: "a+", 1089: "a", 1090: "a+", 1153: "ax", 1154: "ax+", 1217: "ax", 1218: "ax+", 4096: "rs", 4098: "rs+" }, flagsToPermissionString: function flagsToPermissionString(flags) {
	      flags &= ~2097152;flags &= ~2048;flags &= ~32768;flags &= ~524288;if (flags in NODEFS.flagsToPermissionStringMap) {
	        return NODEFS.flagsToPermissionStringMap[flags];
	      } else {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }
	    }, node_ops: { getattr: function getattr(node) {
	        var path = NODEFS.realPath(node);var stat;try {
	          stat = fs.lstatSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }if (NODEFS.isWindows && !stat.blksize) {
	          stat.blksize = 4096;
	        }if (NODEFS.isWindows && !stat.blocks) {
	          stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
	        }return { dev: stat.dev, ino: stat.ino, mode: stat.mode, nlink: stat.nlink, uid: stat.uid, gid: stat.gid, rdev: stat.rdev, size: stat.size, atime: stat.atime, mtime: stat.mtime, ctime: stat.ctime, blksize: stat.blksize, blocks: stat.blocks };
	      }, setattr: function setattr(node, attr) {
	        var path = NODEFS.realPath(node);try {
	          if (attr.mode !== undefined) {
	            fs.chmodSync(path, attr.mode);node.mode = attr.mode;
	          }if (attr.timestamp !== undefined) {
	            var date = new Date(attr.timestamp);fs.utimesSync(path, date, date);
	          }if (attr.size !== undefined) {
	            fs.truncateSync(path, attr.size);
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, lookup: function lookup(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);var mode = NODEFS.getMode(path);return NODEFS.createNode(parent, name, mode);
	      }, mknod: function mknod(parent, name, mode, dev) {
	        var node = NODEFS.createNode(parent, name, mode, dev);var path = NODEFS.realPath(node);try {
	          if (FS.isDir(node.mode)) {
	            fs.mkdirSync(path, node.mode);
	          } else {
	            fs.writeFileSync(path, "", { mode: node.mode });
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }return node;
	      }, rename: function rename(oldNode, newDir, newName) {
	        var oldPath = NODEFS.realPath(oldNode);var newPath = PATH.join2(NODEFS.realPath(newDir), newName);try {
	          fs.renameSync(oldPath, newPath);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, unlink: function unlink(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);try {
	          fs.unlinkSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, rmdir: function rmdir(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);try {
	          fs.rmdirSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, readdir: function readdir(node) {
	        var path = NODEFS.realPath(node);try {
	          return fs.readdirSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, symlink: function symlink(parent, newName, oldPath) {
	        var newPath = PATH.join2(NODEFS.realPath(parent), newName);try {
	          fs.symlinkSync(oldPath, newPath);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, readlink: function readlink(node) {
	        var path = NODEFS.realPath(node);try {
	          path = fs.readlinkSync(path);path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);return path;
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      } }, stream_ops: { open: function open(stream) {
	        var path = NODEFS.realPath(stream.node);try {
	          if (FS.isFile(stream.node.mode)) {
	            stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, close: function close(stream) {
	        try {
	          if (FS.isFile(stream.node.mode) && stream.nfd) {
	            fs.closeSync(stream.nfd);
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, read: function read(stream, buffer, offset, length, position) {
	        if (length === 0) return 0;var nbuffer = new Buffer(length);var res;try {
	          res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
	        } catch (e) {
	          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }if (res > 0) {
	          for (var i = 0; i < res; i++) {
	            buffer[offset + i] = nbuffer[i];
	          }
	        }return res;
	      }, write: function write(stream, buffer, offset, length, position) {
	        var nbuffer = new Buffer(buffer.subarray(offset, offset + length));var res;try {
	          res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
	        } catch (e) {
	          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }return res;
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            try {
	              var stat = fs.fstatSync(stream.nfd);position += stat.size;
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	            }
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      } } };var WORKERFS = { DIR_MODE: 16895, FILE_MODE: 33279, reader: null, mount: function mount(_mount4) {
	      assert(ENVIRONMENT_IS_WORKER);if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);var createdParents = {};function ensureParent(path) {
	        var parts = path.split("/");var parent = root;for (var i = 0; i < parts.length - 1; i++) {
	          var curr = parts.slice(0, i + 1).join("/");if (!createdParents[curr]) {
	            createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
	          }parent = createdParents[curr];
	        }return parent;
	      }function base(path) {
	        var parts = path.split("/");return parts[parts.length - 1];
	      }Array.prototype.forEach.call(_mount4.opts["files"] || [], function (file) {
	        WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
	      });(_mount4.opts["blobs"] || []).forEach(function (obj) {
	        WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
	      });(_mount4.opts["packages"] || []).forEach(function (pack) {
	        pack["metadata"].files.forEach(function (file) {
	          var name = file.filename.substr(1);WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
	        });
	      });return root;
	    }, createNode: function createNode(parent, name, mode, dev, contents, mtime) {
	      var node = FS.createNode(parent, name, mode);node.mode = mode;node.node_ops = WORKERFS.node_ops;node.stream_ops = WORKERFS.stream_ops;node.timestamp = (mtime || new Date()).getTime();assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);if (mode === WORKERFS.FILE_MODE) {
	        node.size = contents.size;node.contents = contents;
	      } else {
	        node.size = 4096;node.contents = {};
	      }if (parent) {
	        parent.contents[name] = node;
	      }return node;
	    }, node_ops: { getattr: function getattr(node) {
	        return { dev: 1, ino: undefined, mode: node.mode, nlink: 1, uid: 0, gid: 0, rdev: undefined, size: node.size, atime: new Date(node.timestamp), mtime: new Date(node.timestamp), ctime: new Date(node.timestamp), blksize: 4096, blocks: Math.ceil(node.size / 4096) };
	      }, setattr: function setattr(node, attr) {
	        if (attr.mode !== undefined) {
	          node.mode = attr.mode;
	        }if (attr.timestamp !== undefined) {
	          node.timestamp = attr.timestamp;
	        }
	      }, lookup: function lookup(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }, mknod: function mknod(parent, name, mode, dev) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, rename: function rename(oldNode, newDir, newName) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, unlink: function unlink(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, rmdir: function rmdir(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, readdir: function readdir(node) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, symlink: function symlink(parent, newName, oldPath) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, readlink: function readlink(node) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      } }, stream_ops: { read: function read(stream, buffer, offset, length, position) {
	        if (position >= stream.node.size) return 0;var chunk = stream.node.contents.slice(position, position + length);var ab = WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab), offset);return chunk.size;
	      }, write: function write(stream, buffer, offset, length, position) {
	        throw new FS.ErrnoError(ERRNO_CODES.EIO);
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            position += stream.node.size;
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      } } };STATICTOP += 16;STATICTOP += 16;STATICTOP += 16;var FS = { root: null, mounts: [], devices: [null], streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, handleFSError: function handleFSError(e) {
	      if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();return ___setErrNo(e.errno);
	    }, lookupPath: function lookupPath(path, opts) {
	      path = PATH.resolve(FS.cwd(), path);opts = opts || {};if (!path) return { path: "", node: null };var defaults = { follow_mount: true, recurse_count: 0 };for (var key in defaults) {
	        if (opts[key] === undefined) {
	          opts[key] = defaults[key];
	        }
	      }if (opts.recurse_count > 8) {
	        throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	      }var parts = PATH.normalizeArray(path.split("/").filter(function (p) {
	        return !!p;
	      }), false);var current = FS.root;var current_path = "/";for (var i = 0; i < parts.length; i++) {
	        var islast = i === parts.length - 1;if (islast && opts.parent) {
	          break;
	        }current = FS.lookupNode(current, parts[i]);current_path = PATH.join2(current_path, parts[i]);if (FS.isMountpoint(current)) {
	          if (!islast || islast && opts.follow_mount) {
	            current = current.mounted.root;
	          }
	        }if (!islast || opts.follow) {
	          var count = 0;while (FS.isLink(current.mode)) {
	            var link = FS.readlink(current_path);current_path = PATH.resolve(PATH.dirname(current_path), link);var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });current = lookup.node;if (count++ > 40) {
	              throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	            }
	          }
	        }
	      }return { path: current_path, node: current };
	    }, getPath: function getPath(node) {
	      var path;while (true) {
	        if (FS.isRoot(node)) {
	          var mount = node.mount.mountpoint;if (!path) return mount;return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
	        }path = path ? node.name + "/" + path : node.name;node = node.parent;
	      }
	    }, hashName: function hashName(parentid, name) {
	      var hash = 0;for (var i = 0; i < name.length; i++) {
	        hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
	      }return (parentid + hash >>> 0) % FS.nameTable.length;
	    }, hashAddNode: function hashAddNode(node) {
	      var hash = FS.hashName(node.parent.id, node.name);node.name_next = FS.nameTable[hash];FS.nameTable[hash] = node;
	    }, hashRemoveNode: function hashRemoveNode(node) {
	      var hash = FS.hashName(node.parent.id, node.name);if (FS.nameTable[hash] === node) {
	        FS.nameTable[hash] = node.name_next;
	      } else {
	        var current = FS.nameTable[hash];while (current) {
	          if (current.name_next === node) {
	            current.name_next = node.name_next;break;
	          }current = current.name_next;
	        }
	      }
	    }, lookupNode: function lookupNode(parent, name) {
	      var err = FS.mayLookup(parent);if (err) {
	        throw new FS.ErrnoError(err, parent);
	      }var hash = FS.hashName(parent.id, name);for (var node = FS.nameTable[hash]; node; node = node.name_next) {
	        var nodeName = node.name;if (node.parent.id === parent.id && nodeName === name) {
	          return node;
	        }
	      }return FS.lookup(parent, name);
	    }, createNode: function createNode(parent, name, mode, rdev) {
	      if (!FS.FSNode) {
	        FS.FSNode = function (parent, name, mode, rdev) {
	          if (!parent) {
	            parent = this;
	          }this.parent = parent;this.mount = parent.mount;this.mounted = null;this.id = FS.nextInode++;this.name = name;this.mode = mode;this.node_ops = {};this.stream_ops = {};this.rdev = rdev;
	        };FS.FSNode.prototype = {};var readMode = 292 | 73;var writeMode = 146;Object.defineProperties(FS.FSNode.prototype, { read: { get: function get() {
	              return (this.mode & readMode) === readMode;
	            }, set: function set(val) {
	              val ? this.mode |= readMode : this.mode &= ~readMode;
	            } }, write: { get: function get() {
	              return (this.mode & writeMode) === writeMode;
	            }, set: function set(val) {
	              val ? this.mode |= writeMode : this.mode &= ~writeMode;
	            } }, isFolder: { get: function get() {
	              return FS.isDir(this.mode);
	            } }, isDevice: { get: function get() {
	              return FS.isChrdev(this.mode);
	            } } });
	      }var node = new FS.FSNode(parent, name, mode, rdev);FS.hashAddNode(node);return node;
	    }, destroyNode: function destroyNode(node) {
	      FS.hashRemoveNode(node);
	    }, isRoot: function isRoot(node) {
	      return node === node.parent;
	    }, isMountpoint: function isMountpoint(node) {
	      return !!node.mounted;
	    }, isFile: function isFile(mode) {
	      return (mode & 61440) === 32768;
	    }, isDir: function isDir(mode) {
	      return (mode & 61440) === 16384;
	    }, isLink: function isLink(mode) {
	      return (mode & 61440) === 40960;
	    }, isChrdev: function isChrdev(mode) {
	      return (mode & 61440) === 8192;
	    }, isBlkdev: function isBlkdev(mode) {
	      return (mode & 61440) === 24576;
	    }, isFIFO: function isFIFO(mode) {
	      return (mode & 61440) === 4096;
	    }, isSocket: function isSocket(mode) {
	      return (mode & 49152) === 49152;
	    }, flagModes: { "r": 0, "rs": 1052672, "r+": 2, "w": 577, "wx": 705, "xw": 705, "w+": 578, "wx+": 706, "xw+": 706, "a": 1089, "ax": 1217, "xa": 1217, "a+": 1090, "ax+": 1218, "xa+": 1218 }, modeStringToFlags: function modeStringToFlags(str) {
	      var flags = FS.flagModes[str];if (typeof flags === "undefined") {
	        throw new Error("Unknown file open mode: " + str);
	      }return flags;
	    }, flagsToPermissionString: function flagsToPermissionString(flag) {
	      var perms = ["r", "w", "rw"][flag & 3];if (flag & 512) {
	        perms += "w";
	      }return perms;
	    }, nodePermissions: function nodePermissions(node, perms) {
	      if (FS.ignorePermissions) {
	        return 0;
	      }if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
	        return ERRNO_CODES.EACCES;
	      } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
	        return ERRNO_CODES.EACCES;
	      } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
	        return ERRNO_CODES.EACCES;
	      }return 0;
	    }, mayLookup: function mayLookup(dir) {
	      var err = FS.nodePermissions(dir, "x");if (err) return err;if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;return 0;
	    }, mayCreate: function mayCreate(dir, name) {
	      try {
	        var node = FS.lookupNode(dir, name);return ERRNO_CODES.EEXIST;
	      } catch (e) {}return FS.nodePermissions(dir, "wx");
	    }, mayDelete: function mayDelete(dir, name, isdir) {
	      var node;try {
	        node = FS.lookupNode(dir, name);
	      } catch (e) {
	        return e.errno;
	      }var err = FS.nodePermissions(dir, "wx");if (err) {
	        return err;
	      }if (isdir) {
	        if (!FS.isDir(node.mode)) {
	          return ERRNO_CODES.ENOTDIR;
	        }if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
	          return ERRNO_CODES.EBUSY;
	        }
	      } else {
	        if (FS.isDir(node.mode)) {
	          return ERRNO_CODES.EISDIR;
	        }
	      }return 0;
	    }, mayOpen: function mayOpen(node, flags) {
	      if (!node) {
	        return ERRNO_CODES.ENOENT;
	      }if (FS.isLink(node.mode)) {
	        return ERRNO_CODES.ELOOP;
	      } else if (FS.isDir(node.mode)) {
	        if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
	          return ERRNO_CODES.EISDIR;
	        }
	      }return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
	    }, MAX_OPEN_FDS: 4096, nextfd: function nextfd(fd_start, fd_end) {
	      fd_start = fd_start || 0;fd_end = fd_end || FS.MAX_OPEN_FDS;for (var fd = fd_start; fd <= fd_end; fd++) {
	        if (!FS.streams[fd]) {
	          return fd;
	        }
	      }throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
	    }, getStream: function getStream(fd) {
	      return FS.streams[fd];
	    }, createStream: function createStream(stream, fd_start, fd_end) {
	      if (!FS.FSStream) {
	        FS.FSStream = function () {};FS.FSStream.prototype = {};Object.defineProperties(FS.FSStream.prototype, { object: { get: function get() {
	              return this.node;
	            }, set: function set(val) {
	              this.node = val;
	            } }, isRead: { get: function get() {
	              return (this.flags & 2097155) !== 1;
	            } }, isWrite: { get: function get() {
	              return (this.flags & 2097155) !== 0;
	            } }, isAppend: { get: function get() {
	              return this.flags & 1024;
	            } } });
	      }var newStream = new FS.FSStream();for (var p in stream) {
	        newStream[p] = stream[p];
	      }stream = newStream;var fd = FS.nextfd(fd_start, fd_end);stream.fd = fd;FS.streams[fd] = stream;return stream;
	    }, closeStream: function closeStream(fd) {
	      FS.streams[fd] = null;
	    }, chrdev_stream_ops: { open: function open(stream) {
	        var device = FS.getDevice(stream.node.rdev);stream.stream_ops = device.stream_ops;if (stream.stream_ops.open) {
	          stream.stream_ops.open(stream);
	        }
	      }, llseek: function llseek() {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      } }, major: function major(dev) {
	      return dev >> 8;
	    }, minor: function minor(dev) {
	      return dev & 255;
	    }, makedev: function makedev(ma, mi) {
	      return ma << 8 | mi;
	    }, registerDevice: function registerDevice(dev, ops) {
	      FS.devices[dev] = { stream_ops: ops };
	    }, getDevice: function getDevice(dev) {
	      return FS.devices[dev];
	    }, getMounts: function getMounts(mount) {
	      var mounts = [];var check = [mount];while (check.length) {
	        var m = check.pop();mounts.push(m);check.push.apply(check, m.mounts);
	      }return mounts;
	    }, syncfs: function syncfs(populate, callback) {
	      if (typeof populate === "function") {
	        callback = populate;populate = false;
	      }FS.syncFSRequests++;if (FS.syncFSRequests > 1) {
	        console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
	      }var mounts = FS.getMounts(FS.root.mount);var completed = 0;function doCallback(err) {
	        assert(FS.syncFSRequests > 0);FS.syncFSRequests--;return callback(err);
	      }function done(err) {
	        if (err) {
	          if (!done.errored) {
	            done.errored = true;return doCallback(err);
	          }return;
	        }if (++completed >= mounts.length) {
	          doCallback(null);
	        }
	      }mounts.forEach(function (mount) {
	        if (!mount.type.syncfs) {
	          return done(null);
	        }mount.type.syncfs(mount, populate, done);
	      });
	    }, mount: function mount(type, opts, mountpoint) {
	      var root = mountpoint === "/";var pseudo = !mountpoint;var node;if (root && FS.root) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      } else if (!root && !pseudo) {
	        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });mountpoint = lookup.path;node = lookup.node;if (FS.isMountpoint(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }if (!FS.isDir(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	        }
	      }var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] };var mountRoot = type.mount(mount);mountRoot.mount = mount;mount.root = mountRoot;if (root) {
	        FS.root = mountRoot;
	      } else if (node) {
	        node.mounted = mount;if (node.mount) {
	          node.mount.mounts.push(mount);
	        }
	      }return mountRoot;
	    }, unmount: function unmount(mountpoint) {
	      var lookup = FS.lookupPath(mountpoint, { follow_mount: false });if (!FS.isMountpoint(lookup.node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node = lookup.node;var mount = node.mounted;var mounts = FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function (hash) {
	        var current = FS.nameTable[hash];while (current) {
	          var next = current.name_next;if (mounts.indexOf(current.mount) !== -1) {
	            FS.destroyNode(current);
	          }current = next;
	        }
	      });node.mounted = null;var idx = node.mount.mounts.indexOf(mount);assert(idx !== -1);node.mount.mounts.splice(idx, 1);
	    }, lookup: function lookup(parent, name) {
	      return parent.node_ops.lookup(parent, name);
	    }, mknod: function mknod(path, mode, dev) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);if (!name || name === "." || name === "..") {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var err = FS.mayCreate(parent, name);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.mknod) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return parent.node_ops.mknod(parent, name, mode, dev);
	    }, create: function create(path, mode) {
	      mode = mode !== undefined ? mode : 438;mode &= 4095;mode |= 32768;return FS.mknod(path, mode, 0);
	    }, mkdir: function mkdir(path, mode) {
	      mode = mode !== undefined ? mode : 511;mode &= 511 | 512;mode |= 16384;return FS.mknod(path, mode, 0);
	    }, mkdirTree: function mkdirTree(path, mode) {
	      var dirs = path.split("/");var d = "";for (var i = 0; i < dirs.length; ++i) {
	        if (!dirs[i]) continue;d += "/" + dirs[i];try {
	          FS.mkdir(d, mode);
	        } catch (e) {
	          if (e.errno != ERRNO_CODES.EEXIST) throw e;
	        }
	      }
	    }, mkdev: function mkdev(path, mode, dev) {
	      if (typeof dev === "undefined") {
	        dev = mode;mode = 438;
	      }mode |= 8192;return FS.mknod(path, mode, dev);
	    }, symlink: function symlink(oldpath, newpath) {
	      if (!PATH.resolve(oldpath)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }var lookup = FS.lookupPath(newpath, { parent: true });var parent = lookup.node;if (!parent) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }var newname = PATH.basename(newpath);var err = FS.mayCreate(parent, newname);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.symlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return parent.node_ops.symlink(parent, newname, oldpath);
	    }, rename: function rename(old_path, new_path) {
	      var old_dirname = PATH.dirname(old_path);var new_dirname = PATH.dirname(new_path);var old_name = PATH.basename(old_path);var new_name = PATH.basename(new_path);var lookup, old_dir, new_dir;try {
	        lookup = FS.lookupPath(old_path, { parent: true });old_dir = lookup.node;lookup = FS.lookupPath(new_path, { parent: true });new_dir = lookup.node;
	      } catch (e) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if (old_dir.mount !== new_dir.mount) {
	        throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
	      }var old_node = FS.lookupNode(old_dir, old_name);var relative = PATH.relative(old_path, new_dirname);if (relative.charAt(0) !== ".") {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }relative = PATH.relative(new_path, old_dirname);if (relative.charAt(0) !== ".") {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	      }var new_node;try {
	        new_node = FS.lookupNode(new_dir, new_name);
	      } catch (e) {}if (old_node === new_node) {
	        return;
	      }var isdir = FS.isDir(old_node.mode);var err = FS.mayDelete(old_dir, old_name, isdir);if (err) {
	        throw new FS.ErrnoError(err);
	      }err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!old_dir.node_ops.rename) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }if (new_dir !== old_dir) {
	        err = FS.nodePermissions(old_dir, "w");if (err) {
	          throw new FS.ErrnoError(err);
	        }
	      }try {
	        if (FS.trackingDelegate["willMovePath"]) {
	          FS.trackingDelegate["willMovePath"](old_path, new_path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
	      }FS.hashRemoveNode(old_node);try {
	        old_dir.node_ops.rename(old_node, new_dir, new_name);
	      } catch (e) {
	        throw e;
	      } finally {
	        FS.hashAddNode(old_node);
	      }try {
	        if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
	      }
	    }, rmdir: function rmdir(path) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);var node = FS.lookupNode(parent, name);var err = FS.mayDelete(parent, name, true);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.rmdir) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }try {
	        if (FS.trackingDelegate["willDeletePath"]) {
	          FS.trackingDelegate["willDeletePath"](path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
	      }parent.node_ops.rmdir(parent, name);FS.destroyNode(node);try {
	        if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
	      }
	    }, readdir: function readdir(path) {
	      var lookup = FS.lookupPath(path, { follow: true });var node = lookup.node;if (!node.node_ops.readdir) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }return node.node_ops.readdir(node);
	    }, unlink: function unlink(path) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);var node = FS.lookupNode(parent, name);var err = FS.mayDelete(parent, name, false);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.unlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }try {
	        if (FS.trackingDelegate["willDeletePath"]) {
	          FS.trackingDelegate["willDeletePath"](path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
	      }parent.node_ops.unlink(parent, name);FS.destroyNode(node);try {
	        if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
	      }
	    }, readlink: function readlink(path) {
	      var lookup = FS.lookupPath(path);var link = lookup.node;if (!link) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!link.node_ops.readlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
	    }, stat: function stat(path, dontFollow) {
	      var lookup = FS.lookupPath(path, { follow: !dontFollow });var node = lookup.node;if (!node) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!node.node_ops.getattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return node.node_ops.getattr(node);
	    }, lstat: function lstat(path) {
	      return FS.stat(path, true);
	    }, chmod: function chmod(path, mode, dontFollow) {
	      var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: !dontFollow });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });
	    }, lchmod: function lchmod(path, mode) {
	      FS.chmod(path, mode, true);
	    }, fchmod: function fchmod(fd, mode) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }FS.chmod(stream.node, mode);
	    }, chown: function chown(path, uid, gid, dontFollow) {
	      var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: !dontFollow });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }node.node_ops.setattr(node, { timestamp: Date.now() });
	    }, lchown: function lchown(path, uid, gid) {
	      FS.chown(path, uid, gid, true);
	    }, fchown: function fchown(fd, uid, gid) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }FS.chown(stream.node, uid, gid);
	    }, truncate: function truncate(path, len) {
	      if (len < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: true });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!FS.isFile(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var err = FS.nodePermissions(node, "w");if (err) {
	        throw new FS.ErrnoError(err);
	      }node.node_ops.setattr(node, { size: len, timestamp: Date.now() });
	    }, ftruncate: function ftruncate(fd, len) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }FS.truncate(stream.node, len);
	    }, utime: function utime(path, atime, mtime) {
	      var lookup = FS.lookupPath(path, { follow: true });var node = lookup.node;node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });
	    }, open: function open(path, flags, mode, fd_start, fd_end) {
	      if (path === "") {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;mode = typeof mode === "undefined" ? 438 : mode;if (flags & 64) {
	        mode = mode & 4095 | 32768;
	      } else {
	        mode = 0;
	      }var node;if ((typeof path === "undefined" ? "undefined" : _typeof(path)) === "object") {
	        node = path;
	      } else {
	        path = PATH.normalize(path);try {
	          var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });node = lookup.node;
	        } catch (e) {}
	      }var created = false;if (flags & 64) {
	        if (node) {
	          if (flags & 128) {
	            throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
	          }
	        } else {
	          node = FS.mknod(path, mode, 0);created = true;
	        }
	      }if (!node) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (FS.isChrdev(node.mode)) {
	        flags &= ~512;
	      }if (flags & 65536 && !FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }if (!created) {
	        var err = FS.mayOpen(node, flags);if (err) {
	          throw new FS.ErrnoError(err);
	        }
	      }if (flags & 512) {
	        FS.truncate(node, 0);
	      }flags &= ~(128 | 512);var stream = FS.createStream({ node: node, path: FS.getPath(node), flags: flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);if (stream.stream_ops.open) {
	        stream.stream_ops.open(stream);
	      }if (Module["logReadFiles"] && !(flags & 1)) {
	        if (!FS.readFiles) FS.readFiles = {};if (!(path in FS.readFiles)) {
	          FS.readFiles[path] = 1;Module["printErr"]("read file: " + path);
	        }
	      }try {
	        if (FS.trackingDelegate["onOpenFile"]) {
	          var trackingFlags = 0;if ((flags & 2097155) !== 1) {
	            trackingFlags |= FS.tracking.openFlags.READ;
	          }if ((flags & 2097155) !== 0) {
	            trackingFlags |= FS.tracking.openFlags.WRITE;
	          }FS.trackingDelegate["onOpenFile"](path, trackingFlags);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
	      }return stream;
	    }, close: function close(stream) {
	      if (stream.getdents) stream.getdents = null;try {
	        if (stream.stream_ops.close) {
	          stream.stream_ops.close(stream);
	        }
	      } catch (e) {
	        throw e;
	      } finally {
	        FS.closeStream(stream.fd);
	      }
	    }, llseek: function llseek(stream, offset, whence) {
	      if (!stream.seekable || !stream.stream_ops.llseek) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }stream.position = stream.stream_ops.llseek(stream, offset, whence);stream.ungotten = [];return stream.position;
	    }, read: function read(stream, buffer, offset, length, position) {
	      if (length < 0 || position < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 1) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (FS.isDir(stream.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!stream.stream_ops.read) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var seeking = true;if (typeof position === "undefined") {
	        position = stream.position;seeking = false;
	      } else if (!stream.seekable) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);if (!seeking) stream.position += bytesRead;return bytesRead;
	    }, write: function write(stream, buffer, offset, length, position, canOwn) {
	      if (length < 0 || position < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (FS.isDir(stream.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!stream.stream_ops.write) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if (stream.flags & 1024) {
	        FS.llseek(stream, 0, 2);
	      }var seeking = true;if (typeof position === "undefined") {
	        position = stream.position;seeking = false;
	      } else if (!stream.seekable) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);if (!seeking) stream.position += bytesWritten;try {
	        if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
	      }return bytesWritten;
	    }, allocate: function allocate(stream, offset, length) {
	      if (offset < 0 || length <= 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	      }if (!stream.stream_ops.allocate) {
	        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
	      }stream.stream_ops.allocate(stream, offset, length);
	    }, mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {
	      if ((stream.flags & 2097155) === 1) {
	        throw new FS.ErrnoError(ERRNO_CODES.EACCES);
	      }if (!stream.stream_ops.mmap) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	      }return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
	    }, msync: function msync(stream, buffer, offset, length, mmapFlags) {
	      if (!stream || !stream.stream_ops.msync) {
	        return 0;
	      }return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
	    }, munmap: function munmap(stream) {
	      return 0;
	    }, ioctl: function ioctl(stream, cmd, arg) {
	      if (!stream.stream_ops.ioctl) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
	      }return stream.stream_ops.ioctl(stream, cmd, arg);
	    }, readFile: function readFile(path, opts) {
	      opts = opts || {};opts.flags = opts.flags || "r";opts.encoding = opts.encoding || "binary";if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
	        throw new Error('Invalid encoding type "' + opts.encoding + '"');
	      }var ret;var stream = FS.open(path, opts.flags);var stat = FS.stat(path);var length = stat.size;var buf = new Uint8Array(length);FS.read(stream, buf, 0, length, 0);if (opts.encoding === "utf8") {
	        ret = UTF8ArrayToString(buf, 0);
	      } else if (opts.encoding === "binary") {
	        ret = buf;
	      }FS.close(stream);return ret;
	    }, writeFile: function writeFile(path, data, opts) {
	      opts = opts || {};opts.flags = opts.flags || "w";opts.encoding = opts.encoding || "utf8";if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
	        throw new Error('Invalid encoding type "' + opts.encoding + '"');
	      }var stream = FS.open(path, opts.flags, opts.mode);if (opts.encoding === "utf8") {
	        var buf = new Uint8Array(lengthBytesUTF8(data) + 1);var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
	      } else if (opts.encoding === "binary") {
	        FS.write(stream, data, 0, data.length, 0, opts.canOwn);
	      }FS.close(stream);
	    }, cwd: function cwd() {
	      return FS.currentPath;
	    }, chdir: function chdir(path) {
	      var lookup = FS.lookupPath(path, { follow: true });if (lookup.node === null) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!FS.isDir(lookup.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }var err = FS.nodePermissions(lookup.node, "x");if (err) {
	        throw new FS.ErrnoError(err);
	      }FS.currentPath = lookup.path;
	    }, createDefaultDirectories: function createDefaultDirectories() {
	      FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user");
	    }, createDefaultDevices: function createDefaultDevices() {
	      FS.mkdir("/dev");FS.registerDevice(FS.makedev(1, 3), { read: function read() {
	          return 0;
	        }, write: function write(stream, buffer, offset, length, pos) {
	          return length;
	        } });FS.mkdev("/dev/null", FS.makedev(1, 3));TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);FS.mkdev("/dev/tty", FS.makedev(5, 0));FS.mkdev("/dev/tty1", FS.makedev(6, 0));var random_device;if (typeof crypto !== "undefined") {
	        var randomBuffer = new Uint8Array(1);random_device = function random_device() {
	          crypto.getRandomValues(randomBuffer);return randomBuffer[0];
	        };
	      } else if (ENVIRONMENT_IS_NODE) {
	        random_device = function random_device() {
	          return __webpack_require__(13).randomBytes(1)[0];
	        };
	      } else {
	        random_device = function random_device() {
	          return Math.random() * 256 | 0;
	        };
	      }FS.createDevice("/dev", "random", random_device);FS.createDevice("/dev", "urandom", random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp");
	    }, createSpecialDirectories: function createSpecialDirectories() {
	      FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({ mount: function mount() {
	          var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);node.node_ops = { lookup: function lookup(parent, name) {
	              var fd = +name;var stream = FS.getStream(fd);if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: function readlink() {
	                    return stream.path;
	                  } } };ret.parent = ret;return ret;
	            } };return node;
	        } }, {}, "/proc/self/fd");
	    }, createStandardStreams: function createStandardStreams() {
	      if (Module["stdin"]) {
	        FS.createDevice("/dev", "stdin", Module["stdin"]);
	      } else {
	        FS.symlink("/dev/tty", "/dev/stdin");
	      }if (Module["stdout"]) {
	        FS.createDevice("/dev", "stdout", null, Module["stdout"]);
	      } else {
	        FS.symlink("/dev/tty", "/dev/stdout");
	      }if (Module["stderr"]) {
	        FS.createDevice("/dev", "stderr", null, Module["stderr"]);
	      } else {
	        FS.symlink("/dev/tty1", "/dev/stderr");
	      }var stdin = FS.open("/dev/stdin", "r");assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");var stdout = FS.open("/dev/stdout", "w");assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");var stderr = FS.open("/dev/stderr", "w");assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
	    }, ensureErrnoError: function ensureErrnoError() {
	      if (FS.ErrnoError) return;FS.ErrnoError = function ErrnoError(errno, node) {
	        this.node = node;this.setErrno = function (errno) {
	          this.errno = errno;for (var key in ERRNO_CODES) {
	            if (ERRNO_CODES[key] === errno) {
	              this.code = key;break;
	            }
	          }
	        };this.setErrno(errno);this.message = ERRNO_MESSAGES[errno];
	      };FS.ErrnoError.prototype = new Error();FS.ErrnoError.prototype.constructor = FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach(function (code) {
	        FS.genericErrors[code] = new FS.ErrnoError(code);FS.genericErrors[code].stack = "<generic error, no stack>";
	      });
	    }, staticInit: function staticInit() {
	      FS.ensureErrnoError();FS.nameTable = new Array(4096);FS.mount(MEMFS, {}, "/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems = { "MEMFS": MEMFS, "IDBFS": IDBFS, "NODEFS": NODEFS, "WORKERFS": WORKERFS };
	    }, init: function init(input, output, error) {
	      assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized = true;FS.ensureErrnoError();Module["stdin"] = input || Module["stdin"];Module["stdout"] = output || Module["stdout"];Module["stderr"] = error || Module["stderr"];FS.createStandardStreams();
	    }, quit: function quit() {
	      FS.init.initialized = false;var fflush = Module["_fflush"];if (fflush) fflush(0);for (var i = 0; i < FS.streams.length; i++) {
	        var stream = FS.streams[i];if (!stream) {
	          continue;
	        }FS.close(stream);
	      }
	    }, getMode: function getMode(canRead, canWrite) {
	      var mode = 0;if (canRead) mode |= 292 | 73;if (canWrite) mode |= 146;return mode;
	    }, joinPath: function joinPath(parts, forceRelative) {
	      var path = PATH.join.apply(null, parts);if (forceRelative && path[0] == "/") path = path.substr(1);return path;
	    }, absolutePath: function absolutePath(relative, base) {
	      return PATH.resolve(base, relative);
	    }, standardizePath: function standardizePath(path) {
	      return PATH.normalize(path);
	    }, findObject: function findObject(path, dontResolveLastLink) {
	      var ret = FS.analyzePath(path, dontResolveLastLink);if (ret.exists) {
	        return ret.object;
	      } else {
	        ___setErrNo(ret.error);return null;
	      }
	    }, analyzePath: function analyzePath(path, dontResolveLastLink) {
	      try {
	        var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });path = lookup.path;
	      } catch (e) {}var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };try {
	        var lookup = FS.lookupPath(path, { parent: true });ret.parentExists = true;ret.parentPath = lookup.path;ret.parentObject = lookup.node;ret.name = PATH.basename(path);lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });ret.exists = true;ret.path = lookup.path;ret.object = lookup.node;ret.name = lookup.node.name;ret.isRoot = lookup.path === "/";
	      } catch (e) {
	        ret.error = e.errno;
	      }return ret;
	    }, createFolder: function createFolder(parent, name, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(canRead, canWrite);return FS.mkdir(path, mode);
	    }, createPath: function createPath(parent, path, canRead, canWrite) {
	      parent = typeof parent === "string" ? parent : FS.getPath(parent);var parts = path.split("/").reverse();while (parts.length) {
	        var part = parts.pop();if (!part) continue;var current = PATH.join2(parent, part);try {
	          FS.mkdir(current);
	        } catch (e) {}parent = current;
	      }return current;
	    }, createFile: function createFile(parent, name, properties, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(canRead, canWrite);return FS.create(path, mode);
	    }, createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {
	      var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;var mode = FS.getMode(canRead, canWrite);var node = FS.create(path, mode);if (data) {
	        if (typeof data === "string") {
	          var arr = new Array(data.length);for (var i = 0, len = data.length; i < len; ++i) {
	            arr[i] = data.charCodeAt(i);
	          }data = arr;
	        }FS.chmod(node, mode | 146);var stream = FS.open(node, "w");FS.write(stream, data, 0, data.length, 0, canOwn);FS.close(stream);FS.chmod(node, mode);
	      }return node;
	    }, createDevice: function createDevice(parent, name, input, output) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(!!input, !!output);if (!FS.createDevice.major) FS.createDevice.major = 64;var dev = FS.makedev(FS.createDevice.major++, 0);FS.registerDevice(dev, { open: function open(stream) {
	          stream.seekable = false;
	        }, close: function close(stream) {
	          if (output && output.buffer && output.buffer.length) {
	            output(10);
	          }
	        }, read: function read(stream, buffer, offset, length, pos) {
	          var bytesRead = 0;for (var i = 0; i < length; i++) {
	            var result;try {
	              result = input();
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }if (result === undefined && bytesRead === 0) {
	              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	            }if (result === null || result === undefined) break;bytesRead++;buffer[offset + i] = result;
	          }if (bytesRead) {
	            stream.node.timestamp = Date.now();
	          }return bytesRead;
	        }, write: function write(stream, buffer, offset, length, pos) {
	          for (var i = 0; i < length; i++) {
	            try {
	              output(buffer[offset + i]);
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }
	          }if (length) {
	            stream.node.timestamp = Date.now();
	          }return i;
	        } });return FS.mkdev(path, mode, dev);
	    }, createLink: function createLink(parent, name, target, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);return FS.symlink(target, path);
	    }, forceLoadFile: function forceLoadFile(obj) {
	      if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;var success = true;if (typeof XMLHttpRequest !== "undefined") {
	        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
	      } else if (Module["read"]) {
	        try {
	          obj.contents = intArrayFromString(Module["read"](obj.url), true);obj.usedBytes = obj.contents.length;
	        } catch (e) {
	          success = false;
	        }
	      } else {
	        throw new Error("Cannot load without read() or XMLHttpRequest.");
	      }if (!success) ___setErrNo(ERRNO_CODES.EIO);return success;
	    }, createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {
	      function LazyUint8Array() {
	        this.lengthKnown = false;this.chunks = [];
	      }LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
	        if (idx > this.length - 1 || idx < 0) {
	          return undefined;
	        }var chunkOffset = idx % this.chunkSize;var chunkNum = idx / this.chunkSize | 0;return this.getter(chunkNum)[chunkOffset];
	      };LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
	        this.getter = getter;
	      };LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
	        var xhr = new XMLHttpRequest();xhr.open("HEAD", url, false);xhr.send(null);if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);var datalength = Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";var chunkSize = 1024 * 1024;if (!hasByteServing) chunkSize = datalength;var doXHR = function doXHR(from, to) {
	          if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");var xhr = new XMLHttpRequest();xhr.open("GET", url, false);if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";if (xhr.overrideMimeType) {
	            xhr.overrideMimeType("text/plain; charset=x-user-defined");
	          }xhr.send(null);if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);if (xhr.response !== undefined) {
	            return new Uint8Array(xhr.response || []);
	          } else {
	            return intArrayFromString(xhr.responseText || "", true);
	          }
	        };var lazyArray = this;lazyArray.setDataGetter(function (chunkNum) {
	          var start = chunkNum * chunkSize;var end = (chunkNum + 1) * chunkSize - 1;end = Math.min(end, datalength - 1);if (typeof lazyArray.chunks[chunkNum] === "undefined") {
	            lazyArray.chunks[chunkNum] = doXHR(start, end);
	          }if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum];
	        });if (usesGzip || !datalength) {
	          chunkSize = datalength = 1;datalength = this.getter(0).length;chunkSize = datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
	        }this._length = datalength;this._chunkSize = chunkSize;this.lengthKnown = true;
	      };if (typeof XMLHttpRequest !== "undefined") {
	        if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray = new LazyUint8Array();Object.defineProperties(lazyArray, { length: { get: function get() {
	              if (!this.lengthKnown) {
	                this.cacheLength();
	              }return this._length;
	            } }, chunkSize: { get: function get() {
	              if (!this.lengthKnown) {
	                this.cacheLength();
	              }return this._chunkSize;
	            } } });var properties = { isDevice: false, contents: lazyArray };
	      } else {
	        var properties = { isDevice: false, url: url };
	      }var node = FS.createFile(parent, name, properties, canRead, canWrite);if (properties.contents) {
	        node.contents = properties.contents;
	      } else if (properties.url) {
	        node.contents = null;node.url = properties.url;
	      }Object.defineProperties(node, { usedBytes: { get: function get() {
	            return this.contents.length;
	          } } });var stream_ops = {};var keys = Object.keys(node.stream_ops);keys.forEach(function (key) {
	        var fn = node.stream_ops[key];stream_ops[key] = function forceLoadLazyFile() {
	          if (!FS.forceLoadFile(node)) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }return fn.apply(null, arguments);
	        };
	      });stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
	        if (!FS.forceLoadFile(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EIO);
	        }var contents = stream.node.contents;if (position >= contents.length) return 0;var size = Math.min(contents.length - position, length);assert(size >= 0);if (contents.slice) {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents[position + i];
	          }
	        } else {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents.get(position + i);
	          }
	        }return size;
	      };node.stream_ops = stream_ops;return node;
	    }, createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
	      Browser.init();var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;var dep = getUniqueRunDependency("cp " + fullname);function processData(byteArray) {
	        function finish(byteArray) {
	          if (preFinish) preFinish();if (!dontCreateFile) {
	            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
	          }if (onload) onload();removeRunDependency(dep);
	        }var handled = false;Module["preloadPlugins"].forEach(function (plugin) {
	          if (handled) return;if (plugin["canHandle"](fullname)) {
	            plugin["handle"](byteArray, fullname, finish, function () {
	              if (onerror) onerror();removeRunDependency(dep);
	            });handled = true;
	          }
	        });if (!handled) finish(byteArray);
	      }addRunDependency(dep);if (typeof url == "string") {
	        Browser.asyncLoad(url, function (byteArray) {
	          processData(byteArray);
	        }, onerror);
	      } else {
	        processData(url);
	      }
	    }, indexedDB: function indexedDB() {
	      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
	    }, DB_NAME: function DB_NAME() {
	      return "EM_FS_" + window.location.pathname;
	    }, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {
	      onload = onload || function () {};onerror = onerror || function () {};var indexedDB = FS.indexedDB();try {
	        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	      } catch (e) {
	        return onerror(e);
	      }openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
	        console.log("creating db");var db = openRequest.result;db.createObjectStore(FS.DB_STORE_NAME);
	      };openRequest.onsuccess = function openRequest_onsuccess() {
	        var db = openRequest.result;var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");var files = transaction.objectStore(FS.DB_STORE_NAME);var ok = 0,
	            fail = 0,
	            total = paths.length;function finish() {
	          if (fail == 0) onload();else onerror();
	        }paths.forEach(function (path) {
	          var putRequest = files.put(FS.analyzePath(path).object.contents, path);putRequest.onsuccess = function putRequest_onsuccess() {
	            ok++;if (ok + fail == total) finish();
	          };putRequest.onerror = function putRequest_onerror() {
	            fail++;if (ok + fail == total) finish();
	          };
	        });transaction.onerror = onerror;
	      };openRequest.onerror = onerror;
	    }, loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {
	      onload = onload || function () {};onerror = onerror || function () {};var indexedDB = FS.indexedDB();try {
	        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	      } catch (e) {
	        return onerror(e);
	      }openRequest.onupgradeneeded = onerror;openRequest.onsuccess = function openRequest_onsuccess() {
	        var db = openRequest.result;try {
	          var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
	        } catch (e) {
	          onerror(e);return;
	        }var files = transaction.objectStore(FS.DB_STORE_NAME);var ok = 0,
	            fail = 0,
	            total = paths.length;function finish() {
	          if (fail == 0) onload();else onerror();
	        }paths.forEach(function (path) {
	          var getRequest = files.get(path);getRequest.onsuccess = function getRequest_onsuccess() {
	            if (FS.analyzePath(path).exists) {
	              FS.unlink(path);
	            }FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);ok++;if (ok + fail == total) finish();
	          };getRequest.onerror = function getRequest_onerror() {
	            fail++;if (ok + fail == total) finish();
	          };
	        });transaction.onerror = onerror;
	      };openRequest.onerror = onerror;
	    } };var SYSCALLS = { DEFAULT_POLLMASK: 5, mappings: {}, umask: 511, calculateAt: function calculateAt(dirfd, path) {
	      if (path[0] !== "/") {
	        var dir;if (dirfd === -100) {
	          dir = FS.cwd();
	        } else {
	          var dirstream = FS.getStream(dirfd);if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir = dirstream.path;
	        }path = PATH.join2(dir, path);
	      }return path;
	    }, doStat: function doStat(func, path, buf) {
	      try {
	        var stat = func(path);
	      } catch (e) {
	        if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
	          return -ERRNO_CODES.ENOTDIR;
	        }throw e;
	      }HEAP32[buf >> 2] = stat.dev;HEAP32[buf + 4 >> 2] = 0;HEAP32[buf + 8 >> 2] = stat.ino;HEAP32[buf + 12 >> 2] = stat.mode;HEAP32[buf + 16 >> 2] = stat.nlink;HEAP32[buf + 20 >> 2] = stat.uid;HEAP32[buf + 24 >> 2] = stat.gid;HEAP32[buf + 28 >> 2] = stat.rdev;HEAP32[buf + 32 >> 2] = 0;HEAP32[buf + 36 >> 2] = stat.size;HEAP32[buf + 40 >> 2] = 4096;HEAP32[buf + 44 >> 2] = stat.blocks;HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;HEAP32[buf + 52 >> 2] = 0;HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;HEAP32[buf + 60 >> 2] = 0;HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;HEAP32[buf + 68 >> 2] = 0;HEAP32[buf + 72 >> 2] = stat.ino;return 0;
	    }, doMsync: function doMsync(addr, stream, len, flags) {
	      var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));FS.msync(stream, buffer, 0, len, flags);
	    }, doMkdir: function doMkdir(path, mode) {
	      path = PATH.normalize(path);if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);FS.mkdir(path, mode, 0);return 0;
	    }, doMknod: function doMknod(path, mode, dev) {
	      switch (mode & 61440) {case 32768:case 8192:case 24576:case 4096:case 49152:
	          break;default:
	          return -ERRNO_CODES.EINVAL;}FS.mknod(path, mode, dev);return 0;
	    }, doReadlink: function doReadlink(path, buf, bufsize) {
	      if (bufsize <= 0) return -ERRNO_CODES.EINVAL;var ret = FS.readlink(path);var len = Math.min(bufsize, lengthBytesUTF8(ret));var endChar = HEAP8[buf + len];stringToUTF8(ret, buf, bufsize + 1);HEAP8[buf + len] = endChar;return len;
	    }, doAccess: function doAccess(path, amode) {
	      if (amode & ~7) {
	        return -ERRNO_CODES.EINVAL;
	      }var node;var lookup = FS.lookupPath(path, { follow: true });node = lookup.node;var perms = "";if (amode & 4) perms += "r";if (amode & 2) perms += "w";if (amode & 1) perms += "x";if (perms && FS.nodePermissions(node, perms)) {
	        return -ERRNO_CODES.EACCES;
	      }return 0;
	    }, doDup: function doDup(path, flags, suggestFD) {
	      var suggest = FS.getStream(suggestFD);if (suggest) FS.close(suggest);return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
	    }, doReadv: function doReadv(stream, iov, iovcnt, offset) {
	      var ret = 0;for (var i = 0; i < iovcnt; i++) {
	        var ptr = HEAP32[iov + i * 8 >> 2];var len = HEAP32[iov + (i * 8 + 4) >> 2];var curr = FS.read(stream, HEAP8, ptr, len, offset);if (curr < 0) return -1;ret += curr;if (curr < len) break;
	      }return ret;
	    }, doWritev: function doWritev(stream, iov, iovcnt, offset) {
	      var ret = 0;for (var i = 0; i < iovcnt; i++) {
	        var ptr = HEAP32[iov + i * 8 >> 2];var len = HEAP32[iov + (i * 8 + 4) >> 2];var curr = FS.write(stream, HEAP8, ptr, len, offset);if (curr < 0) return -1;ret += curr;
	      }return ret;
	    }, varargs: 0, get: function get(varargs) {
	      SYSCALLS.varargs += 4;var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];return ret;
	    }, getStr: function getStr() {
	      var ret = Pointer_stringify(SYSCALLS.get());return ret;
	    }, getStreamFromFD: function getStreamFromFD() {
	      var stream = FS.getStream(SYSCALLS.get());if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream;
	    }, getSocketFromFD: function getSocketFromFD() {
	      var socket = SOCKFS.getSocket(SYSCALLS.get());if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket;
	    }, getSocketAddress: function getSocketAddress(allowNull) {
	      var addrp = SYSCALLS.get(),
	          addrlen = SYSCALLS.get();if (allowNull && addrp === 0) return null;var info = __read_sockaddr(addrp, addrlen);if (info.errno) throw new FS.ErrnoError(info.errno);info.addr = DNS.lookup_addr(info.addr) || info.addr;return info;
	    }, get64: function get64() {
	      var low = SYSCALLS.get(),
	          high = SYSCALLS.get();if (low >= 0) assert(high === 0);else assert(high === -1);return low;
	    }, getZero: function getZero() {
	      assert(SYSCALLS.get() === 0);
	    } };function ___syscall195(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var path = SYSCALLS.getStr(),
	          buf = SYSCALLS.get();return SYSCALLS.doStat(FS.stat, path, buf);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall5(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var pathname = SYSCALLS.getStr(),
	          flags = SYSCALLS.get(),
	          mode = SYSCALLS.get();var stream = FS.open(pathname, flags, mode);return stream.fd;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___lock() {}function ___unlock() {}function ___syscall6(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD();FS.close(stream);return 0;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_STATIC);Module["_llvm_cttz_i32"] = _llvm_cttz_i32;Module["___udivmoddi4"] = ___udivmoddi4;Module["___udivdi3"] = ___udivdi3;Module["___muldsi3"] = ___muldsi3;Module["___muldi3"] = ___muldi3;Module["_sbrk"] = _sbrk;Module["___uremdi3"] = ___uremdi3;function _emscripten_memcpy_big(dest, src, num) {
	    HEAPU8.set(HEAPU8.subarray(src, src + num), dest);return dest;
	  }Module["_memcpy"] = _memcpy;function __exit(status) {
	    Module["exit"](status);
	  }function _exit(status) {
	    __exit(status);
	  }function _time(ptr) {
	    var ret = Date.now() / 1e3 | 0;if (ptr) {
	      HEAP32[ptr >> 2] = ret;
	    }return ret;
	  }Module["_pthread_self"] = _pthread_self;function ___syscall140(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          offset_high = SYSCALLS.get(),
	          offset_low = SYSCALLS.get(),
	          result = SYSCALLS.get(),
	          whence = SYSCALLS.get();var offset = offset_low;assert(offset_high === 0);FS.llseek(stream, offset, whence);HEAP32[result >> 2] = stream.position;if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;return 0;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall145(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          iov = SYSCALLS.get(),
	          iovcnt = SYSCALLS.get();return SYSCALLS.doReadv(stream, iov, iovcnt);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall146(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          iov = SYSCALLS.get(),
	          iovcnt = SYSCALLS.get();return SYSCALLS.doWritev(stream, iov, iovcnt);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall54(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          op = SYSCALLS.get();switch (op) {case 21505:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return 0;
	          };case 21506:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return 0;
	          };case 21519:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;var argp = SYSCALLS.get();HEAP32[argp >> 2] = 0;return 0;
	          };case 21520:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return -ERRNO_CODES.EINVAL;
	          };case 21531:
	          {
	            var argp = SYSCALLS.get();return FS.ioctl(stream, op, argp);
	          };default:
	          abort("bad ioctl syscall " + op);}
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall221(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          cmd = SYSCALLS.get();switch (cmd) {case 0:
	          {
	            var arg = SYSCALLS.get();if (arg < 0) {
	              return -ERRNO_CODES.EINVAL;
	            }var newStream;newStream = FS.open(stream.path, stream.flags, 0, arg);return newStream.fd;
	          };case 1:case 2:
	          return 0;case 3:
	          return stream.flags;case 4:
	          {
	            var arg = SYSCALLS.get();stream.flags |= arg;return 0;
	          };case 12:case 12:
	          {
	            var arg = SYSCALLS.get();var offset = 0;HEAP16[arg + offset >> 1] = 2;return 0;
	          };case 13:case 14:case 13:case 14:
	          return 0;case 16:case 8:
	          return -ERRNO_CODES.EINVAL;case 9:
	          ___setErrNo(ERRNO_CODES.EINVAL);return -1;default:
	          {
	            return -ERRNO_CODES.EINVAL;
	          }}
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }var ___tm_current = STATICTOP;STATICTOP += 48;var ___tm_timezone = allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);var _tzname = STATICTOP;STATICTOP += 16;var _daylight = STATICTOP;STATICTOP += 16;var _timezone = STATICTOP;STATICTOP += 16;function _tzset() {
	    if (_tzset.called) return;_tzset.called = true;HEAP32[_timezone >> 2] = -new Date().getTimezoneOffset() * 60;var winter = new Date(2e3, 0, 1);var summer = new Date(2e3, 6, 1);HEAP32[_daylight >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());function extractZone(date) {
	      var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match ? match[1] : "GMT";
	    }var winterName = extractZone(winter);var summerName = extractZone(summer);var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
	      HEAP32[_tzname >> 2] = winterNamePtr;HEAP32[_tzname + 4 >> 2] = summerNamePtr;
	    } else {
	      HEAP32[_tzname >> 2] = summerNamePtr;HEAP32[_tzname + 4 >> 2] = winterNamePtr;
	    }
	  }function _localtime_r(time, tmPtr) {
	    _tzset();var date = new Date(HEAP32[time >> 2] * 1e3);HEAP32[tmPtr >> 2] = date.getSeconds();HEAP32[tmPtr + 4 >> 2] = date.getMinutes();HEAP32[tmPtr + 8 >> 2] = date.getHours();HEAP32[tmPtr + 12 >> 2] = date.getDate();HEAP32[tmPtr + 16 >> 2] = date.getMonth();HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;HEAP32[tmPtr + 24 >> 2] = date.getDay();var start = new Date(date.getFullYear(), 0, 1);var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;HEAP32[tmPtr + 28 >> 2] = yday;HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);var summerOffset = new Date(2e3, 6, 1).getTimezoneOffset();var winterOffset = start.getTimezoneOffset();var dst = date.getTimezoneOffset() == Math.min(winterOffset, summerOffset) | 0;HEAP32[tmPtr + 32 >> 2] = dst;var zonePtr = HEAP32[_tzname + (dst ? Runtime.QUANTUM_SIZE : 0) >> 2];HEAP32[tmPtr + 40 >> 2] = zonePtr;return tmPtr;
	  }function _localtime(time) {
	    return _localtime_r(time, ___tm_current);
	  }FS.staticInit();__ATINIT__.unshift(function () {
	    if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
	  });__ATMAIN__.push(function () {
	    FS.ignorePermissions = false;
	  });__ATEXIT__.push(function () {
	    FS.quit();
	  });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;__ATINIT__.unshift(function () {
	    TTY.init();
	  });__ATEXIT__.push(function () {
	    TTY.shutdown();
	  });if (ENVIRONMENT_IS_NODE) {
	    var fs = __webpack_require__(11);var NODEJS_PATH = __webpack_require__(12);NODEFS.staticInit();
	  }DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);STACK_MAX = STACK_BASE + TOTAL_STACK;DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;staticSealed = true;function invoke_iiii(index, a1, a2, a3) {
	    try {
	      return Module["dynCall_iiii"](index, a1, a2, a3);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_vi(index, a1) {
	    try {
	      Module["dynCall_vi"](index, a1);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_vii(index, a1, a2) {
	    try {
	      Module["dynCall_vii"](index, a1, a2);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_ii(index, a1) {
	    try {
	      return Module["dynCall_ii"](index, a1);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iiiii(index, a1, a2, a3, a4) {
	    try {
	      return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iii(index, a1, a2) {
	    try {
	      return Module["dynCall_iii"](index, a1, a2);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
	    try {
	      return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_iiii": invoke_iiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "___syscall221": ___syscall221, "___syscall195": ___syscall195, "___syscall5": ___syscall5, "__exit": __exit, "___lock": ___lock, "_localtime_r": _localtime_r, "_abort": _abort, "_pthread_cleanup_push": _pthread_cleanup_push, "___syscall6": ___syscall6, "_time": _time, "_tzset": _tzset, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___syscall54": ___syscall54, "___unlock": ___unlock, "_localtime": _localtime, "_exit": _exit, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "___setErrNo": ___setErrNo, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 }; // EMSCRIPTEN_START_ASM
	  var asm = function (global, env, buffer) {
	    "use asm";
	    var a = new global.Int8Array(buffer);var b = new global.Int16Array(buffer);var c = new global.Int32Array(buffer);var d = new global.Uint8Array(buffer);var e = new global.Uint16Array(buffer);var f = new global.Uint32Array(buffer);var g = new global.Float32Array(buffer);var h = new global.Float64Array(buffer);var i = env.STACKTOP | 0;var j = env.STACK_MAX | 0;var k = env.DYNAMICTOP_PTR | 0;var l = env.tempDoublePtr | 0;var m = env.ABORT | 0;var n = env.cttz_i8 | 0;var o = 0;var p = 0;var q = 0;var r = 0;var s = global.NaN,
	        t = global.Infinity;var u = 0,
	        v = 0,
	        w = 0,
	        x = 0,
	        y = 0.0,
	        z = 0,
	        A = 0,
	        B = 0,
	        C = 0.0;var D = 0;var E = global.Math.floor;var F = global.Math.abs;var G = global.Math.sqrt;var H = global.Math.pow;var I = global.Math.cos;var J = global.Math.sin;var K = global.Math.tan;var L = global.Math.acos;var M = global.Math.asin;var N = global.Math.atan;var O = global.Math.atan2;var P = global.Math.exp;var Q = global.Math.log;var R = global.Math.ceil;var S = global.Math.imul;var T = global.Math.min;var U = global.Math.max;var V = global.Math.clz32;var W = env.abort;var X = env.assert;var Y = env.enlargeMemory;var Z = env.getTotalMemory;var _ = env.abortOnCannotGrowMemory;var $ = env.invoke_iiii;var aa = env.invoke_vi;var ba = env.invoke_vii;var ca = env.invoke_ii;var da = env.invoke_iiiii;var ea = env.invoke_iii;var fa = env.invoke_iiiiii;var ga = env._pthread_cleanup_pop;var ha = env.___syscall221;var ia = env.___syscall195;var ja = env.___syscall5;var ka = env.__exit;var la = env.___lock;var ma = env._localtime_r;var na = env._abort;var oa = env._pthread_cleanup_push;var pa = env.___syscall6;var qa = env._time;var ra = env._tzset;var sa = env._emscripten_memcpy_big;var ta = env.___syscall54;var ua = env.___unlock;var va = env._localtime;var wa = env._exit;var xa = env.___syscall140;var ya = env.___syscall145;var za = env.___syscall146;var Aa = env.___setErrNo;var Ba = 0.0;
	    // EMSCRIPTEN_START_FUNCS
	    function Ja(a) {
	      a = a | 0;var b = 0;b = i;i = i + a | 0;i = i + 15 & -16;return b | 0;
	    }function Ka() {
	      return i | 0;
	    }function La(a) {
	      a = a | 0;i = a;
	    }function Ma(a, b) {
	      a = a | 0;b = b | 0;i = a;j = b;
	    }function Na(a, b) {
	      a = a | 0;b = b | 0;if (!o) {
	        o = a;p = b;
	      }
	    }function Oa(a) {
	      a = a | 0;D = a;
	    }function Pa() {
	      return D | 0;
	    }function Qa(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 352 | 0;f = j + 4 | 0;h = j;g = j + 80 | 0;c[h >> 2] = 0;if (!(Kc(b, 11463) | 0)) e = 0;else {
	        e = id(b) | 0;jd(g, b, 255) | 0;a[g + 256 >> 0] = 0;e = g + (((e | 0) > 256 ? 256 : e) + -1) | 0;if ((a[e >> 0] | 0) == 47) a[e >> 0] = 0;if (!(pd(g, f) | 0)) {
	          c[h >> 2] = c[f + 56 >> 2];e = 1;
	        } else e = 0;
	      }h = va(h | 0) | 0;c[d >> 2] = c[h >> 2];c[d + 4 >> 2] = c[h + 4 >> 2];c[d + 8 >> 2] = c[h + 8 >> 2];c[d + 12 >> 2] = c[h + 12 >> 2];c[d + 16 >> 2] = c[h + 16 >> 2];c[d + 20 >> 2] = c[h + 20 >> 2];i = j;return e | 0;
	    }function Ra(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0;n = i;i = i + 16 | 0;m = n + 8 | 0;j = n;k = Zc(a, 11475) | 0;l = (k | 0) == 0;if (!l) {
	        f = 0;while (1) {
	          h = wd(b, 1, d, k) | 0;if (h >>> 0 < d >>> 0 ? (ld(k) | 0) == 0 : 0) {
	            c[j >> 2] = a;sd(10720, j) | 0;g = -1;
	          } else g = 0;if (!h) break;f = vb(f, b, h) | 0;if (g) {
	            g = -1;break;
	          }
	        }if (!l) _c(k) | 0;
	      } else {
	        g = -1;f = 0;
	      }c[e >> 2] = f;c[m >> 2] = a;c[m + 4 >> 2] = f;sd(10741, m) | 0;i = n;return g | 0;
	    }function Sa(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0;I = i;i = i + 496 | 0;H = I + 88 | 0;G = I + 80 | 0;F = I + 72 | 0;E = I + 64 | 0;D = I + 56 | 0;C = I + 48 | 0;B = I + 32 | 0;w = I + 24 | 0;v = I + 16 | 0;u = I + 8 | 0;q = I;y = I + 224 | 0;z = I + 96 | 0;A = I + 92 | 0;zd(11038) | 0;zd(11111) | 0;if ((b | 0) == 1) {
	        zd(11181) | 0;H = 0;i = I;return H | 0;
	      }if ((b | 0) > 1) {
	        h = 1;e = 0;g = -1;l = 0;n = 0;k = 0;while (1) {
	          f = c[d + (h << 2) >> 2] | 0;a: do {
	            if ((a[f >> 0] | 0) == 45) {
	              j = h + 1 | 0;if ((j | 0) < (b | 0)) {
	                o = h;h = l;m = j;while (1) {
	                  l = h;b: while (1) {
	                    f = f + 1 | 0;j = a[f >> 0] | 0;h = j << 24 >> 24;switch (j << 24 >> 24) {case 0:
	                        {
	                          h = o;f = l;break a;
	                        }case 79:case 111:
	                        {
	                          e = 1;break;
	                        }default:
	                        {}}switch (j << 24 >> 24) {case 65:case 97:
	                        {
	                          e = 2;break;
	                        }default:
	                        {}}g = (j + -48 & 255) < 10 ? h + -48 | 0 : g;switch (j << 24 >> 24) {case 74:case 106:
	                        {
	                          h = 1;break;
	                        }default:
	                        h = l;}switch (j << 24 >> 24) {case 80:case 112:
	                        break b;default:
	                        l = h;}
	                  }k = c[d + (m << 2) >> 2] | 0;j = m + 1 | 0;if ((j | 0) < (b | 0)) {
	                    o = m;m = j;
	                  } else break;
	                }
	              } else {
	                m = h;h = l;
	              }l = h;c: while (1) {
	                while (1) {
	                  f = f + 1 | 0;j = a[f >> 0] | 0;h = j << 24 >> 24;switch (j << 24 >> 24) {case 0:
	                      {
	                        h = m;f = l;break a;
	                      }case 79:case 111:
	                      {
	                        e = 1;break;
	                      }default:
	                      {}}switch (j << 24 >> 24) {case 65:case 97:
	                      {
	                        e = 2;break;
	                      }default:
	                      {}}g = (j + -48 & 255) < 10 ? h + -48 | 0 : g;switch (j << 24 >> 24) {case 74:case 106:
	                      {
	                        l = 1;continue c;
	                      }default:
	                      {}}
	                }
	              }
	            } else {
	              n = (n | 0) == 0 ? h : n;f = l;
	            }
	          } while (0);h = h + 1 | 0;if ((h | 0) >= (b | 0)) {
	            t = g;j = f;l = n;r = k;break;
	          } else l = f;
	        }
	      } else {
	        e = 0;t = -1;j = 0;l = 0;r = 0;
	      }s = Ad(16384) | 0;if (!s) {
	        zd(11439) | 0;H = -104;i = I;return H | 0;
	      }d: do {
	        if (l) {
	          jd(y, c[d + (l << 2) >> 2] | 0, 255) | 0;a[y + 256 >> 0] = 0;h = id(y) | 0;if ((h | 0) > 0) {
	            f = 0;g = 0;do {
	              f = (a[y + g >> 0] | 0) == 46 ? 1 : f;g = g + 1 | 0;
	            } while ((g | 0) != (h | 0));if (!f) x = 30;
	          } else x = 30;if ((x | 0) == 30) {
	            o = y + (id(y) | 0) | 0;a[o >> 0] = a[10783] | 0;a[o + 1 >> 0] = a[10784] | 0;a[o + 2 >> 0] = a[10785] | 0;a[o + 3 >> 0] = a[10786] | 0;a[o + 4 >> 0] = a[10787] | 0;
	          }e: do {
	            switch (e | 0) {case 2:
	                {
	                  e = Zc(y, 11475) | 0;if (!e) p = 1;else {
	                    _c(e) | 0;p = 2;
	                  }break;
	                }case 0:
	                {
	                  e = Zc(y, 11475) | 0;if (e) {
	                    _c(e) | 0;f: while (1) {
	                      c[q >> 2] = y;sd(10788, q) | 0;c[u >> 2] = z;if ((ud(10845, u) | 0) != 1) {
	                        x = 37;break;
	                      }e = a[z >> 0] | 0;e = (e + -97 & 255) < 26 ? (e & 255) + 224 & 255 : e;switch (e << 24 >> 24) {case 78:
	                          {
	                            x = 79;break d;
	                          }case 89:case 65:
	                          {
	                            x = 39;break f;
	                          }default:
	                          {}}
	                    }if ((x | 0) == 37) wa(1);else if ((x | 0) == 39) {
	                      p = e << 24 >> 24 == 65 ? 2 : 0;break e;
	                    }
	                  } else p = 0;break;
	                }default:
	                p = e;}
	          } while (0);q = Wa(y, (p | 0) == 2 ? 2 : 0) | 0;if (!q) {
	            c[v >> 2] = y;sd(10849, v) | 0;e = 0;
	          } else {
	            c[w >> 2] = y;sd(10867, w) | 0;e = 1;
	          }p = (r | 0) == 0;n = (j | 0) == 0;o = t | 0 ? 8 : 0;g: do {
	            if (e) {
	              g = 0;e = l;do {
	                h: do {
	                  e = e + 1 | 0;if ((e | 0) >= (b | 0)) break g;m = c[d + (e << 2) >> 2] | 0;switch (a[m >> 0] | 0) {case 47:case 45:
	                      break;default:
	                      break h;}
	                } while ((id(m) | 0) == 2);c[A >> 2] = 0;f = z;h = f + 36 | 0;do {
	                  c[f >> 2] = 0;f = f + 4 | 0;
	                } while ((f | 0) < (h | 0));Qa(m, z, 0) | 0;if (!p) Ra(m, s, 16384, A) | 0;f = Zc(m, 11475) | 0;if (!f) l = 0;else {
	                  nd(f, 0, 2) | 0;l = xd(f) | 0;c[B >> 2] = m;w = B + 8 | 0;c[w >> 2] = l;c[w + 4 >> 2] = ((l | 0) < 0) << 31 >> 31;sd(10758, B) | 0;_c(f) | 0;l = l >>> 31;
	                }f = m;i: while (1) {
	                  j = a[f >> 0] | 0;switch (j << 24 >> 24) {case 47:case 92:
	                      break;default:
	                      break i;}f = f + 1 | 0;
	                }if (!n) {
	                  h = 0;k = f;j: while (1) {
	                    switch (j << 24 >> 24) {case 0:
	                        break j;case 47:case 92:
	                        {
	                          h = k;break;
	                        }default:
	                        {}}j = k + 1 | 0;k = j;j = a[j >> 0] | 0;
	                  }f = (h | 0) == 0 ? f : h + 1 | 0;
	                }f = ab(q, f, z, 0, 0, 0, 0, 0, o, t, 0, -15, 8, 0, r, c[A >> 2] | 0, l) | 0;k: do {
	                  if (!f) {
	                    g = Zc(m, 11475) | 0;if (!g) {
	                      c[D >> 2] = m;sd(10912, D) | 0;g = 0;f = -1;break;
	                    }while (1) {
	                      f = wd(s, 1, 16384, g) | 0;if ((f | 0) < 16384) {
	                        if (!(ld(g) | 0)) {
	                          c[E >> 2] = m;sd(10720, E) | 0;h = -1;
	                        } else h = 0;if ((f | 0) <= 0) {
	                          f = h;x = 71;break k;
	                        }
	                      }f = bb(q, s, f) | 0;if ((f | 0) < 0) break;if (f | 0) {
	                        x = 71;break k;
	                      }
	                    }c[F >> 2] = m;sd(10945, F) | 0;x = 71;
	                  } else {
	                    c[C >> 2] = m;sd(10880, C) | 0;x = 71;
	                  }
	                } while (0);if ((x | 0) == 71) {
	                  x = 0;if (!g) g = 0;else _c(g) | 0;if ((f | 0) >= 0) {
	                    f = $a(q) | 0;if (!f) f = 0;else {
	                      c[G >> 2] = m;sd(10981, G) | 0;
	                    }
	                  } else f = -1;
	                }
	              } while ((f | 0) == 0);
	            }
	          } while (0);if (fb(q, 0) | 0) {
	            c[H >> 2] = y;sd(11017, H) | 0;
	          }
	        } else x = 79;
	      } while (0);if ((x | 0) == 79) zd(11181) | 0;Bd(s);H = 0;i = I;return H | 0;
	    }function Ta(b) {
	      b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0,
	          P = 0,
	          Q = 0,
	          R = 0,
	          S = 0,
	          T = 0;S = i;i = i + 48 | 0;L = S + 40 | 0;s = S + 32 | 0;J = S + 24 | 0;K = S + 16 | 0;A = S + 8 | 0;E = S;R = b + 44 | 0;q = c[R >> 2] | 0;a: do {
	        if ((hb(b, q, 0, 0, 2) | 0) == 0 ? (h = ib(b, q) | 0, j = D, l = j >>> 0 < 0 | (j | 0) == 0 & h >>> 0 < 65535, k = l ? h : 65535, l = l ? j : 0, m = Ad(1028) | 0, (m | 0) != 0) : 0) {
	          y = b + 4 | 0;z = b + 28 | 0;b: do {
	            if (l >>> 0 > 0 | (l | 0) == 0 & k >>> 0 > 4) {
	              n = 4;p = 0;c: while (1) {
	                T = Hd(n | 0, p | 0, 1024, 0) | 0;f = D;g = f >>> 0 > l >>> 0 | (f | 0) == (l | 0) & T >>> 0 > k >>> 0;n = g ? k : T;p = g ? l : f;f = Gd(h | 0, j | 0, n | 0, p | 0) | 0;g = D;T = p >>> 0 < 0 | (p | 0) == 0 & n >>> 0 < 1028;e = T ? n : 1028;if (hb(b, q, f, g, 0) | 0) break b;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, m, e) | 0) != (e | 0)) break b;d: do {
	                  if ((e | 0) > 3) {
	                    e = e + -4 | 0;while (1) {
	                      T = m + e | 0;if ((((a[T >> 0] | 0) == 80 ? (a[T + 1 >> 0] | 0) == 75 : 0) ? (a[T + 2 >> 0] | 0) == 6 : 0) ? (a[T + 3 >> 0] | 0) == 7 : 0) break;if ((e | 0) > 0) e = e + -1 | 0;else break d;
	                    }e = Hd(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, f | 0, g | 0) | 0;f = D;if (!((e | 0) == 0 & (f | 0) == 0)) break c;
	                  }
	                } while (0);if (!(p >>> 0 < l >>> 0 | (p | 0) == (l | 0) & n >>> 0 < k >>> 0)) break b;
	              }Bd(m);if (hb(b, q, e, f, 0) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) e = 0;else {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) f = e;else {
	                  O = 70;break a;
	                }
	              } else f = d[L >> 0] | 0;g = f << 8 | e;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) e = f;else {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;f = (e << 16) + g | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;if ((f | 0) != (0 - (e << 24) | 0)) {
	                O = 70;break a;
	              }if (Ua(b, q, s) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) e = 0;else {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) f = e;else {
	                  O = 70;break a;
	                }
	              } else f = d[L >> 0] | 0;g = f << 8 | e;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) e = f;else {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;f = (e << 16) + g | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;if ((f + (e << 24) | 0) != 1) {
	                O = 70;break a;
	              }l = s;k = c[l >> 2] | 0;l = c[l + 4 >> 2] | 0;if (hb(b, q, k, l, 0) | 0) {
	                O = 70;break a;
	              }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) f = 0;else {
	                  O = 70;break a;
	                }
	              } else f = d[L >> 0] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0)) e = f;else {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;f = e << 8 | f;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;f = (e << 16) + f | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, q, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, q) | 0) {
	                  O = 70;break a;
	                }
	              } else e = d[L >> 0] | 0;if ((f + (e << 24) | 0) != 101075792) {
	                O = 70;break a;
	              }if ((k | 0) == 0 & (l | 0) == 0) {
	                O = 72;break a;
	              }e = ((hb(b, c[R >> 2] | 0, k, l, 0) | 0) != 0) << 31 >> 31;f = c[R >> 2] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) != 0 : 0) e = -1;else O = 90;do {
	                if ((O | 0) == 90) {
	                  if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) {
	                    e = -1;break;
	                  }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) {
	                    e = -1;break;
	                  }if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) {
	                    e = -1;break;
	                  }
	                }
	              } while (0);f = (Ua(b, c[R >> 2] | 0, s) | 0) == 0;e = f ? e : -1;f = c[R >> 2] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) != 0 : 0) e = -1;else O = 103;do {
	                if ((O | 0) == 103) if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) {
	                  e = -1;break;
	                }
	              } while (0);f = c[R >> 2] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) != 0 : 0) e = -1;else O = 110;do {
	                if ((O | 0) == 110) if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, f, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, f) | 0) {
	                  e = -1;break;
	                }
	              } while (0);j = c[R >> 2] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, j) | 0)) {
	                  f = 0;O = 117;
	                } else {
	                  f = -1;j = 0;
	                }
	              } else {
	                f = d[L >> 0] | 0;O = 117;
	              }do {
	                if ((O | 0) == 117) {
	                  if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, j, L, 1) | 0) != 1) {
	                    if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, j) | 0)) g = f;else {
	                      f = -1;j = 0;break;
	                    }
	                  } else g = d[L >> 0] | 0;f = g << 8 | f;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, j, L, 1) | 0) != 1) {
	                    if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, j) | 0) {
	                      f = -1;j = 0;break;
	                    }
	                  } else g = d[L >> 0] | 0;h = (g << 16) + f | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, j, L, 1) | 0) != 1) {
	                    if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, j) | 0) {
	                      f = -1;j = 0;break;
	                    }
	                  } else g = d[L >> 0] | 0;f = e;j = h + (g << 24) | 0;
	                }
	              } while (0);h = c[R >> 2] | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, h, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, h) | 0)) {
	                  g = 0;O = 130;
	                } else {
	                  f = -1;e = 0;
	                }
	              } else {
	                g = d[L >> 0] | 0;O = 130;
	              }do {
	                if ((O | 0) == 130) {
	                  if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, h, L, 1) | 0) != 1) {
	                    if (!(Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, h) | 0)) e = g;else {
	                      f = -1;e = 0;break;
	                    }
	                  } else e = d[L >> 0] | 0;g = e << 8 | g;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, h, L, 1) | 0) != 1) {
	                    if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, h) | 0) {
	                      f = -1;e = 0;break;
	                    }
	                  } else e = d[L >> 0] | 0;g = (e << 16) + g | 0;if ((Ga[c[y >> 2] & 3](c[z >> 2] | 0, h, L, 1) | 0) != 1) {
	                    if (Ha[c[b + 24 >> 2] & 7](c[z >> 2] | 0, h) | 0) {
	                      f = -1;e = 0;break;
	                    }
	                  } else e = d[L >> 0] | 0;e = g + (e << 24) | 0;
	                }
	              } while (0);C = Ua(b, c[R >> 2] | 0, A) | 0;C = (Ua(b, c[R >> 2] | 0, E) | 0 | C | 0) == 0;Q = E;P = c[Q >> 2] | 0;Q = c[Q + 4 >> 2] | 0;o = A;C = (e | j | 0) != 0 | ((P | 0) != (c[o >> 2] | 0) ? 1 : (Q | 0) != (c[o + 4 >> 2] | 0)) ? -103 : C ? f : -1;o = Ua(b, c[R >> 2] | 0, J) | 0;o = (Ua(b, c[R >> 2] | 0, K) | 0 | o | 0) == 0;I = K;r = J;B = 0;C = o ? C : -1;o = c[r >> 2] | 0;r = c[r + 4 >> 2] | 0;H = c[I >> 2] | 0;I = c[I + 4 >> 2] | 0;F = l;G = k;O = 214;break a;
	            }
	          } while (0);Bd(m);O = 70;
	        } else O = 70;
	      } while (0);if ((O | 0) == 70) O = 72;do {
	        if ((O | 0) == 72) {
	          h = c[R >> 2] | 0;if ((hb(b, h, 0, 0, 2) | 0) == 0 ? (t = ib(b, h) | 0, u = D, w = u >>> 0 < 0 | (u | 0) == 0 & t >>> 0 < 65535, v = w ? t : 65535, w = w ? u : 0, x = Ad(1028) | 0, (x | 0) != 0) : 0) {
	            j = b + 4 | 0;k = b + 28 | 0;e: do {
	              if (w >>> 0 > 0 | (w | 0) == 0 & v >>> 0 > 4) {
	                l = 4;m = 0;while (1) {
	                  T = Hd(l | 0, m | 0, 1024, 0) | 0;f = D;g = f >>> 0 > w >>> 0 | (f | 0) == (w | 0) & T >>> 0 > v >>> 0;l = g ? v : T;m = g ? w : f;f = Gd(t | 0, u | 0, l | 0, m | 0) | 0;g = D;T = m >>> 0 < 0 | (m | 0) == 0 & l >>> 0 < 1028;e = T ? l : 1028;if (hb(b, h, f, g, 0) | 0) {
	                    e = 0;f = 0;break e;
	                  }if ((Ga[c[j >> 2] & 3](c[k >> 2] | 0, h, x, e) | 0) != (e | 0)) {
	                    e = 0;f = 0;break e;
	                  }f: do {
	                    if ((e | 0) > 3) {
	                      e = e + -4 | 0;while (1) {
	                        T = x + e | 0;if ((((a[T >> 0] | 0) == 80 ? (a[T + 1 >> 0] | 0) == 75 : 0) ? (a[T + 2 >> 0] | 0) == 5 : 0) ? (a[T + 3 >> 0] | 0) == 6 : 0) break;if ((e | 0) > 0) e = e + -1 | 0;else break f;
	                      }e = Hd(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, f | 0, g | 0) | 0;f = D;if (!((e | 0) == 0 & (f | 0) == 0)) break e;
	                    }
	                  } while (0);if (!(m >>> 0 < w >>> 0 | (m | 0) == (w | 0) & l >>> 0 < v >>> 0)) {
	                    e = 0;f = 0;break;
	                  }
	                }
	              } else {
	                e = 0;f = 0;
	              }
	            } while (0);Bd(x);
	          } else {
	            e = 0;f = 0;
	          }g = ((hb(b, c[R >> 2] | 0, e, f, 0) | 0) != 0) << 31 >> 31;h = c[R >> 2] | 0;s = b + 4 | 0;t = b + 28 | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, h, L, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, h) | 0) != 0 : 0) g = -1;else O = 144;do {
	            if ((O | 0) == 144) {
	              if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, h, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, h) | 0) {
	                g = -1;break;
	              }if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, h, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, h) | 0) {
	                g = -1;break;
	              }if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, h, L, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, h) | 0) {
	                g = -1;break;
	              }
	            }
	          } while (0);j = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) {
	              h = 0;O = 157;
	            } else {
	              g = -1;h = 0;
	            }
	          } else {
	            h = d[L >> 0] | 0;O = 157;
	          }do {
	            if ((O | 0) == 157) if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	              if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) h = h * 257 | 0;else {
	                g = -1;h = 0;break;
	              }
	            } else h = d[L >> 0] << 8 | h;
	          } while (0);k = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, k, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, k) | 0)) {
	              j = 0;O = 164;
	            } else {
	              g = -1;j = 0;
	            }
	          } else {
	            j = d[L >> 0] | 0;O = 164;
	          }do {
	            if ((O | 0) == 164) if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, k, L, 1) | 0) != 1) {
	              if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, k) | 0)) j = j * 257 | 0;else {
	                g = -1;j = 0;break;
	              }
	            } else j = d[L >> 0] << 8 | j;
	          } while (0);l = A;c[l >> 2] = 0;c[l + 4 >> 2] = 0;l = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, l, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, l) | 0)) {
	              k = 0;O = 171;
	            } else {
	              g = -1;k = 0;n = 0;
	            }
	          } else {
	            k = d[L >> 0] | 0;O = 171;
	          }do {
	            if ((O | 0) == 171) {
	              if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, l, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, l) | 0)) k = k * 257 | 0;else {
	                  g = -1;k = 0;n = 0;break;
	                }
	              } else k = d[L >> 0] << 8 | k;n = A;c[n >> 2] = k;c[n + 4 >> 2] = 0;n = 0;
	            }
	          } while (0);m = E;c[m >> 2] = 0;c[m + 4 >> 2] = 0;m = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, m, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, m) | 0)) {
	              l = 0;O = 178;
	            } else {
	              g = -1;p = 0;q = 0;
	            }
	          } else {
	            l = d[L >> 0] | 0;O = 178;
	          }do {
	            if ((O | 0) == 178) {
	              if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, m, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, m) | 0)) l = l * 257 | 0;else {
	                  g = -1;p = 0;q = 0;break;
	                }
	              } else l = d[L >> 0] << 8 | l;p = E;c[p >> 2] = l;c[p + 4 >> 2] = 0;p = l;q = 0;
	            }
	          } while (0);k = (j | h | 0) != 0 | ((p | 0) != (k | 0) | (q | 0) != (n | 0)) ? -103 : g;j = J;c[j >> 2] = 0;c[j + 4 >> 2] = 0;j = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) {
	              h = 0;O = 185;
	            } else {
	              k = -1;m = 0;n = 0;
	            }
	          } else {
	            h = d[L >> 0] | 0;O = 185;
	          }do {
	            if ((O | 0) == 185) {
	              if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) g = h;else {
	                  k = -1;m = 0;n = 0;break;
	                }
	              } else g = d[L >> 0] | 0;h = g << 8 | h;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0) {
	                  k = -1;m = 0;n = 0;break;
	                }
	              } else g = d[L >> 0] | 0;h = (g << 16) + h | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0) {
	                  k = -1;m = 0;n = 0;break;
	                }
	              } else g = d[L >> 0] | 0;m = h + (g << 24) | 0;n = J;c[n >> 2] = m;c[n + 4 >> 2] = 0;n = 0;
	            }
	          } while (0);j = K;c[j >> 2] = 0;c[j + 4 >> 2] = 0;j = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) {
	              h = 0;O = 198;
	            } else {
	              h = -1;k = 0;l = 0;
	            }
	          } else {
	            h = d[L >> 0] | 0;O = 198;
	          }do {
	            if ((O | 0) == 198) {
	              if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) g = h;else {
	                  h = -1;k = 0;l = 0;break;
	                }
	              } else g = d[L >> 0] | 0;h = g << 8 | h;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0) {
	                  h = -1;k = 0;l = 0;break;
	                }
	              } else g = d[L >> 0] | 0;h = (g << 16) + h | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	                if (Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0) {
	                  h = -1;k = 0;l = 0;break;
	                }
	              } else g = d[L >> 0] | 0;l = h + (g << 24) | 0;h = K;c[h >> 2] = l;c[h + 4 >> 2] = 0;h = k;k = l;l = 0;
	            }
	          } while (0);j = c[R >> 2] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) g = 0;else break;
	          } else g = d[L >> 0] | 0;if ((Ga[c[s >> 2] & 3](c[t >> 2] | 0, j, L, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[t >> 2] | 0, j) | 0)) {
	              B = g * 257 | 0;C = h;o = m;r = n;H = k;I = l;F = f;G = e;P = p;Q = q;O = 214;break;
	            } else break;
	          } else {
	            B = d[L >> 0] << 8 | g;C = h;o = m;r = n;H = k;I = l;F = f;G = e;P = p;Q = q;O = 214;break;
	          }
	        }
	      } while (0);if ((O | 0) == 214 ? (T = Hd(o | 0, r | 0, H | 0, I | 0) | 0, O = D, (C | 0) == 0 & (F >>> 0 > O >>> 0 | (F | 0) == (O | 0) & G >>> 0 >= T >>> 0 | (C | 0) != 0)) : 0) {
	        if (B | 0 ? (M = Ad(B + 1 | 0) | 0, N = b + 65792 | 0, c[N >> 2] = M, M | 0) : 0) {
	          T = Ga[c[b + 4 >> 2] & 3](c[b + 28 >> 2] | 0, c[R >> 2] | 0, M, B) | 0;a[(c[N >> 2] | 0) + T >> 0] = 0;
	        }y = Gd(G | 0, F | 0, H | 0, I | 0) | 0;y = Gd(y | 0, D | 0, o | 0, r | 0) | 0;z = D;A = b + 65776 | 0;c[A >> 2] = y;c[A + 4 >> 2] = z;A = Ad(4080) | 0;f = c[R >> 2] | 0;w = Hd(H | 0, I | 0, y | 0, z | 0) | 0;x = D;f = (hb(b, f, w, x, 0) | 0) == 0;e = (f ^ 1) << 31 >> 31;g: do {
	          if (((o | 0) != 0 | (r | 0) != 0) & f) {
	            s = b + 4 | 0;t = b + 28 | 0;u = b + 48 | 0;v = b + 52 | 0;h: while (1) {
	              q = r >>> 0 < 0 | (r | 0) == 0 & o >>> 0 < 4080;p = q ? o : 4080;q = q ? r : 0;if (!((Ga[c[s >> 2] & 3](c[t >> 2] | 0, c[R >> 2] | 0, A, p) | 0) == (p | 0) & 0 == (q | 0) & f)) {
	                e = -1;break g;
	              }e = c[v >> 2] | 0;if (!e) {
	                e = Ad(4096) | 0;if (!e) {
	                  O = 225;break;
	                }c[e >> 2] = 0;c[e + 8 >> 2] = 0;c[e + 4 >> 2] = 4080;c[v >> 2] = e;c[u >> 2] = e;
	              }if (p | 0) {
	                m = A;f = e;n = p;g = c[e + 4 >> 2] | 0;while (1) {
	                  if (!g) {
	                    e = Ad(4096) | 0;if (!e) {
	                      O = 231;break h;
	                    }c[e >> 2] = 0;c[e + 8 >> 2] = 0;c[e + 4 >> 2] = 4080;c[f >> 2] = e;c[v >> 2] = e;g = 4080;
	                  } else e = f;l = e + 4 | 0;k = g >>> 0 < n >>> 0 ? g : n;j = e + 8 | 0;f = c[j >> 2] | 0;h = e + 16 + f | 0;if (k) {
	                    f = 0;do {
	                      a[h + f >> 0] = a[m + f >> 0] | 0;f = f + 1 | 0;
	                    } while (f >>> 0 < k >>> 0);f = c[j >> 2] | 0;g = c[l >> 2] | 0;
	                  }c[j >> 2] = f + k;g = g - k | 0;c[l >> 2] = g;n = n - k | 0;if (!n) break;else {
	                    m = m + k | 0;f = e;
	                  }
	                }
	              }o = Gd(o | 0, r | 0, p | 0, q | 0) | 0;r = D;if ((o | 0) == 0 & (r | 0) == 0) {
	                e = 0;break g;
	              } else f = 1;
	            }if ((O | 0) == 225) {
	              c[v >> 2] = 0;c[u >> 2] = 0;e = -104;break;
	            } else if ((O | 0) == 231) {
	              c[f >> 2] = 0;e = -104;break;
	            }
	          }
	        } while (0);if (A | 0) Bd(A);T = b + 65768 | 0;c[T >> 2] = y;c[T + 4 >> 2] = z;T = b + 65784 | 0;c[T >> 2] = P;c[T + 4 >> 2] = Q;T = (hb(b, c[R >> 2] | 0, w, x, 0) | 0) == 0;T = T ? e : -1;i = S;return T | 0;
	      }Ha[c[b + 20 >> 2] & 7](c[b + 28 >> 2] | 0, c[R >> 2] | 0) | 0;T = -1;i = S;return T | 0;
	    }function Ua(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;r = i;i = i + 16 | 0;o = r;p = b + 4 | 0;q = b + 28 | 0;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	          g = 0;j = 0;l = 0;k = 4;
	        } else {
	          g = -1;h = 0;j = 0;
	        }
	      } else {
	        j = a[o >> 0] | 0;g = j & 255;j = j & 255;l = 0;k = 4;
	      }do {
	        if ((k | 0) == 4) {
	          if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              m = g;h = 0;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;m = g & 255;g = g & 255;h = 0;
	          }k = Kd(g | 0, h | 0, 8) | 0;k = k | j;h = D | l;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              n = m;j = m;g = ((m | 0) < 0) << 31 >> 31;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            j = a[o >> 0] | 0;n = j & 255;j = j & 255;g = 0;
	          }j = Kd(j | 0, g | 0, 16) | 0;h = Hd(j | 0, D | 0, k | 0, h | 0) | 0;j = D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              l = n;k = n;g = ((n | 0) < 0) << 31 >> 31;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            k = a[o >> 0] | 0;l = k & 255;k = k & 255;g = 0;
	          }n = Kd(k | 0, g | 0, 24) | 0;h = Hd(h | 0, j | 0, n | 0, D | 0) | 0;j = D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              m = l;g = l;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;m = g & 255;g = g & 255;
	          }j = Hd(h | 0, j | 0, 0, g | 0) | 0;k = D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              n = m;h = 0;g = m;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;n = g & 255;h = 0;g = g & 255;
	          }l = Kd(g | 0, h | 0, 40) | 0;k = Hd(j | 0, k | 0, l | 0, D | 0) | 0;l = D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) {
	              g = n;h = n;j = 0;
	            } else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            h = a[o >> 0] | 0;g = h & 255;h = h & 255;j = 0;
	          }j = Kd(h | 0, j | 0, 48) | 0;j = Hd(k | 0, l | 0, j | 0, D | 0) | 0;k = D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 7](c[q >> 2] | 0, e) | 0)) h = 0;else {
	              g = -1;h = 0;j = 0;break;
	            }
	          } else {
	            g = d[o >> 0] | 0;h = 0;
	          }h = Kd(g | 0, h | 0, 56) | 0;h = Hd(j | 0, k | 0, h | 0, D | 0) | 0;g = 0;j = D;
	        }
	      } while (0);c[f >> 2] = h;c[f + 4 >> 2] = j;i = r;return g | 0;
	    }function Va(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 65808 | 0;h = j;c[h + 40 >> 2] = 0;c[h + 36 >> 2] = 0;if (!e) nb(h);else {
	        g = h;f = g + 44 | 0;do {
	          c[g >> 2] = c[e >> 2];g = g + 4 | 0;e = e + 4 | 0;
	        } while ((g | 0) < (f | 0));
	      }e = gb(h, a, (b | 0) == 0 ? 11 : 7) | 0;f = h + 44 | 0;c[f >> 2] = e;if (!e) {
	        h = 0;i = j;return h | 0;
	      }if ((b | 0) == 1) {
	        hb(h, e, 0, 0, 2) | 0;e = c[f >> 2] | 0;
	      }g = ib(h, e) | 0;a = h + 65768 | 0;c[a >> 2] = g;c[a + 4 >> 2] = D;c[h + 56 >> 2] = 0;c[h + 120 >> 2] = 0;a = h + 65776 | 0;c[h + 52 >> 2] = 0;c[h + 48 >> 2] = 0;c[a >> 2] = 0;c[a + 4 >> 2] = 0;c[a + 8 >> 2] = 0;c[a + 12 >> 2] = 0;a = Ad(65800) | 0;if (!a) {
	        Ha[c[h + 20 >> 2] & 7](c[h + 28 >> 2] | 0, c[f >> 2] | 0) | 0;h = 0;i = j;return h | 0;
	      }f = h + 65792 | 0;c[f >> 2] = 0;if ((b | 0) == 2) e = Ta(h) | 0;else e = 0;if (d | 0) c[d >> 2] = c[f >> 2];if (!e) {
	        Sd(a | 0, h | 0, 65800) | 0;h = a;i = j;return h | 0;
	      }e = c[f >> 2] | 0;if (e | 0) Bd(e);Bd(a);h = 0;i = j;return h | 0;
	    }function Wa(a, b) {
	      a = a | 0;b = b | 0;return Va(a, b, 0, 0) | 0;
	    }function Xa(d, e, f, g) {
	      d = d | 0;e = e | 0;f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0;s = i;i = i + 16 | 0;p = s;l = id(e) | 0;q = d + 44 | 0;o = c[q >> 2] | 0;a[p >> 0] = 80;r = p + 1 | 0;a[r >> 0] = 75;k = p + 2 | 0;a[k >> 0] = 3;j = p + 3 | 0;a[j >> 0] = 4;m = d + 8 | 0;n = d + 28 | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, o, p, 4) | 0) != 4) {
	        r = -1;i = s;return r | 0;
	      }o = d + 65712 | 0;h = c[q >> 2] | 0;if (!(c[o >> 2] | 0)) {
	        a[p >> 0] = 20;a[r >> 0] = 0;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2) << 31 >> 31;
	      } else {
	        a[p >> 0] = 45;a[r >> 0] = 0;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2) << 31 >> 31;
	      }if (h | 0) {
	        r = -1;i = s;return r | 0;
	      }h = c[q >> 2] | 0;t = c[d + 152 >> 2] | 0;a[p >> 0] = t;a[r >> 0] = t >>> 8;if (t >>> 0 >= 65536) b[p >> 1] = -1;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2) {
	        t = -1;i = s;return t | 0;
	      }h = c[q >> 2] | 0;t = c[d + 156 >> 2] | 0;a[p >> 0] = t;a[r >> 0] = t >>> 8;if (t >>> 0 >= 65536) b[p >> 1] = -1;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2) {
	        t = -1;i = s;return t | 0;
	      }t = c[q >> 2] | 0;h = c[d + 65700 >> 2] | 0;a[p >> 0] = h;a[r >> 0] = h >>> 8;a[k >> 0] = h >>> 16;a[j >> 0] = h >>> 24;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 4) | 0) != 4) {
	        t = -1;i = s;return t | 0;
	      }t = c[q >> 2] | 0;c[p >> 2] = 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 4) | 0) != 4) {
	        t = -1;i = s;return t | 0;
	      }h = c[q >> 2] | 0;if (!(c[o >> 2] | 0)) {
	        c[p >> 2] = 0;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;
	      } else {
	        c[p >> 2] = -1;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;
	      }if (h | 0) {
	        t = -1;i = s;return t | 0;
	      }h = c[q >> 2] | 0;if (!(c[o >> 2] | 0)) {
	        c[p >> 2] = 0;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;
	      } else {
	        c[p >> 2] = -1;h = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;
	      }if (h | 0) {
	        t = -1;i = s;return t | 0;
	      }h = c[q >> 2] | 0;a[p >> 0] = l;a[r >> 0] = l >>> 8;if (l >>> 0 >= 65536) b[p >> 1] = -1;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2) {
	        t = -1;i = s;return t | 0;
	      }t = (c[o >> 2] | 0) == 0 ? f : f + 20 | 0;h = c[q >> 2] | 0;a[p >> 0] = t;a[r >> 0] = t >>> 8;if (t >>> 0 >= 65536) b[p >> 1] = -1;t = (Ga[c[m >> 2] & 3](c[n >> 2] | 0, h, p, 2) | 0) != 2;h = t << 31 >> 31;if ((l | 0) != 0 & (t ^ 1)) {
	        t = (Ga[c[m >> 2] & 3](c[n >> 2] | 0, c[q >> 2] | 0, e, l) | 0) == (l | 0);h = t ? h : -1;
	      }h = (h | 0) == 0;if ((f | 0) != 0 & h) {
	        if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, c[q >> 2] | 0, g, f) | 0) != (f | 0)) {
	          t = -1;i = s;return t | 0;
	        }
	      } else if (!h) {
	        t = -1;i = s;return t | 0;
	      }if (!(c[o >> 2] | 0)) {
	        t = 0;i = s;return t | 0;
	      }g = ib(d, c[q >> 2] | 0) | 0;t = d + 65720 | 0;c[t >> 2] = g;c[t + 4 >> 2] = D;t = c[q >> 2] | 0;a[p >> 0] = 1;a[r >> 0] = 0;Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 2) | 0;t = c[q >> 2] | 0;a[p >> 0] = 16;a[r >> 0] = 0;Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 2) | 0;t = c[q >> 2] | 0;r = p;c[r >> 2] = 0;c[r + 4 >> 2] = 0;Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 8) | 0;t = c[q >> 2] | 0;r = p;c[r >> 2] = 0;c[r + 4 >> 2] = 0;t = ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, t, p, 8) | 0) != 8) << 31 >> 31;i = s;return t | 0;
	    }function Ya(b, e, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {
	      b = b | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;j = j | 0;k = k | 0;l = l | 0;m = m | 0;n = n | 0;o = o | 0;p = p | 0;q = q | 0;r = r | 0;s = s | 0;t = t | 0;u = u | 0;v = v | 0;w = w | 0;var x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0;O = i;i = i + 32 | 0;L = O + 12 | 0;M = O;if (!b) {
	        b = -102;i = O;return b | 0;
	      }switch (m | 0) {case 0:case 8:
	          break;default:
	          {
	            b = -102;i = O;return b | 0;
	          }}N = b + 56 | 0;if ((c[N >> 2] | 0) == 1 ? (x = Za(b, 0, 0, 0) | 0, x | 0) : 0) {
	        b = x;i = O;return b | 0;
	      }H = (e | 0) == 0 ? 11463 : e;if (!l) I = 0;else I = id(l) | 0;J = id(H) | 0;C = (f | 0) == 0;do {
	        if (C) c[b + 65700 >> 2] = 0;else {
	          e = c[f + 24 >> 2] | 0;if (e | 0) {
	            c[b + 65700 >> 2] = e;break;
	          }e = c[f + 20 >> 2] | 0;if (e >>> 0 > 1979) e = e + -1980 | 0;else e = e >>> 0 > 79 ? e + -80 | 0 : e;c[b + 65700 >> 2] = (c[f + 4 >> 2] << 5) + ((c[f >> 2] | 0) >>> 1) + (c[f + 8 >> 2] << 11) | (c[f + 12 >> 2] | 0) + 32 + (e << 9) + (c[f + 16 >> 2] << 5) << 16;
	        }
	      } while (0);F = b + 64 | 0;x = b + 152 | 0;e = (n | 1 | 0) == 9 ? v | 2 : v;c[x >> 2] = e;switch (n | 0) {case 2:
	          {
	            e = e | 4;c[x >> 2] = e;break;
	          }case 1:
	          {
	            e = e | 6;c[x >> 2] = e;break;
	          }default:
	          {}}G = (s | 0) != 0;if (G) c[x >> 2] = e | 1;c[b + 65704 >> 2] = 0;A = b + 156 | 0;c[A >> 2] = m;E = b + 65708 | 0;c[E >> 2] = 0;B = b + 120 | 0;c[B >> 2] = 0;c[b + 124 >> 2] = 0;z = b + 160 | 0;c[z >> 2] = o;K = b + 44 | 0;v = ib(b, c[K >> 2] | 0) | 0;m = D;o = b + 128 | 0;c[o >> 2] = v;c[o + 4 >> 2] = m;o = k + 46 + I + J | 0;c[b + 144 >> 2] = o;c[b + 148 >> 2] = 32;o = Ad(o + 32 | 0) | 0;y = b + 136 | 0;c[y >> 2] = o;c[b + 140 >> 2] = k;a[o >> 0] = 80;a[o + 1 >> 0] = 75;a[o + 2 >> 0] = 1;a[o + 3 >> 0] = 2;e = o + 4 | 0;a[e >> 0] = u;a[o + 5 >> 0] = u >>> 8;if (u >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }a[o + 6 >> 0] = 20;a[o + 7 >> 0] = 0;e = o + 8 | 0;u = c[x >> 2] | 0;a[e >> 0] = u;a[o + 9 >> 0] = u >>> 8;if (u >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }e = o + 10 | 0;u = c[A >> 2] | 0;a[e >> 0] = u;a[o + 11 >> 0] = u >>> 8;if (u >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }e = c[b + 65700 >> 2] | 0;a[o + 12 >> 0] = e;a[o + 13 >> 0] = e >>> 8;a[o + 14 >> 0] = e >>> 16;a[o + 15 >> 0] = e >>> 24;a[o + 16 >> 0] = 0;a[o + 17 >> 0] = 0;a[o + 18 >> 0] = 0;a[o + 19 >> 0] = 0;a[o + 20 >> 0] = 0;a[o + 21 >> 0] = 0;a[o + 22 >> 0] = 0;a[o + 23 >> 0] = 0;a[o + 24 >> 0] = 0;a[o + 25 >> 0] = 0;a[o + 26 >> 0] = 0;a[o + 27 >> 0] = 0;e = o + 28 | 0;a[e >> 0] = J;a[o + 29 >> 0] = J >>> 8;if (J >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }e = o + 30 | 0;a[e >> 0] = k;a[o + 31 >> 0] = k >>> 8;if (k >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }e = o + 32 | 0;a[e >> 0] = I;a[o + 33 >> 0] = I >>> 8;if (I >>> 0 >= 65536) {
	        a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	      }a[o + 34 >> 0] = 0;a[o + 35 >> 0] = 0;e = o + 36 | 0;if (C) {
	        a[e >> 0] = 0;a[o + 37 >> 0] = 0;a[o + 38 >> 0] = 0;a[o + 39 >> 0] = 0;a[o + 40 >> 0] = 0;a[o + 41 >> 0] = 0;
	      } else {
	        C = c[f + 28 >> 2] | 0;a[e >> 0] = C;a[o + 37 >> 0] = C >>> 8;if (C >>> 0 >= 65536) {
	          a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;
	        }f = c[f + 32 >> 2] | 0;a[o + 38 >> 0] = f;a[o + 39 >> 0] = f >>> 8;a[o + 40 >> 0] = f >>> 16;a[o + 41 >> 0] = f >>> 24;
	      }e = o + 42 | 0;if (!(m >>> 0 > 0 | (m | 0) == 0 & v >>> 0 > 4294967294)) {
	        f = b + 65776 | 0;f = Gd(v | 0, 0, c[f >> 2] | 0, c[f + 4 >> 2] | 0) | 0;C = D;a[e >> 0] = f;u = Jd(f | 0, C | 0, 8) | 0;a[o + 43 >> 0] = u;u = Jd(f | 0, C | 0, 16) | 0;a[o + 44 >> 0] = u;u = Jd(f | 0, C | 0, 24) | 0;a[o + 45 >> 0] = u;if (!(C >>> 0 < 1 | (C | 0) == 1 & f >>> 0 < 0)) {
	          a[e >> 0] = -1;a[e + 1 >> 0] = -1 >> 8;a[e + 2 >> 0] = -1 >> 16;a[e + 3 >> 0] = -1 >> 24;
	        }
	      } else {
	        a[e >> 0] = -1;a[o + 43 >> 0] = -1;a[o + 44 >> 0] = -1;a[o + 45 >> 0] = -1;
	      }if (J | 0 ? (a[o + 46 >> 0] = a[H >> 0] | 0, (J | 0) != 1) : 0) {
	        e = 1;do {
	          a[(c[y >> 2] | 0) + 46 + e >> 0] = a[H + e >> 0] | 0;e = e + 1 | 0;
	        } while ((e | 0) != (J | 0));
	      }if (k | 0) {
	        e = 0;do {
	          a[(c[y >> 2] | 0) + 46 + J + e >> 0] = a[j + e >> 0] | 0;e = e + 1 | 0;
	        } while ((e | 0) != (k | 0));
	      }if (I | 0) {
	        e = 0;do {
	          a[(c[y >> 2] | 0) + 46 + J + k + e >> 0] = a[l + e >> 0] | 0;e = e + 1 | 0;
	        } while ((e | 0) != (I | 0));
	      }if (!(c[y >> 2] | 0)) {
	        b = -104;i = O;return b | 0;
	      }c[b + 65712 >> 2] = w;e = b + 65720 | 0;c[e >> 2] = 0;c[e + 4 >> 2] = 0;c[e + 8 >> 2] = 0;c[e + 12 >> 2] = 0;c[e + 16 >> 2] = 0;c[e + 20 >> 2] = 0;e = Xa(b, H, h, g) | 0;c[b + 68 >> 2] = 0;c[b + 80 >> 2] = 65536;c[b + 76 >> 2] = b + 164;c[b + 72 >> 2] = 0;c[b + 84 >> 2] = 0;c[b + 108 >> 2] = 0;a: do {
	        if (!e) {
	          do {
	            if ((c[A >> 2] | 0) == 8) {
	              if (c[z >> 2] | 0) break;c[b + 96 >> 2] = 0;c[b + 100 >> 2] = 0;c[b + 104 >> 2] = 0;e = wb(F, n, 8, (p | 0) > 0 ? 0 - p | 0 : p, q, r, 11465, 56) | 0;if (e | 0) break a;c[B >> 2] = 8;
	            }
	          } while (0);B = b + 65760 | 0;c[B >> 2] = 0;do {
	            if (G) {
	              c[E >> 2] = 1;u = rb() | 0;c[b + 65756 >> 2] = u;y = b + 65744 | 0;n = c[3776] | 0;c[3776] = n + 1;if (!n) Ic((qa(0) | 0) ^ -1153374642);c[y >> 2] = 305419896;z = b + 65748 | 0;c[z >> 2] = 591751049;A = b + 65752 | 0;c[A >> 2] = 878082192;e = a[s >> 0] | 0;if (!(e << 24 >> 24)) e = 0;else {
	                o = s;x = 305419896;v = 591751049;m = 878082192;do {
	                  x = c[u + ((e & 255 ^ x & 255) << 2) >> 2] ^ x >>> 8;c[y >> 2] = x;v = (S((x & 255) + v | 0, 134775813) | 0) + 1 | 0;c[z >> 2] = v;m = c[u + ((v >>> 24 ^ m & 255) << 2) >> 2] ^ m >>> 8;c[A >> 2] = m;o = o + 1 | 0;e = a[o >> 0] | 0;
	                } while (e << 24 >> 24 != 0);e = 0;
	              }do {
	                n = (Jc() | 0) >>> 7;q = c[A >> 2] | 0;r = q & 65533;r = (S(r | 2, r ^ 3) | 0) >>> 8;p = c[y >> 2] | 0;p = c[u + (((p ^ n) & 255) << 2) >> 2] ^ p >>> 8;c[y >> 2] = p;p = (S((c[z >> 2] | 0) + (p & 255) | 0, 134775813) | 0) + 1 | 0;c[z >> 2] = p;c[A >> 2] = c[u + ((p >>> 24 ^ q & 255) << 2) >> 2] ^ q >>> 8;a[L + e >> 0] = r ^ n;e = e + 1 | 0;
	              } while ((e | 0) != 10);c[y >> 2] = 305419896;c[z >> 2] = 591751049;c[A >> 2] = 878082192;e = a[s >> 0] | 0;if (!(e << 24 >> 24)) {
	                x = 878082192;m = 591751049;e = 305419896;
	              } else {
	                o = s;v = 305419896;m = 591751049;x = 878082192;do {
	                  v = c[u + ((e & 255 ^ v & 255) << 2) >> 2] ^ v >>> 8;c[y >> 2] = v;m = (S((v & 255) + m | 0, 134775813) | 0) + 1 | 0;c[z >> 2] = m;x = c[u + ((m >>> 24 ^ x & 255) << 2) >> 2] ^ x >>> 8;c[A >> 2] = x;o = o + 1 | 0;e = a[o >> 0] | 0;
	                } while (e << 24 >> 24 != 0);e = v;
	              }v = x & 65533;o = 0;v = (S(v | 2, v ^ 3) | 0) >>> 8;do {
	                s = d[L + o >> 0] | 0;e = c[u + ((s ^ e & 255) << 2) >> 2] ^ e >>> 8;m = (S((e & 255) + m | 0, 134775813) | 0) + 1 | 0;x = c[u + ((m >>> 24 ^ x & 255) << 2) >> 2] ^ x >>> 8;a[M + o >> 0] = s ^ v;o = o + 1 | 0;s = x & 65533;v = (S(s | 2, s ^ 3) | 0) >>> 8;
	              } while ((o | 0) != 10);s = t >>> 16;q = c[u + (((e ^ s) & 255) << 2) >> 2] ^ e >>> 8;p = q & 255;r = (S(m + p | 0, 134775813) | 0) + 1 | 0;n = c[u + ((r >>> 24 ^ x & 255) << 2) >> 2] ^ x >>> 8;a[M + 10 >> 0] = v ^ s;s = n & 65533;s = (S(s | 2, s ^ 3) | 0) >>> 8;L = t >>> 24;t = c[u + ((p ^ L) << 2) >> 2] ^ q >>> 8;c[y >> 2] = t;t = (S(r + (t & 255) | 0, 134775813) | 0) + 1 | 0;c[z >> 2] = t;c[A >> 2] = c[u + ((t >>> 24 ^ n & 255) << 2) >> 2] ^ n >>> 8;a[M + 11 >> 0] = s ^ L;c[B >> 2] = 12;if ((Ga[c[b + 8 >> 2] & 3](c[b + 28 >> 2] | 0, c[K >> 2] | 0, M, 12) | 0) == 12) break;else e = -1;i = O;return e | 0;
	            }
	          } while (0);c[N >> 2] = 1;b = 0;i = O;return b | 0;
	        }
	      } while (0);c[b + 65760 >> 2] = 0;b = e;i = O;return b | 0;
	    }function Za(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0;E = i;i = i + 16 | 0;B = E;if (!b) {
	        C = -102;i = E;return C | 0;
	      }C = b + 56 | 0;if (!(c[C >> 2] | 0)) {
	        C = -102;i = E;return C | 0;
	      }o = b + 64 | 0;c[b + 68 >> 2] = 0;n = b + 156 | 0;if ((c[n >> 2] | 0) == 8 ? (c[b + 160 >> 2] | 0) == 0 : 0) {
	        h = b + 80 | 0;j = b + 164 | 0;k = b + 76 | 0;l = b + 84 | 0;m = b + 124 | 0;do {
	          if (!(c[h >> 2] | 0)) {
	            _a(b) | 0;c[h >> 2] = 65536;c[k >> 2] = j;
	          }z = c[l >> 2] | 0;g = Kb(o, 4) | 0;c[m >> 2] = (c[l >> 2] | 0) - z + (c[m >> 2] | 0);
	        } while (!(g | 0));
	      } else g = 0;g = (g | 0) == 1 ? 0 : g;if ((c[b + 124 >> 2] | 0) != 0 & (g | 0) == 0) g = ((_a(b) | 0) == -1) << 31 >> 31;h = b + 160 | 0;if ((c[n >> 2] | 0) == 8 ? (c[h >> 2] | 0) == 0 : 0) {
	        z = xb(o) | 0;c[b + 120 >> 2] = 0;g = (g | 0) == 0 ? z : g;
	      }if (!(c[h >> 2] | 0)) {
	        d = b + 65736 | 0;h = c[b + 65704 >> 2] | 0;e = c[d + 4 >> 2] | 0;d = c[d >> 2] | 0;
	      } else h = f;y = b + 65728 | 0;z = c[b + 65760 >> 2] | 0;y = Hd(z | 0, ((z | 0) < 0) << 31 >> 31 | 0, c[y >> 2] | 0, c[y + 4 >> 2] | 0) | 0;z = D;o = z >>> 0 > 0 | (z | 0) == 0 & y >>> 0 > 4294967294;k = e >>> 0 > 0 | (e | 0) == 0 & d >>> 0 > 4294967294;x = k | o;if (!x ? (w = b + 128 | 0, v = c[w + 4 >> 2] | 0, !(v >>> 0 > 0 | (v | 0) == 0 & (c[w >> 2] | 0) >>> 0 > 4294967294)) : 0) q = b + 136 | 0;else {
	        q = b + 136 | 0;w = c[q >> 2] | 0;a[w + 4 >> 0] = 45;a[w + 5 >> 0] = 0;w = c[q >> 2] | 0;a[w + 6 >> 0] = 45;a[w + 7 >> 0] = 0;
	      }j = c[q >> 2] | 0;u = h & 255;a[j + 16 >> 0] = u;v = h >>> 8 & 255;a[j + 17 >> 0] = v;w = h >>> 16 & 255;a[j + 18 >> 0] = w;t = h >>> 24 & 255;a[j + 19 >> 0] = t;h = c[q >> 2] | 0;j = h + 20 | 0;if (o) {
	        a[j >> 0] = -1;a[h + 21 >> 0] = -1;a[h + 22 >> 0] = -1;a[h + 23 >> 0] = -1;
	      } else {
	        a[j >> 0] = y;s = Jd(y | 0, z | 0, 8) | 0;a[h + 21 >> 0] = s;s = Jd(y | 0, z | 0, 16) | 0;a[h + 22 >> 0] = s;s = Jd(y | 0, z | 0, 24) | 0;a[h + 23 >> 0] = s;
	      }if ((c[b + 108 >> 2] | 0) == 1) {
	        s = c[q >> 2] | 0;a[s + 36 >> 0] = 1;a[s + 37 >> 0] = 0;
	      }h = c[q >> 2] | 0;j = h + 24 | 0;if (k) {
	        a[j >> 0] = -1;a[h + 25 >> 0] = -1;a[h + 26 >> 0] = -1;a[h + 27 >> 0] = -1;
	      } else {
	        a[j >> 0] = d;s = Jd(d | 0, e | 0, 8) | 0;a[h + 25 >> 0] = s;s = Jd(d | 0, e | 0, 16) | 0;a[h + 26 >> 0] = s;s = Jd(d | 0, e | 0, 24) | 0;a[h + 27 >> 0] = s;
	      }h = k ? 8 : 0;h = o ? (h & 65535) + 8 & 65535 : h;s = b + 128 | 0;r = s;p = c[r + 4 >> 2] | 0;h = p >>> 0 > 0 | (p | 0) == 0 & (c[r >> 2] | 0) >>> 0 > 4294967294 ? h + 8 << 16 >> 16 : h;if (h << 16 >> 16 > 0) {
	        l = (h << 16 >> 16) + 4 | 0;m = b + 148 | 0;if (l >>> 0 > (c[m >> 2] | 0) >>> 0) {
	          C = -103;i = E;return C | 0;
	        }n = b + 144 | 0;r = (c[q >> 2] | 0) + (c[n >> 2] | 0) | 0;a[r >> 0] = 1;a[r + 1 >> 0] = 0;r = r + 2 | 0;a[r >> 0] = h;a[r + 1 >> 0] = (h & 65535) >>> 8;h = r + 2 | 0;if (k) {
	          a[h >> 0] = d;r = Jd(d | 0, e | 0, 8) | 0;a[h + 1 >> 0] = r;r = Jd(d | 0, e | 0, 16) | 0;a[h + 2 >> 0] = r;r = Jd(d | 0, e | 0, 24) | 0;a[h + 3 >> 0] = r;a[h + 4 >> 0] = e;r = Jd(d | 0, e | 0, 40) | 0;a[h + 5 >> 0] = r;r = Jd(d | 0, e | 0, 48) | 0;a[h + 6 >> 0] = r;r = Jd(d | 0, e | 0, 56) | 0;a[h + 7 >> 0] = r;h = h + 8 | 0;
	        }if (o) {
	          a[h >> 0] = y;r = Jd(y | 0, z | 0, 8) | 0;a[h + 1 >> 0] = r;r = Jd(y | 0, z | 0, 16) | 0;a[h + 2 >> 0] = r;r = Jd(y | 0, z | 0, 24) | 0;a[h + 3 >> 0] = r;a[h + 4 >> 0] = z;r = Jd(y | 0, z | 0, 40) | 0;a[h + 5 >> 0] = r;r = Jd(y | 0, z | 0, 48) | 0;a[h + 6 >> 0] = r;r = Jd(y | 0, z | 0, 56) | 0;a[h + 7 >> 0] = r;h = h + 8 | 0;
	        }k = s;j = c[k >> 2] | 0;k = c[k + 4 >> 2] | 0;if (k >>> 0 > 0 | (k | 0) == 0 & j >>> 0 > 4294967294) {
	          a[h >> 0] = j;r = Jd(j | 0, k | 0, 8) | 0;a[h + 1 >> 0] = r;r = Jd(j | 0, k | 0, 16) | 0;a[h + 2 >> 0] = r;r = Jd(j | 0, k | 0, 24) | 0;a[h + 3 >> 0] = r;a[h + 4 >> 0] = k;r = Jd(j | 0, k | 0, 40) | 0;a[h + 5 >> 0] = r;r = Jd(j | 0, k | 0, 48) | 0;a[h + 6 >> 0] = r;r = Jd(j | 0, k | 0, 56) | 0;a[h + 7 >> 0] = r;
	        }c[m >> 2] = (c[m >> 2] | 0) - l;c[n >> 2] = (c[n >> 2] | 0) + l;p = b + 140 | 0;r = (c[p >> 2] | 0) + l | 0;c[p >> 2] = r;p = c[q >> 2] | 0;h = p + 30 | 0;a[h >> 0] = r;a[p + 31 >> 0] = r >>> 8;if (r >>> 0 >= 65536) {
	          a[h >> 0] = -1;a[h + 1 >> 0] = -1 >> 8;
	        }
	      }a: do {
	        if (!g) {
	          j = b + 48 | 0;g = c[q >> 2] | 0;l = c[b + 144 >> 2] | 0;p = b + 52 | 0;h = c[p >> 2] | 0;do {
	            if (!h) {
	              h = Ad(4096) | 0;if (!h) {
	                c[p >> 2] = 0;c[j >> 2] = 0;g = -104;A = 53;break a;
	              } else {
	                c[h >> 2] = 0;c[h + 8 >> 2] = 0;c[h + 4 >> 2] = 4080;c[p >> 2] = h;c[j >> 2] = h;break;
	              }
	            }
	          } while (0);do {
	            if (l) {
	              k = h;j = c[h + 4 >> 2] | 0;while (1) {
	                if (!j) {
	                  h = Ad(4096) | 0;if (!h) {
	                    A = 48;break;
	                  }c[h >> 2] = 0;c[h + 8 >> 2] = 0;c[h + 4 >> 2] = 4080;c[k >> 2] = h;c[p >> 2] = h;j = 4080;
	                } else h = k;f = h + 4 | 0;o = j >>> 0 < l >>> 0 ? j : l;n = h + 8 | 0;k = c[n >> 2] | 0;m = h + 16 + k | 0;if (o) {
	                  j = 0;do {
	                    a[m + j >> 0] = a[g + j >> 0] | 0;j = j + 1 | 0;
	                  } while (j >>> 0 < o >>> 0);k = c[n >> 2] | 0;j = c[f >> 2] | 0;
	                }c[n >> 2] = k + o;j = j - o | 0;c[f >> 2] = j;l = l - o | 0;if (!l) {
	                  A = 54;break;
	                } else {
	                  g = g + o | 0;k = h;
	                }
	              }if ((A | 0) == 48) {
	                c[k >> 2] = 0;g = -104;A = 53;break a;
	              } else if ((A | 0) == 54) {
	                g = c[q >> 2] | 0;break;
	              }
	            }
	          } while (0);Bd(g);p = b + 44 | 0;q = ib(b, c[p >> 2] | 0) | 0;r = D;f = c[p >> 2] | 0;s = Hd(c[s >> 2] | 0, c[s + 4 >> 2] | 0, 14, 0) | 0;if (!(hb(b, f, s, D, 0) | 0)) {
	            j = c[p >> 2] | 0;a[B >> 0] = u;a[B + 1 >> 0] = v;a[B + 2 >> 0] = w;a[B + 3 >> 0] = t;j = ((Ga[c[b + 8 >> 2] & 3](c[b + 28 >> 2] | 0, j, B, 4) | 0) != 4) << 31 >> 31;
	          } else j = -1;do {
	            if (x) {
	              h = b + 65720 | 0;g = c[h >> 2] | 0;h = c[h + 4 >> 2] | 0;if (!((g | 0) == 0 & (h | 0) == 0)) {
	                w = c[p >> 2] | 0;x = Hd(g | 0, h | 0, 4, 0) | 0;if (!(hb(b, w, x, D, 0) | 0 | j)) {
	                  x = c[p >> 2] | 0;a[B >> 0] = d;n = Jd(d | 0, e | 0, 8) | 0;k = B + 1 | 0;a[k >> 0] = n;n = Jd(d | 0, e | 0, 16) | 0;l = B + 2 | 0;a[l >> 0] = n;n = Jd(d | 0, e | 0, 24) | 0;m = B + 3 | 0;a[m >> 0] = n;n = B + 4 | 0;a[n >> 0] = e;h = Jd(d | 0, e | 0, 40) | 0;o = B + 5 | 0;a[o >> 0] = h;h = Jd(d | 0, e | 0, 48) | 0;f = B + 6 | 0;a[f >> 0] = h;h = Jd(d | 0, e | 0, 56) | 0;g = B + 7 | 0;a[g >> 0] = h;h = b + 8 | 0;j = b + 28 | 0;if ((Ga[c[h >> 2] & 3](c[j >> 2] | 0, x, B, 8) | 0) != 8) {
	                    g = -1;break;
	                  }x = c[p >> 2] | 0;a[B >> 0] = y;w = Jd(y | 0, z | 0, 8) | 0;a[k >> 0] = w;w = Jd(y | 0, z | 0, 16) | 0;a[l >> 0] = w;w = Jd(y | 0, z | 0, 24) | 0;a[m >> 0] = w;a[n >> 0] = z;w = Jd(y | 0, z | 0, 40) | 0;a[o >> 0] = w;w = Jd(y | 0, z | 0, 48) | 0;a[f >> 0] = w;z = Jd(y | 0, z | 0, 56) | 0;a[g >> 0] = z;g = ((Ga[c[h >> 2] & 3](c[j >> 2] | 0, x, B, 8) | 0) != 8) << 31 >> 31;
	                } else g = -1;
	              } else g = -103;
	            } else if (!j) {
	              g = c[p >> 2] | 0;a[B >> 0] = y;x = Jd(y | 0, z | 0, 8) | 0;k = B + 1 | 0;a[k >> 0] = x;x = Jd(y | 0, z | 0, 16) | 0;l = B + 2 | 0;a[l >> 0] = x;x = Jd(y | 0, z | 0, 24) | 0;m = B + 3 | 0;a[m >> 0] = x;if (!(z >>> 0 < 1 | (z | 0) == 1 & y >>> 0 < 0)) c[B >> 2] = -1;h = b + 8 | 0;j = b + 28 | 0;if ((Ga[c[h >> 2] & 3](c[j >> 2] | 0, g, B, 4) | 0) != 4) {
	                g = -1;break;
	              }g = c[p >> 2] | 0;a[B >> 0] = d;z = Jd(d | 0, e | 0, 8) | 0;a[k >> 0] = z;z = Jd(d | 0, e | 0, 16) | 0;a[l >> 0] = z;z = Jd(d | 0, e | 0, 24) | 0;a[m >> 0] = z;if (!(e >>> 0 < 1 | (e | 0) == 1 & d >>> 0 < 0)) c[B >> 2] = -1;g = ((Ga[c[h >> 2] & 3](c[j >> 2] | 0, g, B, 4) | 0) != 4) << 31 >> 31;
	            } else g = -1;
	          } while (0);B = (hb(b, c[p >> 2] | 0, q, r, 0) | 0) == 0;g = B ? g : -1;
	        } else A = 53;
	      } while (0);if ((A | 0) == 53) Bd(c[q >> 2] | 0);b = b + 65784 | 0;B = b;B = Hd(c[B >> 2] | 0, c[B + 4 >> 2] | 0, 1, 0) | 0;c[b >> 2] = B;c[b + 4 >> 2] = D;c[C >> 2] = 0;C = g;i = E;return C | 0;
	    }function _a(b) {
	      b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;k = b + 124 | 0;e = c[k >> 2] | 0;if (c[b + 65708 >> 2] | 0) if (!e) e = 0;else {
	        h = b + 65744 | 0;i = b + 65756 | 0;g = b + 65752 | 0;j = b + 65748 | 0;f = 0;do {
	          m = c[g >> 2] | 0;l = m & 65533;l = (S(l | 2, l ^ 3) | 0) >>> 8;o = c[i >> 2] | 0;e = b + 164 + f | 0;n = c[h >> 2] | 0;n = c[o + ((n & 255 ^ (d[e >> 0] | 0)) << 2) >> 2] ^ n >>> 8;c[h >> 2] = n;n = (S((c[j >> 2] | 0) + (n & 255) | 0, 134775813) | 0) + 1 | 0;c[j >> 2] = n;c[g >> 2] = c[o + ((n >>> 24 ^ m & 255) << 2) >> 2] ^ m >>> 8;a[e >> 0] = (d[e >> 0] | 0) ^ l;f = f + 1 | 0;e = c[k >> 2] | 0;
	        } while (f >>> 0 < e >>> 0);
	      }n = Ga[c[b + 8 >> 2] & 3](c[b + 28 >> 2] | 0, c[b + 44 >> 2] | 0, b + 164 | 0, e) | 0;o = c[k >> 2] | 0;m = b + 65728 | 0;l = m;l = Hd(c[l >> 2] | 0, c[l + 4 >> 2] | 0, o | 0, 0) | 0;c[m >> 2] = l;c[m + 4 >> 2] = D;m = b + 72 | 0;l = b + 65736 | 0;b = l;b = Hd(c[b >> 2] | 0, c[b + 4 >> 2] | 0, c[m >> 2] | 0, 0) | 0;c[l >> 2] = b;c[l + 4 >> 2] = D;c[m >> 2] = 0;c[k >> 2] = 0;return ((n | 0) != (o | 0)) << 31 >> 31 | 0;
	    }function $a(a) {
	      a = a | 0;return Za(a, 0, 0, 0) | 0;
	    }function ab(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;i = i | 0;j = j | 0;k = k | 0;l = l | 0;m = m | 0;n = n | 0;o = o | 0;p = p | 0;q = q | 0;return Ya(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, 0, 0, q) | 0;
	    }function bb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;if (!b) {
	        p = -102;return p | 0;
	      }if (!(c[b + 56 >> 2] | 0)) {
	        p = -102;return p | 0;
	      }p = b + 64 | 0;o = b + 65704 | 0;c[o >> 2] = vb(c[o >> 2] | 0, d, e) | 0;c[p >> 2] = d;o = b + 68 | 0;c[o >> 2] = e;g = b + 80 | 0;h = b + 164 | 0;i = b + 76 | 0;j = b + 156 | 0;k = b + 160 | 0;l = b + 72 | 0;m = b + 84 | 0;n = b + 124 | 0;a: while (1) {
	        if (!(c[o >> 2] | 0)) {
	          d = 0;e = 14;break;
	        }while (1) {
	          d = c[g >> 2] | 0;if (!d) {
	            f = (_a(b) | 0) == -1;c[g >> 2] = 65536;c[i >> 2] = h;if (f) {
	              d = -1;e = 14;break a;
	            } else d = 65536;
	          }if ((c[j >> 2] | 0) == 8 ? (c[k >> 2] | 0) == 0 : 0) break;e = c[o >> 2] | 0;f = e >>> 0 < d >>> 0 ? e : d;if (f) {
	            d = 0;do {
	              a[(c[i >> 2] | 0) + d >> 0] = a[(c[p >> 2] | 0) + d >> 0] | 0;d = d + 1 | 0;
	            } while (d >>> 0 < f >>> 0);e = c[o >> 2] | 0;d = c[g >> 2] | 0;
	          }e = e - f | 0;c[o >> 2] = e;c[g >> 2] = d - f;c[p >> 2] = (c[p >> 2] | 0) + f;c[i >> 2] = (c[i >> 2] | 0) + f;c[l >> 2] = (c[l >> 2] | 0) + f;c[m >> 2] = (c[m >> 2] | 0) + f;c[n >> 2] = (c[n >> 2] | 0) + f;if (!e) {
	            d = 0;e = 14;break a;
	          }
	        }f = c[m >> 2] | 0;d = Kb(p, 0) | 0;c[n >> 2] = (c[m >> 2] | 0) - f + (c[n >> 2] | 0);if (d | 0) {
	          e = 14;break;
	        }
	      }if ((e | 0) == 14) return d | 0;return 0;
	    }function cb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;n = i;i = i + 16 | 0;m = n;f = b + 65776 | 0;g = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;h = b + 44 | 0;o = c[h >> 2] | 0;a[m >> 0] = 80;j = m + 1 | 0;a[j >> 0] = 75;k = m + 2 | 0;a[k >> 0] = 6;l = m + 3 | 0;a[l >> 0] = 7;e = Gd(d | 0, e | 0, g | 0, f | 0) | 0;f = D;g = b + 8 | 0;d = b + 28 | 0;if ((Ga[c[g >> 2] & 3](c[d >> 2] | 0, o, m, 4) | 0) != 4) {
	        o = -1;i = n;return o | 0;
	      }o = c[h >> 2] | 0;c[m >> 2] = 0;if ((Ga[c[g >> 2] & 3](c[d >> 2] | 0, o, m, 4) | 0) != 4) {
	        o = -1;i = n;return o | 0;
	      }o = c[h >> 2] | 0;a[m >> 0] = e;b = Jd(e | 0, f | 0, 8) | 0;a[j >> 0] = b;b = Jd(e | 0, f | 0, 16) | 0;a[k >> 0] = b;b = Jd(e | 0, f | 0, 24) | 0;a[l >> 0] = b;a[m + 4 >> 0] = f;b = Jd(e | 0, f | 0, 40) | 0;a[m + 5 >> 0] = b;b = Jd(e | 0, f | 0, 48) | 0;a[m + 6 >> 0] = b;b = Jd(e | 0, f | 0, 56) | 0;a[m + 7 >> 0] = b;if ((Ga[c[g >> 2] & 3](c[d >> 2] | 0, o, m, 8) | 0) != 8) {
	        o = -1;i = n;return o | 0;
	      }o = c[h >> 2] | 0;a[m >> 0] = 1;a[j >> 0] = 0;a[k >> 0] = 0;a[l >> 0] = 0;o = ((Ga[c[g >> 2] & 3](c[d >> 2] | 0, o, m, 4) | 0) != 4) << 31 >> 31;i = n;return o | 0;
	    }function db(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0;t = i;i = i + 16 | 0;n = t;p = b + 44 | 0;o = c[p >> 2] | 0;a[n >> 0] = 80;q = n + 1 | 0;a[q >> 0] = 75;r = n + 2 | 0;a[r >> 0] = 6;s = n + 3 | 0;a[s >> 0] = 6;g = b + 8 | 0;h = b + 28 | 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 4) | 0) != 4) {
	        s = -1;i = t;return s | 0;
	      }o = c[p >> 2] | 0;a[n >> 0] = 44;j = n + 4 | 0;k = n + 5 | 0;l = n + 6 | 0;m = n + 7 | 0;a[q >> 0] = 0;a[q + 1 >> 0] = 0;a[q + 2 >> 0] = 0;a[q + 3 >> 0] = 0;a[q + 4 >> 0] = 0;a[q + 5 >> 0] = 0;a[q + 6 >> 0] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 8) | 0) != 8) {
	        s = -1;i = t;return s | 0;
	      }o = c[p >> 2] | 0;a[n >> 0] = 45;a[q >> 0] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 2) | 0) != 2) {
	        s = -1;i = t;return s | 0;
	      }o = c[p >> 2] | 0;a[n >> 0] = 45;a[q >> 0] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 2) | 0) != 2) {
	        s = -1;i = t;return s | 0;
	      }o = c[p >> 2] | 0;c[n >> 2] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 4) | 0) != 4) {
	        s = -1;i = t;return s | 0;
	      }o = c[p >> 2] | 0;c[n >> 2] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, o, n, 4) | 0) != 4) {
	        s = -1;i = t;return s | 0;
	      }u = c[p >> 2] | 0;o = b + 65784 | 0;v = o;w = c[v >> 2] | 0;v = c[v + 4 >> 2] | 0;a[n >> 0] = w;x = Jd(w | 0, v | 0, 8) | 0;a[q >> 0] = x;x = Jd(w | 0, v | 0, 16) | 0;a[r >> 0] = x;x = Jd(w | 0, v | 0, 24) | 0;a[s >> 0] = x;a[j >> 0] = v;x = Jd(w | 0, v | 0, 40) | 0;a[k >> 0] = x;x = Jd(w | 0, v | 0, 48) | 0;a[l >> 0] = x;v = Jd(w | 0, v | 0, 56) | 0;a[m >> 0] = v;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, u, n, 8) | 0) != 8) {
	        x = -1;i = t;return x | 0;
	      }x = c[p >> 2] | 0;w = o;v = c[w >> 2] | 0;w = c[w + 4 >> 2] | 0;a[n >> 0] = v;u = Jd(v | 0, w | 0, 8) | 0;a[q >> 0] = u;u = Jd(v | 0, w | 0, 16) | 0;a[r >> 0] = u;u = Jd(v | 0, w | 0, 24) | 0;a[s >> 0] = u;a[j >> 0] = w;u = Jd(v | 0, w | 0, 40) | 0;a[k >> 0] = u;u = Jd(v | 0, w | 0, 48) | 0;a[l >> 0] = u;w = Jd(v | 0, w | 0, 56) | 0;a[m >> 0] = w;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, x, n, 8) | 0) != 8) {
	        x = -1;i = t;return x | 0;
	      }x = c[p >> 2] | 0;a[n >> 0] = d;a[q >> 0] = d >>> 8;a[r >> 0] = d >>> 16;a[s >> 0] = d >>> 24;c[j >> 2] = 0;if ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, x, n, 8) | 0) != 8) {
	        x = -1;i = t;return x | 0;
	      }v = b + 65776 | 0;v = Gd(e | 0, f | 0, c[v >> 2] | 0, c[v + 4 >> 2] | 0) | 0;w = D;x = c[p >> 2] | 0;a[n >> 0] = v;u = Jd(v | 0, w | 0, 8) | 0;a[q >> 0] = u;u = Jd(v | 0, w | 0, 16) | 0;a[r >> 0] = u;u = Jd(v | 0, w | 0, 24) | 0;a[s >> 0] = u;a[j >> 0] = w;u = Jd(v | 0, w | 0, 40) | 0;a[k >> 0] = u;u = Jd(v | 0, w | 0, 48) | 0;a[l >> 0] = u;w = Jd(v | 0, w | 0, 56) | 0;a[m >> 0] = w;x = ((Ga[c[g >> 2] & 3](c[h >> 2] | 0, x, n, 8) | 0) != 8) << 31 >> 31;i = t;return x | 0;
	    }function eb(d, e, f, g) {
	      d = d | 0;e = e | 0;f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0;t = i;i = i + 16 | 0;p = t;m = d + 44 | 0;l = c[m >> 2] | 0;a[p >> 0] = 80;q = p + 1 | 0;a[q >> 0] = 75;r = p + 2 | 0;a[r >> 0] = 5;s = p + 3 | 0;a[s >> 0] = 6;n = d + 8 | 0;o = d + 28 | 0;if ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, l, p, 4) | 0) != 4) {
	        s = -1;i = t;return s | 0;
	      }l = c[m >> 2] | 0;a[p >> 0] = 0;a[q >> 0] = 0;if ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, l, p, 2) | 0) != 2) {
	        s = -1;i = t;return s | 0;
	      }l = c[m >> 2] | 0;a[p >> 0] = 0;a[q >> 0] = 0;if ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, l, p, 2) | 0) != 2) {
	        s = -1;i = t;return s | 0;
	      }l = d + 65784 | 0;j = l;h = c[j >> 2] | 0;j = c[j + 4 >> 2] | 0;k = c[m >> 2] | 0;if (j >>> 0 > 0 | (j | 0) == 0 & h >>> 0 > 65534) {
	        a[p >> 0] = -1;a[q >> 0] = -1;h = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, k, p, 2) | 0) != 2) << 31 >> 31;
	      } else {
	        a[p >> 0] = h;j = Jd(h | 0, j | 0, 8) | 0;a[q >> 0] = j;if (!((h & -65536 | 0) == 0 & 0 == 0)) b[p >> 1] = -1;h = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, k, p, 2) | 0) != 2) << 31 >> 31;
	      }if (h | 0) {
	        s = -1;i = t;return s | 0;
	      }j = l;h = c[j >> 2] | 0;j = c[j + 4 >> 2] | 0;k = c[m >> 2] | 0;if (j >>> 0 > 0 | (j | 0) == 0 & h >>> 0 > 65534) {
	        a[p >> 0] = -1;a[q >> 0] = -1;h = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, k, p, 2) | 0) != 2) << 31 >> 31;
	      } else {
	        a[p >> 0] = h;l = Jd(h | 0, j | 0, 8) | 0;a[q >> 0] = l;if (!((h & -65536 | 0) == 0 & 0 == 0)) b[p >> 1] = -1;h = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, k, p, 2) | 0) != 2) << 31 >> 31;
	      }if (h | 0) {
	        s = -1;i = t;return s | 0;
	      }l = c[m >> 2] | 0;a[p >> 0] = e;a[q >> 0] = e >>> 8;a[r >> 0] = e >>> 16;a[s >> 0] = e >>> 24;if ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, l, p, 4) | 0) != 4) {
	        s = -1;i = t;return s | 0;
	      }j = d + 65776 | 0;j = Gd(f | 0, g | 0, c[j >> 2] | 0, c[j + 4 >> 2] | 0) | 0;k = D;h = c[m >> 2] | 0;if (k >>> 0 > 0 | (k | 0) == 0 & j >>> 0 > 4294967294) {
	        c[p >> 2] = -1;s = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;i = t;return s | 0;
	      } else {
	        a[p >> 0] = j;m = Jd(j | 0, k | 0, 8) | 0;a[q >> 0] = m;q = Jd(j | 0, k | 0, 16) | 0;a[r >> 0] = q;r = Jd(j | 0, k | 0, 24) | 0;a[s >> 0] = r;s = ((Ga[c[n >> 2] & 3](c[o >> 2] | 0, h, p, 4) | 0) != 4) << 31 >> 31;i = t;return s | 0;
	      }return 0;
	    }function fb(d, e) {
	      d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0;s = i;i = i + 16 | 0;q = s;if (!d) {
	        d = -102;i = s;return d | 0;
	      }if ((c[d + 56 >> 2] | 0) == 1) g = Za(d, 0, 0, 0) | 0;else g = 0;if (!e) e = c[d + 65792 >> 2] | 0;r = d + 44 | 0;n = ib(d, c[r >> 2] | 0) | 0;o = D;p = d + 48 | 0;if (!g) {
	        f = c[p >> 2] | 0;if (!f) {
	          h = 0;g = 0;
	        } else {
	          l = d + 8 | 0;m = d + 28 | 0;h = 0;g = 0;do {
	            k = f + 8 | 0;j = c[k >> 2] | 0;if (!g) if (!j) {
	              g = 0;j = 0;
	            } else {
	              g = Ga[c[l >> 2] & 3](c[m >> 2] | 0, c[r >> 2] | 0, f + 16 | 0, j) | 0;j = c[k >> 2] | 0;g = ((g | 0) != (j | 0)) << 31 >> 31;
	            }h = j + h | 0;f = c[f >> 2] | 0;
	          } while ((f | 0) != 0);
	        }
	      } else h = 0;f = c[p >> 2] | 0;if (f | 0) do {
	        m = f;f = c[f >> 2] | 0;Bd(m);
	      } while ((f | 0) != 0);c[d + 52 >> 2] = 0;c[p >> 2] = 0;p = d + 65776 | 0;p = Gd(n | 0, o | 0, c[p >> 2] | 0, c[p + 4 >> 2] | 0) | 0;m = D;if (!(!(m >>> 0 > 0 | (m | 0) == 0 & p >>> 0 > 4294967294) ? (p = d + 65784 | 0, m = c[p + 4 >> 2] | 0, !(m >>> 0 > 0 | (m | 0) == 0 & (c[p >> 2] | 0) >>> 0 > 65535)) : 0)) {
	        m = ib(d, c[r >> 2] | 0) | 0;p = D;db(d, h, n, o) | 0;cb(d, m, p) | 0;
	      }if (!g) {
	        g = eb(d, h, n, o) | 0;if (!g) {
	          if (!e) h = 0;else h = id(e) | 0;f = c[r >> 2] | 0;a[q >> 0] = h;a[q + 1 >> 0] = h >>> 8;if (h >>> 0 >= 65536) b[q >> 1] = -1;j = d + 8 | 0;k = d + 28 | 0;q = (Ga[c[j >> 2] & 3](c[k >> 2] | 0, f, q, 2) | 0) != 2;g = q << 31 >> 31;if ((h | 0) != 0 & (q ^ 1)) {
	            q = (Ga[c[j >> 2] & 3](c[k >> 2] | 0, c[r >> 2] | 0, e, h) | 0) == (h | 0);g = q ? g : -1;
	          }
	        }
	      }f = (g | 0) == 0 & (Ha[c[d + 20 >> 2] & 7](c[d + 28 >> 2] | 0, c[r >> 2] | 0) | 0) != 0;e = c[d + 65792 >> 2] | 0;if (e | 0) Bd(e);Bd(d);d = f ? -1 : g;i = s;return d | 0;
	    }function gb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0;e = c[a >> 2] | 0;f = c[a + 28 >> 2] | 0;if (!e) {
	        f = Ca[c[a + 32 >> 2] & 7](f, b, d) | 0;return f | 0;
	      } else {
	        f = Ca[e & 7](f, b, d) | 0;return f | 0;
	      }return 0;
	    }function hb(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0;g = c[a + 16 >> 2] | 0;if (g | 0) {
	        g = Ia[g & 1](c[a + 28 >> 2] | 0, b, d, e, f) | 0;return g | 0;
	      }if (!((d | 0) == (d | 0) & 0 == (e | 0))) {
	        g = -1;return g | 0;
	      }g = Ga[c[a + 40 >> 2] & 3](c[a + 28 >> 2] | 0, b, d, f) | 0;return g | 0;
	    }function ib(a, b) {
	      a = a | 0;b = b | 0;var d = 0;d = c[a + 28 >> 2] | 0;if (!(c[a + 16 >> 2] | 0)) {
	        d = Ha[c[a + 36 >> 2] & 7](d, b) | 0;a = (d | 0) == -1;b = a ? -1 : 0;d = a ? -1 : d;D = b;return d | 0;
	      } else {
	        d = Ha[c[a + 12 >> 2] & 7](d, b) | 0;b = D;D = b;return d | 0;
	      }return 0;
	    }function jb(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return wd(c, 1, d, b) | 0;
	    }function kb(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return rd(c, 1, d, b) | 0;
	    }function lb(a, b) {
	      a = a | 0;b = b | 0;return _c(b) | 0;
	    }function mb(a, b) {
	      a = a | 0;b = b | 0;return md(b) | 0;
	    }function nb(a) {
	      a = a | 0;c[a >> 2] = 4;c[a + 4 >> 2] = 1;c[a + 8 >> 2] = 2;c[a + 12 >> 2] = 4;c[a + 16 >> 2] = 1;c[a + 20 >> 2] = 5;c[a + 24 >> 2] = 6;c[a + 28 >> 2] = 0;return;
	    }function ob(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c & 3 | 0) != 1) {
	        if (!(c & 4)) a = (c & 8 | 0) == 0 ? 0 : 11472;else a = 11478;
	      } else a = 11475;if (!((b | 0) != 0 & (a | 0) != 0)) {
	        b = 0;return b | 0;
	      }b = Zc(b, a) | 0;return b | 0;
	    }function pb(a, b) {
	      a = a | 0;b = b | 0;b = xd(b) | 0;D = ((b | 0) < 0) << 31 >> 31;return b | 0;
	    }function qb(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;if (e >>> 0 >= 3) {
	        e = -1;return e | 0;
	      }e = ((nd(b, c, e) | 0) != 0) << 31 >> 31;return e | 0;
	    }function rb() {
	      return 8;
	    }function sb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;l = i;i = i + 32 | 0;j = l + 16 | 0;f = l + 12 | 0;g = l + 8 | 0;h = l + 4 | 0;k = l;c[f >> 2] = b;c[g >> 2] = d;c[h >> 2] = e;do {
	        if (c[g >> 2] | 0) {
	          c[k >> 2] = 1;e = c[f >> 2] | 0;d = c[g >> 2] | 0;b = c[h >> 2] | 0;if (a[k >> 0] | 0) {
	            c[j >> 2] = tb(e, d, b) | 0;break;
	          } else {
	            c[j >> 2] = ub(e, d, b) | 0;break;
	          }
	        } else c[j >> 2] = 0;
	      } while (0);i = l;return c[j >> 2] | 0;
	    }function tb(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = i;i = i + 32 | 0;l = k + 16 | 0;f = k + 12 | 0;g = k + 8 | 0;h = k + 4 | 0;j = k;c[l >> 2] = a;c[f >> 2] = b;c[g >> 2] = e;c[h >> 2] = c[l >> 2];c[h >> 2] = ~c[h >> 2];while (1) {
	        if (!(c[g >> 2] | 0)) break;if (!(c[f >> 2] & 3)) break;e = c[h >> 2] | 0;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[8 + (((e ^ (d[l >> 0] | 0)) & 255) << 2) >> 2] ^ (c[h >> 2] | 0) >>> 8;c[g >> 2] = (c[g >> 2] | 0) + -1;
	      }c[j >> 2] = c[f >> 2];while (1) {
	        if ((c[g >> 2] | 0) >>> 0 < 32) break;l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 32;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[g >> 2] | 0) >>> 0 < 4) break;c[j >> 2] = a + 4;c[h >> 2] = c[h >> 2] ^ c[a >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 4;
	      }c[f >> 2] = a;if (!(c[g >> 2] | 0)) {
	        l = c[h >> 2] | 0;l = ~l;c[h >> 2] = l;l = c[h >> 2] | 0;i = k;return l | 0;
	      }do {
	        j = c[h >> 2] | 0;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[8 + (((j ^ (d[l >> 0] | 0)) & 255) << 2) >> 2] ^ (c[h >> 2] | 0) >>> 8;l = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = l;
	      } while ((l | 0) != 0);l = c[h >> 2] | 0;l = ~l;c[h >> 2] = l;l = c[h >> 2] | 0;i = k;return l | 0;
	    }function ub(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = i;i = i + 32 | 0;l = k + 16 | 0;f = k + 12 | 0;g = k + 8 | 0;h = k + 4 | 0;j = k;c[l >> 2] = a;c[f >> 2] = b;c[g >> 2] = e;c[h >> 2] = ((c[l >> 2] | 0) >>> 24 & 255) + ((c[l >> 2] | 0) >>> 8 & 65280) + ((c[l >> 2] & 65280) << 8) + ((c[l >> 2] & 255) << 24);c[h >> 2] = ~c[h >> 2];while (1) {
	        if (!(c[g >> 2] | 0)) break;if (!(c[f >> 2] & 3)) break;e = (c[h >> 2] | 0) >>> 24;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[4104 + ((e ^ (d[l >> 0] | 0)) << 2) >> 2] ^ c[h >> 2] << 8;c[g >> 2] = (c[g >> 2] | 0) + -1;
	      }c[j >> 2] = c[f >> 2];while (1) {
	        if ((c[g >> 2] | 0) >>> 0 < 32) break;l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 32;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[g >> 2] | 0) >>> 0 < 4) break;c[j >> 2] = a + 4;c[h >> 2] = c[h >> 2] ^ c[a >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 4;
	      }c[f >> 2] = a;if (!(c[g >> 2] | 0)) {
	        j = c[h >> 2] | 0;j = ~j;c[h >> 2] = j;j = c[h >> 2] | 0;j = j >>> 24;j = j & 255;l = c[h >> 2] | 0;l = l >>> 8;l = l & 65280;l = j + l | 0;j = c[h >> 2] | 0;j = j & 65280;j = j << 8;j = l + j | 0;l = c[h >> 2] | 0;l = l & 255;l = l << 24;l = j + l | 0;i = k;return l | 0;
	      }do {
	        j = (c[h >> 2] | 0) >>> 24;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[4104 + ((j ^ (d[l >> 0] | 0)) << 2) >> 2] ^ c[h >> 2] << 8;l = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = l;
	      } while ((l | 0) != 0);j = c[h >> 2] | 0;j = ~j;c[h >> 2] = j;j = c[h >> 2] | 0;j = j >>> 24;j = j & 255;l = c[h >> 2] | 0;l = l >>> 8;l = l & 65280;l = j + l | 0;j = c[h >> 2] | 0;j = j & 65280;j = j << 8;j = l + j | 0;l = c[h >> 2] | 0;l = l & 255;l = l << 24;l = j + l | 0;i = k;return l | 0;
	    }function vb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;e = i;i = i + 16 | 0;h = e + 8 | 0;g = e + 4 | 0;f = e;c[h >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = sb(c[h >> 2] | 0, c[g >> 2] | 0, c[f >> 2] | 0) | 0;i = e;return d | 0;
	    }function wb(b, d, e, f, g, h, j, k) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;j = j | 0;k = k | 0;var l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0;v = i;i = i + 48 | 0;t = v + 44 | 0;u = v + 40 | 0;l = v + 36 | 0;m = v + 32 | 0;n = v + 28 | 0;o = v + 24 | 0;p = v + 20 | 0;w = v + 16 | 0;x = v + 12 | 0;q = v + 8 | 0;r = v + 4 | 0;s = v;c[u >> 2] = b;c[l >> 2] = d;c[m >> 2] = e;c[n >> 2] = f;c[o >> 2] = g;c[p >> 2] = h;c[w >> 2] = j;c[x >> 2] = k;c[r >> 2] = 1;if (c[w >> 2] | 0 ? !((c[x >> 2] | 0) != 56 ? 1 : (a[c[w >> 2] >> 0] | 0) != (a[11465] | 0)) : 0) {
	        if (!(c[u >> 2] | 0)) {
	          c[t >> 2] = -2;x = c[t >> 2] | 0;i = v;return x | 0;
	        }c[(c[u >> 2] | 0) + 24 >> 2] = 0;if (!(c[(c[u >> 2] | 0) + 32 >> 2] | 0)) {
	          c[(c[u >> 2] | 0) + 32 >> 2] = 5;c[(c[u >> 2] | 0) + 40 >> 2] = 0;
	        }if (!(c[(c[u >> 2] | 0) + 36 >> 2] | 0)) c[(c[u >> 2] | 0) + 36 >> 2] = 1;if ((c[l >> 2] | 0) == -1) c[l >> 2] = 6;if ((c[n >> 2] | 0) >= 0) {
	          if ((c[n >> 2] | 0) > 15) {
	            c[r >> 2] = 2;c[n >> 2] = (c[n >> 2] | 0) - 16;
	          }
	        } else {
	          c[r >> 2] = 0;c[n >> 2] = 0 - (c[n >> 2] | 0);
	        }if (!((c[o >> 2] | 0) < 1 | (c[o >> 2] | 0) > 9 | (c[m >> 2] | 0) != 8 | (c[n >> 2] | 0) < 8 | (c[n >> 2] | 0) > 15 | (c[l >> 2] | 0) < 0 | (c[l >> 2] | 0) > 9 | (c[p >> 2] | 0) < 0 | (c[p >> 2] | 0) > 4) ? !((c[n >> 2] | 0) == 8 & (c[r >> 2] | 0) != 1) : 0) {
	          if ((c[n >> 2] | 0) == 8) c[n >> 2] = 9;c[q >> 2] = Ca[c[(c[u >> 2] | 0) + 32 >> 2] & 7](c[(c[u >> 2] | 0) + 40 >> 2] | 0, 1, 5828) | 0;if (!(c[q >> 2] | 0)) {
	            c[t >> 2] = -4;x = c[t >> 2] | 0;i = v;return x | 0;
	          }c[(c[u >> 2] | 0) + 28 >> 2] = c[q >> 2];c[c[q >> 2] >> 2] = c[u >> 2];c[(c[q >> 2] | 0) + 4 >> 2] = 42;c[(c[q >> 2] | 0) + 24 >> 2] = c[r >> 2];c[(c[q >> 2] | 0) + 28 >> 2] = 0;c[(c[q >> 2] | 0) + 48 >> 2] = c[n >> 2];c[(c[q >> 2] | 0) + 44 >> 2] = 1 << c[(c[q >> 2] | 0) + 48 >> 2];c[(c[q >> 2] | 0) + 52 >> 2] = (c[(c[q >> 2] | 0) + 44 >> 2] | 0) - 1;c[(c[q >> 2] | 0) + 80 >> 2] = (c[o >> 2] | 0) + 7;c[(c[q >> 2] | 0) + 76 >> 2] = 1 << c[(c[q >> 2] | 0) + 80 >> 2];c[(c[q >> 2] | 0) + 84 >> 2] = (c[(c[q >> 2] | 0) + 76 >> 2] | 0) - 1;c[(c[q >> 2] | 0) + 88 >> 2] = (((c[(c[q >> 2] | 0) + 80 >> 2] | 0) + 3 - 1 | 0) >>> 0) / 3 | 0;x = Ca[c[(c[u >> 2] | 0) + 32 >> 2] & 7](c[(c[u >> 2] | 0) + 40 >> 2] | 0, c[(c[q >> 2] | 0) + 44 >> 2] | 0, 2) | 0;c[(c[q >> 2] | 0) + 56 >> 2] = x;x = Ca[c[(c[u >> 2] | 0) + 32 >> 2] & 7](c[(c[u >> 2] | 0) + 40 >> 2] | 0, c[(c[q >> 2] | 0) + 44 >> 2] | 0, 2) | 0;c[(c[q >> 2] | 0) + 64 >> 2] = x;x = Ca[c[(c[u >> 2] | 0) + 32 >> 2] & 7](c[(c[u >> 2] | 0) + 40 >> 2] | 0, c[(c[q >> 2] | 0) + 76 >> 2] | 0, 2) | 0;c[(c[q >> 2] | 0) + 68 >> 2] = x;c[(c[q >> 2] | 0) + 5824 >> 2] = 0;c[(c[q >> 2] | 0) + 5788 >> 2] = 1 << (c[o >> 2] | 0) + 6;c[s >> 2] = Ca[c[(c[u >> 2] | 0) + 32 >> 2] & 7](c[(c[u >> 2] | 0) + 40 >> 2] | 0, c[(c[q >> 2] | 0) + 5788 >> 2] | 0, 4) | 0;c[(c[q >> 2] | 0) + 8 >> 2] = c[s >> 2];c[(c[q >> 2] | 0) + 12 >> 2] = c[(c[q >> 2] | 0) + 5788 >> 2] << 2;if (((c[(c[q >> 2] | 0) + 56 >> 2] | 0 ? c[(c[q >> 2] | 0) + 64 >> 2] | 0 : 0) ? c[(c[q >> 2] | 0) + 68 >> 2] | 0 : 0) ? c[(c[q >> 2] | 0) + 8 >> 2] | 0 : 0) {
	            c[(c[q >> 2] | 0) + 5796 >> 2] = (c[s >> 2] | 0) + ((((c[(c[q >> 2] | 0) + 5788 >> 2] | 0) >>> 0) / 2 | 0) << 1);c[(c[q >> 2] | 0) + 5784 >> 2] = (c[(c[q >> 2] | 0) + 8 >> 2] | 0) + ((c[(c[q >> 2] | 0) + 5788 >> 2] | 0) * 3 | 0);c[(c[q >> 2] | 0) + 132 >> 2] = c[l >> 2];c[(c[q >> 2] | 0) + 136 >> 2] = c[p >> 2];a[(c[q >> 2] | 0) + 36 >> 0] = c[m >> 2];c[t >> 2] = yb(c[u >> 2] | 0) | 0;x = c[t >> 2] | 0;i = v;return x | 0;
	          }c[(c[q >> 2] | 0) + 4 >> 2] = 666;c[(c[u >> 2] | 0) + 24 >> 2] = c[2238];xb(c[u >> 2] | 0) | 0;c[t >> 2] = -4;x = c[t >> 2] | 0;i = v;return x | 0;
	        }c[t >> 2] = -2;x = c[t >> 2] | 0;i = v;return x | 0;
	      }c[t >> 2] = -6;x = c[t >> 2] | 0;i = v;return x | 0;
	    }function xb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if (Jb(c[d >> 2] | 0) | 0) {
	        c[b >> 2] = -2;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[e >> 2] = c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 4 >> 2];if (c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 8 >> 2] | 0) Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 8 >> 2] | 0);if (c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 68 >> 2] | 0) Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 68 >> 2] | 0);if (c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 64 >> 2] | 0) Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 64 >> 2] | 0);if (c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 56 >> 2] | 0) Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[(c[d >> 2] | 0) + 28 >> 2] | 0) + 56 >> 2] | 0);Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[d >> 2] | 0) + 28 >> 2] | 0);c[(c[d >> 2] | 0) + 28 >> 2] = 0;c[b >> 2] = (c[e >> 2] | 0) == 113 ? -3 : 0;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function yb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0;e = i;i = i + 16 | 0;b = e + 4 | 0;d = e;c[b >> 2] = a;c[d >> 2] = zb(c[b >> 2] | 0) | 0;if (c[d >> 2] | 0) {
	        d = c[d >> 2] | 0;i = e;return d | 0;
	      }Ab(c[(c[b >> 2] | 0) + 28 >> 2] | 0);d = c[d >> 2] | 0;i = e;return d | 0;
	    }function zb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if (Jb(c[d >> 2] | 0) | 0) {
	        c[b >> 2] = -2;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[(c[d >> 2] | 0) + 20 >> 2] = 0;c[(c[d >> 2] | 0) + 8 >> 2] = 0;c[(c[d >> 2] | 0) + 24 >> 2] = 0;c[(c[d >> 2] | 0) + 44 >> 2] = 2;c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];c[(c[e >> 2] | 0) + 20 >> 2] = 0;c[(c[e >> 2] | 0) + 16 >> 2] = c[(c[e >> 2] | 0) + 8 >> 2];if ((c[(c[e >> 2] | 0) + 24 >> 2] | 0) < 0) c[(c[e >> 2] | 0) + 24 >> 2] = 0 - (c[(c[e >> 2] | 0) + 24 >> 2] | 0);if ((c[(c[e >> 2] | 0) + 24 >> 2] | 0) == 2) a = 57;else a = c[(c[e >> 2] | 0) + 24 >> 2] | 0 ? 42 : 113;c[(c[e >> 2] | 0) + 4 >> 2] = a;if ((c[(c[e >> 2] | 0) + 24 >> 2] | 0) == 2) a = vb(0, 0, 0) | 0;else a = jc(0, 0, 0) | 0;c[(c[d >> 2] | 0) + 48 >> 2] = a;c[(c[e >> 2] | 0) + 40 >> 2] = 0;Ob(c[e >> 2] | 0);c[b >> 2] = 0;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function Ab(a) {
	      a = a | 0;var d = 0,
	          f = 0;d = i;i = i + 16 | 0;f = d;c[f >> 2] = a;c[(c[f >> 2] | 0) + 60 >> 2] = c[(c[f >> 2] | 0) + 44 >> 2] << 1;b[(c[(c[f >> 2] | 0) + 68 >> 2] | 0) + ((c[(c[f >> 2] | 0) + 76 >> 2] | 0) - 1 << 1) >> 1] = 0;Id(c[(c[f >> 2] | 0) + 68 >> 2] | 0, 0, (c[(c[f >> 2] | 0) + 76 >> 2] | 0) - 1 << 1 | 0) | 0;c[(c[f >> 2] | 0) + 128 >> 2] = e[8200 + ((c[(c[f >> 2] | 0) + 132 >> 2] | 0) * 12 | 0) + 2 >> 1];c[(c[f >> 2] | 0) + 140 >> 2] = e[8200 + ((c[(c[f >> 2] | 0) + 132 >> 2] | 0) * 12 | 0) >> 1];c[(c[f >> 2] | 0) + 144 >> 2] = e[8200 + ((c[(c[f >> 2] | 0) + 132 >> 2] | 0) * 12 | 0) + 4 >> 1];c[(c[f >> 2] | 0) + 124 >> 2] = e[8200 + ((c[(c[f >> 2] | 0) + 132 >> 2] | 0) * 12 | 0) + 6 >> 1];c[(c[f >> 2] | 0) + 108 >> 2] = 0;c[(c[f >> 2] | 0) + 92 >> 2] = 0;c[(c[f >> 2] | 0) + 116 >> 2] = 0;c[(c[f >> 2] | 0) + 5812 >> 2] = 0;c[(c[f >> 2] | 0) + 120 >> 2] = 2;c[(c[f >> 2] | 0) + 96 >> 2] = 2;c[(c[f >> 2] | 0) + 104 >> 2] = 0;c[(c[f >> 2] | 0) + 72 >> 2] = 0;i = d;return;
	    }function Bb(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;p = i;i = i + 48 | 0;l = p + 32 | 0;m = p + 28 | 0;f = p + 24 | 0;g = p + 20 | 0;n = p + 16 | 0;h = p + 12 | 0;j = p + 8 | 0;o = p + 4 | 0;e = p;c[m >> 2] = b;c[f >> 2] = d;b = c[m >> 2] | 0;if (((c[(c[m >> 2] | 0) + 12 >> 2] | 0) - 5 | 0) >>> 0 > (c[(c[m >> 2] | 0) + 44 >> 2] | 0) >>> 0) b = c[b + 44 >> 2] | 0;else b = (c[b + 12 >> 2] | 0) - 5 | 0;c[g >> 2] = b;c[o >> 2] = 0;c[e >> 2] = c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2];do {
	        c[n >> 2] = 65535;c[j >> 2] = (c[(c[m >> 2] | 0) + 5820 >> 2] | 0) + 42 >> 3;if ((c[(c[c[m >> 2] >> 2] | 0) + 16 >> 2] | 0) >>> 0 < (c[j >> 2] | 0) >>> 0) break;c[j >> 2] = (c[(c[c[m >> 2] >> 2] | 0) + 16 >> 2] | 0) - (c[j >> 2] | 0);c[h >> 2] = (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - (c[(c[m >> 2] | 0) + 92 >> 2] | 0);if ((c[n >> 2] | 0) >>> 0 > ((c[h >> 2] | 0) + (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) | 0) >>> 0) c[n >> 2] = (c[h >> 2] | 0) + (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0);if ((c[n >> 2] | 0) >>> 0 > (c[j >> 2] | 0) >>> 0) c[n >> 2] = c[j >> 2];if ((c[h >> 2] | 0) >>> 0 > (c[n >> 2] | 0) >>> 0) c[h >> 2] = c[n >> 2];if ((c[n >> 2] | 0) >>> 0 < (c[g >> 2] | 0) >>> 0) {
	          if ((c[n >> 2] | 0) == 0 & (c[f >> 2] | 0) != 4 | (c[f >> 2] | 0) == 0) break;if (((c[n >> 2] | 0) - (c[h >> 2] | 0) | 0) != (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0)) break;
	        }if ((c[f >> 2] | 0) == 4) b = ((c[n >> 2] | 0) - (c[h >> 2] | 0) | 0) == (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0);else b = 0;c[o >> 2] = b ? 1 : 0;Rb(c[m >> 2] | 0, 0, 0, c[o >> 2] | 0);a[(c[(c[m >> 2] | 0) + 8 >> 2] | 0) + ((c[(c[m >> 2] | 0) + 20 >> 2] | 0) - 4) >> 0] = c[n >> 2];a[(c[(c[m >> 2] | 0) + 8 >> 2] | 0) + ((c[(c[m >> 2] | 0) + 20 >> 2] | 0) - 3) >> 0] = (c[n >> 2] | 0) >>> 8;a[(c[(c[m >> 2] | 0) + 8 >> 2] | 0) + ((c[(c[m >> 2] | 0) + 20 >> 2] | 0) - 2) >> 0] = ~c[n >> 2];a[(c[(c[m >> 2] | 0) + 8 >> 2] | 0) + ((c[(c[m >> 2] | 0) + 20 >> 2] | 0) - 1) >> 0] = ~c[n >> 2] >>> 8;Gb(c[c[m >> 2] >> 2] | 0);if (c[h >> 2] | 0) {
	          Sd(c[(c[c[m >> 2] >> 2] | 0) + 12 >> 2] | 0, (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0, c[h >> 2] | 0) | 0;d = (c[c[m >> 2] >> 2] | 0) + 12 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[h >> 2] | 0);d = (c[c[m >> 2] >> 2] | 0) + 16 | 0;c[d >> 2] = (c[d >> 2] | 0) - (c[h >> 2] | 0);d = (c[c[m >> 2] >> 2] | 0) + 20 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[h >> 2] | 0);d = (c[m >> 2] | 0) + 92 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[h >> 2] | 0);c[n >> 2] = (c[n >> 2] | 0) - (c[h >> 2] | 0);
	        }if (c[n >> 2] | 0) {
	          Ib(c[c[m >> 2] >> 2] | 0, c[(c[c[m >> 2] >> 2] | 0) + 12 >> 2] | 0, c[n >> 2] | 0) | 0;d = (c[c[m >> 2] >> 2] | 0) + 12 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[n >> 2] | 0);d = (c[c[m >> 2] >> 2] | 0) + 16 | 0;c[d >> 2] = (c[d >> 2] | 0) - (c[n >> 2] | 0);d = (c[c[m >> 2] >> 2] | 0) + 20 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[n >> 2] | 0);
	        }
	      } while (!(c[o >> 2] | 0));c[e >> 2] = (c[e >> 2] | 0) - (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0);if (c[e >> 2] | 0) {
	        b = c[m >> 2] | 0;if ((c[e >> 2] | 0) >>> 0 >= (c[(c[m >> 2] | 0) + 44 >> 2] | 0) >>> 0) {
	          c[b + 5808 >> 2] = 2;Sd(c[(c[m >> 2] | 0) + 56 >> 2] | 0, (c[c[c[m >> 2] >> 2] >> 2] | 0) + (0 - (c[(c[m >> 2] | 0) + 44 >> 2] | 0)) | 0, c[(c[m >> 2] | 0) + 44 >> 2] | 0) | 0;c[(c[m >> 2] | 0) + 108 >> 2] = c[(c[m >> 2] | 0) + 44 >> 2];
	        } else {
	          if (((c[b + 60 >> 2] | 0) - (c[(c[m >> 2] | 0) + 108 >> 2] | 0) | 0) >>> 0 <= (c[e >> 2] | 0) >>> 0 ? (d = (c[m >> 2] | 0) + 108 | 0, c[d >> 2] = (c[d >> 2] | 0) - (c[(c[m >> 2] | 0) + 44 >> 2] | 0), Sd(c[(c[m >> 2] | 0) + 56 >> 2] | 0, (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 44 >> 2] | 0) | 0, c[(c[m >> 2] | 0) + 108 >> 2] | 0) | 0, (c[(c[m >> 2] | 0) + 5808 >> 2] | 0) >>> 0 < 2) : 0) {
	            d = (c[m >> 2] | 0) + 5808 | 0;c[d >> 2] = (c[d >> 2] | 0) + 1;
	          }Sd((c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 108 >> 2] | 0) | 0, (c[c[c[m >> 2] >> 2] >> 2] | 0) + (0 - (c[e >> 2] | 0)) | 0, c[e >> 2] | 0) | 0;d = (c[m >> 2] | 0) + 108 | 0;c[d >> 2] = (c[d >> 2] | 0) + (c[e >> 2] | 0);
	        }c[(c[m >> 2] | 0) + 92 >> 2] = c[(c[m >> 2] | 0) + 108 >> 2];if ((c[e >> 2] | 0) >>> 0 > ((c[(c[m >> 2] | 0) + 44 >> 2] | 0) - (c[(c[m >> 2] | 0) + 5812 >> 2] | 0) | 0) >>> 0) b = (c[(c[m >> 2] | 0) + 44 >> 2] | 0) - (c[(c[m >> 2] | 0) + 5812 >> 2] | 0) | 0;else b = c[e >> 2] | 0;e = (c[m >> 2] | 0) + 5812 | 0;c[e >> 2] = (c[e >> 2] | 0) + b;
	      }if (c[o >> 2] | 0) {
	        c[l >> 2] = 3;o = c[l >> 2] | 0;i = p;return o | 0;
	      }if (((c[f >> 2] | 0) != 0 & (c[f >> 2] | 0) != 4 ? (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) == 0 : 0) ? (c[(c[m >> 2] | 0) + 108 >> 2] | 0) == (c[(c[m >> 2] | 0) + 92 >> 2] | 0) : 0) {
	        c[l >> 2] = 1;o = c[l >> 2] | 0;i = p;return o | 0;
	      }c[j >> 2] = (c[(c[m >> 2] | 0) + 60 >> 2] | 0) - (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - 1;if ((c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) >>> 0 > (c[j >> 2] | 0) >>> 0 ? (c[(c[m >> 2] | 0) + 92 >> 2] | 0) >= (c[(c[m >> 2] | 0) + 44 >> 2] | 0) : 0) {
	        e = (c[m >> 2] | 0) + 92 | 0;c[e >> 2] = (c[e >> 2] | 0) - (c[(c[m >> 2] | 0) + 44 >> 2] | 0);e = (c[m >> 2] | 0) + 108 | 0;c[e >> 2] = (c[e >> 2] | 0) - (c[(c[m >> 2] | 0) + 44 >> 2] | 0);Sd(c[(c[m >> 2] | 0) + 56 >> 2] | 0, (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 44 >> 2] | 0) | 0, c[(c[m >> 2] | 0) + 108 >> 2] | 0) | 0;if ((c[(c[m >> 2] | 0) + 5808 >> 2] | 0) >>> 0 < 2) {
	          e = (c[m >> 2] | 0) + 5808 | 0;c[e >> 2] = (c[e >> 2] | 0) + 1;
	        }c[j >> 2] = (c[j >> 2] | 0) + (c[(c[m >> 2] | 0) + 44 >> 2] | 0);
	      }if ((c[j >> 2] | 0) >>> 0 > (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) >>> 0) c[j >> 2] = c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2];if (c[j >> 2] | 0) {
	        Ib(c[c[m >> 2] >> 2] | 0, (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 108 >> 2] | 0) | 0, c[j >> 2] | 0) | 0;e = (c[m >> 2] | 0) + 108 | 0;c[e >> 2] = (c[e >> 2] | 0) + (c[j >> 2] | 0);
	      }c[j >> 2] = (c[(c[m >> 2] | 0) + 5820 >> 2] | 0) + 42 >> 3;if (((c[(c[m >> 2] | 0) + 12 >> 2] | 0) - (c[j >> 2] | 0) | 0) >>> 0 > 65535) b = 65535;else b = (c[(c[m >> 2] | 0) + 12 >> 2] | 0) - (c[j >> 2] | 0) | 0;c[j >> 2] = b;if ((c[j >> 2] | 0) >>> 0 > (c[(c[m >> 2] | 0) + 44 >> 2] | 0) >>> 0) b = c[(c[m >> 2] | 0) + 44 >> 2] | 0;else b = c[j >> 2] | 0;c[g >> 2] = b;c[h >> 2] = (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - (c[(c[m >> 2] | 0) + 92 >> 2] | 0);if ((c[h >> 2] | 0) >>> 0 < (c[g >> 2] | 0) >>> 0) {
	        if ((((c[h >> 2] | 0) != 0 | (c[f >> 2] | 0) == 4) & (c[f >> 2] | 0) != 0 ? (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) == 0 : 0) ? (c[h >> 2] | 0) >>> 0 <= (c[j >> 2] | 0) >>> 0 : 0) k = 57;
	      } else k = 57;if ((k | 0) == 57) {
	        c[n >> 2] = (c[h >> 2] | 0) >>> 0 > (c[j >> 2] | 0) >>> 0 ? c[j >> 2] | 0 : c[h >> 2] | 0;if ((c[f >> 2] | 0) == 4 ? (c[(c[c[m >> 2] >> 2] | 0) + 4 >> 2] | 0) == 0 : 0) b = (c[n >> 2] | 0) == (c[h >> 2] | 0);else b = 0;c[o >> 2] = b ? 1 : 0;Rb(c[m >> 2] | 0, (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0, c[n >> 2] | 0, c[o >> 2] | 0);k = (c[m >> 2] | 0) + 92 | 0;c[k >> 2] = (c[k >> 2] | 0) + (c[n >> 2] | 0);Gb(c[c[m >> 2] >> 2] | 0);
	      }c[l >> 2] = c[o >> 2] | 0 ? 2 : 0;o = c[l >> 2] | 0;i = p;return o | 0;
	    }function Cb(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;q = i;i = i + 32 | 0;o = q + 16 | 0;p = q + 12 | 0;n = q + 8 | 0;h = q + 4 | 0;j = q;k = q + 23 | 0;l = q + 20 | 0;m = q + 22 | 0;c[p >> 2] = f;c[n >> 2] = g;while (1) {
	        if ((c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0 < 262) {
	          Eb(c[p >> 2] | 0);if ((c[n >> 2] | 0) == 0 ? (c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0 < 262 : 0) {
	            f = 4;break;
	          }if (!(c[(c[p >> 2] | 0) + 116 >> 2] | 0)) {
	            f = 27;break;
	          }
	        }c[h >> 2] = 0;if ((c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0 >= 3) {
	          c[(c[p >> 2] | 0) + 72 >> 2] = (c[(c[p >> 2] | 0) + 72 >> 2] << c[(c[p >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[p >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) + 2) >> 0] | 0)) & c[(c[p >> 2] | 0) + 84 >> 2];g = b[(c[(c[p >> 2] | 0) + 68 >> 2] | 0) + (c[(c[p >> 2] | 0) + 72 >> 2] << 1) >> 1] | 0;b[(c[(c[p >> 2] | 0) + 64 >> 2] | 0) + ((c[(c[p >> 2] | 0) + 108 >> 2] & c[(c[p >> 2] | 0) + 52 >> 2]) << 1) >> 1] = g;c[h >> 2] = g & 65535;b[(c[(c[p >> 2] | 0) + 68 >> 2] | 0) + (c[(c[p >> 2] | 0) + 72 >> 2] << 1) >> 1] = c[(c[p >> 2] | 0) + 108 >> 2];
	        }if (c[h >> 2] | 0 ? ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) - (c[h >> 2] | 0) | 0) >>> 0 <= ((c[(c[p >> 2] | 0) + 44 >> 2] | 0) - 262 | 0) >>> 0 : 0) {
	          g = Fb(c[p >> 2] | 0, c[h >> 2] | 0) | 0;c[(c[p >> 2] | 0) + 96 >> 2] = g;
	        }f = c[p >> 2] | 0;do {
	          if ((c[(c[p >> 2] | 0) + 96 >> 2] | 0) >>> 0 >= 3) {
	            a[k >> 0] = (c[f + 96 >> 2] | 0) - 3;b[l >> 1] = (c[(c[p >> 2] | 0) + 108 >> 2] | 0) - (c[(c[p >> 2] | 0) + 112 >> 2] | 0);b[(c[(c[p >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[p >> 2] | 0) + 5792 >> 2] << 1) >> 1] = b[l >> 1] | 0;g = a[k >> 0] | 0;r = (c[p >> 2] | 0) + 5792 | 0;f = c[r >> 2] | 0;c[r >> 2] = f + 1;a[(c[(c[p >> 2] | 0) + 5784 >> 2] | 0) + f >> 0] = g;b[l >> 1] = (b[l >> 1] | 0) + -1 << 16 >> 16;f = (c[p >> 2] | 0) + 148 + ((d[11994 + (d[k >> 0] | 0) >> 0] | 0) + 256 + 1 << 2) | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;f = e[l >> 1] | 0;if ((e[l >> 1] | 0 | 0) < 256) f = a[11482 + f >> 0] | 0;else f = a[11482 + (256 + (f >> 7)) >> 0] | 0;r = (c[p >> 2] | 0) + 2440 + ((f & 255) << 2) | 0;b[r >> 1] = (b[r >> 1] | 0) + 1 << 16 >> 16;c[j >> 2] = (c[(c[p >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[p >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;r = (c[p >> 2] | 0) + 116 | 0;c[r >> 2] = (c[r >> 2] | 0) - (c[(c[p >> 2] | 0) + 96 >> 2] | 0);if ((c[(c[p >> 2] | 0) + 96 >> 2] | 0) >>> 0 <= (c[(c[p >> 2] | 0) + 128 >> 2] | 0) >>> 0 ? (c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0 >= 3 : 0) {
	              r = (c[p >> 2] | 0) + 96 | 0;c[r >> 2] = (c[r >> 2] | 0) + -1;do {
	                g = (c[p >> 2] | 0) + 108 | 0;c[g >> 2] = (c[g >> 2] | 0) + 1;c[(c[p >> 2] | 0) + 72 >> 2] = (c[(c[p >> 2] | 0) + 72 >> 2] << c[(c[p >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[p >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) + 2) >> 0] | 0)) & c[(c[p >> 2] | 0) + 84 >> 2];g = b[(c[(c[p >> 2] | 0) + 68 >> 2] | 0) + (c[(c[p >> 2] | 0) + 72 >> 2] << 1) >> 1] | 0;b[(c[(c[p >> 2] | 0) + 64 >> 2] | 0) + ((c[(c[p >> 2] | 0) + 108 >> 2] & c[(c[p >> 2] | 0) + 52 >> 2]) << 1) >> 1] = g;c[h >> 2] = g & 65535;b[(c[(c[p >> 2] | 0) + 68 >> 2] | 0) + (c[(c[p >> 2] | 0) + 72 >> 2] << 1) >> 1] = c[(c[p >> 2] | 0) + 108 >> 2];g = (c[p >> 2] | 0) + 96 | 0;r = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = r;
	              } while ((r | 0) != 0);r = (c[p >> 2] | 0) + 108 | 0;c[r >> 2] = (c[r >> 2] | 0) + 1;break;
	            }r = (c[p >> 2] | 0) + 108 | 0;c[r >> 2] = (c[r >> 2] | 0) + (c[(c[p >> 2] | 0) + 96 >> 2] | 0);c[(c[p >> 2] | 0) + 96 >> 2] = 0;c[(c[p >> 2] | 0) + 72 >> 2] = d[(c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 108 >> 2] | 0) >> 0];c[(c[p >> 2] | 0) + 72 >> 2] = (c[(c[p >> 2] | 0) + 72 >> 2] << c[(c[p >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[p >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) + 1) >> 0] | 0)) & c[(c[p >> 2] | 0) + 84 >> 2];
	          } else {
	            a[m >> 0] = a[(c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[f + 108 >> 2] | 0) >> 0] | 0;b[(c[(c[p >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[p >> 2] | 0) + 5792 >> 2] << 1) >> 1] = 0;g = a[m >> 0] | 0;f = (c[p >> 2] | 0) + 5792 | 0;r = c[f >> 2] | 0;c[f >> 2] = r + 1;a[(c[(c[p >> 2] | 0) + 5784 >> 2] | 0) + r >> 0] = g;r = (c[p >> 2] | 0) + 148 + ((d[m >> 0] | 0) << 2) | 0;b[r >> 1] = (b[r >> 1] | 0) + 1 << 16 >> 16;c[j >> 2] = (c[(c[p >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[p >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;r = (c[p >> 2] | 0) + 116 | 0;c[r >> 2] = (c[r >> 2] | 0) + -1;r = (c[p >> 2] | 0) + 108 | 0;c[r >> 2] = (c[r >> 2] | 0) + 1;
	          }
	        } while (0);if (!(c[j >> 2] | 0)) continue;if ((c[(c[p >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[p >> 2] | 0, f, (c[(c[p >> 2] | 0) + 108 >> 2] | 0) - (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[p >> 2] | 0) + 92 >> 2] = c[(c[p >> 2] | 0) + 108 >> 2];Gb(c[c[p >> 2] >> 2] | 0);if (!(c[(c[c[p >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          f = 26;break;
	        }
	      }if ((f | 0) == 4) {
	        c[o >> 2] = 0;r = c[o >> 2] | 0;i = q;return r | 0;
	      } else if ((f | 0) == 26) {
	        c[o >> 2] = 0;r = c[o >> 2] | 0;i = q;return r | 0;
	      } else if ((f | 0) == 27) {
	        if ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) >>> 0 < 2) f = c[(c[p >> 2] | 0) + 108 >> 2] | 0;else f = 2;c[(c[p >> 2] | 0) + 5812 >> 2] = f;g = c[p >> 2] | 0;if ((c[n >> 2] | 0) == 4) {
	          if ((c[(c[p >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(g, f, (c[(c[p >> 2] | 0) + 108 >> 2] | 0) - (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0, 1);c[(c[p >> 2] | 0) + 92 >> 2] = c[(c[p >> 2] | 0) + 108 >> 2];Gb(c[c[p >> 2] >> 2] | 0);if (!(c[(c[c[p >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[o >> 2] = 2;r = c[o >> 2] | 0;i = q;return r | 0;
	          } else {
	            c[o >> 2] = 3;r = c[o >> 2] | 0;i = q;return r | 0;
	          }
	        }if (c[g + 5792 >> 2] | 0) {
	          if ((c[(c[p >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[p >> 2] | 0, f, (c[(c[p >> 2] | 0) + 108 >> 2] | 0) - (c[(c[p >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[p >> 2] | 0) + 92 >> 2] = c[(c[p >> 2] | 0) + 108 >> 2];Gb(c[c[p >> 2] >> 2] | 0);if (!(c[(c[c[p >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[o >> 2] = 0;r = c[o >> 2] | 0;i = q;return r | 0;
	          }
	        }c[o >> 2] = 1;r = c[o >> 2] | 0;i = q;return r | 0;
	      }return 0;
	    }function Db(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0;s = i;i = i + 32 | 0;q = s + 20 | 0;r = s + 16 | 0;p = s + 12 | 0;j = s + 8 | 0;o = s + 4 | 0;k = s;l = s + 28 | 0;m = s + 24 | 0;h = s + 27 | 0;n = s + 26 | 0;c[r >> 2] = f;c[p >> 2] = g;while (1) {
	        if ((c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 < 262) {
	          Eb(c[r >> 2] | 0);if ((c[p >> 2] | 0) == 0 ? (c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 < 262 : 0) {
	            f = 4;break;
	          }if (!(c[(c[r >> 2] | 0) + 116 >> 2] | 0)) {
	            f = 38;break;
	          }
	        }c[j >> 2] = 0;if ((c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 >= 3) {
	          c[(c[r >> 2] | 0) + 72 >> 2] = (c[(c[r >> 2] | 0) + 72 >> 2] << c[(c[r >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[r >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[r >> 2] | 0) + 108 >> 2] | 0) + 2) >> 0] | 0)) & c[(c[r >> 2] | 0) + 84 >> 2];g = b[(c[(c[r >> 2] | 0) + 68 >> 2] | 0) + (c[(c[r >> 2] | 0) + 72 >> 2] << 1) >> 1] | 0;b[(c[(c[r >> 2] | 0) + 64 >> 2] | 0) + ((c[(c[r >> 2] | 0) + 108 >> 2] & c[(c[r >> 2] | 0) + 52 >> 2]) << 1) >> 1] = g;c[j >> 2] = g & 65535;b[(c[(c[r >> 2] | 0) + 68 >> 2] | 0) + (c[(c[r >> 2] | 0) + 72 >> 2] << 1) >> 1] = c[(c[r >> 2] | 0) + 108 >> 2];
	        }c[(c[r >> 2] | 0) + 120 >> 2] = c[(c[r >> 2] | 0) + 96 >> 2];c[(c[r >> 2] | 0) + 100 >> 2] = c[(c[r >> 2] | 0) + 112 >> 2];c[(c[r >> 2] | 0) + 96 >> 2] = 2;do {
	          if (((c[j >> 2] | 0 ? (c[(c[r >> 2] | 0) + 120 >> 2] | 0) >>> 0 < (c[(c[r >> 2] | 0) + 128 >> 2] | 0) >>> 0 : 0) ? ((c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[j >> 2] | 0) | 0) >>> 0 <= ((c[(c[r >> 2] | 0) + 44 >> 2] | 0) - 262 | 0) >>> 0 : 0) ? (g = Fb(c[r >> 2] | 0, c[j >> 2] | 0) | 0, c[(c[r >> 2] | 0) + 96 >> 2] = g, (c[(c[r >> 2] | 0) + 96 >> 2] | 0) >>> 0 <= 5) : 0) {
	            if ((c[(c[r >> 2] | 0) + 136 >> 2] | 0) != 1) {
	              if ((c[(c[r >> 2] | 0) + 96 >> 2] | 0) != 3) break;if (((c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 112 >> 2] | 0) | 0) >>> 0 <= 4096) break;
	            }c[(c[r >> 2] | 0) + 96 >> 2] = 2;
	          }
	        } while (0);if ((c[(c[r >> 2] | 0) + 120 >> 2] | 0) >>> 0 >= 3 ? (c[(c[r >> 2] | 0) + 96 >> 2] | 0) >>> 0 <= (c[(c[r >> 2] | 0) + 120 >> 2] | 0) >>> 0 : 0) {
	          c[k >> 2] = (c[(c[r >> 2] | 0) + 108 >> 2] | 0) + (c[(c[r >> 2] | 0) + 116 >> 2] | 0) - 3;a[l >> 0] = (c[(c[r >> 2] | 0) + 120 >> 2] | 0) - 3;b[m >> 1] = (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - 1 - (c[(c[r >> 2] | 0) + 100 >> 2] | 0);b[(c[(c[r >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[r >> 2] | 0) + 5792 >> 2] << 1) >> 1] = b[m >> 1] | 0;g = a[l >> 0] | 0;t = (c[r >> 2] | 0) + 5792 | 0;f = c[t >> 2] | 0;c[t >> 2] = f + 1;a[(c[(c[r >> 2] | 0) + 5784 >> 2] | 0) + f >> 0] = g;b[m >> 1] = (b[m >> 1] | 0) + -1 << 16 >> 16;f = (c[r >> 2] | 0) + 148 + ((d[11994 + (d[l >> 0] | 0) >> 0] | 0) + 256 + 1 << 2) | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;f = e[m >> 1] | 0;if ((e[m >> 1] | 0 | 0) < 256) f = a[11482 + f >> 0] | 0;else f = a[11482 + (256 + (f >> 7)) >> 0] | 0;t = (c[r >> 2] | 0) + 2440 + ((f & 255) << 2) | 0;b[t >> 1] = (b[t >> 1] | 0) + 1 << 16 >> 16;c[o >> 2] = (c[(c[r >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[r >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;t = (c[r >> 2] | 0) + 116 | 0;c[t >> 2] = (c[t >> 2] | 0) - ((c[(c[r >> 2] | 0) + 120 >> 2] | 0) - 1);t = (c[r >> 2] | 0) + 120 | 0;c[t >> 2] = (c[t >> 2] | 0) - 2;do {
	            g = (c[r >> 2] | 0) + 108 | 0;t = (c[g >> 2] | 0) + 1 | 0;c[g >> 2] = t;if (t >>> 0 <= (c[k >> 2] | 0) >>> 0) {
	              c[(c[r >> 2] | 0) + 72 >> 2] = (c[(c[r >> 2] | 0) + 72 >> 2] << c[(c[r >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[r >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[r >> 2] | 0) + 108 >> 2] | 0) + 2) >> 0] | 0)) & c[(c[r >> 2] | 0) + 84 >> 2];t = b[(c[(c[r >> 2] | 0) + 68 >> 2] | 0) + (c[(c[r >> 2] | 0) + 72 >> 2] << 1) >> 1] | 0;b[(c[(c[r >> 2] | 0) + 64 >> 2] | 0) + ((c[(c[r >> 2] | 0) + 108 >> 2] & c[(c[r >> 2] | 0) + 52 >> 2]) << 1) >> 1] = t;c[j >> 2] = t & 65535;b[(c[(c[r >> 2] | 0) + 68 >> 2] | 0) + (c[(c[r >> 2] | 0) + 72 >> 2] << 1) >> 1] = c[(c[r >> 2] | 0) + 108 >> 2];
	            }g = (c[r >> 2] | 0) + 120 | 0;t = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = t;
	          } while ((t | 0) != 0);c[(c[r >> 2] | 0) + 104 >> 2] = 0;c[(c[r >> 2] | 0) + 96 >> 2] = 2;t = (c[r >> 2] | 0) + 108 | 0;c[t >> 2] = (c[t >> 2] | 0) + 1;if (!(c[o >> 2] | 0)) continue;if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[r >> 2] | 0, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            f = 29;break;
	          } else continue;
	        }f = c[r >> 2] | 0;if (!(c[(c[r >> 2] | 0) + 104 >> 2] | 0)) {
	          c[f + 104 >> 2] = 1;t = (c[r >> 2] | 0) + 108 | 0;c[t >> 2] = (c[t >> 2] | 0) + 1;t = (c[r >> 2] | 0) + 116 | 0;c[t >> 2] = (c[t >> 2] | 0) + -1;continue;
	        }a[h >> 0] = a[(c[(c[r >> 2] | 0) + 56 >> 2] | 0) + ((c[f + 108 >> 2] | 0) - 1) >> 0] | 0;b[(c[(c[r >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[r >> 2] | 0) + 5792 >> 2] << 1) >> 1] = 0;g = a[h >> 0] | 0;f = (c[r >> 2] | 0) + 5792 | 0;t = c[f >> 2] | 0;c[f >> 2] = t + 1;a[(c[(c[r >> 2] | 0) + 5784 >> 2] | 0) + t >> 0] = g;t = (c[r >> 2] | 0) + 148 + ((d[h >> 0] | 0) << 2) | 0;b[t >> 1] = (b[t >> 1] | 0) + 1 << 16 >> 16;c[o >> 2] = (c[(c[r >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[r >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;if (c[o >> 2] | 0) {
	          if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[r >> 2] | 0, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);
	        }t = (c[r >> 2] | 0) + 108 | 0;c[t >> 2] = (c[t >> 2] | 0) + 1;t = (c[r >> 2] | 0) + 116 | 0;c[t >> 2] = (c[t >> 2] | 0) + -1;if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          f = 36;break;
	        }
	      }if ((f | 0) == 4) {
	        c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	      } else if ((f | 0) == 29) {
	        c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	      } else if ((f | 0) == 36) {
	        c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	      } else if ((f | 0) == 38) {
	        if (c[(c[r >> 2] | 0) + 104 >> 2] | 0) {
	          a[n >> 0] = a[(c[(c[r >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[r >> 2] | 0) + 108 >> 2] | 0) - 1) >> 0] | 0;b[(c[(c[r >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[r >> 2] | 0) + 5792 >> 2] << 1) >> 1] = 0;m = a[n >> 0] | 0;l = (c[r >> 2] | 0) + 5792 | 0;t = c[l >> 2] | 0;c[l >> 2] = t + 1;a[(c[(c[r >> 2] | 0) + 5784 >> 2] | 0) + t >> 0] = m;t = (c[r >> 2] | 0) + 148 + ((d[n >> 0] | 0) << 2) | 0;b[t >> 1] = (b[t >> 1] | 0) + 1 << 16 >> 16;c[o >> 2] = (c[(c[r >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[r >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;c[(c[r >> 2] | 0) + 104 >> 2] = 0;
	        }if ((c[(c[r >> 2] | 0) + 108 >> 2] | 0) >>> 0 < 2) f = c[(c[r >> 2] | 0) + 108 >> 2] | 0;else f = 2;c[(c[r >> 2] | 0) + 5812 >> 2] = f;g = c[r >> 2] | 0;if ((c[p >> 2] | 0) == 4) {
	          if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(g, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 1);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[q >> 2] = 2;t = c[q >> 2] | 0;i = s;return t | 0;
	          } else {
	            c[q >> 2] = 3;t = c[q >> 2] | 0;i = s;return t | 0;
	          }
	        }if (c[g + 5792 >> 2] | 0) {
	          if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[r >> 2] | 0, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	          }
	        }c[q >> 2] = 1;t = c[q >> 2] | 0;i = s;return t | 0;
	      }return 0;
	    }function Eb(a) {
	      a = a | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 32 | 0;j = m + 24 | 0;e = m + 20 | 0;f = m + 16 | 0;g = m + 12 | 0;h = m + 8 | 0;k = m + 4 | 0;l = m;c[j >> 2] = a;c[g >> 2] = c[(c[j >> 2] | 0) + 44 >> 2];do {
	        c[f >> 2] = (c[(c[j >> 2] | 0) + 60 >> 2] | 0) - (c[(c[j >> 2] | 0) + 116 >> 2] | 0) - (c[(c[j >> 2] | 0) + 108 >> 2] | 0);if ((c[(c[j >> 2] | 0) + 108 >> 2] | 0) >>> 0 >= ((c[g >> 2] | 0) + ((c[(c[j >> 2] | 0) + 44 >> 2] | 0) - 262) | 0) >>> 0) {
	          Sd(c[(c[j >> 2] | 0) + 56 >> 2] | 0, (c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[g >> 2] | 0) | 0, (c[g >> 2] | 0) - (c[f >> 2] | 0) | 0) | 0;a = (c[j >> 2] | 0) + 112 | 0;c[a >> 2] = (c[a >> 2] | 0) - (c[g >> 2] | 0);a = (c[j >> 2] | 0) + 108 | 0;c[a >> 2] = (c[a >> 2] | 0) - (c[g >> 2] | 0);a = (c[j >> 2] | 0) + 92 | 0;c[a >> 2] = (c[a >> 2] | 0) - (c[g >> 2] | 0);Hb(c[j >> 2] | 0);c[f >> 2] = (c[f >> 2] | 0) + (c[g >> 2] | 0);
	        }if (!(c[(c[c[j >> 2] >> 2] | 0) + 4 >> 2] | 0)) break;c[e >> 2] = Ib(c[c[j >> 2] >> 2] | 0, (c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[(c[j >> 2] | 0) + 108 >> 2] | 0) + (c[(c[j >> 2] | 0) + 116 >> 2] | 0) | 0, c[f >> 2] | 0) | 0;a = (c[j >> 2] | 0) + 116 | 0;c[a >> 2] = (c[a >> 2] | 0) + (c[e >> 2] | 0);a: do {
	          if (((c[(c[j >> 2] | 0) + 116 >> 2] | 0) + (c[(c[j >> 2] | 0) + 5812 >> 2] | 0) | 0) >>> 0 >= 3) {
	            c[h >> 2] = (c[(c[j >> 2] | 0) + 108 >> 2] | 0) - (c[(c[j >> 2] | 0) + 5812 >> 2] | 0);c[(c[j >> 2] | 0) + 72 >> 2] = d[(c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[h >> 2] | 0) >> 0];c[(c[j >> 2] | 0) + 72 >> 2] = (c[(c[j >> 2] | 0) + 72 >> 2] << c[(c[j >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[j >> 2] | 0) + 56 >> 2] | 0) + ((c[h >> 2] | 0) + 1) >> 0] | 0)) & c[(c[j >> 2] | 0) + 84 >> 2];do {
	              if (!(c[(c[j >> 2] | 0) + 5812 >> 2] | 0)) break a;c[(c[j >> 2] | 0) + 72 >> 2] = (c[(c[j >> 2] | 0) + 72 >> 2] << c[(c[j >> 2] | 0) + 88 >> 2] ^ (d[(c[(c[j >> 2] | 0) + 56 >> 2] | 0) + ((c[h >> 2] | 0) + 3 - 1) >> 0] | 0)) & c[(c[j >> 2] | 0) + 84 >> 2];b[(c[(c[j >> 2] | 0) + 64 >> 2] | 0) + ((c[h >> 2] & c[(c[j >> 2] | 0) + 52 >> 2]) << 1) >> 1] = b[(c[(c[j >> 2] | 0) + 68 >> 2] | 0) + (c[(c[j >> 2] | 0) + 72 >> 2] << 1) >> 1] | 0;b[(c[(c[j >> 2] | 0) + 68 >> 2] | 0) + (c[(c[j >> 2] | 0) + 72 >> 2] << 1) >> 1] = c[h >> 2];c[h >> 2] = (c[h >> 2] | 0) + 1;a = (c[j >> 2] | 0) + 5812 | 0;c[a >> 2] = (c[a >> 2] | 0) + -1;
	            } while (((c[(c[j >> 2] | 0) + 116 >> 2] | 0) + (c[(c[j >> 2] | 0) + 5812 >> 2] | 0) | 0) >>> 0 >= 3);
	          }
	        } while (0);if ((c[(c[j >> 2] | 0) + 116 >> 2] | 0) >>> 0 >= 262) break;
	      } while ((c[(c[c[j >> 2] >> 2] | 0) + 4 >> 2] | 0) != 0);if ((c[(c[j >> 2] | 0) + 5824 >> 2] | 0) >>> 0 >= (c[(c[j >> 2] | 0) + 60 >> 2] | 0) >>> 0) {
	        i = m;return;
	      }c[k >> 2] = (c[(c[j >> 2] | 0) + 108 >> 2] | 0) + (c[(c[j >> 2] | 0) + 116 >> 2] | 0);a = c[j >> 2] | 0;if ((c[(c[j >> 2] | 0) + 5824 >> 2] | 0) >>> 0 < (c[k >> 2] | 0) >>> 0) {
	        h = (c[a + 60 >> 2] | 0) - (c[k >> 2] | 0) | 0;c[l >> 2] = h;c[l >> 2] = (c[l >> 2] | 0) >>> 0 > 258 ? 258 : h;Id((c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[k >> 2] | 0) | 0, 0, c[l >> 2] | 0) | 0;c[(c[j >> 2] | 0) + 5824 >> 2] = (c[k >> 2] | 0) + (c[l >> 2] | 0);i = m;return;
	      }if ((c[a + 5824 >> 2] | 0) >>> 0 >= ((c[k >> 2] | 0) + 258 | 0) >>> 0) {
	        i = m;return;
	      }c[l >> 2] = (c[k >> 2] | 0) + 258 - (c[(c[j >> 2] | 0) + 5824 >> 2] | 0);if ((c[l >> 2] | 0) >>> 0 > ((c[(c[j >> 2] | 0) + 60 >> 2] | 0) - (c[(c[j >> 2] | 0) + 5824 >> 2] | 0) | 0) >>> 0) c[l >> 2] = (c[(c[j >> 2] | 0) + 60 >> 2] | 0) - (c[(c[j >> 2] | 0) + 5824 >> 2] | 0);Id((c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[(c[j >> 2] | 0) + 5824 >> 2] | 0) | 0, 0, c[l >> 2] | 0) | 0;k = (c[j >> 2] | 0) + 5824 | 0;c[k >> 2] = (c[k >> 2] | 0) + (c[l >> 2] | 0);i = m;return;
	    }function Fb(b, f) {
	      b = b | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0;w = i;i = i + 64 | 0;o = w + 48 | 0;p = w + 44 | 0;q = w + 40 | 0;r = w + 36 | 0;s = w + 32 | 0;t = w + 28 | 0;u = w + 24 | 0;v = w + 20 | 0;g = w + 16 | 0;h = w + 12 | 0;j = w + 8 | 0;k = w + 4 | 0;l = w;m = w + 53 | 0;n = w + 52 | 0;c[p >> 2] = b;c[q >> 2] = f;c[r >> 2] = c[(c[p >> 2] | 0) + 124 >> 2];c[s >> 2] = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 108 >> 2] | 0);c[v >> 2] = c[(c[p >> 2] | 0) + 120 >> 2];c[g >> 2] = c[(c[p >> 2] | 0) + 144 >> 2];if ((c[(c[p >> 2] | 0) + 108 >> 2] | 0) >>> 0 > ((c[(c[p >> 2] | 0) + 44 >> 2] | 0) - 262 | 0) >>> 0) b = (c[(c[p >> 2] | 0) + 108 >> 2] | 0) - ((c[(c[p >> 2] | 0) + 44 >> 2] | 0) - 262) | 0;else b = 0;c[h >> 2] = b;c[j >> 2] = c[(c[p >> 2] | 0) + 64 >> 2];c[k >> 2] = c[(c[p >> 2] | 0) + 52 >> 2];c[l >> 2] = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[(c[p >> 2] | 0) + 108 >> 2] | 0) + 258;a[m >> 0] = a[(c[s >> 2] | 0) + ((c[v >> 2] | 0) - 1) >> 0] | 0;a[n >> 0] = a[(c[s >> 2] | 0) + (c[v >> 2] | 0) >> 0] | 0;if ((c[(c[p >> 2] | 0) + 120 >> 2] | 0) >>> 0 >= (c[(c[p >> 2] | 0) + 140 >> 2] | 0) >>> 0) c[r >> 2] = (c[r >> 2] | 0) >>> 2;if ((c[g >> 2] | 0) >>> 0 > (c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0) c[g >> 2] = c[(c[p >> 2] | 0) + 116 >> 2];do {
	        c[t >> 2] = (c[(c[p >> 2] | 0) + 56 >> 2] | 0) + (c[q >> 2] | 0);if ((((d[(c[t >> 2] | 0) + (c[v >> 2] | 0) >> 0] | 0 | 0) == (d[n >> 0] | 0 | 0) ? (d[(c[t >> 2] | 0) + ((c[v >> 2] | 0) - 1) >> 0] | 0 | 0) == (d[m >> 0] | 0 | 0) : 0) ? (d[c[t >> 2] >> 0] | 0 | 0) == (d[c[s >> 2] >> 0] | 0 | 0) : 0) ? (f = (c[t >> 2] | 0) + 1 | 0, c[t >> 2] = f, (d[f >> 0] | 0 | 0) == (d[(c[s >> 2] | 0) + 1 >> 0] | 0 | 0)) : 0) {
	          c[s >> 2] = (c[s >> 2] | 0) + 2;c[t >> 2] = (c[t >> 2] | 0) + 1;do {
	            b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;b = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = b;b = d[b >> 0] | 0;f = (c[t >> 2] | 0) + 1 | 0;c[t >> 2] = f;if ((b | 0) != (d[f >> 0] | 0 | 0)) break;
	          } while ((c[s >> 2] | 0) >>> 0 < (c[l >> 2] | 0) >>> 0);c[u >> 2] = 258 - ((c[l >> 2] | 0) - (c[s >> 2] | 0));c[s >> 2] = (c[l >> 2] | 0) + -258;if ((c[u >> 2] | 0) > (c[v >> 2] | 0)) {
	            c[(c[p >> 2] | 0) + 112 >> 2] = c[q >> 2];c[v >> 2] = c[u >> 2];if ((c[u >> 2] | 0) >= (c[g >> 2] | 0)) break;a[m >> 0] = a[(c[s >> 2] | 0) + ((c[v >> 2] | 0) - 1) >> 0] | 0;a[n >> 0] = a[(c[s >> 2] | 0) + (c[v >> 2] | 0) >> 0] | 0;
	          }
	        }f = e[(c[j >> 2] | 0) + ((c[q >> 2] & c[k >> 2]) << 1) >> 1] | 0;c[q >> 2] = f;if (f >>> 0 <= (c[h >> 2] | 0) >>> 0) break;f = (c[r >> 2] | 0) + -1 | 0;c[r >> 2] = f;
	      } while ((f | 0) != 0);if ((c[v >> 2] | 0) >>> 0 <= (c[(c[p >> 2] | 0) + 116 >> 2] | 0) >>> 0) {
	        c[o >> 2] = c[v >> 2];v = c[o >> 2] | 0;i = w;return v | 0;
	      } else {
	        c[o >> 2] = c[(c[p >> 2] | 0) + 116 >> 2];v = c[o >> 2] | 0;i = w;return v | 0;
	      }return 0;
	    }function Gb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[b >> 2] = a;c[e >> 2] = c[(c[b >> 2] | 0) + 28 >> 2];Tb(c[e >> 2] | 0);c[d >> 2] = c[(c[e >> 2] | 0) + 20 >> 2];if ((c[d >> 2] | 0) >>> 0 > (c[(c[b >> 2] | 0) + 16 >> 2] | 0) >>> 0) c[d >> 2] = c[(c[b >> 2] | 0) + 16 >> 2];if (!(c[d >> 2] | 0)) {
	        i = f;return;
	      }Sd(c[(c[b >> 2] | 0) + 12 >> 2] | 0, c[(c[e >> 2] | 0) + 16 >> 2] | 0, c[d >> 2] | 0) | 0;a = (c[b >> 2] | 0) + 12 | 0;c[a >> 2] = (c[a >> 2] | 0) + (c[d >> 2] | 0);a = (c[e >> 2] | 0) + 16 | 0;c[a >> 2] = (c[a >> 2] | 0) + (c[d >> 2] | 0);a = (c[b >> 2] | 0) + 20 | 0;c[a >> 2] = (c[a >> 2] | 0) + (c[d >> 2] | 0);b = (c[b >> 2] | 0) + 16 | 0;c[b >> 2] = (c[b >> 2] | 0) - (c[d >> 2] | 0);b = (c[e >> 2] | 0) + 20 | 0;c[b >> 2] = (c[b >> 2] | 0) - (c[d >> 2] | 0);if (c[(c[e >> 2] | 0) + 20 >> 2] | 0) {
	        i = f;return;
	      }c[(c[e >> 2] | 0) + 16 >> 2] = c[(c[e >> 2] | 0) + 8 >> 2];i = f;return;
	    }function Hb(a) {
	      a = a | 0;var d = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0;k = i;i = i + 32 | 0;d = k + 16 | 0;f = k + 12 | 0;g = k + 8 | 0;h = k + 4 | 0;j = k;c[d >> 2] = a;c[j >> 2] = c[(c[d >> 2] | 0) + 44 >> 2];c[f >> 2] = c[(c[d >> 2] | 0) + 76 >> 2];c[h >> 2] = (c[(c[d >> 2] | 0) + 68 >> 2] | 0) + (c[f >> 2] << 1);do {
	        a = (c[h >> 2] | 0) + -2 | 0;c[h >> 2] = a;c[g >> 2] = e[a >> 1];if ((c[g >> 2] | 0) >>> 0 >= (c[j >> 2] | 0) >>> 0) a = (c[g >> 2] | 0) - (c[j >> 2] | 0) | 0;else a = 0;b[c[h >> 2] >> 1] = a;a = (c[f >> 2] | 0) + -1 | 0;c[f >> 2] = a;
	      } while ((a | 0) != 0);c[f >> 2] = c[j >> 2];c[h >> 2] = (c[(c[d >> 2] | 0) + 64 >> 2] | 0) + (c[f >> 2] << 1);do {
	        d = (c[h >> 2] | 0) + -2 | 0;c[h >> 2] = d;c[g >> 2] = e[d >> 1];if ((c[g >> 2] | 0) >>> 0 >= (c[j >> 2] | 0) >>> 0) a = (c[g >> 2] | 0) - (c[j >> 2] | 0) | 0;else a = 0;b[c[h >> 2] >> 1] = a;d = (c[f >> 2] | 0) + -1 | 0;c[f >> 2] = d;
	      } while ((d | 0) != 0);i = k;return;
	    }function Ib(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0;k = i;i = i + 32 | 0;f = k + 16 | 0;g = k + 12 | 0;h = k + 8 | 0;e = k + 4 | 0;j = k;c[g >> 2] = a;c[h >> 2] = b;c[e >> 2] = d;c[j >> 2] = c[(c[g >> 2] | 0) + 4 >> 2];if ((c[j >> 2] | 0) >>> 0 > (c[e >> 2] | 0) >>> 0) c[j >> 2] = c[e >> 2];if (!(c[j >> 2] | 0)) {
	        c[f >> 2] = 0;j = c[f >> 2] | 0;i = k;return j | 0;
	      }a = (c[g >> 2] | 0) + 4 | 0;c[a >> 2] = (c[a >> 2] | 0) - (c[j >> 2] | 0);Sd(c[h >> 2] | 0, c[c[g >> 2] >> 2] | 0, c[j >> 2] | 0) | 0;a = c[g >> 2] | 0;if ((c[(c[(c[g >> 2] | 0) + 28 >> 2] | 0) + 24 >> 2] | 0) != 1) {
	        if ((c[(c[a + 28 >> 2] | 0) + 24 >> 2] | 0) == 2) {
	          h = vb(c[(c[g >> 2] | 0) + 48 >> 2] | 0, c[h >> 2] | 0, c[j >> 2] | 0) | 0;c[(c[g >> 2] | 0) + 48 >> 2] = h;
	        }
	      } else {
	        h = jc(c[a + 48 >> 2] | 0, c[h >> 2] | 0, c[j >> 2] | 0) | 0;c[(c[g >> 2] | 0) + 48 >> 2] = h;
	      }h = c[g >> 2] | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[j >> 2] | 0);h = (c[g >> 2] | 0) + 8 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[j >> 2] | 0);c[f >> 2] = c[j >> 2];j = c[f >> 2] | 0;i = k;return j | 0;
	    }function Jb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if ((c[d >> 2] | 0 ? c[(c[d >> 2] | 0) + 32 >> 2] | 0 : 0) ? c[(c[d >> 2] | 0) + 36 >> 2] | 0 : 0) {
	        c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];do {
	          if (c[e >> 2] | 0 ? (c[c[e >> 2] >> 2] | 0) == (c[d >> 2] | 0) : 0) {
	            if ((((((((c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 42 ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 57 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 69 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 73 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 91 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 103 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 113 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) != 666 : 0) break;c[b >> 2] = 0;e = c[b >> 2] | 0;i = f;return e | 0;
	          }
	        } while (0);c[b >> 2] = 1;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[b >> 2] = 1;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function Kb(e, f) {
	      e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0;x = i;i = i + 64 | 0;t = x + 56 | 0;u = x + 52 | 0;v = x + 48 | 0;g = x + 44 | 0;w = x + 40 | 0;h = x + 36 | 0;j = x + 32 | 0;q = x + 28 | 0;k = x + 24 | 0;l = x + 20 | 0;m = x + 16 | 0;n = x + 12 | 0;o = x + 8 | 0;p = x + 4 | 0;s = x;c[u >> 2] = e;c[v >> 2] = f;f = (Jb(c[u >> 2] | 0) | 0) != 0;if (f | (c[v >> 2] | 0) > 5 | (c[v >> 2] | 0) < 0) {
	        c[t >> 2] = -2;w = c[t >> 2] | 0;i = x;return w | 0;
	      }c[w >> 2] = c[(c[u >> 2] | 0) + 28 >> 2];do {
	        if (c[(c[u >> 2] | 0) + 12 >> 2] | 0) {
	          if (c[(c[u >> 2] | 0) + 4 >> 2] | 0 ? (c[c[u >> 2] >> 2] | 0) == 0 : 0) break;if (!((c[v >> 2] | 0) != 4 ? (c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 666 : 0)) {
	            if (!(c[(c[u >> 2] | 0) + 16 >> 2] | 0)) {
	              c[(c[u >> 2] | 0) + 24 >> 2] = c[2239];c[t >> 2] = -5;w = c[t >> 2] | 0;i = x;return w | 0;
	            }c[g >> 2] = c[(c[w >> 2] | 0) + 40 >> 2];c[(c[w >> 2] | 0) + 40 >> 2] = c[v >> 2];e = c[u >> 2] | 0;if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	              Gb(e);if (!(c[(c[u >> 2] | 0) + 16 >> 2] | 0)) {
	                c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	              }
	            } else if ((c[e + 4 >> 2] | 0) == 0 ? (c[v >> 2] | 0) != 4 ? ((c[v >> 2] << 1) - ((c[v >> 2] | 0) > 4 ? 9 : 0) | 0) <= ((c[g >> 2] << 1) - ((c[g >> 2] | 0) > 4 ? 9 : 0) | 0) : 0 : 0) {
	              c[(c[u >> 2] | 0) + 24 >> 2] = c[2239];c[t >> 2] = -5;w = c[t >> 2] | 0;i = x;return w | 0;
	            }if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 666 ? c[(c[u >> 2] | 0) + 4 >> 2] | 0 : 0) {
	              c[(c[u >> 2] | 0) + 24 >> 2] = c[2239];c[t >> 2] = -5;w = c[t >> 2] | 0;i = x;return w | 0;
	            }if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 42) {
	              c[h >> 2] = 8 + ((c[(c[w >> 2] | 0) + 48 >> 2] | 0) - 8 << 4) << 8;do {
	                if ((c[(c[w >> 2] | 0) + 136 >> 2] | 0) < 2 ? (c[(c[w >> 2] | 0) + 132 >> 2] | 0) >= 2 : 0) {
	                  if ((c[(c[w >> 2] | 0) + 132 >> 2] | 0) < 6) {
	                    c[j >> 2] = 1;break;
	                  }if ((c[(c[w >> 2] | 0) + 132 >> 2] | 0) == 6) {
	                    c[j >> 2] = 2;break;
	                  } else {
	                    c[j >> 2] = 3;break;
	                  }
	                } else r = 22;
	              } while (0);if ((r | 0) == 22) c[j >> 2] = 0;c[h >> 2] = c[h >> 2] | c[j >> 2] << 6;if (c[(c[w >> 2] | 0) + 108 >> 2] | 0) c[h >> 2] = c[h >> 2] | 32;c[h >> 2] = (c[h >> 2] | 0) + (31 - (((c[h >> 2] | 0) >>> 0) % 31 | 0));Lb(c[w >> 2] | 0, c[h >> 2] | 0);if (c[(c[w >> 2] | 0) + 108 >> 2] | 0) {
	                Lb(c[w >> 2] | 0, (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 16);Lb(c[w >> 2] | 0, c[(c[u >> 2] | 0) + 48 >> 2] & 65535);
	              }j = jc(0, 0, 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = j;c[(c[w >> 2] | 0) + 4 >> 2] = 113;Gb(c[u >> 2] | 0);if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	                c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	              }
	            }do {
	              if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 57) {
	                j = vb(0, 0, 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = j;j = (c[w >> 2] | 0) + 20 | 0;e = c[j >> 2] | 0;c[j >> 2] = e + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + e >> 0] = 31;e = (c[w >> 2] | 0) + 20 | 0;j = c[e >> 2] | 0;c[e >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = -117;j = (c[w >> 2] | 0) + 20 | 0;e = c[j >> 2] | 0;c[j >> 2] = e + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + e >> 0] = 8;e = c[w >> 2] | 0;if (!(c[(c[w >> 2] | 0) + 28 >> 2] | 0)) {
	                  h = e + 20 | 0;j = c[h >> 2] | 0;c[h >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = 0;j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = 0;h = (c[w >> 2] | 0) + 20 | 0;j = c[h >> 2] | 0;c[h >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = 0;j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = 0;h = (c[w >> 2] | 0) + 20 | 0;j = c[h >> 2] | 0;c[h >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = 0;if ((c[(c[w >> 2] | 0) + 132 >> 2] | 0) == 9) e = 2;else {
	                    if ((c[(c[w >> 2] | 0) + 136 >> 2] | 0) >= 2) e = 1;else e = (c[(c[w >> 2] | 0) + 132 >> 2] | 0) < 2;e = e ? 4 : 0;
	                  }j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = e;h = (c[w >> 2] | 0) + 20 | 0;j = c[h >> 2] | 0;c[h >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = 3;c[(c[w >> 2] | 0) + 4 >> 2] = 113;Gb(c[u >> 2] | 0);if (!(c[(c[w >> 2] | 0) + 20 >> 2] | 0)) break;c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }g = (c[c[e + 28 >> 2] >> 2] | 0 ? 1 : 0) + (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0 ? 2 : 0) + ((c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 16 >> 2] | 0) == 0 ? 0 : 4) + ((c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 28 >> 2] | 0) == 0 ? 0 : 8) + ((c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 36 >> 2] | 0) == 0 ? 0 : 16) & 255;j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;h = c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 4 >> 2] & 255;g = (c[w >> 2] | 0) + 20 | 0;j = c[g >> 2] | 0;c[g >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;j = (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 4 >> 2] | 0) >>> 8 & 255;h = (c[w >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = j;g = (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 4 >> 2] | 0) >>> 16 & 255;j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;h = (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 4 >> 2] | 0) >>> 24 & 255;g = (c[w >> 2] | 0) + 20 | 0;j = c[g >> 2] | 0;c[g >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;if ((c[(c[w >> 2] | 0) + 132 >> 2] | 0) == 9) e = 2;else {
	                  if ((c[(c[w >> 2] | 0) + 136 >> 2] | 0) >= 2) e = 1;else e = (c[(c[w >> 2] | 0) + 132 >> 2] | 0) < 2;e = e ? 4 : 0;
	                }g = (c[w >> 2] | 0) + 20 | 0;h = c[g >> 2] | 0;c[g >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = e;h = c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 12 >> 2] & 255;g = (c[w >> 2] | 0) + 20 | 0;j = c[g >> 2] | 0;c[g >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 16 >> 2] | 0) {
	                  g = c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 20 >> 2] & 255;j = (c[w >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;h = (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 20 >> 2] | 0) >>> 8 & 255;g = (c[w >> 2] | 0) + 20 | 0;j = c[g >> 2] | 0;c[g >> 2] = j + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;
	                }if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0) {
	                  j = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, c[(c[w >> 2] | 0) + 8 >> 2] | 0, c[(c[w >> 2] | 0) + 20 >> 2] | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = j;
	                }c[(c[w >> 2] | 0) + 32 >> 2] = 0;c[(c[w >> 2] | 0) + 4 >> 2] = 69;
	              }
	            } while (0);if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 69) {
	              if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 16 >> 2] | 0) {
	                c[q >> 2] = c[(c[w >> 2] | 0) + 20 >> 2];c[k >> 2] = (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 20 >> 2] & 65535) - (c[(c[w >> 2] | 0) + 32 >> 2] | 0);while (1) {
	                  e = c[w >> 2] | 0;if (((c[(c[w >> 2] | 0) + 20 >> 2] | 0) + (c[k >> 2] | 0) | 0) >>> 0 <= (c[(c[w >> 2] | 0) + 12 >> 2] | 0) >>> 0) break;c[l >> 2] = (c[e + 12 >> 2] | 0) - (c[(c[w >> 2] | 0) + 20 >> 2] | 0);Sd((c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[(c[w >> 2] | 0) + 20 >> 2] | 0) | 0, (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 16 >> 2] | 0) + (c[(c[w >> 2] | 0) + 32 >> 2] | 0) | 0, c[l >> 2] | 0) | 0;c[(c[w >> 2] | 0) + 20 >> 2] = c[(c[w >> 2] | 0) + 12 >> 2];if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0 ? (c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 > (c[q >> 2] | 0) >>> 0 : 0) {
	                    j = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[q >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[q >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = j;
	                  }j = (c[w >> 2] | 0) + 32 | 0;c[j >> 2] = (c[j >> 2] | 0) + (c[l >> 2] | 0);Gb(c[u >> 2] | 0);if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	                    r = 59;break;
	                  }c[q >> 2] = 0;c[k >> 2] = (c[k >> 2] | 0) - (c[l >> 2] | 0);
	                }if ((r | 0) == 59) {
	                  c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }Sd((c[e + 8 >> 2] | 0) + (c[(c[w >> 2] | 0) + 20 >> 2] | 0) | 0, (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 16 >> 2] | 0) + (c[(c[w >> 2] | 0) + 32 >> 2] | 0) | 0, c[k >> 2] | 0) | 0;l = (c[w >> 2] | 0) + 20 | 0;c[l >> 2] = (c[l >> 2] | 0) + (c[k >> 2] | 0);if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0 ? (c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 > (c[q >> 2] | 0) >>> 0 : 0) {
	                  q = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[q >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[q >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	                }c[(c[w >> 2] | 0) + 32 >> 2] = 0;
	              }c[(c[w >> 2] | 0) + 4 >> 2] = 73;
	            }if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 73) {
	              if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 28 >> 2] | 0) {
	                c[m >> 2] = c[(c[w >> 2] | 0) + 20 >> 2];do {
	                  if ((c[(c[w >> 2] | 0) + 20 >> 2] | 0) == (c[(c[w >> 2] | 0) + 12 >> 2] | 0)) {
	                    do {
	                      if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0) {
	                        if ((c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 <= (c[m >> 2] | 0) >>> 0) break;q = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[m >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[m >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	                      }
	                    } while (0);Gb(c[u >> 2] | 0);if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	                      r = 74;break;
	                    }c[m >> 2] = 0;
	                  }k = (c[w >> 2] | 0) + 32 | 0;l = c[k >> 2] | 0;c[k >> 2] = l + 1;c[n >> 2] = d[(c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 28 >> 2] | 0) + l >> 0];l = c[n >> 2] & 255;k = (c[w >> 2] | 0) + 20 | 0;q = c[k >> 2] | 0;c[k >> 2] = q + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + q >> 0] = l;
	                } while ((c[n >> 2] | 0) != 0);if ((r | 0) == 74) {
	                  c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0 ? (c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 > (c[m >> 2] | 0) >>> 0 : 0) {
	                  q = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[m >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[m >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	                }c[(c[w >> 2] | 0) + 32 >> 2] = 0;
	              }c[(c[w >> 2] | 0) + 4 >> 2] = 91;
	            }if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 91) {
	              if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 36 >> 2] | 0) {
	                c[o >> 2] = c[(c[w >> 2] | 0) + 20 >> 2];do {
	                  if ((c[(c[w >> 2] | 0) + 20 >> 2] | 0) == (c[(c[w >> 2] | 0) + 12 >> 2] | 0)) {
	                    do {
	                      if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0) {
	                        if ((c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 <= (c[o >> 2] | 0) >>> 0) break;q = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[o >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[o >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	                      }
	                    } while (0);Gb(c[u >> 2] | 0);if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	                      r = 90;break;
	                    }c[o >> 2] = 0;
	                  }m = (c[w >> 2] | 0) + 32 | 0;n = c[m >> 2] | 0;c[m >> 2] = n + 1;c[p >> 2] = d[(c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 36 >> 2] | 0) + n >> 0];n = c[p >> 2] & 255;m = (c[w >> 2] | 0) + 20 | 0;q = c[m >> 2] | 0;c[m >> 2] = q + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + q >> 0] = n;
	                } while ((c[p >> 2] | 0) != 0);if ((r | 0) == 90) {
	                  c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0 ? (c[(c[w >> 2] | 0) + 20 >> 2] | 0) >>> 0 > (c[o >> 2] | 0) >>> 0 : 0) {
	                  q = vb(c[(c[u >> 2] | 0) + 48 >> 2] | 0, (c[(c[w >> 2] | 0) + 8 >> 2] | 0) + (c[o >> 2] | 0) | 0, (c[(c[w >> 2] | 0) + 20 >> 2] | 0) - (c[o >> 2] | 0) | 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	                }
	              }c[(c[w >> 2] | 0) + 4 >> 2] = 103;
	            }if ((c[(c[w >> 2] | 0) + 4 >> 2] | 0) == 103) {
	              if (c[(c[(c[w >> 2] | 0) + 28 >> 2] | 0) + 44 >> 2] | 0) {
	                if (((c[(c[w >> 2] | 0) + 20 >> 2] | 0) + 2 | 0) >>> 0 > (c[(c[w >> 2] | 0) + 12 >> 2] | 0) >>> 0 ? (Gb(c[u >> 2] | 0), c[(c[w >> 2] | 0) + 20 >> 2] | 0) : 0) {
	                  c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }o = c[(c[u >> 2] | 0) + 48 >> 2] & 255;q = (c[w >> 2] | 0) + 20 | 0;p = c[q >> 2] | 0;c[q >> 2] = p + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = o;p = (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 8 & 255;o = (c[w >> 2] | 0) + 20 | 0;q = c[o >> 2] | 0;c[o >> 2] = q + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + q >> 0] = p;q = vb(0, 0, 0) | 0;c[(c[u >> 2] | 0) + 48 >> 2] = q;
	              }c[(c[w >> 2] | 0) + 4 >> 2] = 113;Gb(c[u >> 2] | 0);if (c[(c[w >> 2] | 0) + 20 >> 2] | 0) {
	                c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	              }
	            }if (!(c[(c[u >> 2] | 0) + 4 >> 2] | 0) ? !(c[(c[w >> 2] | 0) + 116 >> 2] | 0) : 0) {
	              if (c[v >> 2] | 0 ? (c[(c[w >> 2] | 0) + 4 >> 2] | 0) != 666 : 0) r = 109;
	            } else r = 109;do {
	              if ((r | 0) == 109) {
	                e = c[w >> 2] | 0;do {
	                  if (c[(c[w >> 2] | 0) + 132 >> 2] | 0) {
	                    f = c[w >> 2] | 0;if ((c[e + 136 >> 2] | 0) == 2) {
	                      e = Mb(f, c[v >> 2] | 0) | 0;break;
	                    }e = c[w >> 2] | 0;if ((c[f + 136 >> 2] | 0) == 3) {
	                      e = Nb(e, c[v >> 2] | 0) | 0;break;
	                    } else {
	                      e = Ha[c[8200 + ((c[e + 132 >> 2] | 0) * 12 | 0) + 8 >> 2] & 7](c[w >> 2] | 0, c[v >> 2] | 0) | 0;break;
	                    }
	                  } else e = Bb(e, c[v >> 2] | 0) | 0;
	                } while (0);c[s >> 2] = e;if ((c[s >> 2] | 0) == 2 | (c[s >> 2] | 0) == 3) c[(c[w >> 2] | 0) + 4 >> 2] = 666;if ((c[s >> 2] | 0) == 0 | (c[s >> 2] | 0) == 2) {
	                  if (!(c[(c[u >> 2] | 0) + 16 >> 2] | 0)) c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }if ((c[s >> 2] | 0) == 1) {
	                  do {
	                    if ((c[v >> 2] | 0) == 1) Vb(c[w >> 2] | 0);else {
	                      if ((c[v >> 2] | 0) == 5) break;Rb(c[w >> 2] | 0, 0, 0, 0);if ((c[v >> 2] | 0) != 3) break;b[(c[(c[w >> 2] | 0) + 68 >> 2] | 0) + ((c[(c[w >> 2] | 0) + 76 >> 2] | 0) - 1 << 1) >> 1] = 0;Id(c[(c[w >> 2] | 0) + 68 >> 2] | 0, 0, (c[(c[w >> 2] | 0) + 76 >> 2] | 0) - 1 << 1 | 0) | 0;if (c[(c[w >> 2] | 0) + 116 >> 2] | 0) break;c[(c[w >> 2] | 0) + 108 >> 2] = 0;c[(c[w >> 2] | 0) + 92 >> 2] = 0;c[(c[w >> 2] | 0) + 5812 >> 2] = 0;
	                    }
	                  } while (0);Gb(c[u >> 2] | 0);if (c[(c[u >> 2] | 0) + 16 >> 2] | 0) break;c[(c[w >> 2] | 0) + 40 >> 2] = -1;c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	                }
	              }
	            } while (0);if ((c[v >> 2] | 0) != 4) {
	              c[t >> 2] = 0;w = c[t >> 2] | 0;i = x;return w | 0;
	            }if ((c[(c[w >> 2] | 0) + 24 >> 2] | 0) <= 0) {
	              c[t >> 2] = 1;w = c[t >> 2] | 0;i = x;return w | 0;
	            }if ((c[(c[w >> 2] | 0) + 24 >> 2] | 0) == 2) {
	              r = c[(c[u >> 2] | 0) + 48 >> 2] & 255;v = (c[w >> 2] | 0) + 20 | 0;s = c[v >> 2] | 0;c[v >> 2] = s + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + s >> 0] = r;s = (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 8 & 255;r = (c[w >> 2] | 0) + 20 | 0;v = c[r >> 2] | 0;c[r >> 2] = v + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + v >> 0] = s;v = (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 16 & 255;s = (c[w >> 2] | 0) + 20 | 0;r = c[s >> 2] | 0;c[s >> 2] = r + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + r >> 0] = v;r = (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 24 & 255;v = (c[w >> 2] | 0) + 20 | 0;s = c[v >> 2] | 0;c[v >> 2] = s + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + s >> 0] = r;s = c[(c[u >> 2] | 0) + 8 >> 2] & 255;r = (c[w >> 2] | 0) + 20 | 0;v = c[r >> 2] | 0;c[r >> 2] = v + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + v >> 0] = s;v = (c[(c[u >> 2] | 0) + 8 >> 2] | 0) >>> 8 & 255;s = (c[w >> 2] | 0) + 20 | 0;r = c[s >> 2] | 0;c[s >> 2] = r + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + r >> 0] = v;r = (c[(c[u >> 2] | 0) + 8 >> 2] | 0) >>> 16 & 255;v = (c[w >> 2] | 0) + 20 | 0;s = c[v >> 2] | 0;c[v >> 2] = s + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + s >> 0] = r;s = (c[(c[u >> 2] | 0) + 8 >> 2] | 0) >>> 24 & 255;r = (c[w >> 2] | 0) + 20 | 0;v = c[r >> 2] | 0;c[r >> 2] = v + 1;a[(c[(c[w >> 2] | 0) + 8 >> 2] | 0) + v >> 0] = s;
	            } else {
	              Lb(c[w >> 2] | 0, (c[(c[u >> 2] | 0) + 48 >> 2] | 0) >>> 16);Lb(c[w >> 2] | 0, c[(c[u >> 2] | 0) + 48 >> 2] & 65535);
	            }Gb(c[u >> 2] | 0);if ((c[(c[w >> 2] | 0) + 24 >> 2] | 0) > 0) c[(c[w >> 2] | 0) + 24 >> 2] = 0 - (c[(c[w >> 2] | 0) + 24 >> 2] | 0);c[t >> 2] = c[(c[w >> 2] | 0) + 20 >> 2] | 0 ? 0 : 1;w = c[t >> 2] | 0;i = x;return w | 0;
	          }
	        }
	      } while (0);c[(c[u >> 2] | 0) + 24 >> 2] = c[2236];c[t >> 2] = -2;w = c[t >> 2] | 0;i = x;return w | 0;
	    }function Lb(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;e = i;i = i + 16 | 0;f = e + 4 | 0;g = e;c[f >> 2] = b;c[g >> 2] = d;d = (c[g >> 2] | 0) >>> 8 & 255;h = (c[f >> 2] | 0) + 20 | 0;b = c[h >> 2] | 0;c[h >> 2] = b + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + b >> 0] = d;b = c[g >> 2] & 255;g = (c[f >> 2] | 0) + 20 | 0;d = c[g >> 2] | 0;c[g >> 2] = d + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + d >> 0] = b;i = e;return;
	    }function Mb(e, f) {
	      e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;n = i;i = i + 32 | 0;l = n + 12 | 0;m = n + 8 | 0;k = n + 4 | 0;g = n;h = n + 16 | 0;c[m >> 2] = e;c[k >> 2] = f;while (1) {
	        if ((c[(c[m >> 2] | 0) + 116 >> 2] | 0) == 0 ? (Eb(c[m >> 2] | 0), (c[(c[m >> 2] | 0) + 116 >> 2] | 0) == 0) : 0) break;c[(c[m >> 2] | 0) + 96 >> 2] = 0;a[h >> 0] = a[(c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 108 >> 2] | 0) >> 0] | 0;b[(c[(c[m >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[m >> 2] | 0) + 5792 >> 2] << 1) >> 1] = 0;e = a[h >> 0] | 0;o = (c[m >> 2] | 0) + 5792 | 0;f = c[o >> 2] | 0;c[o >> 2] = f + 1;a[(c[(c[m >> 2] | 0) + 5784 >> 2] | 0) + f >> 0] = e;f = (c[m >> 2] | 0) + 148 + ((d[h >> 0] | 0) << 2) | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;c[g >> 2] = (c[(c[m >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[m >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;f = (c[m >> 2] | 0) + 116 | 0;c[f >> 2] = (c[f >> 2] | 0) + -1;f = (c[m >> 2] | 0) + 108 | 0;c[f >> 2] = (c[f >> 2] | 0) + 1;if (!(c[g >> 2] | 0)) continue;if ((c[(c[m >> 2] | 0) + 92 >> 2] | 0) >= 0) e = (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0;else e = 0;Wb(c[m >> 2] | 0, e, (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[m >> 2] | 0) + 92 >> 2] = c[(c[m >> 2] | 0) + 108 >> 2];Gb(c[c[m >> 2] >> 2] | 0);if (!(c[(c[c[m >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          j = 10;break;
	        }
	      }if ((j | 0) == 10) {
	        c[l >> 2] = 0;o = c[l >> 2] | 0;i = n;return o | 0;
	      }if (!(c[k >> 2] | 0)) {
	        c[l >> 2] = 0;o = c[l >> 2] | 0;i = n;return o | 0;
	      }c[(c[m >> 2] | 0) + 5812 >> 2] = 0;f = c[m >> 2] | 0;if ((c[k >> 2] | 0) == 4) {
	        if ((c[(c[m >> 2] | 0) + 92 >> 2] | 0) >= 0) e = (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0;else e = 0;Wb(f, e, (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0, 1);c[(c[m >> 2] | 0) + 92 >> 2] = c[(c[m >> 2] | 0) + 108 >> 2];Gb(c[c[m >> 2] >> 2] | 0);if (!(c[(c[c[m >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          c[l >> 2] = 2;o = c[l >> 2] | 0;i = n;return o | 0;
	        } else {
	          c[l >> 2] = 3;o = c[l >> 2] | 0;i = n;return o | 0;
	        }
	      }if (c[f + 5792 >> 2] | 0) {
	        if ((c[(c[m >> 2] | 0) + 92 >> 2] | 0) >= 0) e = (c[(c[m >> 2] | 0) + 56 >> 2] | 0) + (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0;else e = 0;Wb(c[m >> 2] | 0, e, (c[(c[m >> 2] | 0) + 108 >> 2] | 0) - (c[(c[m >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[m >> 2] | 0) + 92 >> 2] = c[(c[m >> 2] | 0) + 108 >> 2];Gb(c[c[m >> 2] >> 2] | 0);if (!(c[(c[c[m >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          c[l >> 2] = 0;o = c[l >> 2] | 0;i = n;return o | 0;
	        }
	      }c[l >> 2] = 1;o = c[l >> 2] | 0;i = n;return o | 0;
	    }function Nb(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0;s = i;i = i + 32 | 0;q = s + 24 | 0;r = s + 20 | 0;p = s + 16 | 0;k = s + 12 | 0;l = s + 8 | 0;m = s + 4 | 0;n = s;o = s + 31 | 0;h = s + 28 | 0;j = s + 30 | 0;c[r >> 2] = f;c[p >> 2] = g;while (1) {
	        if ((c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 <= 258) {
	          Eb(c[r >> 2] | 0);if ((c[p >> 2] | 0) == 0 ? (c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 <= 258 : 0) {
	            f = 4;break;
	          }if (!(c[(c[r >> 2] | 0) + 116 >> 2] | 0)) {
	            f = 34;break;
	          }
	        }c[(c[r >> 2] | 0) + 96 >> 2] = 0;if (((((c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0 >= 3 ? (c[(c[r >> 2] | 0) + 108 >> 2] | 0) >>> 0 > 0 : 0) ? (c[m >> 2] = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 108 >> 2] | 0) + -1, c[l >> 2] = d[c[m >> 2] >> 0], f = c[l >> 2] | 0, g = (c[m >> 2] | 0) + 1 | 0, c[m >> 2] = g, (f | 0) == (d[g >> 0] | 0 | 0)) : 0) ? (f = c[l >> 2] | 0, g = (c[m >> 2] | 0) + 1 | 0, c[m >> 2] = g, (f | 0) == (d[g >> 0] | 0 | 0)) : 0) ? (f = c[l >> 2] | 0, g = (c[m >> 2] | 0) + 1 | 0, c[m >> 2] = g, (f | 0) == (d[g >> 0] | 0 | 0)) : 0) {
	          c[n >> 2] = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 108 >> 2] | 0) + 258;do {
	            f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;f = c[l >> 2] | 0;g = (c[m >> 2] | 0) + 1 | 0;c[m >> 2] = g;if ((f | 0) != (d[g >> 0] | 0 | 0)) break;
	          } while ((c[m >> 2] | 0) >>> 0 < (c[n >> 2] | 0) >>> 0);c[(c[r >> 2] | 0) + 96 >> 2] = 258 - ((c[n >> 2] | 0) - (c[m >> 2] | 0));if ((c[(c[r >> 2] | 0) + 96 >> 2] | 0) >>> 0 > (c[(c[r >> 2] | 0) + 116 >> 2] | 0) >>> 0) c[(c[r >> 2] | 0) + 96 >> 2] = c[(c[r >> 2] | 0) + 116 >> 2];
	        }f = c[r >> 2] | 0;if ((c[(c[r >> 2] | 0) + 96 >> 2] | 0) >>> 0 >= 3) {
	          a[o >> 0] = (c[f + 96 >> 2] | 0) - 3;b[h >> 1] = 1;b[(c[(c[r >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[r >> 2] | 0) + 5792 >> 2] << 1) >> 1] = b[h >> 1] | 0;g = a[o >> 0] | 0;t = (c[r >> 2] | 0) + 5792 | 0;f = c[t >> 2] | 0;c[t >> 2] = f + 1;a[(c[(c[r >> 2] | 0) + 5784 >> 2] | 0) + f >> 0] = g;b[h >> 1] = (b[h >> 1] | 0) + -1 << 16 >> 16;f = (c[r >> 2] | 0) + 148 + ((d[11994 + (d[o >> 0] | 0) >> 0] | 0) + 256 + 1 << 2) | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;f = e[h >> 1] | 0;if ((e[h >> 1] | 0 | 0) < 256) f = a[11482 + f >> 0] | 0;else f = a[11482 + (256 + (f >> 7)) >> 0] | 0;t = (c[r >> 2] | 0) + 2440 + ((f & 255) << 2) | 0;b[t >> 1] = (b[t >> 1] | 0) + 1 << 16 >> 16;c[k >> 2] = (c[(c[r >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[r >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;t = (c[r >> 2] | 0) + 116 | 0;c[t >> 2] = (c[t >> 2] | 0) - (c[(c[r >> 2] | 0) + 96 >> 2] | 0);t = (c[r >> 2] | 0) + 108 | 0;c[t >> 2] = (c[t >> 2] | 0) + (c[(c[r >> 2] | 0) + 96 >> 2] | 0);c[(c[r >> 2] | 0) + 96 >> 2] = 0;
	        } else {
	          a[j >> 0] = a[(c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[f + 108 >> 2] | 0) >> 0] | 0;b[(c[(c[r >> 2] | 0) + 5796 >> 2] | 0) + (c[(c[r >> 2] | 0) + 5792 >> 2] << 1) >> 1] = 0;g = a[j >> 0] | 0;f = (c[r >> 2] | 0) + 5792 | 0;t = c[f >> 2] | 0;c[f >> 2] = t + 1;a[(c[(c[r >> 2] | 0) + 5784 >> 2] | 0) + t >> 0] = g;t = (c[r >> 2] | 0) + 148 + ((d[j >> 0] | 0) << 2) | 0;b[t >> 1] = (b[t >> 1] | 0) + 1 << 16 >> 16;c[k >> 2] = (c[(c[r >> 2] | 0) + 5792 >> 2] | 0) == ((c[(c[r >> 2] | 0) + 5788 >> 2] | 0) - 1 | 0) & 1;t = (c[r >> 2] | 0) + 116 | 0;c[t >> 2] = (c[t >> 2] | 0) + -1;t = (c[r >> 2] | 0) + 108 | 0;c[t >> 2] = (c[t >> 2] | 0) + 1;
	        }if (!(c[k >> 2] | 0)) continue;if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[r >> 2] | 0, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	          f = 33;break;
	        }
	      }if ((f | 0) == 4) {
	        c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	      } else if ((f | 0) == 33) {
	        c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	      } else if ((f | 0) == 34) {
	        c[(c[r >> 2] | 0) + 5812 >> 2] = 0;g = c[r >> 2] | 0;if ((c[p >> 2] | 0) == 4) {
	          if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(g, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 1);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[q >> 2] = 2;t = c[q >> 2] | 0;i = s;return t | 0;
	          } else {
	            c[q >> 2] = 3;t = c[q >> 2] | 0;i = s;return t | 0;
	          }
	        }if (c[g + 5792 >> 2] | 0) {
	          if ((c[(c[r >> 2] | 0) + 92 >> 2] | 0) >= 0) f = (c[(c[r >> 2] | 0) + 56 >> 2] | 0) + (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0;else f = 0;Wb(c[r >> 2] | 0, f, (c[(c[r >> 2] | 0) + 108 >> 2] | 0) - (c[(c[r >> 2] | 0) + 92 >> 2] | 0) | 0, 0);c[(c[r >> 2] | 0) + 92 >> 2] = c[(c[r >> 2] | 0) + 108 >> 2];Gb(c[c[r >> 2] >> 2] | 0);if (!(c[(c[c[r >> 2] >> 2] | 0) + 16 >> 2] | 0)) {
	            c[q >> 2] = 0;t = c[q >> 2] | 0;i = s;return t | 0;
	          }
	        }c[q >> 2] = 1;t = c[q >> 2] | 0;i = s;return t | 0;
	      }return 0;
	    }function Ob(a) {
	      a = a | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = a;Pb();c[(c[e >> 2] | 0) + 2840 >> 2] = (c[e >> 2] | 0) + 148;c[(c[e >> 2] | 0) + 2840 + 8 >> 2] = 8320;c[(c[e >> 2] | 0) + 2852 >> 2] = (c[e >> 2] | 0) + 2440;c[(c[e >> 2] | 0) + 2852 + 8 >> 2] = 8340;c[(c[e >> 2] | 0) + 2864 >> 2] = (c[e >> 2] | 0) + 2684;c[(c[e >> 2] | 0) + 2864 + 8 >> 2] = 8360;b[(c[e >> 2] | 0) + 5816 >> 1] = 0;c[(c[e >> 2] | 0) + 5820 >> 2] = 0;Qb(c[e >> 2] | 0);i = d;return;
	    }function Pb() {
	      return;
	    }function Qb(a) {
	      a = a | 0;var d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;c[e >> 2] = 0;while (1) {
	        if ((c[e >> 2] | 0) >= 286) break;b[(c[d >> 2] | 0) + 148 + (c[e >> 2] << 2) >> 1] = 0;c[e >> 2] = (c[e >> 2] | 0) + 1;
	      }c[e >> 2] = 0;while (1) {
	        if ((c[e >> 2] | 0) >= 30) break;b[(c[d >> 2] | 0) + 2440 + (c[e >> 2] << 2) >> 1] = 0;c[e >> 2] = (c[e >> 2] | 0) + 1;
	      }c[e >> 2] = 0;while (1) {
	        if ((c[e >> 2] | 0) >= 19) break;b[(c[d >> 2] | 0) + 2684 + (c[e >> 2] << 2) >> 1] = 0;c[e >> 2] = (c[e >> 2] | 0) + 1;
	      }b[(c[d >> 2] | 0) + 148 + 1024 >> 1] = 1;c[(c[d >> 2] | 0) + 5804 >> 2] = 0;c[(c[d >> 2] | 0) + 5800 >> 2] = 0;c[(c[d >> 2] | 0) + 5808 >> 2] = 0;c[(c[d >> 2] | 0) + 5792 >> 2] = 0;i = f;return;
	    }function Rb(d, f, g, h) {
	      d = d | 0;f = f | 0;g = g | 0;h = h | 0;var j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;o = i;i = i + 32 | 0;j = o + 20 | 0;k = o + 16 | 0;l = o + 12 | 0;p = o + 8 | 0;m = o + 4 | 0;n = o;c[j >> 2] = d;c[k >> 2] = f;c[l >> 2] = g;c[p >> 2] = h;c[m >> 2] = 3;d = 0 + (c[p >> 2] | 0) | 0;if ((c[(c[j >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[m >> 2] | 0) | 0)) {
	        c[n >> 2] = d;g = (c[j >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (c[n >> 2] & 65535) << c[(c[j >> 2] | 0) + 5820 >> 2];g = (e[(c[j >> 2] | 0) + 5816 >> 1] | 0) & 255;p = (c[j >> 2] | 0) + 20 | 0;h = c[p >> 2] | 0;c[p >> 2] = h + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;h = (e[(c[j >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;g = (c[j >> 2] | 0) + 20 | 0;p = c[g >> 2] | 0;c[g >> 2] = p + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = h;b[(c[j >> 2] | 0) + 5816 >> 1] = (c[n >> 2] & 65535) >> 16 - (c[(c[j >> 2] | 0) + 5820 >> 2] | 0);p = (c[j >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + ((c[m >> 2] | 0) - 16);
	      } else {
	        p = (c[j >> 2] | 0) + 5816 | 0;b[p >> 1] = e[p >> 1] | 0 | (d & 65535) << c[(c[j >> 2] | 0) + 5820 >> 2];p = (c[j >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + (c[m >> 2] | 0);
	      }Sb(c[j >> 2] | 0);n = c[l >> 2] & 255;m = (c[j >> 2] | 0) + 20 | 0;p = c[m >> 2] | 0;c[m >> 2] = p + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = n;p = (c[l >> 2] & 65535) >> 8 & 255;n = (c[j >> 2] | 0) + 20 | 0;m = c[n >> 2] | 0;c[n >> 2] = m + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + m >> 0] = p;m = ~c[l >> 2] & 255;p = (c[j >> 2] | 0) + 20 | 0;n = c[p >> 2] | 0;c[p >> 2] = n + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + n >> 0] = m;n = (~c[l >> 2] & 65535) >> 8 & 255;m = (c[j >> 2] | 0) + 20 | 0;p = c[m >> 2] | 0;c[m >> 2] = p + 1;a[(c[(c[j >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = n;Sd((c[(c[j >> 2] | 0) + 8 >> 2] | 0) + (c[(c[j >> 2] | 0) + 20 >> 2] | 0) | 0, c[k >> 2] | 0, c[l >> 2] | 0) | 0;p = (c[j >> 2] | 0) + 20 | 0;c[p >> 2] = (c[p >> 2] | 0) + (c[l >> 2] | 0);i = o;return;
	    }function Sb(d) {
	      d = d | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0;g = i;i = i + 16 | 0;f = g;c[f >> 2] = d;d = c[f >> 2] | 0;if ((c[(c[f >> 2] | 0) + 5820 >> 2] | 0) <= 8) {
	        if ((c[d + 5820 >> 2] | 0) > 0) {
	          h = b[(c[f >> 2] | 0) + 5816 >> 1] & 255;j = (c[f >> 2] | 0) + 20 | 0;d = c[j >> 2] | 0;c[j >> 2] = d + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + d >> 0] = h;
	        }
	      } else {
	        d = (e[d + 5816 >> 1] | 0) & 255;j = (c[f >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = d;h = (e[(c[f >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[f >> 2] | 0) + 20 | 0;j = c[d >> 2] | 0;c[d >> 2] = j + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;
	      }b[(c[f >> 2] | 0) + 5816 >> 1] = 0;c[(c[f >> 2] | 0) + 5820 >> 2] = 0;i = g;return;
	    }function Tb(a) {
	      a = a | 0;var b = 0,
	          d = 0;b = i;i = i + 16 | 0;d = b;c[d >> 2] = a;Ub(c[d >> 2] | 0);i = b;return;
	    }function Ub(d) {
	      d = d | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0;g = i;i = i + 16 | 0;f = g;c[f >> 2] = d;d = c[f >> 2] | 0;if ((c[(c[f >> 2] | 0) + 5820 >> 2] | 0) == 16) {
	        j = (e[d + 5816 >> 1] | 0) & 255;d = (c[f >> 2] | 0) + 20 | 0;h = c[d >> 2] | 0;c[d >> 2] = h + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = j;h = (e[(c[f >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;j = (c[f >> 2] | 0) + 20 | 0;d = c[j >> 2] | 0;c[j >> 2] = d + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + d >> 0] = h;b[(c[f >> 2] | 0) + 5816 >> 1] = 0;c[(c[f >> 2] | 0) + 5820 >> 2] = 0;i = g;return;
	      }if ((c[d + 5820 >> 2] | 0) < 8) {
	        i = g;return;
	      }h = b[(c[f >> 2] | 0) + 5816 >> 1] & 255;d = (c[f >> 2] | 0) + 20 | 0;j = c[d >> 2] | 0;c[d >> 2] = j + 1;a[(c[(c[f >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;j = (c[f >> 2] | 0) + 5816 | 0;b[j >> 1] = (e[j >> 1] | 0) >> 8;j = (c[f >> 2] | 0) + 5820 | 0;c[j >> 2] = (c[j >> 2] | 0) - 8;i = g;return;
	    }function Vb(d) {
	      d = d | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0;l = i;i = i + 32 | 0;h = l + 16 | 0;f = l + 12 | 0;g = l + 8 | 0;j = l + 4 | 0;k = l;c[h >> 2] = d;c[f >> 2] = 3;if ((c[(c[h >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[f >> 2] | 0) | 0)) {
	        c[g >> 2] = 2;n = (c[h >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | (c[g >> 2] & 65535) << c[(c[h >> 2] | 0) + 5820 >> 2];n = (e[(c[h >> 2] | 0) + 5816 >> 1] | 0) & 255;d = (c[h >> 2] | 0) + 20 | 0;m = c[d >> 2] | 0;c[d >> 2] = m + 1;a[(c[(c[h >> 2] | 0) + 8 >> 2] | 0) + m >> 0] = n;m = (e[(c[h >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;n = (c[h >> 2] | 0) + 20 | 0;d = c[n >> 2] | 0;c[n >> 2] = d + 1;a[(c[(c[h >> 2] | 0) + 8 >> 2] | 0) + d >> 0] = m;b[(c[h >> 2] | 0) + 5816 >> 1] = (c[g >> 2] & 65535) >> 16 - (c[(c[h >> 2] | 0) + 5820 >> 2] | 0);g = (c[h >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[f >> 2] | 0) - 16);
	      } else {
	        n = (c[h >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | 2 << c[(c[h >> 2] | 0) + 5820 >> 2];n = (c[h >> 2] | 0) + 5820 | 0;c[n >> 2] = (c[n >> 2] | 0) + (c[f >> 2] | 0);
	      }c[j >> 2] = e[5297];d = e[5296] | 0;if ((c[(c[h >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[j >> 2] | 0) | 0)) {
	        c[k >> 2] = d;g = (c[h >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (c[k >> 2] & 65535) << c[(c[h >> 2] | 0) + 5820 >> 2];g = (e[(c[h >> 2] | 0) + 5816 >> 1] | 0) & 255;n = (c[h >> 2] | 0) + 20 | 0;m = c[n >> 2] | 0;c[n >> 2] = m + 1;a[(c[(c[h >> 2] | 0) + 8 >> 2] | 0) + m >> 0] = g;m = (e[(c[h >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;g = (c[h >> 2] | 0) + 20 | 0;n = c[g >> 2] | 0;c[g >> 2] = n + 1;a[(c[(c[h >> 2] | 0) + 8 >> 2] | 0) + n >> 0] = m;b[(c[h >> 2] | 0) + 5816 >> 1] = (c[k >> 2] & 65535) >> 16 - (c[(c[h >> 2] | 0) + 5820 >> 2] | 0);n = (c[h >> 2] | 0) + 5820 | 0;c[n >> 2] = (c[n >> 2] | 0) + ((c[j >> 2] | 0) - 16);n = c[h >> 2] | 0;Ub(n);i = l;return;
	      } else {
	        n = (c[h >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | d << c[(c[h >> 2] | 0) + 5820 >> 2];n = (c[h >> 2] | 0) + 5820 | 0;c[n >> 2] = (c[n >> 2] | 0) + (c[j >> 2] | 0);n = c[h >> 2] | 0;Ub(n);i = l;return;
	      }
	    }function Wb(d, f, g, h) {
	      d = d | 0;f = f | 0;g = g | 0;h = h | 0;var j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0;u = i;i = i + 48 | 0;s = u + 40 | 0;j = u + 36 | 0;k = u + 32 | 0;t = u + 28 | 0;l = u + 24 | 0;m = u + 20 | 0;n = u + 16 | 0;o = u + 12 | 0;p = u + 8 | 0;q = u + 4 | 0;r = u;c[s >> 2] = d;c[j >> 2] = f;c[k >> 2] = g;c[t >> 2] = h;c[n >> 2] = 0;if ((c[(c[s >> 2] | 0) + 132 >> 2] | 0) > 0) {
	        if ((c[(c[c[s >> 2] >> 2] | 0) + 44 >> 2] | 0) == 2) {
	          h = Xb(c[s >> 2] | 0) | 0;c[(c[c[s >> 2] >> 2] | 0) + 44 >> 2] = h;
	        }Yb(c[s >> 2] | 0, (c[s >> 2] | 0) + 2840 | 0);Yb(c[s >> 2] | 0, (c[s >> 2] | 0) + 2852 | 0);c[n >> 2] = Zb(c[s >> 2] | 0) | 0;c[l >> 2] = ((c[(c[s >> 2] | 0) + 5800 >> 2] | 0) + 3 + 7 | 0) >>> 3;c[m >> 2] = ((c[(c[s >> 2] | 0) + 5804 >> 2] | 0) + 3 + 7 | 0) >>> 3;if ((c[m >> 2] | 0) >>> 0 <= (c[l >> 2] | 0) >>> 0) c[l >> 2] = c[m >> 2];
	      } else {
	        h = (c[k >> 2] | 0) + 5 | 0;c[m >> 2] = h;c[l >> 2] = h;
	      }d = c[s >> 2] | 0;do {
	        if (c[j >> 2] | 0 ? ((c[k >> 2] | 0) + 4 | 0) >>> 0 <= (c[l >> 2] | 0) >>> 0 : 0) Rb(d, c[j >> 2] | 0, c[k >> 2] | 0, c[t >> 2] | 0);else {
	          if ((c[d + 136 >> 2] | 0) != 4 ? (c[m >> 2] | 0) != (c[l >> 2] | 0) : 0) {
	            c[q >> 2] = 3;d = 4 + (c[t >> 2] | 0) | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[q >> 2] | 0) | 0)) {
	              c[r >> 2] = d;m = (c[s >> 2] | 0) + 5816 | 0;b[m >> 1] = e[m >> 1] | 0 | (c[r >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];m = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;p = (c[s >> 2] | 0) + 20 | 0;o = c[p >> 2] | 0;c[p >> 2] = o + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + o >> 0] = m;o = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;m = (c[s >> 2] | 0) + 20 | 0;p = c[m >> 2] | 0;c[m >> 2] = p + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = o;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[r >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);r = (c[s >> 2] | 0) + 5820 | 0;c[r >> 2] = (c[r >> 2] | 0) + ((c[q >> 2] | 0) - 16);
	            } else {
	              r = (c[s >> 2] | 0) + 5816 | 0;b[r >> 1] = e[r >> 1] | 0 | (d & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];r = (c[s >> 2] | 0) + 5820 | 0;c[r >> 2] = (c[r >> 2] | 0) + (c[q >> 2] | 0);
	            }$b(c[s >> 2] | 0, (c[(c[s >> 2] | 0) + 2840 + 4 >> 2] | 0) + 1 | 0, (c[(c[s >> 2] | 0) + 2852 + 4 >> 2] | 0) + 1 | 0, (c[n >> 2] | 0) + 1 | 0);_b(c[s >> 2] | 0, (c[s >> 2] | 0) + 148 | 0, (c[s >> 2] | 0) + 2440 | 0);break;
	          }c[o >> 2] = 3;d = 2 + (c[t >> 2] | 0) | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[o >> 2] | 0) | 0)) {
	            c[p >> 2] = d;n = (c[s >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | (c[p >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];n = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;r = (c[s >> 2] | 0) + 20 | 0;q = c[r >> 2] | 0;c[r >> 2] = q + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + q >> 0] = n;q = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;n = (c[s >> 2] | 0) + 20 | 0;r = c[n >> 2] | 0;c[n >> 2] = r + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + r >> 0] = q;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[p >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);r = (c[s >> 2] | 0) + 5820 | 0;c[r >> 2] = (c[r >> 2] | 0) + ((c[o >> 2] | 0) - 16);
	          } else {
	            r = (c[s >> 2] | 0) + 5816 | 0;b[r >> 1] = e[r >> 1] | 0 | (d & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];r = (c[s >> 2] | 0) + 5820 | 0;c[r >> 2] = (c[r >> 2] | 0) + (c[o >> 2] | 0);
	          }_b(c[s >> 2] | 0, 9568, 9448);
	        }
	      } while (0);Qb(c[s >> 2] | 0);if (!(c[t >> 2] | 0)) {
	        i = u;return;
	      }Sb(c[s >> 2] | 0);i = u;return;
	    }function Xb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 16 | 0;b = j + 12 | 0;d = j + 8 | 0;f = j + 4 | 0;g = j;c[d >> 2] = a;c[f >> 2] = -201342849;c[g >> 2] = 0;while (1) {
	        if ((c[g >> 2] | 0) > 31) break;if (c[f >> 2] & 1 | 0 ? e[(c[d >> 2] | 0) + 148 + (c[g >> 2] << 2) >> 1] | 0 | 0 : 0) {
	          h = 5;break;
	        }c[g >> 2] = (c[g >> 2] | 0) + 1;c[f >> 2] = (c[f >> 2] | 0) >>> 1;
	      }if ((h | 0) == 5) {
	        c[b >> 2] = 0;h = c[b >> 2] | 0;i = j;return h | 0;
	      }if (((e[(c[d >> 2] | 0) + 148 + 36 >> 1] | 0 | 0) == 0 ? (e[(c[d >> 2] | 0) + 148 + 40 >> 1] | 0 | 0) == 0 : 0) ? (e[(c[d >> 2] | 0) + 148 + 52 >> 1] | 0 | 0) == 0 : 0) {
	        c[g >> 2] = 32;while (1) {
	          if ((c[g >> 2] | 0) >= 256) {
	            h = 16;break;
	          }if (e[(c[d >> 2] | 0) + 148 + (c[g >> 2] << 2) >> 1] | 0 | 0) {
	            h = 14;break;
	          }c[g >> 2] = (c[g >> 2] | 0) + 1;
	        }if ((h | 0) == 14) {
	          c[b >> 2] = 1;h = c[b >> 2] | 0;i = j;return h | 0;
	        } else if ((h | 0) == 16) {
	          c[b >> 2] = 0;h = c[b >> 2] | 0;i = j;return h | 0;
	        }
	      }c[b >> 2] = 1;h = c[b >> 2] | 0;i = j;return h | 0;
	    }function Yb(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0;r = i;i = i + 48 | 0;l = r + 32 | 0;m = r + 28 | 0;n = r + 24 | 0;h = r + 20 | 0;j = r + 16 | 0;o = r + 12 | 0;p = r + 8 | 0;q = r + 4 | 0;k = r;c[l >> 2] = f;c[m >> 2] = g;c[n >> 2] = c[c[m >> 2] >> 2];c[h >> 2] = c[c[(c[m >> 2] | 0) + 8 >> 2] >> 2];c[j >> 2] = c[(c[(c[m >> 2] | 0) + 8 >> 2] | 0) + 12 >> 2];c[q >> 2] = -1;c[(c[l >> 2] | 0) + 5200 >> 2] = 0;c[(c[l >> 2] | 0) + 5204 >> 2] = 573;c[o >> 2] = 0;while (1) {
	        if ((c[o >> 2] | 0) >= (c[j >> 2] | 0)) break;f = c[o >> 2] | 0;if (e[(c[n >> 2] | 0) + (c[o >> 2] << 2) >> 1] | 0 | 0) {
	          c[q >> 2] = f;s = (c[l >> 2] | 0) + 5200 | 0;g = (c[s >> 2] | 0) + 1 | 0;c[s >> 2] = g;c[(c[l >> 2] | 0) + 2908 + (g << 2) >> 2] = f;a[(c[l >> 2] | 0) + 5208 + (c[o >> 2] | 0) >> 0] = 0;
	        } else b[(c[n >> 2] | 0) + (f << 2) + 2 >> 1] = 0;c[o >> 2] = (c[o >> 2] | 0) + 1;
	      }while (1) {
	        f = c[q >> 2] | 0;if ((c[(c[l >> 2] | 0) + 5200 >> 2] | 0) >= 2) break;if ((f | 0) < 2) {
	          f = (c[q >> 2] | 0) + 1 | 0;c[q >> 2] = f;
	        } else f = 0;g = (c[l >> 2] | 0) + 5200 | 0;s = (c[g >> 2] | 0) + 1 | 0;c[g >> 2] = s;c[(c[l >> 2] | 0) + 2908 + (s << 2) >> 2] = f;c[k >> 2] = f;b[(c[n >> 2] | 0) + (c[k >> 2] << 2) >> 1] = 1;a[(c[l >> 2] | 0) + 5208 + (c[k >> 2] | 0) >> 0] = 0;s = (c[l >> 2] | 0) + 5800 | 0;c[s >> 2] = (c[s >> 2] | 0) + -1;if (!(c[h >> 2] | 0)) continue;s = (c[l >> 2] | 0) + 5804 | 0;c[s >> 2] = (c[s >> 2] | 0) - (e[(c[h >> 2] | 0) + (c[k >> 2] << 2) + 2 >> 1] | 0);
	      }c[(c[m >> 2] | 0) + 4 >> 2] = f;c[o >> 2] = (c[(c[l >> 2] | 0) + 5200 >> 2] | 0) / 2 | 0;while (1) {
	        if ((c[o >> 2] | 0) < 1) break;cc(c[l >> 2] | 0, c[n >> 2] | 0, c[o >> 2] | 0);c[o >> 2] = (c[o >> 2] | 0) + -1;
	      }c[k >> 2] = c[j >> 2];do {
	        c[o >> 2] = c[(c[l >> 2] | 0) + 2908 + 4 >> 2];s = (c[l >> 2] | 0) + 5200 | 0;h = c[s >> 2] | 0;c[s >> 2] = h + -1;c[(c[l >> 2] | 0) + 2908 + 4 >> 2] = c[(c[l >> 2] | 0) + 2908 + (h << 2) >> 2];cc(c[l >> 2] | 0, c[n >> 2] | 0, 1);c[p >> 2] = c[(c[l >> 2] | 0) + 2908 + 4 >> 2];h = c[o >> 2] | 0;s = (c[l >> 2] | 0) + 5204 | 0;j = (c[s >> 2] | 0) + -1 | 0;c[s >> 2] = j;c[(c[l >> 2] | 0) + 2908 + (j << 2) >> 2] = h;j = c[p >> 2] | 0;h = (c[l >> 2] | 0) + 5204 | 0;s = (c[h >> 2] | 0) + -1 | 0;c[h >> 2] = s;c[(c[l >> 2] | 0) + 2908 + (s << 2) >> 2] = j;b[(c[n >> 2] | 0) + (c[k >> 2] << 2) >> 1] = (e[(c[n >> 2] | 0) + (c[o >> 2] << 2) >> 1] | 0) + (e[(c[n >> 2] | 0) + (c[p >> 2] << 2) >> 1] | 0);if ((d[(c[l >> 2] | 0) + 5208 + (c[o >> 2] | 0) >> 0] | 0 | 0) >= (d[(c[l >> 2] | 0) + 5208 + (c[p >> 2] | 0) >> 0] | 0 | 0)) f = a[(c[l >> 2] | 0) + 5208 + (c[o >> 2] | 0) >> 0] | 0;else f = a[(c[l >> 2] | 0) + 5208 + (c[p >> 2] | 0) >> 0] | 0;a[(c[l >> 2] | 0) + 5208 + (c[k >> 2] | 0) >> 0] = (f & 255) + 1;s = c[k >> 2] & 65535;b[(c[n >> 2] | 0) + (c[p >> 2] << 2) + 2 >> 1] = s;b[(c[n >> 2] | 0) + (c[o >> 2] << 2) + 2 >> 1] = s;s = c[k >> 2] | 0;c[k >> 2] = s + 1;c[(c[l >> 2] | 0) + 2908 + 4 >> 2] = s;cc(c[l >> 2] | 0, c[n >> 2] | 0, 1);
	      } while ((c[(c[l >> 2] | 0) + 5200 >> 2] | 0) >= 2);p = c[(c[l >> 2] | 0) + 2908 + 4 >> 2] | 0;o = (c[l >> 2] | 0) + 5204 | 0;s = (c[o >> 2] | 0) + -1 | 0;c[o >> 2] = s;c[(c[l >> 2] | 0) + 2908 + (s << 2) >> 2] = p;dc(c[l >> 2] | 0, c[m >> 2] | 0);ec(c[n >> 2] | 0, c[q >> 2] | 0, (c[l >> 2] | 0) + 2876 | 0);i = r;return;
	    }function Zb(a) {
	      a = a | 0;var b = 0,
	          f = 0,
	          g = 0;g = i;i = i + 16 | 0;b = g + 4 | 0;f = g;c[b >> 2] = a;bc(c[b >> 2] | 0, (c[b >> 2] | 0) + 148 | 0, c[(c[b >> 2] | 0) + 2840 + 4 >> 2] | 0);bc(c[b >> 2] | 0, (c[b >> 2] | 0) + 2440 | 0, c[(c[b >> 2] | 0) + 2852 + 4 >> 2] | 0);Yb(c[b >> 2] | 0, (c[b >> 2] | 0) + 2864 | 0);c[f >> 2] = 18;while (1) {
	        if ((c[f >> 2] | 0) < 3) break;if (e[(c[b >> 2] | 0) + 2684 + ((d[12250 + (c[f >> 2] | 0) >> 0] | 0) << 2) + 2 >> 1] | 0 | 0) break;c[f >> 2] = (c[f >> 2] | 0) + -1;
	      }b = (c[b >> 2] | 0) + 5800 | 0;c[b >> 2] = (c[b >> 2] | 0) + ((((c[f >> 2] | 0) + 1 | 0) * 3 | 0) + 5 + 5 + 4);i = g;return c[f >> 2] | 0;
	    }function _b(f, g, h) {
	      f = f | 0;g = g | 0;h = h | 0;var j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0;D = i;i = i + 80 | 0;C = D + 76 | 0;u = D + 72 | 0;v = D + 68 | 0;w = D + 64 | 0;x = D + 60 | 0;y = D + 56 | 0;z = D + 52 | 0;j = D + 48 | 0;k = D + 44 | 0;l = D + 40 | 0;m = D + 36 | 0;n = D + 32 | 0;o = D + 28 | 0;p = D + 24 | 0;q = D + 20 | 0;r = D + 16 | 0;s = D + 12 | 0;t = D + 8 | 0;A = D + 4 | 0;B = D;c[C >> 2] = f;c[u >> 2] = g;c[v >> 2] = h;c[y >> 2] = 0;if (c[(c[C >> 2] | 0) + 5792 >> 2] | 0) do {
	        c[w >> 2] = e[(c[(c[C >> 2] | 0) + 5796 >> 2] | 0) + (c[y >> 2] << 1) >> 1];f = c[y >> 2] | 0;c[y >> 2] = f + 1;c[x >> 2] = d[(c[(c[C >> 2] | 0) + 5784 >> 2] | 0) + f >> 0];f = c[x >> 2] | 0;do {
	          if (!(c[w >> 2] | 0)) {
	            c[k >> 2] = e[(c[u >> 2] | 0) + (f << 2) + 2 >> 1];f = e[(c[u >> 2] | 0) + (c[x >> 2] << 2) >> 1] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[k >> 2] | 0) | 0)) {
	              c[l >> 2] = f;f = (c[C >> 2] | 0) + 5816 | 0;b[f >> 1] = e[f >> 1] | 0 | (c[l >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];f = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;h = (c[C >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;g = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;f = (c[C >> 2] | 0) + 20 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[l >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + ((c[k >> 2] | 0) - 16);break;
	            } else {
	              h = (c[C >> 2] | 0) + 5816 | 0;b[h >> 1] = e[h >> 1] | 0 | f << c[(c[C >> 2] | 0) + 5820 >> 2];h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[k >> 2] | 0);break;
	            }
	          } else {
	            c[z >> 2] = d[11994 + f >> 0];c[m >> 2] = e[(c[u >> 2] | 0) + ((c[z >> 2] | 0) + 256 + 1 << 2) + 2 >> 1];f = e[(c[u >> 2] | 0) + ((c[z >> 2] | 0) + 256 + 1 << 2) >> 1] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[m >> 2] | 0) | 0)) {
	              c[n >> 2] = f;f = (c[C >> 2] | 0) + 5816 | 0;b[f >> 1] = e[f >> 1] | 0 | (c[n >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];f = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;h = (c[C >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;g = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;f = (c[C >> 2] | 0) + 20 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[n >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + ((c[m >> 2] | 0) - 16);
	            } else {
	              h = (c[C >> 2] | 0) + 5816 | 0;b[h >> 1] = e[h >> 1] | 0 | f << c[(c[C >> 2] | 0) + 5820 >> 2];h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[m >> 2] | 0);
	            }c[j >> 2] = c[8576 + (c[z >> 2] << 2) >> 2];do {
	              if (c[j >> 2] | 0) {
	                c[x >> 2] = (c[x >> 2] | 0) - (c[8692 + (c[z >> 2] << 2) >> 2] | 0);c[o >> 2] = c[j >> 2];f = c[x >> 2] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[o >> 2] | 0) | 0)) {
	                  c[p >> 2] = f;f = (c[C >> 2] | 0) + 5816 | 0;b[f >> 1] = e[f >> 1] | 0 | (c[p >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];f = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;h = (c[C >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;g = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;f = (c[C >> 2] | 0) + 20 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[p >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + ((c[o >> 2] | 0) - 16);break;
	                } else {
	                  h = (c[C >> 2] | 0) + 5816 | 0;b[h >> 1] = e[h >> 1] | 0 | (f & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[o >> 2] | 0);break;
	                }
	              }
	            } while (0);c[w >> 2] = (c[w >> 2] | 0) + -1;f = c[w >> 2] | 0;if ((c[w >> 2] | 0) >>> 0 < 256) f = a[11482 + f >> 0] | 0;else f = a[11482 + (256 + (f >>> 7)) >> 0] | 0;c[z >> 2] = f & 255;c[q >> 2] = e[(c[v >> 2] | 0) + (c[z >> 2] << 2) + 2 >> 1];f = e[(c[v >> 2] | 0) + (c[z >> 2] << 2) >> 1] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[q >> 2] | 0) | 0)) {
	              c[r >> 2] = f;f = (c[C >> 2] | 0) + 5816 | 0;b[f >> 1] = e[f >> 1] | 0 | (c[r >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];f = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;h = (c[C >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;g = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;f = (c[C >> 2] | 0) + 20 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[r >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + ((c[q >> 2] | 0) - 16);
	            } else {
	              h = (c[C >> 2] | 0) + 5816 | 0;b[h >> 1] = e[h >> 1] | 0 | f << c[(c[C >> 2] | 0) + 5820 >> 2];h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[q >> 2] | 0);
	            }c[j >> 2] = c[8456 + (c[z >> 2] << 2) >> 2];if (c[j >> 2] | 0) {
	              c[w >> 2] = (c[w >> 2] | 0) - (c[8808 + (c[z >> 2] << 2) >> 2] | 0);c[s >> 2] = c[j >> 2];f = c[w >> 2] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[s >> 2] | 0) | 0)) {
	                c[t >> 2] = f;f = (c[C >> 2] | 0) + 5816 | 0;b[f >> 1] = e[f >> 1] | 0 | (c[t >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];f = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;h = (c[C >> 2] | 0) + 20 | 0;g = c[h >> 2] | 0;c[h >> 2] = g + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;g = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;f = (c[C >> 2] | 0) + 20 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[t >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + ((c[s >> 2] | 0) - 16);break;
	              } else {
	                h = (c[C >> 2] | 0) + 5816 | 0;b[h >> 1] = e[h >> 1] | 0 | (f & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];h = (c[C >> 2] | 0) + 5820 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[s >> 2] | 0);break;
	              }
	            }
	          }
	        } while (0);
	      } while ((c[y >> 2] | 0) >>> 0 < (c[(c[C >> 2] | 0) + 5792 >> 2] | 0) >>> 0);c[A >> 2] = e[(c[u >> 2] | 0) + 1024 + 2 >> 1];f = e[(c[u >> 2] | 0) + 1024 >> 1] | 0;if ((c[(c[C >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[A >> 2] | 0) | 0)) {
	        c[B >> 2] = f;x = (c[C >> 2] | 0) + 5816 | 0;b[x >> 1] = e[x >> 1] | 0 | (c[B >> 2] & 65535) << c[(c[C >> 2] | 0) + 5820 >> 2];x = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) & 255;z = (c[C >> 2] | 0) + 20 | 0;y = c[z >> 2] | 0;c[z >> 2] = y + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + y >> 0] = x;y = (e[(c[C >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;x = (c[C >> 2] | 0) + 20 | 0;z = c[x >> 2] | 0;c[x >> 2] = z + 1;a[(c[(c[C >> 2] | 0) + 8 >> 2] | 0) + z >> 0] = y;b[(c[C >> 2] | 0) + 5816 >> 1] = (c[B >> 2] & 65535) >> 16 - (c[(c[C >> 2] | 0) + 5820 >> 2] | 0);C = (c[C >> 2] | 0) + 5820 | 0;c[C >> 2] = (c[C >> 2] | 0) + ((c[A >> 2] | 0) - 16);i = D;return;
	      } else {
	        B = (c[C >> 2] | 0) + 5816 | 0;b[B >> 1] = e[B >> 1] | 0 | f << c[(c[C >> 2] | 0) + 5820 >> 2];C = (c[C >> 2] | 0) + 5820 | 0;c[C >> 2] = (c[C >> 2] | 0) + (c[A >> 2] | 0);i = D;return;
	      }
	    }function $b(f, g, h, j) {
	      f = f | 0;g = g | 0;h = h | 0;j = j | 0;var k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0;x = i;i = i + 64 | 0;s = x + 48 | 0;t = x + 44 | 0;u = x + 40 | 0;v = x + 36 | 0;w = x + 32 | 0;l = x + 28 | 0;k = x + 24 | 0;m = x + 20 | 0;n = x + 16 | 0;o = x + 12 | 0;p = x + 8 | 0;q = x + 4 | 0;r = x;c[s >> 2] = f;c[t >> 2] = g;c[u >> 2] = h;c[v >> 2] = j;c[l >> 2] = 5;f = (c[t >> 2] | 0) - 257 | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[l >> 2] | 0) | 0)) {
	        c[k >> 2] = f;g = (c[s >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (c[k >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];g = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;j = (c[s >> 2] | 0) + 20 | 0;h = c[j >> 2] | 0;c[j >> 2] = h + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + h >> 0] = g;h = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;g = (c[s >> 2] | 0) + 20 | 0;j = c[g >> 2] | 0;c[g >> 2] = j + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + j >> 0] = h;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[k >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);k = (c[s >> 2] | 0) + 5820 | 0;c[k >> 2] = (c[k >> 2] | 0) + ((c[l >> 2] | 0) - 16);
	      } else {
	        k = (c[s >> 2] | 0) + 5816 | 0;b[k >> 1] = e[k >> 1] | 0 | (f & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];k = (c[s >> 2] | 0) + 5820 | 0;c[k >> 2] = (c[k >> 2] | 0) + (c[l >> 2] | 0);
	      }c[m >> 2] = 5;f = (c[u >> 2] | 0) - 1 | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[m >> 2] | 0) | 0)) {
	        c[n >> 2] = f;j = (c[s >> 2] | 0) + 5816 | 0;b[j >> 1] = e[j >> 1] | 0 | (c[n >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];j = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;l = (c[s >> 2] | 0) + 20 | 0;k = c[l >> 2] | 0;c[l >> 2] = k + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + k >> 0] = j;k = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;j = (c[s >> 2] | 0) + 20 | 0;l = c[j >> 2] | 0;c[j >> 2] = l + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + l >> 0] = k;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[n >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);n = (c[s >> 2] | 0) + 5820 | 0;c[n >> 2] = (c[n >> 2] | 0) + ((c[m >> 2] | 0) - 16);
	      } else {
	        n = (c[s >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | (f & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];n = (c[s >> 2] | 0) + 5820 | 0;c[n >> 2] = (c[n >> 2] | 0) + (c[m >> 2] | 0);
	      }c[o >> 2] = 4;f = (c[v >> 2] | 0) - 4 | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[o >> 2] | 0) | 0)) {
	        c[p >> 2] = f;l = (c[s >> 2] | 0) + 5816 | 0;b[l >> 1] = e[l >> 1] | 0 | (c[p >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];l = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;n = (c[s >> 2] | 0) + 20 | 0;m = c[n >> 2] | 0;c[n >> 2] = m + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + m >> 0] = l;m = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;l = (c[s >> 2] | 0) + 20 | 0;n = c[l >> 2] | 0;c[l >> 2] = n + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + n >> 0] = m;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[p >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);p = (c[s >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + ((c[o >> 2] | 0) - 16);
	      } else {
	        p = (c[s >> 2] | 0) + 5816 | 0;b[p >> 1] = e[p >> 1] | 0 | (f & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];p = (c[s >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + (c[o >> 2] | 0);
	      }c[w >> 2] = 0;while (1) {
	        if ((c[w >> 2] | 0) >= (c[v >> 2] | 0)) break;c[q >> 2] = 3;f = e[(c[s >> 2] | 0) + 2684 + ((d[12250 + (c[w >> 2] | 0) >> 0] | 0) << 2) + 2 >> 1] | 0;if ((c[(c[s >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[q >> 2] | 0) | 0)) {
	          c[r >> 2] = f;n = (c[s >> 2] | 0) + 5816 | 0;b[n >> 1] = e[n >> 1] | 0 | (c[r >> 2] & 65535) << c[(c[s >> 2] | 0) + 5820 >> 2];n = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) & 255;p = (c[s >> 2] | 0) + 20 | 0;o = c[p >> 2] | 0;c[p >> 2] = o + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + o >> 0] = n;o = (e[(c[s >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;n = (c[s >> 2] | 0) + 20 | 0;p = c[n >> 2] | 0;c[n >> 2] = p + 1;a[(c[(c[s >> 2] | 0) + 8 >> 2] | 0) + p >> 0] = o;b[(c[s >> 2] | 0) + 5816 >> 1] = (c[r >> 2] & 65535) >> 16 - (c[(c[s >> 2] | 0) + 5820 >> 2] | 0);p = (c[s >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + ((c[q >> 2] | 0) - 16);
	        } else {
	          p = (c[s >> 2] | 0) + 5816 | 0;b[p >> 1] = e[p >> 1] | 0 | f << c[(c[s >> 2] | 0) + 5820 >> 2];p = (c[s >> 2] | 0) + 5820 | 0;c[p >> 2] = (c[p >> 2] | 0) + (c[q >> 2] | 0);
	        }c[w >> 2] = (c[w >> 2] | 0) + 1;
	      }ac(c[s >> 2] | 0, (c[s >> 2] | 0) + 148 | 0, (c[t >> 2] | 0) - 1 | 0);ac(c[s >> 2] | 0, (c[s >> 2] | 0) + 2440 | 0, (c[u >> 2] | 0) - 1 | 0);i = x;return;
	    }
	    function ac(d, f, g) {
	      d = d | 0;f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0;J = i;i = i + 112 | 0;B = J + 100 | 0;C = J + 96 | 0;D = J + 92 | 0;E = J + 88 | 0;F = J + 84 | 0;G = J + 80 | 0;H = J + 76 | 0;h = J + 72 | 0;j = J + 68 | 0;k = J + 64 | 0;l = J + 60 | 0;m = J + 56 | 0;n = J + 52 | 0;o = J + 48 | 0;p = J + 44 | 0;q = J + 40 | 0;r = J + 36 | 0;s = J + 32 | 0;t = J + 28 | 0;u = J + 24 | 0;v = J + 20 | 0;w = J + 16 | 0;x = J + 12 | 0;y = J + 8 | 0;z = J + 4 | 0;A = J;c[B >> 2] = d;c[C >> 2] = f;c[D >> 2] = g;c[F >> 2] = -1;c[H >> 2] = e[(c[C >> 2] | 0) + 2 >> 1];c[h >> 2] = 0;c[j >> 2] = 7;c[k >> 2] = 4;if (!(c[H >> 2] | 0)) {
	        c[j >> 2] = 138;c[k >> 2] = 3;
	      }c[E >> 2] = 0;while (1) {
	        if ((c[E >> 2] | 0) > (c[D >> 2] | 0)) break;c[G >> 2] = c[H >> 2];c[H >> 2] = e[(c[C >> 2] | 0) + ((c[E >> 2] | 0) + 1 << 2) + 2 >> 1];g = (c[h >> 2] | 0) + 1 | 0;c[h >> 2] = g;if (!((g | 0) < (c[j >> 2] | 0) ? (c[G >> 2] | 0) == (c[H >> 2] | 0) : 0)) I = 7;do {
	          if ((I | 0) == 7) {
	            I = 0;do {
	              if ((c[h >> 2] | 0) >= (c[k >> 2] | 0)) {
	                if (c[G >> 2] | 0) {
	                  if ((c[G >> 2] | 0) != (c[F >> 2] | 0)) {
	                    c[n >> 2] = e[(c[B >> 2] | 0) + 2684 + (c[G >> 2] << 2) + 2 >> 1];d = e[(c[B >> 2] | 0) + 2684 + (c[G >> 2] << 2) >> 1] | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[n >> 2] | 0) | 0)) {
	                      c[o >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[o >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[o >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[n >> 2] | 0) - 16);
	                    } else {
	                      g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | d << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[n >> 2] | 0);
	                    }c[h >> 2] = (c[h >> 2] | 0) + -1;
	                  }c[p >> 2] = e[(c[B >> 2] | 0) + 2684 + 64 + 2 >> 1];d = e[(c[B >> 2] | 0) + 2684 + 64 >> 1] | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[p >> 2] | 0) | 0)) {
	                    c[q >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[q >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[q >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[p >> 2] | 0) - 16);
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | d << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[p >> 2] | 0);
	                  }c[r >> 2] = 2;d = (c[h >> 2] | 0) - 3 | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[r >> 2] | 0) | 0)) {
	                    c[s >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[s >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[s >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[r >> 2] | 0) - 16);break;
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (d & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[r >> 2] | 0);break;
	                  }
	                }d = (c[B >> 2] | 0) + 2684 | 0;if ((c[h >> 2] | 0) <= 10) {
	                  c[t >> 2] = e[d + 68 + 2 >> 1];d = e[(c[B >> 2] | 0) + 2684 + 68 >> 1] | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[t >> 2] | 0) | 0)) {
	                    c[u >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[u >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[u >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[t >> 2] | 0) - 16);
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | d << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[t >> 2] | 0);
	                  }c[v >> 2] = 3;d = (c[h >> 2] | 0) - 3 | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[v >> 2] | 0) | 0)) {
	                    c[w >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[w >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[w >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[v >> 2] | 0) - 16);break;
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (d & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[v >> 2] | 0);break;
	                  }
	                } else {
	                  c[x >> 2] = e[d + 72 + 2 >> 1];d = e[(c[B >> 2] | 0) + 2684 + 72 >> 1] | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[x >> 2] | 0) | 0)) {
	                    c[y >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[y >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[y >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[x >> 2] | 0) - 16);
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | d << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[x >> 2] | 0);
	                  }c[z >> 2] = 7;d = (c[h >> 2] | 0) - 11 | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[z >> 2] | 0) | 0)) {
	                    c[A >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[A >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[A >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[z >> 2] | 0) - 16);break;
	                  } else {
	                    g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | (d & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[z >> 2] | 0);break;
	                  }
	                }
	              } else do {
	                c[l >> 2] = e[(c[B >> 2] | 0) + 2684 + (c[G >> 2] << 2) + 2 >> 1];d = e[(c[B >> 2] | 0) + 2684 + (c[G >> 2] << 2) >> 1] | 0;if ((c[(c[B >> 2] | 0) + 5820 >> 2] | 0) > (16 - (c[l >> 2] | 0) | 0)) {
	                  c[m >> 2] = d;d = (c[B >> 2] | 0) + 5816 | 0;b[d >> 1] = e[d >> 1] | 0 | (c[m >> 2] & 65535) << c[(c[B >> 2] | 0) + 5820 >> 2];d = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) & 255;g = (c[B >> 2] | 0) + 20 | 0;f = c[g >> 2] | 0;c[g >> 2] = f + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + f >> 0] = d;f = (e[(c[B >> 2] | 0) + 5816 >> 1] | 0) >> 8 & 255;d = (c[B >> 2] | 0) + 20 | 0;g = c[d >> 2] | 0;c[d >> 2] = g + 1;a[(c[(c[B >> 2] | 0) + 8 >> 2] | 0) + g >> 0] = f;b[(c[B >> 2] | 0) + 5816 >> 1] = (c[m >> 2] & 65535) >> 16 - (c[(c[B >> 2] | 0) + 5820 >> 2] | 0);g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + ((c[l >> 2] | 0) - 16);
	                } else {
	                  g = (c[B >> 2] | 0) + 5816 | 0;b[g >> 1] = e[g >> 1] | 0 | d << c[(c[B >> 2] | 0) + 5820 >> 2];g = (c[B >> 2] | 0) + 5820 | 0;c[g >> 2] = (c[g >> 2] | 0) + (c[l >> 2] | 0);
	                }g = (c[h >> 2] | 0) + -1 | 0;c[h >> 2] = g;
	              } while ((g | 0) != 0);
	            } while (0);c[h >> 2] = 0;c[F >> 2] = c[G >> 2];if (!(c[H >> 2] | 0)) {
	              c[j >> 2] = 138;c[k >> 2] = 3;break;
	            }if ((c[G >> 2] | 0) == (c[H >> 2] | 0)) {
	              c[j >> 2] = 6;c[k >> 2] = 3;break;
	            } else {
	              c[j >> 2] = 7;c[k >> 2] = 4;break;
	            }
	          }
	        } while (0);c[E >> 2] = (c[E >> 2] | 0) + 1;
	      }i = J;return;
	    }function bc(a, d, f) {
	      a = a | 0;d = d | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0;s = i;i = i + 48 | 0;k = s + 36 | 0;l = s + 32 | 0;m = s + 28 | 0;n = s + 24 | 0;o = s + 20 | 0;p = s + 16 | 0;q = s + 12 | 0;g = s + 8 | 0;h = s + 4 | 0;j = s;c[k >> 2] = a;c[l >> 2] = d;c[m >> 2] = f;c[o >> 2] = -1;c[q >> 2] = e[(c[l >> 2] | 0) + 2 >> 1];c[g >> 2] = 0;c[h >> 2] = 7;c[j >> 2] = 4;if (!(c[q >> 2] | 0)) {
	        c[h >> 2] = 138;c[j >> 2] = 3;
	      }b[(c[l >> 2] | 0) + ((c[m >> 2] | 0) + 1 << 2) + 2 >> 1] = -1;c[n >> 2] = 0;while (1) {
	        if ((c[n >> 2] | 0) > (c[m >> 2] | 0)) break;c[p >> 2] = c[q >> 2];c[q >> 2] = e[(c[l >> 2] | 0) + ((c[n >> 2] | 0) + 1 << 2) + 2 >> 1];f = (c[g >> 2] | 0) + 1 | 0;c[g >> 2] = f;if (!((f | 0) < (c[h >> 2] | 0) ? (c[p >> 2] | 0) == (c[q >> 2] | 0) : 0)) r = 7;do {
	          if ((r | 0) == 7) {
	            r = 0;do {
	              if ((c[g >> 2] | 0) >= (c[j >> 2] | 0)) {
	                if (!(c[p >> 2] | 0)) {
	                  a = (c[k >> 2] | 0) + 2684 | 0;if ((c[g >> 2] | 0) <= 10) {
	                    f = a + 68 | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;break;
	                  } else {
	                    f = a + 72 | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;break;
	                  }
	                } else {
	                  if ((c[p >> 2] | 0) != (c[o >> 2] | 0)) {
	                    f = (c[k >> 2] | 0) + 2684 + (c[p >> 2] << 2) | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;
	                  }f = (c[k >> 2] | 0) + 2684 + 64 | 0;b[f >> 1] = (b[f >> 1] | 0) + 1 << 16 >> 16;break;
	                }
	              } else {
	                f = (c[k >> 2] | 0) + 2684 + (c[p >> 2] << 2) | 0;b[f >> 1] = (e[f >> 1] | 0) + (c[g >> 2] | 0);
	              }
	            } while (0);c[g >> 2] = 0;c[o >> 2] = c[p >> 2];if (!(c[q >> 2] | 0)) {
	              c[h >> 2] = 138;c[j >> 2] = 3;break;
	            }if ((c[p >> 2] | 0) == (c[q >> 2] | 0)) {
	              c[h >> 2] = 6;c[j >> 2] = 3;break;
	            } else {
	              c[h >> 2] = 7;c[j >> 2] = 4;break;
	            }
	          }
	        } while (0);c[n >> 2] = (c[n >> 2] | 0) + 1;
	      }i = s;return;
	    }function cc(a, b, f) {
	      a = a | 0;b = b | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 32 | 0;j = m + 16 | 0;g = m + 12 | 0;k = m + 8 | 0;l = m + 4 | 0;h = m;c[j >> 2] = a;c[g >> 2] = b;c[k >> 2] = f;c[l >> 2] = c[(c[j >> 2] | 0) + 2908 + (c[k >> 2] << 2) >> 2];c[h >> 2] = c[k >> 2] << 1;while (1) {
	        if ((c[h >> 2] | 0) > (c[(c[j >> 2] | 0) + 5200 >> 2] | 0)) {
	          a = 12;break;
	        }do {
	          if ((c[h >> 2] | 0) < (c[(c[j >> 2] | 0) + 5200 >> 2] | 0)) {
	            if ((e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + ((c[h >> 2] | 0) + 1 << 2) >> 2] << 2) >> 1] | 0 | 0) >= (e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] << 2) >> 1] | 0 | 0)) {
	              if ((e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + ((c[h >> 2] | 0) + 1 << 2) >> 2] << 2) >> 1] | 0 | 0) != (e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] << 2) >> 1] | 0 | 0)) break;if ((d[(c[j >> 2] | 0) + 5208 + (c[(c[j >> 2] | 0) + 2908 + ((c[h >> 2] | 0) + 1 << 2) >> 2] | 0) >> 0] | 0 | 0) > (d[(c[j >> 2] | 0) + 5208 + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] | 0) >> 0] | 0 | 0)) break;
	            }c[h >> 2] = (c[h >> 2] | 0) + 1;
	          }
	        } while (0);if ((e[(c[g >> 2] | 0) + (c[l >> 2] << 2) >> 1] | 0 | 0) < (e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] << 2) >> 1] | 0 | 0)) {
	          a = 12;break;
	        }if ((e[(c[g >> 2] | 0) + (c[l >> 2] << 2) >> 1] | 0 | 0) == (e[(c[g >> 2] | 0) + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] << 2) >> 1] | 0 | 0) ? (d[(c[j >> 2] | 0) + 5208 + (c[l >> 2] | 0) >> 0] | 0 | 0) <= (d[(c[j >> 2] | 0) + 5208 + (c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2] | 0) >> 0] | 0 | 0) : 0) {
	          a = 12;break;
	        }c[(c[j >> 2] | 0) + 2908 + (c[k >> 2] << 2) >> 2] = c[(c[j >> 2] | 0) + 2908 + (c[h >> 2] << 2) >> 2];c[k >> 2] = c[h >> 2];c[h >> 2] = c[h >> 2] << 1;
	      }if ((a | 0) == 12) {
	        c[(c[j >> 2] | 0) + 2908 + (c[k >> 2] << 2) >> 2] = c[l >> 2];i = m;return;
	      }
	    }function dc(a, d) {
	      a = a | 0;d = d | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0;u = i;i = i + 64 | 0;q = u + 52 | 0;v = u + 48 | 0;r = u + 44 | 0;s = u + 40 | 0;h = u + 36 | 0;j = u + 32 | 0;k = u + 28 | 0;t = u + 24 | 0;l = u + 20 | 0;m = u + 16 | 0;n = u + 12 | 0;o = u + 8 | 0;f = u + 4 | 0;g = u + 56 | 0;p = u;c[q >> 2] = a;c[v >> 2] = d;c[r >> 2] = c[c[v >> 2] >> 2];c[s >> 2] = c[(c[v >> 2] | 0) + 4 >> 2];c[h >> 2] = c[c[(c[v >> 2] | 0) + 8 >> 2] >> 2];c[j >> 2] = c[(c[(c[v >> 2] | 0) + 8 >> 2] | 0) + 4 >> 2];c[k >> 2] = c[(c[(c[v >> 2] | 0) + 8 >> 2] | 0) + 8 >> 2];c[t >> 2] = c[(c[(c[v >> 2] | 0) + 8 >> 2] | 0) + 16 >> 2];c[p >> 2] = 0;c[o >> 2] = 0;while (1) {
	        if ((c[o >> 2] | 0) > 15) break;b[(c[q >> 2] | 0) + 2876 + (c[o >> 2] << 1) >> 1] = 0;c[o >> 2] = (c[o >> 2] | 0) + 1;
	      }b[(c[r >> 2] | 0) + (c[(c[q >> 2] | 0) + 2908 + (c[(c[q >> 2] | 0) + 5204 >> 2] << 2) >> 2] << 2) + 2 >> 1] = 0;c[l >> 2] = (c[(c[q >> 2] | 0) + 5204 >> 2] | 0) + 1;while (1) {
	        if ((c[l >> 2] | 0) >= 573) break;c[m >> 2] = c[(c[q >> 2] | 0) + 2908 + (c[l >> 2] << 2) >> 2];c[o >> 2] = (e[(c[r >> 2] | 0) + ((e[(c[r >> 2] | 0) + (c[m >> 2] << 2) + 2 >> 1] | 0) << 2) + 2 >> 1] | 0) + 1;if ((c[o >> 2] | 0) > (c[t >> 2] | 0)) {
	          c[o >> 2] = c[t >> 2];c[p >> 2] = (c[p >> 2] | 0) + 1;
	        }b[(c[r >> 2] | 0) + (c[m >> 2] << 2) + 2 >> 1] = c[o >> 2];if ((c[m >> 2] | 0) <= (c[s >> 2] | 0)) {
	          v = (c[q >> 2] | 0) + 2876 + (c[o >> 2] << 1) | 0;b[v >> 1] = (b[v >> 1] | 0) + 1 << 16 >> 16;c[f >> 2] = 0;if ((c[m >> 2] | 0) >= (c[k >> 2] | 0)) c[f >> 2] = c[(c[j >> 2] | 0) + ((c[m >> 2] | 0) - (c[k >> 2] | 0) << 2) >> 2];b[g >> 1] = b[(c[r >> 2] | 0) + (c[m >> 2] << 2) >> 1] | 0;d = S(e[g >> 1] | 0, (c[o >> 2] | 0) + (c[f >> 2] | 0) | 0) | 0;v = (c[q >> 2] | 0) + 5800 | 0;c[v >> 2] = (c[v >> 2] | 0) + d;if (c[h >> 2] | 0) {
	            d = S(e[g >> 1] | 0, (e[(c[h >> 2] | 0) + (c[m >> 2] << 2) + 2 >> 1] | 0) + (c[f >> 2] | 0) | 0) | 0;v = (c[q >> 2] | 0) + 5804 | 0;c[v >> 2] = (c[v >> 2] | 0) + d;
	          }
	        }c[l >> 2] = (c[l >> 2] | 0) + 1;
	      }if (!(c[p >> 2] | 0)) {
	        i = u;return;
	      }do {
	        c[o >> 2] = (c[t >> 2] | 0) - 1;while (1) {
	          a = c[o >> 2] | 0;if (e[(c[q >> 2] | 0) + 2876 + (c[o >> 2] << 1) >> 1] | 0 | 0) break;c[o >> 2] = a + -1;
	        }v = (c[q >> 2] | 0) + 2876 + (a << 1) | 0;b[v >> 1] = (b[v >> 1] | 0) + -1 << 16 >> 16;v = (c[q >> 2] | 0) + 2876 + ((c[o >> 2] | 0) + 1 << 1) | 0;b[v >> 1] = (e[v >> 1] | 0) + 2;v = (c[q >> 2] | 0) + 2876 + (c[t >> 2] << 1) | 0;b[v >> 1] = (b[v >> 1] | 0) + -1 << 16 >> 16;c[p >> 2] = (c[p >> 2] | 0) - 2;
	      } while ((c[p >> 2] | 0) > 0);c[o >> 2] = c[t >> 2];while (1) {
	        if (!(c[o >> 2] | 0)) break;c[m >> 2] = e[(c[q >> 2] | 0) + 2876 + (c[o >> 2] << 1) >> 1];while (1) {
	          if (!(c[m >> 2] | 0)) break;v = (c[l >> 2] | 0) + -1 | 0;c[l >> 2] = v;c[n >> 2] = c[(c[q >> 2] | 0) + 2908 + (v << 2) >> 2];if ((c[n >> 2] | 0) > (c[s >> 2] | 0)) continue;if ((e[(c[r >> 2] | 0) + (c[n >> 2] << 2) + 2 >> 1] | 0 | 0) != (c[o >> 2] | 0)) {
	            t = S((c[o >> 2] | 0) - (e[(c[r >> 2] | 0) + (c[n >> 2] << 2) + 2 >> 1] | 0) | 0, e[(c[r >> 2] | 0) + (c[n >> 2] << 2) >> 1] | 0) | 0;v = (c[q >> 2] | 0) + 5800 | 0;c[v >> 2] = (c[v >> 2] | 0) + t;b[(c[r >> 2] | 0) + (c[n >> 2] << 2) + 2 >> 1] = c[o >> 2];
	          }c[m >> 2] = (c[m >> 2] | 0) + -1;
	        }c[o >> 2] = (c[o >> 2] | 0) + -1;
	      }i = u;return;
	    }function ec(a, d, f) {
	      a = a | 0;d = d | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;p = i;i = i + 64 | 0;h = p + 24 | 0;j = p + 20 | 0;k = p + 16 | 0;l = p + 32 | 0;m = p + 12 | 0;n = p + 8 | 0;o = p + 4 | 0;g = p;c[h >> 2] = a;c[j >> 2] = d;c[k >> 2] = f;c[m >> 2] = 0;c[n >> 2] = 1;while (1) {
	        if ((c[n >> 2] | 0) > 15) break;c[m >> 2] = (c[m >> 2] | 0) + (e[(c[k >> 2] | 0) + ((c[n >> 2] | 0) - 1 << 1) >> 1] | 0) << 1;b[l + (c[n >> 2] << 1) >> 1] = c[m >> 2];c[n >> 2] = (c[n >> 2] | 0) + 1;
	      }c[o >> 2] = 0;while (1) {
	        if ((c[o >> 2] | 0) > (c[j >> 2] | 0)) break;c[g >> 2] = e[(c[h >> 2] | 0) + (c[o >> 2] << 2) + 2 >> 1];if (c[g >> 2] | 0) {
	          m = l + (c[g >> 2] << 1) | 0;n = b[m >> 1] | 0;b[m >> 1] = n + 1 << 16 >> 16;n = (fc(n & 65535, c[g >> 2] | 0) | 0) & 65535;b[(c[h >> 2] | 0) + (c[o >> 2] << 2) >> 1] = n;
	        }c[o >> 2] = (c[o >> 2] | 0) + 1;
	      }i = p;return;
	    }function fc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0;g = i;i = i + 16 | 0;d = g + 8 | 0;e = g + 4 | 0;f = g;c[d >> 2] = a;c[e >> 2] = b;c[f >> 2] = 0;do {
	        c[f >> 2] = c[f >> 2] | c[d >> 2] & 1;c[d >> 2] = (c[d >> 2] | 0) >>> 1;c[f >> 2] = c[f >> 2] << 1;b = (c[e >> 2] | 0) + -1 | 0;c[e >> 2] = b;
	      } while ((b | 0) > 0);i = g;return (c[f >> 2] | 0) >>> 1 | 0;
	    }function gc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;e = i;i = i + 16 | 0;g = e + 4 | 0;f = e;c[e + 8 >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = Ad(S(c[g >> 2] | 0, c[f >> 2] | 0) | 0) | 0;i = e;return d | 0;
	    }function hc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[d + 4 >> 2] = a;c[e >> 2] = b;Bd(c[e >> 2] | 0);i = d;return;
	    }function ic(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 32 | 0;f = m + 20 | 0;g = m + 16 | 0;h = m + 12 | 0;j = m + 8 | 0;k = m + 4 | 0;l = m;c[g >> 2] = a;c[h >> 2] = b;c[j >> 2] = e;c[k >> 2] = (c[g >> 2] | 0) >>> 16 & 65535;c[g >> 2] = c[g >> 2] & 65535;a = c[h >> 2] | 0;if ((c[j >> 2] | 0) == 1) {
	        c[g >> 2] = (c[g >> 2] | 0) + (d[a >> 0] | 0);if ((c[g >> 2] | 0) >>> 0 >= 65521) c[g >> 2] = (c[g >> 2] | 0) - 65521;c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);if ((c[k >> 2] | 0) >>> 0 >= 65521) c[k >> 2] = (c[k >> 2] | 0) - 65521;c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	      }if (!a) {
	        c[f >> 2] = 1;l = c[f >> 2] | 0;i = m;return l | 0;
	      }if ((c[j >> 2] | 0) >>> 0 < 16) {
	        while (1) {
	          l = c[j >> 2] | 0;c[j >> 2] = l + -1;if (!l) break;l = c[h >> 2] | 0;c[h >> 2] = l + 1;c[g >> 2] = (c[g >> 2] | 0) + (d[l >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);
	        }if ((c[g >> 2] | 0) >>> 0 >= 65521) c[g >> 2] = (c[g >> 2] | 0) - 65521;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[j >> 2] | 0) >>> 0 < 5552) break;c[j >> 2] = a - 5552;c[l >> 2] = 347;do {
	          c[g >> 2] = (c[g >> 2] | 0) + (d[c[h >> 2] >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 2 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 3 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 4 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 5 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 6 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 7 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 8 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 9 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 10 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 11 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 12 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 13 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 14 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 15 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[h >> 2] = (c[h >> 2] | 0) + 16;e = (c[l >> 2] | 0) + -1 | 0;c[l >> 2] = e;
	        } while ((e | 0) != 0);c[g >> 2] = ((c[g >> 2] | 0) >>> 0) % 65521 | 0;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;
	      }if (a | 0) {
	        while (1) {
	          if ((c[j >> 2] | 0) >>> 0 < 16) break;c[j >> 2] = (c[j >> 2] | 0) - 16;c[g >> 2] = (c[g >> 2] | 0) + (d[c[h >> 2] >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 2 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 3 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 4 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 5 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 6 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 7 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 8 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 9 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 10 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 11 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 12 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 13 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 14 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 15 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[h >> 2] = (c[h >> 2] | 0) + 16;
	        }while (1) {
	          l = c[j >> 2] | 0;c[j >> 2] = l + -1;if (!l) break;l = c[h >> 2] | 0;c[h >> 2] = l + 1;c[g >> 2] = (c[g >> 2] | 0) + (d[l >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);
	        }c[g >> 2] = ((c[g >> 2] | 0) >>> 0) % 65521 | 0;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;
	      }c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	    }function jc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;e = i;i = i + 16 | 0;h = e + 8 | 0;g = e + 4 | 0;f = e;c[h >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = ic(c[h >> 2] | 0, c[g >> 2] | 0, c[f >> 2] | 0) | 0;i = e;return d | 0;
	    }function kc(a) {
	      a = a | 0;var b = 0,
	          d = 0;b = i;i = i + 16 | 0;d = b;c[d >> 2] = c[a + 60 >> 2];a = nc(pa(6, d | 0) | 0) | 0;i = b;return a | 0;
	    }function lc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;g = i;i = i + 80 | 0;f = g;c[b + 36 >> 2] = 6;if ((c[b >> 2] & 64 | 0) == 0 ? (c[f >> 2] = c[b + 60 >> 2], c[f + 4 >> 2] = 21505, c[f + 8 >> 2] = g + 12, ta(54, f | 0) | 0) : 0) a[b + 75 >> 0] = -1;f = pc(b, d, e) | 0;i = g;return f | 0;
	    }function mc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;f = i;i = i + 32 | 0;g = f;e = f + 20 | 0;c[g >> 2] = c[a + 60 >> 2];c[g + 4 >> 2] = 0;c[g + 8 >> 2] = b;c[g + 12 >> 2] = e;c[g + 16 >> 2] = d;if ((nc(xa(140, g | 0) | 0) | 0) < 0) {
	        c[e >> 2] = -1;a = -1;
	      } else a = c[e >> 2] | 0;i = f;return a | 0;
	    }function nc(a) {
	      a = a | 0;if (a >>> 0 > 4294963200) {
	        c[(oc() | 0) >> 2] = 0 - a;a = -1;
	      }return a | 0;
	    }function oc() {
	      var a = 0;if (!(c[3777] | 0)) a = 15152;else a = c[(Td() | 0) + 64 >> 2] | 0;return a | 0;
	    }function pc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;q = i;i = i + 48 | 0;n = q + 16 | 0;m = q;j = q + 32 | 0;o = a + 28 | 0;h = c[o >> 2] | 0;c[j >> 2] = h;p = a + 20 | 0;h = (c[p >> 2] | 0) - h | 0;c[j + 4 >> 2] = h;c[j + 8 >> 2] = b;c[j + 12 >> 2] = d;k = a + 60 | 0;l = a + 44 | 0;g = 2;b = h + d | 0;while (1) {
	        if (!(c[3777] | 0)) {
	          c[n >> 2] = c[k >> 2];c[n + 4 >> 2] = j;c[n + 8 >> 2] = g;f = nc(za(146, n | 0) | 0) | 0;
	        } else {
	          oa(1, a | 0);c[m >> 2] = c[k >> 2];c[m + 4 >> 2] = j;c[m + 8 >> 2] = g;f = nc(za(146, m | 0) | 0) | 0;ga(0);
	        }if ((b | 0) == (f | 0)) {
	          b = 6;break;
	        }if ((f | 0) < 0) {
	          b = 8;break;
	        }b = b - f | 0;e = c[j + 4 >> 2] | 0;if (f >>> 0 <= e >>> 0) {
	          if ((g | 0) == 2) {
	            c[o >> 2] = (c[o >> 2] | 0) + f;g = 2;h = j;
	          } else h = j;
	        } else {
	          h = c[l >> 2] | 0;c[o >> 2] = h;c[p >> 2] = h;f = f - e | 0;g = g + -1 | 0;h = j + 8 | 0;e = c[j + 12 >> 2] | 0;
	        }c[h >> 2] = (c[h >> 2] | 0) + f;c[h + 4 >> 2] = e - f;j = h;
	      }if ((b | 0) == 6) {
	        n = c[l >> 2] | 0;c[a + 16 >> 2] = n + (c[a + 48 >> 2] | 0);a = n;c[o >> 2] = a;c[p >> 2] = a;
	      } else if ((b | 0) == 8) {
	        c[a + 16 >> 2] = 0;c[o >> 2] = 0;c[p >> 2] = 0;c[a >> 2] = c[a >> 2] | 32;if ((g | 0) == 2) d = 0;else d = d - (c[j + 4 >> 2] | 0) | 0;
	      }i = q;return d | 0;
	    }function qc(a) {
	      a = a | 0;if (!(c[a + 68 >> 2] | 0)) rc(a);return;
	    }function rc(a) {
	      a = a | 0;return;
	    }function sc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0;m = i;i = i + 48 | 0;h = m + 16 | 0;g = m;f = m + 32 | 0;c[f >> 2] = d;j = f + 4 | 0;l = b + 48 | 0;n = c[l >> 2] | 0;c[j >> 2] = e - ((n | 0) != 0 & 1);k = b + 44 | 0;c[f + 8 >> 2] = c[k >> 2];c[f + 12 >> 2] = n;if (!(c[3777] | 0)) {
	        c[h >> 2] = c[b + 60 >> 2];c[h + 4 >> 2] = f;c[h + 8 >> 2] = 2;f = nc(ya(145, h | 0) | 0) | 0;
	      } else {
	        oa(2, b | 0);c[g >> 2] = c[b + 60 >> 2];c[g + 4 >> 2] = f;c[g + 8 >> 2] = 2;f = nc(ya(145, g | 0) | 0) | 0;ga(0);
	      }if ((f | 0) >= 1) {
	        j = c[j >> 2] | 0;if (f >>> 0 > j >>> 0) {
	          g = c[k >> 2] | 0;h = b + 4 | 0;c[h >> 2] = g;c[b + 8 >> 2] = g + (f - j);if (!(c[l >> 2] | 0)) f = e;else {
	            c[h >> 2] = g + 1;a[d + (e + -1) >> 0] = a[g >> 0] | 0;f = e;
	          }
	        }
	      } else {
	        c[b >> 2] = c[b >> 2] | f & 48 ^ 16;c[b + 8 >> 2] = 0;c[b + 4 >> 2] = 0;
	      }i = m;return f | 0;
	    }function tc(a) {
	      a = a | 0;if (!(c[a + 68 >> 2] | 0)) rc(a);return;
	    }function uc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0;c[a + 104 >> 2] = b;d = c[a + 8 >> 2] | 0;e = c[a + 4 >> 2] | 0;f = d - e | 0;c[a + 108 >> 2] = f;if ((b | 0) != 0 & (f | 0) > (b | 0)) c[a + 100 >> 2] = e + b;else c[a + 100 >> 2] = d;return;
	    }function vc(b) {
	      b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0;f = b + 104 | 0;i = c[f >> 2] | 0;if ((i | 0) != 0 ? (c[b + 108 >> 2] | 0) >= (i | 0) : 0) j = 4;else {
	        e = wc(b) | 0;if ((e | 0) >= 0) {
	          f = c[f >> 2] | 0;i = c[b + 8 >> 2] | 0;if (f) {
	            h = c[b + 4 >> 2] | 0;f = f - (c[b + 108 >> 2] | 0) | 0;g = i;if ((i - h | 0) < (f | 0)) j = 9;else c[b + 100 >> 2] = h + (f + -1);
	          } else {
	            g = i;j = 9;
	          }if ((j | 0) == 9) c[b + 100 >> 2] = i;f = b + 4 | 0;if (!g) f = c[f >> 2] | 0;else {
	            f = c[f >> 2] | 0;b = b + 108 | 0;c[b >> 2] = g + 1 - f + (c[b >> 2] | 0);
	          }f = f + -1 | 0;if ((d[f >> 0] | 0 | 0) != (e | 0)) a[f >> 0] = e;
	        } else j = 4;
	      }if ((j | 0) == 4) {
	        c[b + 100 >> 2] = 0;e = -1;
	      }return e | 0;
	    }function wc(a) {
	      a = a | 0;var b = 0,
	          e = 0;e = i;i = i + 16 | 0;b = e;if ((c[a + 8 >> 2] | 0) == 0 ? (xc(a) | 0) != 0 : 0) a = -1;else if ((Ca[c[a + 32 >> 2] & 7](a, b, 1) | 0) == 1) a = d[b >> 0] | 0;else a = -1;i = e;return a | 0;
	    }function xc(b) {
	      b = b | 0;var d = 0,
	          e = 0;d = b + 74 | 0;e = a[d >> 0] | 0;a[d >> 0] = e + 255 | e;d = b + 20 | 0;e = b + 44 | 0;if ((c[d >> 2] | 0) >>> 0 > (c[e >> 2] | 0) >>> 0) Ca[c[b + 36 >> 2] & 7](b, 0, 0) | 0;c[b + 16 >> 2] = 0;c[b + 28 >> 2] = 0;c[d >> 2] = 0;d = c[b >> 2] | 0;if (d & 20) {
	        if (!(d & 4)) d = -1;else {
	          c[b >> 2] = d | 32;d = -1;
	        }
	      } else {
	        d = c[e >> 2] | 0;c[b + 8 >> 2] = d;c[b + 4 >> 2] = d;d = 0;
	      }return d | 0;
	    }function yc(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0.0,
	          h = 0,
	          j = 0.0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0.0,
	          q = 0.0,
	          r = 0,
	          u = 0.0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0.0;M = i;i = i + 512 | 0;I = M;switch (e | 0) {case 0:
	          {
	            J = -149;L = 24;A = 4;break;
	          }case 1:
	          {
	            J = -1074;L = 53;A = 4;break;
	          }case 2:
	          {
	            J = -1074;L = 53;A = 4;break;
	          }default:
	          g = 0.0;}a: do {
	        if ((A | 0) == 4) {
	          C = b + 4 | 0;B = b + 100 | 0;do {
	            e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	              c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	            } else e = vc(b) | 0;
	          } while ((zc(e) | 0) != 0);b: do {
	            switch (e | 0) {case 43:case 45:
	                {
	                  h = 1 - (((e | 0) == 45 & 1) << 1) | 0;e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                    c[C >> 2] = e + 1;k = d[e >> 0] | 0;K = h;break b;
	                  } else {
	                    k = vc(b) | 0;K = h;break b;
	                  }
	                }default:
	                {
	                  k = e;K = 1;
	                }}
	          } while (0);e = 0;do {
	            if ((k | 32 | 0) != (a[12385 + e >> 0] | 0)) break;do {
	              if (e >>> 0 < 7) {
	                h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                  c[C >> 2] = h + 1;k = d[h >> 0] | 0;break;
	                } else {
	                  k = vc(b) | 0;break;
	                }
	              }
	            } while (0);e = e + 1 | 0;
	          } while (e >>> 0 < 8);c: do {
	            switch (e | 0) {case 8:
	                break;case 3:
	                {
	                  A = 23;break;
	                }default:
	                {
	                  l = (f | 0) != 0;if (l & e >>> 0 > 3) if ((e | 0) == 8) break c;else {
	                    A = 23;break c;
	                  }d: do {
	                    if (!e) {
	                      e = 0;do {
	                        if ((k | 32 | 0) != (a[13184 + e >> 0] | 0)) break d;do {
	                          if (e >>> 0 < 2) {
	                            h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = h + 1;k = d[h >> 0] | 0;break;
	                            } else {
	                              k = vc(b) | 0;break;
	                            }
	                          }
	                        } while (0);e = e + 1 | 0;
	                      } while (e >>> 0 < 3);
	                    }
	                  } while (0);switch (e | 0) {case 3:
	                      {
	                        e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                          c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                        } else e = vc(b) | 0;if ((e | 0) == 40) e = 1;else {
	                          if (!(c[B >> 2] | 0)) {
	                            g = s;break a;
	                          }c[C >> 2] = (c[C >> 2] | 0) + -1;g = s;break a;
	                        }while (1) {
	                          h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = h + 1;h = d[h >> 0] | 0;
	                          } else h = vc(b) | 0;if (!((h + -48 | 0) >>> 0 < 10 | (h + -65 | 0) >>> 0 < 26) ? !((h | 0) == 95 | (h + -97 | 0) >>> 0 < 26) : 0) break;e = e + 1 | 0;
	                        }if ((h | 0) == 41) {
	                          g = s;break a;
	                        }h = (c[B >> 2] | 0) == 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if (!l) {
	                          c[(oc() | 0) >> 2] = 22;uc(b, 0);g = 0.0;break a;
	                        }if (!e) {
	                          g = s;break a;
	                        }while (1) {
	                          e = e + -1 | 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if (!e) {
	                            g = s;break a;
	                          }
	                        }
	                      }case 0:
	                      {
	                        do {
	                          if ((k | 0) == 48) {
	                            e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                            } else e = vc(b) | 0;if ((e | 32 | 0) != 120) {
	                              if (!(c[B >> 2] | 0)) {
	                                e = 48;break;
	                              }c[C >> 2] = (c[C >> 2] | 0) + -1;e = 48;break;
	                            }e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = e + 1;h = d[e >> 0] | 0;k = 0;
	                            } else {
	                              h = vc(b) | 0;k = 0;
	                            }e: while (1) {
	                              switch (h | 0) {case 46:
	                                  {
	                                    A = 74;break e;
	                                  }case 48:
	                                  break;default:
	                                  {
	                                    v = 0;m = 0;p = 1.0;g = 0.0;e = 0;l = h;w = k;y = 0;x = 0;k = 0;h = 0;break e;
	                                  }}e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;h = d[e >> 0] | 0;k = 1;continue;
	                              } else {
	                                h = vc(b) | 0;k = 1;continue;
	                              }
	                            }if ((A | 0) == 74) {
	                              e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;h = d[e >> 0] | 0;
	                              } else h = vc(b) | 0;if ((h | 0) == 48) {
	                                k = 0;h = 0;do {
	                                  e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                    c[C >> 2] = e + 1;l = d[e >> 0] | 0;
	                                  } else l = vc(b) | 0;k = Hd(k | 0, h | 0, -1, -1) | 0;h = D;
	                                } while ((l | 0) == 48);v = 1;m = 0;p = 1.0;g = 0.0;e = 0;w = 1;y = 0;x = 0;
	                              } else {
	                                v = 1;m = 0;p = 1.0;g = 0.0;e = 0;l = h;w = k;y = 0;x = 0;k = 0;h = 0;
	                              }
	                            }while (1) {
	                              o = l + -48 | 0;n = l | 32;if (o >>> 0 >= 10) {
	                                r = (l | 0) == 46;if (!(r | (n + -97 | 0) >>> 0 < 6)) {
	                                  n = l;break;
	                                }if (r) {
	                                  if (!v) {
	                                    v = 1;j = p;r = w;k = x;h = y;o = x;n = y;
	                                  } else {
	                                    n = 46;break;
	                                  }
	                                } else A = 86;
	                              } else A = 86;if ((A | 0) == 86) {
	                                A = 0;l = (l | 0) > 57 ? n + -87 | 0 : o;do {
	                                  if (!((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 8)) {
	                                    if ((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 14) {
	                                      u = p * .0625;j = u;g = g + u * +(l | 0);break;
	                                    }if ((m | 0) != 0 | (l | 0) == 0) j = p;else {
	                                      m = 1;j = p;g = g + p * .5;
	                                    }
	                                  } else {
	                                    j = p;e = l + (e << 4) | 0;
	                                  }
	                                } while (0);o = Hd(x | 0, y | 0, 1, 0) | 0;r = 1;n = D;
	                              }l = c[C >> 2] | 0;if (l >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = l + 1;p = j;l = d[l >> 0] | 0;w = r;y = n;x = o;continue;
	                              } else {
	                                p = j;l = vc(b) | 0;w = r;y = n;x = o;continue;
	                              }
	                            }if (!w) {
	                              e = (c[B >> 2] | 0) == 0;if (!e) c[C >> 2] = (c[C >> 2] | 0) + -1;if (f) {
	                                if (!e ? (z = c[C >> 2] | 0, c[C >> 2] = z + -1, v | 0) : 0) c[C >> 2] = z + -2;
	                              } else uc(b, 0);g = +(K | 0) * 0.0;break a;
	                            }m = (v | 0) == 0;o = m ? x : k;m = m ? y : h;if ((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 8) {
	                              k = x;h = y;do {
	                                e = e << 4;k = Hd(k | 0, h | 0, 1, 0) | 0;h = D;
	                              } while ((h | 0) < 0 | (h | 0) == 0 & k >>> 0 < 8);l = e;
	                            } else l = e;if ((n | 32 | 0) == 112) {
	                              h = Ac(b, f) | 0;e = D;if ((h | 0) == 0 & (e | 0) == -2147483648) {
	                                if (!f) {
	                                  uc(b, 0);g = 0.0;break a;
	                                }if (!(c[B >> 2] | 0)) {
	                                  h = 0;e = 0;
	                                } else {
	                                  c[C >> 2] = (c[C >> 2] | 0) + -1;h = 0;e = 0;
	                                }
	                              }
	                            } else if (!(c[B >> 2] | 0)) {
	                              h = 0;e = 0;
	                            } else {
	                              c[C >> 2] = (c[C >> 2] | 0) + -1;h = 0;e = 0;
	                            }k = Kd(o | 0, m | 0, 2) | 0;k = Hd(k | 0, D | 0, -32, -1) | 0;k = Hd(k | 0, D | 0, h | 0, e | 0) | 0;e = D;if (!l) {
	                              g = +(K | 0) * 0.0;break a;
	                            }if ((e | 0) > 0 | (e | 0) == 0 & k >>> 0 > (0 - J | 0) >>> 0) {
	                              c[(oc() | 0) >> 2] = 34;g = +(K | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;break a;
	                            }I = J + -106 | 0;H = ((I | 0) < 0) << 31 >> 31;if ((e | 0) < (H | 0) | (e | 0) == (H | 0) & k >>> 0 < I >>> 0) {
	                              c[(oc() | 0) >> 2] = 34;g = +(K | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;break a;
	                            }if ((l | 0) > -1) {
	                              h = l;do {
	                                H = !(g >= .5);I = H & 1 | h << 1;h = I ^ 1;g = g + (H ? g : g + -1.0);k = Hd(k | 0, e | 0, -1, -1) | 0;e = D;
	                              } while ((I | 0) > -1);p = g;l = h;
	                            } else p = g;J = Gd(32, 0, J | 0, ((J | 0) < 0) << 31 >> 31 | 0) | 0;e = Hd(k | 0, e | 0, J | 0, D | 0) | 0;J = D;if (0 > (J | 0) | 0 == (J | 0) & L >>> 0 > e >>> 0) {
	                              if ((e | 0) < 0) {
	                                h = 0;e = 84;A = 127;
	                              } else A = 125;
	                            } else {
	                              e = L;A = 125;
	                            }if ((A | 0) == 125) if ((e | 0) < 53) {
	                              h = e;e = 84 - e | 0;A = 127;
	                            } else {
	                              j = 0.0;g = +(K | 0);
	                            }if ((A | 0) == 127) {
	                              g = +(K | 0);j = +Cc(+Bc(1.0, e), g);e = h;
	                            }L = (l & 1 | 0) == 0 & (p != 0.0 & (e | 0) < 32);g = g * (L ? 0.0 : p) + (j + g * +(((L & 1) + l | 0) >>> 0)) - j;if (!(g != 0.0)) c[(oc() | 0) >> 2] = 34;g = +Dc(g, k);break a;
	                          } else e = k;
	                        } while (0);E = J + L | 0;H = 0 - E | 0;h = 0;f: while (1) {
	                          switch (e | 0) {case 46:
	                              {
	                                A = 138;break f;
	                              }case 48:
	                              break;default:
	                              {
	                                n = 0;l = h;o = 0;m = 0;break f;
	                              }}e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = e + 1;e = d[e >> 0] | 0;h = 1;continue;
	                          } else {
	                            e = vc(b) | 0;h = 1;continue;
	                          }
	                        }if ((A | 0) == 138) {
	                          e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                          } else e = vc(b) | 0;if ((e | 0) == 48) {
	                            h = 0;e = 0;while (1) {
	                              h = Hd(h | 0, e | 0, -1, -1) | 0;m = D;e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                              } else e = vc(b) | 0;if ((e | 0) == 48) e = m;else {
	                                n = 1;l = 1;o = h;break;
	                              }
	                            }
	                          } else {
	                            n = 1;l = h;o = 0;m = 0;
	                          }
	                        }c[I >> 2] = 0;r = e + -48 | 0;k = (e | 0) == 46;g: do {
	                          if (k | r >>> 0 < 10) {
	                            A = I + 496 | 0;w = 0;h = 0;z = 0;x = n;y = l;n = 0;l = 0;h: while (1) {
	                              do {
	                                if (k) {
	                                  if (!x) {
	                                    x = 1;v = z;o = n;m = l;
	                                  } else break h;
	                                } else {
	                                  n = Hd(n | 0, l | 0, 1, 0) | 0;l = D;v = (e | 0) != 48;if ((h | 0) >= 125) {
	                                    if (!v) {
	                                      v = z;break;
	                                    }c[A >> 2] = c[A >> 2] | 1;v = z;break;
	                                  }k = I + (h << 2) | 0;if (!w) e = r;else e = e + -48 + ((c[k >> 2] | 0) * 10 | 0) | 0;c[k >> 2] = e;w = w + 1 | 0;y = (w | 0) == 9;w = y ? 0 : w;h = (y & 1) + h | 0;v = v ? n : z;y = 1;
	                                }
	                              } while (0);e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                              } else e = vc(b) | 0;r = e + -48 | 0;k = (e | 0) == 46;if (!(k | r >>> 0 < 10)) {
	                                r = v;v = x;k = y;A = 161;break g;
	                              } else z = v;
	                            }e = w;r = z;k = (y | 0) != 0;A = 169;
	                          } else {
	                            w = 0;h = 0;r = 0;v = n;k = l;n = 0;l = 0;A = 161;
	                          }
	                        } while (0);do {
	                          if ((A | 0) == 161) {
	                            z = (v | 0) == 0;o = z ? n : o;m = z ? l : m;k = (k | 0) != 0;if (!(k & (e | 32 | 0) == 101)) if ((e | 0) > -1) {
	                              e = w;A = 169;break;
	                            } else {
	                              e = w;A = 171;break;
	                            }k = Ac(b, f) | 0;e = D;if ((k | 0) == 0 & (e | 0) == -2147483648) {
	                              if (!f) {
	                                uc(b, 0);g = 0.0;break;
	                              }if (!(c[B >> 2] | 0)) {
	                                k = 0;e = 0;
	                              } else {
	                                c[C >> 2] = (c[C >> 2] | 0) + -1;k = 0;e = 0;
	                              }
	                            }y = Hd(k | 0, e | 0, o | 0, m | 0) | 0;e = w;m = D;A = 173;
	                          }
	                        } while (0);if ((A | 0) == 169) if (c[B >> 2] | 0) {
	                          c[C >> 2] = (c[C >> 2] | 0) + -1;if (k) {
	                            y = o;A = 173;
	                          } else A = 172;
	                        } else A = 171;if ((A | 0) == 171) if (k) {
	                          y = o;A = 173;
	                        } else A = 172;do {
	                          if ((A | 0) == 172) {
	                            c[(oc() | 0) >> 2] = 22;uc(b, 0);g = 0.0;
	                          } else if ((A | 0) == 173) {
	                            k = c[I >> 2] | 0;if (!k) {
	                              g = +(K | 0) * 0.0;break;
	                            }if (((l | 0) < 0 | (l | 0) == 0 & n >>> 0 < 10) & ((y | 0) == (n | 0) & (m | 0) == (l | 0)) ? L >>> 0 > 30 | (k >>> L | 0) == 0 : 0) {
	                              g = +(K | 0) * +(k >>> 0);break;
	                            }b = (J | 0) / -2 | 0;C = ((b | 0) < 0) << 31 >> 31;if ((m | 0) > (C | 0) | (m | 0) == (C | 0) & y >>> 0 > b >>> 0) {
	                              c[(oc() | 0) >> 2] = 34;g = +(K | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;break;
	                            }b = J + -106 | 0;C = ((b | 0) < 0) << 31 >> 31;if ((m | 0) < (C | 0) | (m | 0) == (C | 0) & y >>> 0 < b >>> 0) {
	                              c[(oc() | 0) >> 2] = 34;g = +(K | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;break;
	                            }if (e) {
	                              if ((e | 0) < 9) {
	                                l = I + (h << 2) | 0;k = c[l >> 2] | 0;do {
	                                  k = k * 10 | 0;e = e + 1 | 0;
	                                } while ((e | 0) != 9);c[l >> 2] = k;
	                              }h = h + 1 | 0;
	                            }if ((r | 0) < 9 ? (r | 0) <= (y | 0) & (y | 0) < 18 : 0) {
	                              if ((y | 0) == 9) {
	                                g = +(K | 0) * +((c[I >> 2] | 0) >>> 0);break;
	                              }if ((y | 0) < 9) {
	                                g = +(K | 0) * +((c[I >> 2] | 0) >>> 0) / +(c[9408 + (8 - y << 2) >> 2] | 0);break;
	                              }b = L + 27 + (S(y, -3) | 0) | 0;e = c[I >> 2] | 0;if ((b | 0) > 30 | (e >>> b | 0) == 0) {
	                                g = +(K | 0) * +(e >>> 0) * +(c[9408 + (y + -10 << 2) >> 2] | 0);break;
	                              }
	                            }e = (y | 0) % 9 | 0;if (!e) {
	                              e = 0;l = 0;
	                            } else {
	                              r = (y | 0) > -1 ? e : e + 9 | 0;n = c[9408 + (8 - r << 2) >> 2] | 0;if (h) {
	                                o = 1e9 / (n | 0) | 0;l = 0;m = 0;k = y;e = 0;do {
	                                  B = I + (e << 2) | 0;C = c[B >> 2] | 0;b = ((C >>> 0) / (n >>> 0) | 0) + l | 0;c[B >> 2] = b;l = S((C >>> 0) % (n >>> 0) | 0, o) | 0;b = (e | 0) == (m | 0) & (b | 0) == 0;k = b ? k + -9 | 0 : k;m = b ? m + 1 & 127 : m;e = e + 1 | 0;
	                                } while ((e | 0) != (h | 0));if (!l) l = m;else {
	                                  c[I + (h << 2) >> 2] = l;l = m;h = h + 1 | 0;
	                                }
	                              } else {
	                                l = 0;h = 0;k = y;
	                              }e = 0;y = 9 - r + k | 0;
	                            }i: while (1) {
	                              r = (y | 0) < 18;v = (y | 0) == 18;w = I + (l << 2) | 0;while (1) {
	                                if (!r) {
	                                  if (!v) {
	                                    k = y;break i;
	                                  }if ((c[w >> 2] | 0) >>> 0 >= 9007199) {
	                                    k = 18;break i;
	                                  }
	                                }k = 0;x = h;h = h + 127 | 0;while (1) {
	                                  m = h & 127;n = I + (m << 2) | 0;h = Kd(c[n >> 2] | 0, 0, 29) | 0;h = Hd(h | 0, D | 0, k | 0, 0) | 0;k = D;if (k >>> 0 > 0 | (k | 0) == 0 & h >>> 0 > 1e9) {
	                                    o = Nd(h | 0, k | 0, 1e9, 0) | 0;h = Rd(h | 0, k | 0, 1e9, 0) | 0;
	                                  } else o = 0;c[n >> 2] = h;b = (m | 0) == (l | 0);x = (m | 0) != (x + 127 & 127 | 0) | b ? x : (h | 0) == 0 ? m : x;if (b) break;else {
	                                    k = o;h = m + -1 | 0;
	                                  }
	                                }e = e + -29 | 0;if (o | 0) break;else h = x;
	                              }l = l + 127 & 127;h = x + 127 & 127;k = I + ((x + 126 & 127) << 2) | 0;if ((l | 0) == (x | 0)) c[k >> 2] = c[k >> 2] | c[I + (h << 2) >> 2];else h = x;c[I + (l << 2) >> 2] = o;y = y + 9 | 0;
	                            }j: while (1) {
	                              w = h + 1 & 127;x = I + ((h + 127 & 127) << 2) | 0;while (1) {
	                                o = (k | 0) == 18;v = (k | 0) > 27 ? 9 : 1;y = l;while (1) {
	                                  l = 0;while (1) {
	                                    m = l + y & 127;if ((m | 0) == (h | 0)) {
	                                      G = 2;A = 220;break;
	                                    }m = c[I + (m << 2) >> 2] | 0;n = c[9440 + (l << 2) >> 2] | 0;if (m >>> 0 < n >>> 0) {
	                                      G = 2;A = 220;break;
	                                    }if (m >>> 0 > n >>> 0) break;l = l + 1 | 0;if ((l | 0) >= 2) {
	                                      G = l;A = 220;break;
	                                    }
	                                  }if ((A | 0) == 220 ? (A = 0, o & (G | 0) == 2) : 0) {
	                                    g = 0.0;m = 0;break j;
	                                  }e = e + v | 0;if ((y | 0) == (h | 0)) y = h;else break;
	                                }o = (1 << v) + -1 | 0;r = 1e9 >>> v;n = 0;l = y;m = y;do {
	                                  B = I + (m << 2) | 0;C = c[B >> 2] | 0;b = (C >>> v) + n | 0;c[B >> 2] = b;n = S(C & o, r) | 0;b = (m | 0) == (l | 0) & (b | 0) == 0;k = b ? k + -9 | 0 : k;l = b ? l + 1 & 127 : l;m = m + 1 & 127;
	                                } while ((m | 0) != (h | 0));if (!n) continue;if ((w | 0) != (l | 0)) break;c[x >> 2] = c[x >> 2] | 1;
	                              }c[I + (h << 2) >> 2] = n;h = w;
	                            }while (1) {
	                              l = m + y & 127;k = h + 1 & 127;if ((l | 0) == (h | 0)) c[I + (k + -1 << 2) >> 2] = 0;else k = h;g = g * 1.0e9 + +((c[I + (l << 2) >> 2] | 0) >>> 0);m = m + 1 | 0;if ((m | 0) == 2) break;else h = k;
	                            }u = +(K | 0);j = u * g;n = e + 53 | 0;o = n - J | 0;r = (o | 0) < (L | 0);h = r & 1;m = r ? (o | 0) < 0 ? 0 : o : L;if ((m | 0) < 53) {
	                              N = +Cc(+Bc(1.0, 105 - m | 0), j);p = +Ec(j, +Bc(1.0, 53 - m | 0));q = N;g = p;p = N + (j - p);
	                            } else {
	                              q = 0.0;g = 0.0;p = j;
	                            }l = y + 2 & 127;do {
	                              if ((l | 0) != (k | 0)) {
	                                l = c[I + (l << 2) >> 2] | 0;do {
	                                  if (l >>> 0 >= 5e8) {
	                                    if ((l | 0) != 5e8) {
	                                      g = u * .75 + g;break;
	                                    }if ((y + 3 & 127 | 0) == (k | 0)) {
	                                      g = u * .5 + g;break;
	                                    } else {
	                                      g = u * .75 + g;break;
	                                    }
	                                  } else {
	                                    if ((l | 0) == 0 ? (y + 3 & 127 | 0) == (k | 0) : 0) break;g = u * .25 + g;
	                                  }
	                                } while (0);if ((53 - m | 0) > 1) {
	                                  if (+Ec(g, 1.0) != 0.0) {
	                                    j = g;break;
	                                  }j = g + 1.0;
	                                } else j = g;
	                              } else j = g;
	                            } while (0);g = p + j - q;do {
	                              if ((n & 2147483647 | 0) > (-2 - E | 0)) {
	                                if (+F(+g) >= 9007199254740992.0) {
	                                  g = g * .5;h = r & (m | 0) == (o | 0) ? 0 : h;e = e + 1 | 0;
	                                }if ((e + 50 | 0) <= (H | 0) ? !(j != 0.0 & (h | 0) != 0) : 0) break;c[(oc() | 0) >> 2] = 34;
	                              }
	                            } while (0);g = +Dc(g, e);
	                          }
	                        } while (0);break a;
	                      }default:
	                      {
	                        if (c[B >> 2] | 0) c[C >> 2] = (c[C >> 2] | 0) + -1;c[(oc() | 0) >> 2] = 22;uc(b, 0);g = 0.0;break a;
	                      }}
	                }}
	          } while (0);if ((A | 0) == 23) {
	            h = (c[B >> 2] | 0) == 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if ((f | 0) != 0 & e >>> 0 > 3) do {
	              if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;e = e + -1 | 0;
	            } while (e >>> 0 > 3);
	          }g = +(K | 0) * t;
	        }
	      } while (0);i = M;return +g;
	    }function zc(a) {
	      a = a | 0;return ((a | 0) == 32 | (a + -9 | 0) >>> 0 < 5) & 1 | 0;
	    }function Ac(a, b) {
	      a = a | 0;b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0;h = a + 4 | 0;e = c[h >> 2] | 0;i = a + 100 | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	        c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	      } else e = vc(a) | 0;switch (e | 0) {case 43:case 45:
	          {
	            f = (e | 0) == 45 & 1;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	              c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	            } else e = vc(a) | 0;if ((b | 0) != 0 & (e + -48 | 0) >>> 0 > 9 ? (c[i >> 2] | 0) != 0 : 0) c[h >> 2] = (c[h >> 2] | 0) + -1;break;
	          }default:
	          f = 0;}if ((e + -48 | 0) >>> 0 > 9) {
	        if (!(c[i >> 2] | 0)) {
	          f = -2147483648;e = 0;
	        } else {
	          c[h >> 2] = (c[h >> 2] | 0) + -1;f = -2147483648;e = 0;
	        }
	      } else {
	        g = 0;do {
	          g = e + -48 + (g * 10 | 0) | 0;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = vc(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10 & (g | 0) < 214748364);b = ((g | 0) < 0) << 31 >> 31;if ((e + -48 | 0) >>> 0 < 10) do {
	          b = Pd(g | 0, b | 0, 10, 0) | 0;g = D;e = Hd(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;g = Hd(e | 0, D | 0, b | 0, g | 0) | 0;b = D;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = vc(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10 & ((b | 0) < 21474836 | (b | 0) == 21474836 & g >>> 0 < 2061584302));if ((e + -48 | 0) >>> 0 < 10) do {
	          e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = vc(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10);if (c[i >> 2] | 0) c[h >> 2] = (c[h >> 2] | 0) + -1;i = (f | 0) != 0;e = Gd(0, 0, g | 0, b | 0) | 0;f = i ? D : b;e = i ? e : g;
	      }D = f;return e | 0;
	    }function Bc(a, b) {
	      a = +a;b = b | 0;var d = 0;if ((b | 0) > 1023) {
	        a = a * 8988465674311579538646525.0e283;d = b + -1023 | 0;b = b + -2046 | 0;if ((d | 0) > 1023) {
	          a = a * 8988465674311579538646525.0e283;b = (b | 0) > 1023 ? 1023 : b;
	        } else b = d;
	      } else if ((b | 0) < -1022) {
	        a = a * 2.2250738585072014e-308;d = b + 1022 | 0;b = b + 2044 | 0;if ((d | 0) < -1022) {
	          a = a * 2.2250738585072014e-308;b = (b | 0) < -1022 ? -1022 : b;
	        } else b = d;
	      }b = Kd(b + 1023 | 0, 0, 52) | 0;d = D;c[l >> 2] = b;c[l + 4 >> 2] = d;return +(a * +h[l >> 3]);
	    }function Cc(a, b) {
	      a = +a;b = +b;return + +Gc(a, b);
	    }function Dc(a, b) {
	      a = +a;b = b | 0;return + +Bc(a, b);
	    }function Ec(a, b) {
	      a = +a;b = +b;return + +Fc(a, b);
	    }function Fc(a, b) {
	      a = +a;b = +b;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;h[l >> 3] = a;i = c[l >> 2] | 0;k = c[l + 4 >> 2] | 0;h[l >> 3] = b;n = c[l >> 2] | 0;o = c[l + 4 >> 2] | 0;e = Jd(i | 0, k | 0, 52) | 0;e = e & 2047;m = Jd(n | 0, o | 0, 52) | 0;m = m & 2047;p = k & -2147483648;g = Kd(n | 0, o | 0, 1) | 0;j = D;a: do {
	        if (!((g | 0) == 0 & (j | 0) == 0) ? (f = o & 2147483647, !(f >>> 0 > 2146435072 | (f | 0) == 2146435072 & n >>> 0 > 0 | (e | 0) == 2047)) : 0) {
	          d = Kd(i | 0, k | 0, 1) | 0;f = D;if (!(f >>> 0 > j >>> 0 | (f | 0) == (j | 0) & d >>> 0 > g >>> 0)) return +((d | 0) == (g | 0) & (f | 0) == (j | 0) ? a * 0.0 : a);if (!e) {
	            d = Kd(i | 0, k | 0, 12) | 0;f = D;if ((f | 0) > -1 | (f | 0) == -1 & d >>> 0 > 4294967295) {
	              e = 0;do {
	                e = e + -1 | 0;d = Kd(d | 0, f | 0, 1) | 0;f = D;
	              } while ((f | 0) > -1 | (f | 0) == -1 & d >>> 0 > 4294967295);
	            } else e = 0;i = Kd(i | 0, k | 0, 1 - e | 0) | 0;g = D;
	          } else g = k & 1048575 | 1048576;if (!m) {
	            f = Kd(n | 0, o | 0, 12) | 0;j = D;if ((j | 0) > -1 | (j | 0) == -1 & f >>> 0 > 4294967295) {
	              d = 0;do {
	                d = d + -1 | 0;f = Kd(f | 0, j | 0, 1) | 0;j = D;
	              } while ((j | 0) > -1 | (j | 0) == -1 & f >>> 0 > 4294967295);
	            } else d = 0;n = Kd(n | 0, o | 0, 1 - d | 0) | 0;m = d;k = D;
	          } else k = o & 1048575 | 1048576;f = Gd(i | 0, g | 0, n | 0, k | 0) | 0;d = D;j = (d | 0) > -1 | (d | 0) == -1 & f >>> 0 > 4294967295;b: do {
	            if ((e | 0) > (m | 0)) {
	              while (1) {
	                if (j) {
	                  if ((f | 0) == 0 & (d | 0) == 0) break;
	                } else {
	                  f = i;d = g;
	                }i = Kd(f | 0, d | 0, 1) | 0;g = D;e = e + -1 | 0;f = Gd(i | 0, g | 0, n | 0, k | 0) | 0;d = D;j = (d | 0) > -1 | (d | 0) == -1 & f >>> 0 > 4294967295;if ((e | 0) <= (m | 0)) break b;
	              }b = a * 0.0;break a;
	            }
	          } while (0);if (j) {
	            if ((f | 0) == 0 & (d | 0) == 0) {
	              b = a * 0.0;break;
	            }
	          } else {
	            d = g;f = i;
	          }if (d >>> 0 < 1048576 | (d | 0) == 1048576 & f >>> 0 < 0) do {
	            f = Kd(f | 0, d | 0, 1) | 0;d = D;e = e + -1 | 0;
	          } while (d >>> 0 < 1048576 | (d | 0) == 1048576 & f >>> 0 < 0);if ((e | 0) > 0) {
	            o = Hd(f | 0, d | 0, 0, -1048576) | 0;d = D;e = Kd(e | 0, 0, 52) | 0;d = d | D;e = o | e;
	          } else {
	            e = Jd(f | 0, d | 0, 1 - e | 0) | 0;d = D;
	          }c[l >> 2] = e;c[l + 4 >> 2] = d | p;b = +h[l >> 3];
	        } else q = 3;
	      } while (0);if ((q | 0) == 3) {
	        b = a * b;b = b / b;
	      }return +b;
	    }function Gc(a, b) {
	      a = +a;b = +b;var d = 0,
	          e = 0;h[l >> 3] = a;e = c[l >> 2] | 0;d = c[l + 4 >> 2] | 0;h[l >> 3] = b;d = c[l + 4 >> 2] & -2147483648 | d & 2147483647;c[l >> 2] = e;c[l + 4 >> 2] = d;return + +h[l >> 3];
	    }function Hc(b, e, f, g, h) {
	      b = b | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;var i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;a: do {
	        if (e >>> 0 > 36) {
	          c[(oc() | 0) >> 2] = 22;h = 0;g = 0;
	        } else {
	          r = b + 4 | 0;q = b + 100 | 0;do {
	            i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	              c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	            } else i = vc(b) | 0;
	          } while ((zc(i) | 0) != 0);b: do {
	            switch (i | 0) {case 43:case 45:
	                {
	                  i = ((i | 0) == 45) << 31 >> 31;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;p = i;i = d[j >> 0] | 0;break b;
	                  } else {
	                    p = i;i = vc(b) | 0;break b;
	                  }
	                }default:
	                p = 0;}
	          } while (0);j = (e | 0) == 0;do {
	            if ((e | 16 | 0) == 16 & (i | 0) == 48) {
	              i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = vc(b) | 0;if ((i | 32 | 0) != 120) if (j) {
	                e = 8;n = 46;break;
	              } else {
	                n = 32;break;
	              }i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = vc(b) | 0;if ((d[12395 + i >> 0] | 0) > 15) {
	                g = (c[q >> 2] | 0) == 0;if (!g) c[r >> 2] = (c[r >> 2] | 0) + -1;if (!f) {
	                  uc(b, 0);h = 0;g = 0;break a;
	                }if (g) {
	                  h = 0;g = 0;break a;
	                }c[r >> 2] = (c[r >> 2] | 0) + -1;h = 0;g = 0;break a;
	              } else {
	                e = 16;n = 46;
	              }
	            } else {
	              e = j ? 10 : e;if ((d[12395 + i >> 0] | 0) >>> 0 < e >>> 0) n = 32;else {
	                if (c[q >> 2] | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;uc(b, 0);c[(oc() | 0) >> 2] = 22;h = 0;g = 0;break a;
	              }
	            }
	          } while (0);if ((n | 0) == 32) if ((e | 0) == 10) {
	            e = i + -48 | 0;if (e >>> 0 < 10) {
	              i = 0;j = e;do {
	                i = (i * 10 | 0) + j | 0;e = c[r >> 2] | 0;if (e >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                  c[r >> 2] = e + 1;e = d[e >> 0] | 0;
	                } else e = vc(b) | 0;j = e + -48 | 0;
	              } while (j >>> 0 < 10 & i >>> 0 < 429496729);f = 0;
	            } else {
	              e = i;i = 0;f = 0;
	            }j = e + -48 | 0;if (j >>> 0 < 10) {
	              m = j;while (1) {
	                j = Pd(i | 0, f | 0, 10, 0) | 0;k = D;l = ((m | 0) < 0) << 31 >> 31;o = ~l;if (k >>> 0 > o >>> 0 | (k | 0) == (o | 0) & j >>> 0 > ~m >>> 0) {
	                  j = e;e = m;break;
	                }i = Hd(j | 0, k | 0, m | 0, l | 0) | 0;f = D;e = c[r >> 2] | 0;if (e >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                  c[r >> 2] = e + 1;e = d[e >> 0] | 0;
	                } else e = vc(b) | 0;k = e + -48 | 0;if (k >>> 0 < 10 & (f >>> 0 < 429496729 | (f | 0) == 429496729 & i >>> 0 < 2576980378)) m = k;else {
	                  j = e;e = k;break;
	                }
	              }if (e >>> 0 > 9) {
	                j = p;e = f;
	              } else {
	                e = 10;n = 72;
	              }
	            } else {
	              j = p;e = f;
	            }
	          } else n = 46;c: do {
	            if ((n | 0) == 46) {
	              if (!(e + -1 & e)) {
	                n = a[12651 + ((e * 23 | 0) >>> 5 & 7) >> 0] | 0;f = a[12395 + i >> 0] | 0;j = f & 255;if (j >>> 0 < e >>> 0) {
	                  i = 0;k = j;do {
	                    i = k | i << n;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                      c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                    } else j = vc(b) | 0;f = a[12395 + j >> 0] | 0;k = f & 255;
	                  } while (i >>> 0 < 134217728 & k >>> 0 < e >>> 0);k = 0;
	                } else {
	                  j = i;k = 0;i = 0;
	                }l = Jd(-1, -1, n | 0) | 0;m = D;if ((f & 255) >>> 0 >= e >>> 0 | (k >>> 0 > m >>> 0 | (k | 0) == (m | 0) & i >>> 0 > l >>> 0)) {
	                  f = k;n = 72;break;
	                } else j = k;while (1) {
	                  i = Kd(i | 0, j | 0, n | 0) | 0;k = D;i = f & 255 | i;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = vc(b) | 0;f = a[12395 + j >> 0] | 0;if ((f & 255) >>> 0 >= e >>> 0 | (k >>> 0 > m >>> 0 | (k | 0) == (m | 0) & i >>> 0 > l >>> 0)) {
	                    f = k;n = 72;break c;
	                  } else j = k;
	                }
	              }f = a[12395 + i >> 0] | 0;j = f & 255;if (j >>> 0 < e >>> 0) {
	                i = 0;k = j;do {
	                  i = k + (S(i, e) | 0) | 0;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = vc(b) | 0;f = a[12395 + j >> 0] | 0;k = f & 255;
	                } while (i >>> 0 < 119304647 & k >>> 0 < e >>> 0);k = 0;
	              } else {
	                j = i;i = 0;k = 0;
	              }if ((f & 255) >>> 0 < e >>> 0) {
	                n = Nd(-1, -1, e | 0, 0) | 0;o = D;m = k;while (1) {
	                  if (m >>> 0 > o >>> 0 | (m | 0) == (o | 0) & i >>> 0 > n >>> 0) {
	                    f = m;n = 72;break c;
	                  }k = Pd(i | 0, m | 0, e | 0, 0) | 0;l = D;f = f & 255;if (l >>> 0 > 4294967295 | (l | 0) == -1 & k >>> 0 > ~f >>> 0) {
	                    f = m;n = 72;break c;
	                  }i = Hd(f | 0, 0, k | 0, l | 0) | 0;k = D;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = vc(b) | 0;f = a[12395 + j >> 0] | 0;if ((f & 255) >>> 0 >= e >>> 0) {
	                    f = k;n = 72;break;
	                  } else m = k;
	                }
	              } else {
	                f = k;n = 72;
	              }
	            }
	          } while (0);if ((n | 0) == 72) if ((d[12395 + j >> 0] | 0) >>> 0 < e >>> 0) {
	            do {
	              i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = vc(b) | 0;
	            } while ((d[12395 + i >> 0] | 0) >>> 0 < e >>> 0);c[(oc() | 0) >> 2] = 34;j = (g & 1 | 0) == 0 & 0 == 0 ? p : 0;e = h;i = g;
	          } else {
	            j = p;e = f;
	          }if (c[q >> 2] | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;if (!(e >>> 0 < h >>> 0 | (e | 0) == (h | 0) & i >>> 0 < g >>> 0)) {
	            if (!((g & 1 | 0) != 0 | 0 != 0 | (j | 0) != 0)) {
	              c[(oc() | 0) >> 2] = 34;g = Hd(g | 0, h | 0, -1, -1) | 0;h = D;break;
	            }if (e >>> 0 > h >>> 0 | (e | 0) == (h | 0) & i >>> 0 > g >>> 0) {
	              c[(oc() | 0) >> 2] = 34;break;
	            }
	          }g = ((j | 0) < 0) << 31 >> 31;g = Gd(i ^ j | 0, e ^ g | 0, j | 0, g | 0) | 0;h = D;
	        }
	      } while (0);D = h;return g | 0;
	    }function Ic(a) {
	      a = a | 0;var b = 0;b = 15096;c[b >> 2] = a + -1;c[b + 4 >> 2] = 0;return;
	    }function Jc() {
	      var a = 0,
	          b = 0,
	          d = 0;b = 15096;b = Pd(c[b >> 2] | 0, c[b + 4 >> 2] | 0, 1284865837, 1481765933) | 0;b = Hd(b | 0, D | 0, 1, 0) | 0;a = D;d = 15096;c[d >> 2] = b;c[d + 4 >> 2] = a;a = Jd(b | 0, a | 0, 33) | 0;return a | 0;
	    }function Kc(b, c) {
	      b = b | 0;c = c | 0;var d = 0,
	          e = 0;d = a[b >> 0] | 0;e = a[c >> 0] | 0;if (d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != e << 24 >> 24) b = e;else {
	        do {
	          b = b + 1 | 0;c = c + 1 | 0;d = a[b >> 0] | 0;e = a[c >> 0] | 0;
	        } while (!(d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != e << 24 >> 24));b = e;
	      }return (d & 255) - (b & 255) | 0;
	    }function Lc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0;s = i;i = i + 224 | 0;n = s + 120 | 0;p = s + 80 | 0;q = s;r = s + 136 | 0;f = p;g = f + 40 | 0;do {
	        c[f >> 2] = 0;f = f + 4 | 0;
	      } while ((f | 0) < (g | 0));c[n >> 2] = c[e >> 2];if ((Mc(0, d, n, q, p) | 0) < 0) e = -1;else {
	        if ((c[b + 76 >> 2] | 0) > -1) o = Nc(b) | 0;else o = 0;e = c[b >> 2] | 0;m = e & 32;if ((a[b + 74 >> 0] | 0) < 1) c[b >> 2] = e & -33;f = b + 48 | 0;if (!(c[f >> 2] | 0)) {
	          g = b + 44 | 0;h = c[g >> 2] | 0;c[g >> 2] = r;j = b + 28 | 0;c[j >> 2] = r;k = b + 20 | 0;c[k >> 2] = r;c[f >> 2] = 80;l = b + 16 | 0;c[l >> 2] = r + 80;e = Mc(b, d, n, q, p) | 0;if (h) {
	            Ca[c[b + 36 >> 2] & 7](b, 0, 0) | 0;e = (c[k >> 2] | 0) == 0 ? -1 : e;c[g >> 2] = h;c[f >> 2] = 0;c[l >> 2] = 0;c[j >> 2] = 0;c[k >> 2] = 0;
	          }
	        } else e = Mc(b, d, n, q, p) | 0;f = c[b >> 2] | 0;c[b >> 2] = f | m;if (o | 0) rc(b);e = (f & 32 | 0) == 0 ? e : -1;
	      }i = s;return e | 0;
	    }function Mc(e, f, g, j, k) {
	      e = e | 0;f = f | 0;g = g | 0;j = j | 0;k = k | 0;var m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0.0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0.0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0,
	          P = 0,
	          Q = 0,
	          R = 0,
	          T = 0,
	          U = 0,
	          V = 0,
	          W = 0,
	          X = 0,
	          Y = 0,
	          Z = 0,
	          _ = 0,
	          $ = 0,
	          aa = 0,
	          ba = 0,
	          ca = 0,
	          da = 0,
	          ea = 0,
	          fa = 0,
	          ga = 0,
	          ha = 0,
	          ia = 0,
	          ja = 0;ja = i;i = i + 624 | 0;fa = ja + 24 | 0;ga = ja + 16 | 0;ha = ja + 588 | 0;Y = ja + 576 | 0;ia = ja;T = ja + 536 | 0;N = ja + 8 | 0;O = ja + 528 | 0;P = (e | 0) != 0;Q = T + 40 | 0;R = Q;T = T + 39 | 0;U = N + 4 | 0;V = ha;W = 0 - V | 0;X = Y + 12 | 0;Y = Y + 11 | 0;Z = X;_ = Z - V | 0;$ = -2 - V | 0;aa = Z + 2 | 0;ba = fa + 288 | 0;ca = ha + 9 | 0;da = ca;ea = ha + 8 | 0;n = 0;m = 0;s = 0;a: while (1) {
	        do {
	          if ((m | 0) > -1) if ((n | 0) > (2147483647 - m | 0)) {
	            c[(oc() | 0) >> 2] = 75;m = -1;break;
	          } else {
	            m = n + m | 0;break;
	          }
	        } while (0);n = a[f >> 0] | 0;if (!(n << 24 >> 24)) {
	          M = 243;break;
	        } else o = f;b: while (1) {
	          switch (n << 24 >> 24) {case 37:
	              {
	                n = o;M = 9;break b;
	              }case 0:
	              {
	                n = o;break b;
	              }default:
	              {}}n = o + 1 | 0;o = n;n = a[n >> 0] | 0;
	        }c: do {
	          if ((M | 0) == 9) while (1) {
	            M = 0;if ((a[o + 1 >> 0] | 0) != 37) break c;n = n + 1 | 0;o = o + 2 | 0;if ((a[o >> 0] | 0) == 37) M = 9;else break;
	          }
	        } while (0);n = n - f | 0;if (P ? (c[e >> 2] & 32 | 0) == 0 : 0) Oc(f, n, e) | 0;if (n | 0) {
	          f = o;continue;
	        }r = o + 1 | 0;p = a[r >> 0] | 0;n = (p << 24 >> 24) + -48 | 0;if (n >>> 0 < 10) {
	          u = (a[o + 2 >> 0] | 0) == 36;r = u ? o + 3 | 0 : r;w = u ? n : -1;u = u ? 1 : s;n = a[r >> 0] | 0;
	        } else {
	          w = -1;u = s;n = p;
	        }o = (n << 24 >> 24) + -32 | 0;d: do {
	          if (o >>> 0 < 32) {
	            p = 0;do {
	              if (!(1 << o & 75913)) break d;p = 1 << (n << 24 >> 24) + -32 | p;r = r + 1 | 0;n = a[r >> 0] | 0;o = (n << 24 >> 24) + -32 | 0;
	            } while (o >>> 0 < 32);
	          } else p = 0;
	        } while (0);do {
	          if (n << 24 >> 24 != 42) {
	            o = (n << 24 >> 24) + -48 | 0;if (o >>> 0 < 10) {
	              s = 0;do {
	                s = (s * 10 | 0) + o | 0;r = r + 1 | 0;n = a[r >> 0] | 0;o = (n << 24 >> 24) + -48 | 0;
	              } while (o >>> 0 < 10);if ((s | 0) < 0) {
	                m = -1;break a;
	              } else L = u;
	            } else {
	              s = 0;L = u;
	            }
	          } else {
	            t = r + 1 | 0;n = a[t >> 0] | 0;o = (n << 24 >> 24) + -48 | 0;if (o >>> 0 < 10 ? (a[r + 2 >> 0] | 0) == 36 : 0) {
	              c[k + (o << 2) >> 2] = 10;n = c[j + ((a[t >> 0] | 0) + -48 << 3) >> 2] | 0;o = 1;t = r + 3 | 0;
	            } else {
	              if (u | 0) {
	                m = -1;break a;
	              }if (!P) {
	                s = 0;L = 0;r = t;break;
	              }o = (c[g >> 2] | 0) + (4 - 1) & ~(4 - 1);n = c[o >> 2] | 0;c[g >> 2] = o + 4;o = 0;
	            }L = (n | 0) < 0;s = L ? 0 - n | 0 : n;p = L ? p | 8192 : p;L = o;r = t;n = a[t >> 0] | 0;
	          }
	        } while (0);e: do {
	          if (n << 24 >> 24 == 46) {
	            n = r + 1 | 0;o = a[n >> 0] | 0;if (o << 24 >> 24 != 42) {
	              r = (o << 24 >> 24) + -48 | 0;if (r >>> 0 < 10) o = 0;else {
	                x = 0;break;
	              }while (1) {
	                o = (o * 10 | 0) + r | 0;n = n + 1 | 0;r = (a[n >> 0] | 0) + -48 | 0;if (r >>> 0 >= 10) {
	                  x = o;break e;
	                }
	              }
	            }n = r + 2 | 0;o = (a[n >> 0] | 0) + -48 | 0;if (o >>> 0 < 10 ? (a[r + 3 >> 0] | 0) == 36 : 0) {
	              c[k + (o << 2) >> 2] = 10;x = c[j + ((a[n >> 0] | 0) + -48 << 3) >> 2] | 0;n = r + 4 | 0;break;
	            }if (L | 0) {
	              m = -1;break a;
	            }if (P) {
	              K = (c[g >> 2] | 0) + (4 - 1) & ~(4 - 1);x = c[K >> 2] | 0;c[g >> 2] = K + 4;
	            } else x = 0;
	          } else {
	            x = -1;n = r;
	          }
	        } while (0);u = 0;while (1) {
	          o = (a[n >> 0] | 0) + -65 | 0;if (o >>> 0 > 57) {
	            m = -1;break a;
	          }K = n + 1 | 0;o = a[12660 + (u * 58 | 0) + o >> 0] | 0;r = o & 255;if ((r + -1 | 0) >>> 0 < 8) {
	            u = r;n = K;
	          } else break;
	        }if (!(o << 24 >> 24)) {
	          m = -1;break;
	        }t = (w | 0) > -1;do {
	          if (o << 24 >> 24 == 19) {
	            if (t) {
	              m = -1;break a;
	            } else M = 51;
	          } else {
	            if (t) {
	              c[k + (w << 2) >> 2] = r;I = j + (w << 3) | 0;J = c[I + 4 >> 2] | 0;M = ia;c[M >> 2] = c[I >> 2];c[M + 4 >> 2] = J;M = 51;break;
	            }if (!P) {
	              m = 0;break a;
	            }Pc(ia, r, g);
	          }
	        } while (0);if ((M | 0) == 51 ? (M = 0, !P) : 0) {
	          n = 0;s = L;f = K;continue;
	        }F = a[n >> 0] | 0;F = (u | 0) != 0 & (F & 15 | 0) == 3 ? F & -33 : F;t = p & -65537;J = (p & 8192 | 0) == 0 ? p : t;f: do {
	          switch (F | 0) {case 110:
	              switch ((u & 255) << 24 >> 24) {case 0:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 1:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 2:
	                  {
	                    n = c[ia >> 2] | 0;c[n >> 2] = m;c[n + 4 >> 2] = ((m | 0) < 0) << 31 >> 31;n = 0;s = L;f = K;continue a;
	                  }case 3:
	                  {
	                    b[c[ia >> 2] >> 1] = m;n = 0;s = L;f = K;continue a;
	                  }case 4:
	                  {
	                    a[c[ia >> 2] >> 0] = m;n = 0;s = L;f = K;continue a;
	                  }case 6:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 7:
	                  {
	                    n = c[ia >> 2] | 0;c[n >> 2] = m;c[n + 4 >> 2] = ((m | 0) < 0) << 31 >> 31;n = 0;s = L;f = K;continue a;
	                  }default:
	                  {
	                    n = 0;s = L;f = K;continue a;
	                  }}case 112:
	              {
	                t = 120;u = x >>> 0 > 8 ? x : 8;n = J | 8;M = 63;break;
	              }case 88:case 120:
	              {
	                t = F;u = x;n = J;M = 63;break;
	              }case 111:
	              {
	                o = ia;n = c[o >> 2] | 0;o = c[o + 4 >> 2] | 0;if ((n | 0) == 0 & (o | 0) == 0) f = Q;else {
	                  f = Q;do {
	                    f = f + -1 | 0;a[f >> 0] = n & 7 | 48;n = Jd(n | 0, o | 0, 3) | 0;o = D;
	                  } while (!((n | 0) == 0 & (o | 0) == 0));
	                }if (!(J & 8)) {
	                  o = 0;p = 13140;r = x;n = J;M = 76;
	                } else {
	                  r = R - f | 0;o = 0;p = 13140;r = (x | 0) > (r | 0) ? x : r + 1 | 0;n = J;M = 76;
	                }break;
	              }case 105:case 100:
	              {
	                f = ia;n = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;if ((f | 0) < 0) {
	                  n = Gd(0, 0, n | 0, f | 0) | 0;f = D;o = ia;c[o >> 2] = n;c[o + 4 >> 2] = f;o = 1;p = 13140;M = 75;break f;
	                }if (!(J & 2048)) {
	                  p = J & 1;o = p;p = (p | 0) == 0 ? 13140 : 13142;M = 75;
	                } else {
	                  o = 1;p = 13141;M = 75;
	                }break;
	              }case 117:
	              {
	                f = ia;o = 0;p = 13140;n = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;M = 75;break;
	              }case 99:
	              {
	                a[T >> 0] = c[ia >> 2];f = T;w = 0;u = 13140;o = Q;n = 1;break;
	              }case 109:
	              {
	                n = Rc(c[(oc() | 0) >> 2] | 0) | 0;M = 81;break;
	              }case 115:
	              {
	                n = c[ia >> 2] | 0;n = n | 0 ? n : 13150;M = 81;break;
	              }case 67:
	              {
	                c[N >> 2] = c[ia >> 2];c[U >> 2] = 0;c[ia >> 2] = N;t = -1;o = N;M = 85;break;
	              }case 83:
	              {
	                n = c[ia >> 2] | 0;if (!x) {
	                  Tc(e, 32, s, 0, J);n = 0;M = 96;
	                } else {
	                  t = x;o = n;M = 85;
	                }break;
	              }case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:
	              {
	                q = +h[ia >> 3];c[ga >> 2] = 0;h[l >> 3] = q;if ((c[l + 4 >> 2] | 0) >= 0) {
	                  n = J & 1;if (!(J & 2048)) {
	                    H = n;I = (n | 0) == 0 ? 13158 : 13163;
	                  } else {
	                    H = 1;I = 13160;
	                  }
	                } else {
	                  q = -q;H = 1;I = 13157;
	                }h[l >> 3] = q;G = c[l + 4 >> 2] & 2146435072;do {
	                  if (G >>> 0 < 2146435072 | (G | 0) == 2146435072 & 0 < 0) {
	                    v = +Vc(q, ga) * 2.0;f = v != 0.0;if (f) c[ga >> 2] = (c[ga >> 2] | 0) + -1;z = F | 32;if ((z | 0) == 97) {
	                      r = F & 32;w = (r | 0) == 0 ? I : I + 9 | 0;u = H | 2;n = 12 - x | 0;do {
	                        if (!(x >>> 0 > 11 | (n | 0) == 0)) {
	                          q = 8.0;do {
	                            n = n + -1 | 0;q = q * 16.0;
	                          } while ((n | 0) != 0);if ((a[w >> 0] | 0) == 45) {
	                            q = -(q + (-v - q));break;
	                          } else {
	                            q = v + q - q;break;
	                          }
	                        } else q = v;
	                      } while (0);f = c[ga >> 2] | 0;n = (f | 0) < 0 ? 0 - f | 0 : f;n = Qc(n, ((n | 0) < 0) << 31 >> 31, X) | 0;if ((n | 0) == (X | 0)) {
	                        a[Y >> 0] = 48;n = Y;
	                      }a[n + -1 >> 0] = (f >> 31 & 2) + 43;t = n + -2 | 0;a[t >> 0] = F + 15;p = (x | 0) < 1;o = (J & 8 | 0) == 0;n = ha;do {
	                        I = ~~q;f = n + 1 | 0;a[n >> 0] = d[13124 + I >> 0] | r;q = (q - +(I | 0)) * 16.0;do {
	                          if ((f - V | 0) == 1) {
	                            if (o & (p & q == 0.0)) {
	                              n = f;break;
	                            }a[f >> 0] = 46;n = n + 2 | 0;
	                          } else n = f;
	                        } while (0);
	                      } while (q != 0.0);p = t;o = (x | 0) != 0 & ($ + n | 0) < (x | 0) ? aa + x - p | 0 : _ - p + n | 0;r = o + u | 0;Tc(e, 32, s, r, J);if (!(c[e >> 2] & 32)) Oc(w, u, e) | 0;Tc(e, 48, s, r, J ^ 65536);f = n - V | 0;if (!(c[e >> 2] & 32)) Oc(ha, f, e) | 0;n = Z - p | 0;Tc(e, 48, o - (f + n) | 0, 0, 0);if (!(c[e >> 2] & 32)) Oc(t, n, e) | 0;Tc(e, 32, s, r, J ^ 8192);n = (r | 0) < (s | 0) ? s : r;break;
	                    }n = (x | 0) < 0 ? 6 : x;if (f) {
	                      f = (c[ga >> 2] | 0) + -28 | 0;c[ga >> 2] = f;q = v * 268435456.0;
	                    } else {
	                      q = v;f = c[ga >> 2] | 0;
	                    }G = (f | 0) < 0 ? fa : ba;o = G;do {
	                      E = ~~q >>> 0;c[o >> 2] = E;o = o + 4 | 0;q = (q - +(E >>> 0)) * 1.0e9;
	                    } while (q != 0.0);if ((f | 0) > 0) {
	                      p = G;t = o;while (1) {
	                        r = (f | 0) > 29 ? 29 : f;f = t + -4 | 0;do {
	                          if (f >>> 0 >= p >>> 0) {
	                            o = 0;do {
	                              C = Kd(c[f >> 2] | 0, 0, r | 0) | 0;C = Hd(C | 0, D | 0, o | 0, 0) | 0;E = D;B = Rd(C | 0, E | 0, 1e9, 0) | 0;c[f >> 2] = B;o = Nd(C | 0, E | 0, 1e9, 0) | 0;f = f + -4 | 0;
	                            } while (f >>> 0 >= p >>> 0);if (!o) break;p = p + -4 | 0;c[p >> 2] = o;
	                          }
	                        } while (0);o = t;while (1) {
	                          if (o >>> 0 <= p >>> 0) break;f = o + -4 | 0;if (!(c[f >> 2] | 0)) o = f;else break;
	                        }f = (c[ga >> 2] | 0) - r | 0;c[ga >> 2] = f;if ((f | 0) > 0) t = o;else break;
	                      }
	                    } else p = G;if ((f | 0) < 0) {
	                      x = ((n + 25 | 0) / 9 | 0) + 1 | 0;y = (z | 0) == 102;do {
	                        w = 0 - f | 0;w = (w | 0) > 9 ? 9 : w;do {
	                          if (p >>> 0 < o >>> 0) {
	                            r = (1 << w) + -1 | 0;t = 1e9 >>> w;u = 0;f = p;do {
	                              E = c[f >> 2] | 0;c[f >> 2] = (E >>> w) + u;u = S(E & r, t) | 0;f = f + 4 | 0;
	                            } while (f >>> 0 < o >>> 0);f = (c[p >> 2] | 0) == 0 ? p + 4 | 0 : p;if (!u) {
	                              p = f;f = o;break;
	                            }c[o >> 2] = u;p = f;f = o + 4 | 0;
	                          } else {
	                            p = (c[p >> 2] | 0) == 0 ? p + 4 | 0 : p;f = o;
	                          }
	                        } while (0);o = y ? G : p;o = (f - o >> 2 | 0) > (x | 0) ? o + (x << 2) | 0 : f;f = (c[ga >> 2] | 0) + w | 0;c[ga >> 2] = f;
	                      } while ((f | 0) < 0);
	                    }E = G;do {
	                      if (p >>> 0 < o >>> 0) {
	                        f = (E - p >> 2) * 9 | 0;t = c[p >> 2] | 0;if (t >>> 0 < 10) break;else r = 10;do {
	                          r = r * 10 | 0;f = f + 1 | 0;
	                        } while (t >>> 0 >= r >>> 0);
	                      } else f = 0;
	                    } while (0);A = (z | 0) == 103;B = (n | 0) != 0;r = n - ((z | 0) != 102 ? f : 0) + ((B & A) << 31 >> 31) | 0;if ((r | 0) < (((o - E >> 2) * 9 | 0) + -9 | 0)) {
	                      r = r + 9216 | 0;u = G + 4 + (((r | 0) / 9 | 0) + -1024 << 2) | 0;r = ((r | 0) % 9 | 0) + 1 | 0;if ((r | 0) < 9) {
	                        t = 10;do {
	                          t = t * 10 | 0;r = r + 1 | 0;
	                        } while ((r | 0) != 9);
	                      } else t = 10;x = c[u >> 2] | 0;y = (x >>> 0) % (t >>> 0) | 0;r = (u + 4 | 0) == (o | 0);do {
	                        if (r & (y | 0) == 0) r = u;else {
	                          v = (((x >>> 0) / (t >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;w = (t | 0) / 2 | 0;if (y >>> 0 < w >>> 0) q = .5;else q = r & (y | 0) == (w | 0) ? 1.0 : 1.5;do {
	                            if (H) {
	                              if ((a[I >> 0] | 0) != 45) break;q = -q;v = -v;
	                            }
	                          } while (0);r = x - y | 0;c[u >> 2] = r;if (!(v + q != v)) {
	                            r = u;break;
	                          }C = r + t | 0;c[u >> 2] = C;if (C >>> 0 > 999999999) {
	                            r = u;while (1) {
	                              f = r + -4 | 0;c[r >> 2] = 0;if (f >>> 0 < p >>> 0) {
	                                p = p + -4 | 0;c[p >> 2] = 0;
	                              }C = (c[f >> 2] | 0) + 1 | 0;c[f >> 2] = C;if (C >>> 0 > 999999999) r = f;else {
	                                u = f;break;
	                              }
	                            }
	                          }f = (E - p >> 2) * 9 | 0;t = c[p >> 2] | 0;if (t >>> 0 < 10) {
	                            r = u;break;
	                          } else r = 10;do {
	                            r = r * 10 | 0;f = f + 1 | 0;
	                          } while (t >>> 0 >= r >>> 0);r = u;
	                        }
	                      } while (0);C = r + 4 | 0;o = o >>> 0 > C >>> 0 ? C : o;
	                    }y = 0 - f | 0;C = o;while (1) {
	                      if (C >>> 0 <= p >>> 0) {
	                        z = 0;break;
	                      }o = C + -4 | 0;if (!(c[o >> 2] | 0)) C = o;else {
	                        z = 1;break;
	                      }
	                    }do {
	                      if (A) {
	                        n = (B & 1 ^ 1) + n | 0;if ((n | 0) > (f | 0) & (f | 0) > -5) {
	                          u = F + -1 | 0;n = n + -1 - f | 0;
	                        } else {
	                          u = F + -2 | 0;n = n + -1 | 0;
	                        }o = J & 8;if (o | 0) {
	                          w = o;break;
	                        }do {
	                          if (z) {
	                            t = c[C + -4 >> 2] | 0;if (!t) {
	                              r = 9;break;
	                            }if (!((t >>> 0) % 10 | 0)) {
	                              r = 0;o = 10;
	                            } else {
	                              r = 0;break;
	                            }do {
	                              o = o * 10 | 0;r = r + 1 | 0;
	                            } while (!((t >>> 0) % (o >>> 0) | 0 | 0));
	                          } else r = 9;
	                        } while (0);o = ((C - E >> 2) * 9 | 0) + -9 | 0;if ((u | 32 | 0) == 102) {
	                          w = o - r | 0;w = (w | 0) < 0 ? 0 : w;n = (n | 0) < (w | 0) ? n : w;w = 0;break;
	                        } else {
	                          w = o + f - r | 0;w = (w | 0) < 0 ? 0 : w;n = (n | 0) < (w | 0) ? n : w;w = 0;break;
	                        }
	                      } else {
	                        u = F;w = J & 8;
	                      }
	                    } while (0);x = n | w;r = (x | 0) != 0 & 1;t = (u | 32 | 0) == 102;if (t) {
	                      y = 0;f = (f | 0) > 0 ? f : 0;
	                    } else {
	                      o = (f | 0) < 0 ? y : f;o = Qc(o, ((o | 0) < 0) << 31 >> 31, X) | 0;if ((Z - o | 0) < 2) do {
	                        o = o + -1 | 0;a[o >> 0] = 48;
	                      } while ((Z - o | 0) < 2);a[o + -1 >> 0] = (f >> 31 & 2) + 43;f = o + -2 | 0;a[f >> 0] = u;y = f;f = Z - f | 0;
	                    }A = H + 1 + n + r + f | 0;Tc(e, 32, s, A, J);if (!(c[e >> 2] & 32)) Oc(I, H, e) | 0;Tc(e, 48, s, A, J ^ 65536);do {
	                      if (t) {
	                        p = p >>> 0 > G >>> 0 ? G : p;o = p;do {
	                          f = Qc(c[o >> 2] | 0, 0, ca) | 0;do {
	                            if ((o | 0) == (p | 0)) {
	                              if ((f | 0) != (ca | 0)) break;a[ea >> 0] = 48;f = ea;
	                            } else {
	                              if (f >>> 0 <= ha >>> 0) break;Id(ha | 0, 48, f - V | 0) | 0;do {
	                                f = f + -1 | 0;
	                              } while (f >>> 0 > ha >>> 0);
	                            }
	                          } while (0);if (!(c[e >> 2] & 32)) Oc(f, da - f | 0, e) | 0;o = o + 4 | 0;
	                        } while (o >>> 0 <= G >>> 0);do {
	                          if (x | 0) {
	                            if (c[e >> 2] & 32 | 0) break;Oc(13192, 1, e) | 0;
	                          }
	                        } while (0);if ((n | 0) > 0 & o >>> 0 < C >>> 0) while (1) {
	                          f = Qc(c[o >> 2] | 0, 0, ca) | 0;if (f >>> 0 > ha >>> 0) {
	                            Id(ha | 0, 48, f - V | 0) | 0;do {
	                              f = f + -1 | 0;
	                            } while (f >>> 0 > ha >>> 0);
	                          }if (!(c[e >> 2] & 32)) Oc(f, (n | 0) > 9 ? 9 : n, e) | 0;o = o + 4 | 0;f = n + -9 | 0;if (!((n | 0) > 9 & o >>> 0 < C >>> 0)) {
	                            n = f;break;
	                          } else n = f;
	                        }Tc(e, 48, n + 9 | 0, 9, 0);
	                      } else {
	                        u = z ? C : p + 4 | 0;if ((n | 0) > -1) {
	                          t = (w | 0) == 0;r = p;do {
	                            f = Qc(c[r >> 2] | 0, 0, ca) | 0;if ((f | 0) == (ca | 0)) {
	                              a[ea >> 0] = 48;f = ea;
	                            }do {
	                              if ((r | 0) == (p | 0)) {
	                                o = f + 1 | 0;if (!(c[e >> 2] & 32)) Oc(f, 1, e) | 0;if (t & (n | 0) < 1) {
	                                  f = o;break;
	                                }if (c[e >> 2] & 32 | 0) {
	                                  f = o;break;
	                                }Oc(13192, 1, e) | 0;f = o;
	                              } else {
	                                if (f >>> 0 <= ha >>> 0) break;Id(ha | 0, 48, f + W | 0) | 0;do {
	                                  f = f + -1 | 0;
	                                } while (f >>> 0 > ha >>> 0);
	                              }
	                            } while (0);o = da - f | 0;if (!(c[e >> 2] & 32)) Oc(f, (n | 0) > (o | 0) ? o : n, e) | 0;n = n - o | 0;r = r + 4 | 0;
	                          } while (r >>> 0 < u >>> 0 & (n | 0) > -1);
	                        }Tc(e, 48, n + 18 | 0, 18, 0);if (c[e >> 2] & 32 | 0) break;Oc(y, Z - y | 0, e) | 0;
	                      }
	                    } while (0);Tc(e, 32, s, A, J ^ 8192);n = (A | 0) < (s | 0) ? s : A;
	                  } else {
	                    r = (F & 32 | 0) != 0;p = q != q | 0.0 != 0.0;f = p ? 0 : H;o = f + 3 | 0;Tc(e, 32, s, o, t);n = c[e >> 2] | 0;if (!(n & 32)) {
	                      Oc(I, f, e) | 0;n = c[e >> 2] | 0;
	                    }if (!(n & 32)) Oc(p ? r ? 13184 : 13188 : r ? 13176 : 13180, 3, e) | 0;Tc(e, 32, s, o, J ^ 8192);n = (o | 0) < (s | 0) ? s : o;
	                  }
	                } while (0);s = L;f = K;continue a;
	              }default:
	              {
	                w = 0;u = 13140;o = Q;n = x;t = J;
	              }}
	        } while (0);g: do {
	          if ((M | 0) == 63) {
	            p = ia;o = c[p >> 2] | 0;p = c[p + 4 >> 2] | 0;r = t & 32;if ((o | 0) == 0 & (p | 0) == 0) {
	              f = Q;o = 0;p = 0;
	            } else {
	              f = Q;do {
	                f = f + -1 | 0;a[f >> 0] = d[13124 + (o & 15) >> 0] | r;o = Jd(o | 0, p | 0, 4) | 0;p = D;
	              } while (!((o | 0) == 0 & (p | 0) == 0));p = ia;o = c[p >> 2] | 0;p = c[p + 4 >> 2] | 0;
	            }p = (n & 8 | 0) == 0 | (o | 0) == 0 & (p | 0) == 0;o = p ? 0 : 2;p = p ? 13140 : 13140 + (t >> 4) | 0;r = u;M = 76;
	          } else if ((M | 0) == 75) {
	            f = Qc(n, f, Q) | 0;r = x;n = J;M = 76;
	          } else if ((M | 0) == 81) {
	            M = 0;J = Sc(n, 0, x) | 0;I = (J | 0) == 0;f = n;w = 0;u = 13140;o = I ? n + x | 0 : J;n = I ? x : J - n | 0;
	          } else if ((M | 0) == 85) {
	            M = 0;r = o;n = 0;f = 0;while (1) {
	              p = c[r >> 2] | 0;if (!p) break;f = Uc(O, p) | 0;if ((f | 0) < 0 | f >>> 0 > (t - n | 0) >>> 0) break;n = f + n | 0;if (t >>> 0 > n >>> 0) r = r + 4 | 0;else break;
	            }if ((f | 0) < 0) {
	              m = -1;break a;
	            }Tc(e, 32, s, n, J);if (!n) {
	              n = 0;M = 96;
	            } else {
	              p = 0;while (1) {
	                f = c[o >> 2] | 0;if (!f) {
	                  M = 96;break g;
	                }f = Uc(O, f) | 0;p = f + p | 0;if ((p | 0) > (n | 0)) {
	                  M = 96;break g;
	                }if (!(c[e >> 2] & 32)) Oc(O, f, e) | 0;if (p >>> 0 >= n >>> 0) {
	                  M = 96;break;
	                } else o = o + 4 | 0;
	              }
	            }
	          }
	        } while (0);if ((M | 0) == 96) {
	          M = 0;Tc(e, 32, s, n, J ^ 8192);n = (s | 0) > (n | 0) ? s : n;s = L;f = K;continue;
	        }if ((M | 0) == 76) {
	          M = 0;t = (r | 0) > -1 ? n & -65537 : n;n = ia;n = (c[n >> 2] | 0) != 0 | (c[n + 4 >> 2] | 0) != 0;if ((r | 0) != 0 | n) {
	            n = (n & 1 ^ 1) + (R - f) | 0;w = o;u = p;o = Q;n = (r | 0) > (n | 0) ? r : n;
	          } else {
	            f = Q;w = o;u = p;o = Q;n = 0;
	          }
	        }r = o - f | 0;o = (n | 0) < (r | 0) ? r : n;p = o + w | 0;n = (s | 0) < (p | 0) ? p : s;Tc(e, 32, n, p, t);if (!(c[e >> 2] & 32)) Oc(u, w, e) | 0;Tc(e, 48, n, p, t ^ 65536);Tc(e, 48, o, r, 0);if (!(c[e >> 2] & 32)) Oc(f, r, e) | 0;Tc(e, 32, n, p, t ^ 8192);s = L;f = K;
	      }h: do {
	        if ((M | 0) == 243) if (!e) if (!s) m = 0;else {
	          m = 1;while (1) {
	            n = c[k + (m << 2) >> 2] | 0;if (!n) break;Pc(j + (m << 3) | 0, n, g);m = m + 1 | 0;if ((m | 0) >= 10) {
	              m = 1;break h;
	            }
	          }while (1) {
	            if (c[k + (m << 2) >> 2] | 0) {
	              m = -1;break h;
	            }m = m + 1 | 0;if ((m | 0) >= 10) {
	              m = 1;break;
	            }
	          }
	        }
	      } while (0);i = ja;return m | 0;
	    }function Nc(a) {
	      a = a | 0;return 0;
	    }function Oc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;f = e + 16 | 0;g = c[f >> 2] | 0;if (!g) {
	        if (!(Yc(e) | 0)) {
	          f = c[f >> 2] | 0;h = 5;
	        } else f = 0;
	      } else {
	        f = g;h = 5;
	      }a: do {
	        if ((h | 0) == 5) {
	          i = e + 20 | 0;h = c[i >> 2] | 0;g = h;if ((f - h | 0) >>> 0 < d >>> 0) {
	            f = Ca[c[e + 36 >> 2] & 7](e, b, d) | 0;break;
	          }b: do {
	            if ((a[e + 75 >> 0] | 0) > -1) {
	              f = d;while (1) {
	                if (!f) {
	                  h = d;f = 0;break b;
	                }h = f + -1 | 0;if ((a[b + h >> 0] | 0) == 10) break;else f = h;
	              }if ((Ca[c[e + 36 >> 2] & 7](e, b, f) | 0) >>> 0 < f >>> 0) break a;h = d - f | 0;b = b + f | 0;g = c[i >> 2] | 0;
	            } else {
	              h = d;f = 0;
	            }
	          } while (0);Sd(g | 0, b | 0, h | 0) | 0;c[i >> 2] = (c[i >> 2] | 0) + h;f = f + h | 0;
	        }
	      } while (0);return f | 0;
	    }function Pc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0.0;a: do {
	        if (b >>> 0 <= 20) do {
	          switch (b | 0) {case 9:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;c[a >> 2] = b;break a;
	              }case 10:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;e = a;c[e >> 2] = b;c[e + 4 >> 2] = ((b | 0) < 0) << 31 >> 31;break a;
	              }case 11:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;e = a;c[e >> 2] = b;c[e + 4 >> 2] = 0;break a;
	              }case 12:
	              {
	                e = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);b = e;f = c[b >> 2] | 0;b = c[b + 4 >> 2] | 0;c[d >> 2] = e + 8;e = a;c[e >> 2] = f;c[e + 4 >> 2] = b;break a;
	              }case 13:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;e = (e & 65535) << 16 >> 16;f = a;c[f >> 2] = e;c[f + 4 >> 2] = ((e | 0) < 0) << 31 >> 31;break a;
	              }case 14:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;f = a;c[f >> 2] = e & 65535;c[f + 4 >> 2] = 0;break a;
	              }case 15:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;e = (e & 255) << 24 >> 24;f = a;c[f >> 2] = e;c[f + 4 >> 2] = ((e | 0) < 0) << 31 >> 31;break a;
	              }case 16:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;f = a;c[f >> 2] = e & 255;c[f + 4 >> 2] = 0;break a;
	              }case 17:
	              {
	                f = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);g = +h[f >> 3];c[d >> 2] = f + 8;h[a >> 3] = g;break a;
	              }case 18:
	              {
	                f = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);g = +h[f >> 3];c[d >> 2] = f + 8;h[a >> 3] = g;break a;
	              }default:
	              break a;}
	        } while (0);
	      } while (0);return;
	    }function Qc(b, c, d) {
	      b = b | 0;c = c | 0;d = d | 0;var e = 0;if (c >>> 0 > 0 | (c | 0) == 0 & b >>> 0 > 4294967295) {
	        while (1) {
	          e = Rd(b | 0, c | 0, 10, 0) | 0;d = d + -1 | 0;a[d >> 0] = e | 48;e = b;b = Nd(b | 0, c | 0, 10, 0) | 0;if (!(c >>> 0 > 9 | (c | 0) == 9 & e >>> 0 > 4294967295)) break;else c = D;
	        }c = b;
	      } else c = b;if (c) while (1) {
	        d = d + -1 | 0;a[d >> 0] = (c >>> 0) % 10 | 0 | 48;if (c >>> 0 < 10) break;else c = (c >>> 0) / 10 | 0;
	      }return d | 0;
	    }function Rc(b) {
	      b = b | 0;var c = 0,
	          e = 0;e = 0;while (1) {
	        if ((d[13194 + e >> 0] | 0) == (b | 0)) {
	          b = 2;break;
	        }c = e + 1 | 0;if ((c | 0) == 87) {
	          c = 13282;e = 87;b = 5;break;
	        } else e = c;
	      }if ((b | 0) == 2) if (!e) c = 13282;else {
	        c = 13282;b = 5;
	      }if ((b | 0) == 5) while (1) {
	        do {
	          b = c;c = c + 1 | 0;
	        } while ((a[b >> 0] | 0) != 0);e = e + -1 | 0;if (!e) break;else b = 5;
	      }return c | 0;
	    }function Sc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;h = d & 255;f = (e | 0) != 0;a: do {
	        if (f & (b & 3 | 0) != 0) {
	          g = d & 255;while (1) {
	            if ((a[b >> 0] | 0) == g << 24 >> 24) {
	              i = 6;break a;
	            }b = b + 1 | 0;e = e + -1 | 0;f = (e | 0) != 0;if (!(f & (b & 3 | 0) != 0)) {
	              i = 5;break;
	            }
	          }
	        } else i = 5;
	      } while (0);if ((i | 0) == 5) if (f) i = 6;else e = 0;b: do {
	        if ((i | 0) == 6) {
	          g = d & 255;if ((a[b >> 0] | 0) != g << 24 >> 24) {
	            f = S(h, 16843009) | 0;c: do {
	              if (e >>> 0 > 3) while (1) {
	                h = c[b >> 2] ^ f;if ((h & -2139062144 ^ -2139062144) & h + -16843009 | 0) break;b = b + 4 | 0;e = e + -4 | 0;if (e >>> 0 <= 3) {
	                  i = 11;break c;
	                }
	              } else i = 11;
	            } while (0);if ((i | 0) == 11) if (!e) {
	              e = 0;break;
	            }while (1) {
	              if ((a[b >> 0] | 0) == g << 24 >> 24) break b;b = b + 1 | 0;e = e + -1 | 0;if (!e) {
	                e = 0;break;
	              }
	            }
	          }
	        }
	      } while (0);return (e | 0 ? b : 0) | 0;
	    }function Tc(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 256 | 0;h = j;do {
	        if ((d | 0) > (e | 0) & (f & 73728 | 0) == 0) {
	          f = d - e | 0;Id(h | 0, b | 0, (f >>> 0 > 256 ? 256 : f) | 0) | 0;b = c[a >> 2] | 0;g = (b & 32 | 0) == 0;if (f >>> 0 > 255) {
	            d = d - e | 0;do {
	              if (g) {
	                Oc(h, 256, a) | 0;b = c[a >> 2] | 0;
	              }f = f + -256 | 0;g = (b & 32 | 0) == 0;
	            } while (f >>> 0 > 255);if (g) f = d & 255;else break;
	          } else if (!g) break;Oc(h, f, a) | 0;
	        }
	      } while (0);i = j;return;
	    }function Uc(a, b) {
	      a = a | 0;b = b | 0;if (!a) a = 0;else a = Xc(a, b, 0) | 0;return a | 0;
	    }function Vc(a, b) {
	      a = +a;b = b | 0;return + +Wc(a, b);
	    }function Wc(a, b) {
	      a = +a;b = b | 0;var d = 0,
	          e = 0,
	          f = 0;h[l >> 3] = a;d = c[l >> 2] | 0;e = c[l + 4 >> 2] | 0;f = Jd(d | 0, e | 0, 52) | 0;switch (f & 2047) {case 0:
	          {
	            if (a != 0.0) {
	              a = +Wc(a * 18446744073709551616.0, b);d = (c[b >> 2] | 0) + -64 | 0;
	            } else d = 0;c[b >> 2] = d;break;
	          }case 2047:
	          break;default:
	          {
	            c[b >> 2] = (f & 2047) + -1022;c[l >> 2] = d;c[l + 4 >> 2] = e & -2146435073 | 1071644672;a = +h[l >> 3];
	          }}return +a;
	    }function Xc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;do {
	        if (b) {
	          if (d >>> 0 < 128) {
	            a[b >> 0] = d;b = 1;break;
	          }if (d >>> 0 < 2048) {
	            a[b >> 0] = d >>> 6 | 192;a[b + 1 >> 0] = d & 63 | 128;b = 2;break;
	          }if (d >>> 0 < 55296 | (d & -8192 | 0) == 57344) {
	            a[b >> 0] = d >>> 12 | 224;a[b + 1 >> 0] = d >>> 6 & 63 | 128;a[b + 2 >> 0] = d & 63 | 128;b = 3;break;
	          }if ((d + -65536 | 0) >>> 0 < 1048576) {
	            a[b >> 0] = d >>> 18 | 240;a[b + 1 >> 0] = d >>> 12 & 63 | 128;a[b + 2 >> 0] = d >>> 6 & 63 | 128;a[b + 3 >> 0] = d & 63 | 128;b = 4;break;
	          } else {
	            c[(oc() | 0) >> 2] = 84;b = -1;break;
	          }
	        } else b = 1;
	      } while (0);return b | 0;
	    }function Yc(b) {
	      b = b | 0;var d = 0,
	          e = 0;d = b + 74 | 0;e = a[d >> 0] | 0;a[d >> 0] = e + 255 | e;d = c[b >> 2] | 0;if (!(d & 8)) {
	        c[b + 8 >> 2] = 0;c[b + 4 >> 2] = 0;e = c[b + 44 >> 2] | 0;c[b + 28 >> 2] = e;c[b + 20 >> 2] = e;c[b + 16 >> 2] = e + (c[b + 48 >> 2] | 0);b = 0;
	      } else {
	        c[b >> 2] = d | 32;b = -1;
	      }return b | 0;
	    }function Zc(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;g = i;i = i + 32 | 0;f = g + 16 | 0;e = g;if (Sc(15086, a[d >> 0] | 0, 4) | 0) {
	        h = ed(d) | 0 | 32768;c[e >> 2] = b;c[e + 4 >> 2] = h;c[e + 8 >> 2] = 438;e = nc(ja(5, e | 0) | 0) | 0;if ((e | 0) >= 0) {
	          b = fd(e, d) | 0;if (!b) {
	            c[f >> 2] = e;pa(6, f | 0) | 0;b = 0;
	          }
	        } else b = 0;
	      } else {
	        c[(oc() | 0) >> 2] = 22;b = 0;
	      }i = g;return b | 0;
	    }function _c(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0;e = (c[a >> 2] & 1 | 0) != 0;if (!e) {
	        la(15136);d = c[a + 52 >> 2] | 0;b = a + 56 | 0;if (d | 0) c[d + 56 >> 2] = c[b >> 2];b = c[b >> 2] | 0;if (b | 0) c[b + 52 >> 2] = d;if ((c[3783] | 0) == (a | 0)) c[3783] = b;ua(15136);
	      }b = $c(a) | 0;b = Fa[c[a + 12 >> 2] & 1](a) | 0 | b;d = c[a + 92 >> 2] | 0;if (d | 0) Bd(d);if (!e) Bd(a);return b | 0;
	    }function $c(a) {
	      a = a | 0;var b = 0,
	          d = 0;do {
	        if (a) {
	          if ((c[a + 76 >> 2] | 0) <= -1) {
	            b = ad(a) | 0;break;
	          }d = (Nc(a) | 0) == 0;b = ad(a) | 0;if (!d) rc(a);
	        } else {
	          if (!(c[2271] | 0)) b = 0;else b = $c(c[2271] | 0) | 0;la(15136);a = c[3783] | 0;if (a) do {
	            if ((c[a + 76 >> 2] | 0) > -1) d = Nc(a) | 0;else d = 0;if ((c[a + 20 >> 2] | 0) >>> 0 > (c[a + 28 >> 2] | 0) >>> 0) b = ad(a) | 0 | b;if (d | 0) rc(a);a = c[a + 56 >> 2] | 0;
	          } while ((a | 0) != 0);ua(15136);
	        }
	      } while (0);return b | 0;
	    }function ad(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0;b = a + 20 | 0;h = a + 28 | 0;if ((c[b >> 2] | 0) >>> 0 > (c[h >> 2] | 0) >>> 0 ? (Ca[c[a + 36 >> 2] & 7](a, 0, 0) | 0, (c[b >> 2] | 0) == 0) : 0) a = -1;else {
	        d = a + 4 | 0;e = c[d >> 2] | 0;f = a + 8 | 0;g = c[f >> 2] | 0;if (e >>> 0 < g >>> 0) Ca[c[a + 40 >> 2] & 7](a, e - g | 0, 1) | 0;c[a + 16 >> 2] = 0;c[h >> 2] = 0;c[b >> 2] = 0;c[f >> 2] = 0;c[d >> 2] = 0;a = 0;
	      }return a | 0;
	    }function bd(e, f, j) {
	      e = e | 0;f = f | 0;j = j | 0;var k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0.0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0,
	          P = 0,
	          Q = 0,
	          R = 0;R = i;i = i + 304 | 0;K = R + 16 | 0;L = R + 8 | 0;M = R + 33 | 0;N = R;O = R + 32 | 0;if ((c[e + 76 >> 2] | 0) > -1) Q = Nc(e) | 0;else Q = 0;m = a[f >> 0] | 0;a: do {
	        if (m << 24 >> 24) {
	          z = e + 4 | 0;A = e + 100 | 0;B = e + 108 | 0;C = e + 8 | 0;E = M + 10 | 0;F = M + 33 | 0;y = L + 4 | 0;G = M + 46 | 0;H = M + 94 | 0;I = M + 1 | 0;J = M + 1 | 0;q = f;v = 0;f = 0;l = 0;k = 0;b: while (1) {
	            c: do {
	              if (!(zc(m & 255) | 0)) {
	                m = m << 24 >> 24 == 37;d: do {
	                  if (m) {
	                    n = q + 1 | 0;o = a[n >> 0] | 0;e: do {
	                      switch (o << 24 >> 24) {case 37:
	                          break d;case 42:
	                          {
	                            x = 0;n = q + 2 | 0;break;
	                          }default:
	                          {
	                            m = (o & 255) + -48 | 0;if (m >>> 0 < 10 ? (a[q + 2 >> 0] | 0) == 36 : 0) {
	                              c[K >> 2] = c[j >> 2];while (1) {
	                                x = (c[K >> 2] | 0) + (4 - 1) & ~(4 - 1);n = c[x >> 2] | 0;c[K >> 2] = x + 4;if (m >>> 0 > 1) m = m + -1 | 0;else break;
	                              }x = n;n = q + 3 | 0;break e;
	                            }w = (c[j >> 2] | 0) + (4 - 1) & ~(4 - 1);x = c[w >> 2] | 0;c[j >> 2] = w + 4;
	                          }}
	                    } while (0);q = a[n >> 0] | 0;m = q & 255;if ((m + -48 | 0) >>> 0 < 10) {
	                      o = 0;do {
	                        o = (o * 10 | 0) + -48 + m | 0;n = n + 1 | 0;q = a[n >> 0] | 0;m = q & 255;
	                      } while ((m + -48 | 0) >>> 0 < 10);
	                    } else o = 0;if (q << 24 >> 24 == 109) {
	                      q = n + 1 | 0;m = (x | 0) != 0 & 1;l = 0;k = 0;n = q;q = a[q >> 0] | 0;
	                    } else m = 0;r = n + 1 | 0;switch (q << 24 >> 24) {case 104:
	                        {
	                          w = (a[r >> 0] | 0) == 104;q = w ? -2 : -1;n = w ? n + 2 | 0 : r;break;
	                        }case 108:
	                        {
	                          w = (a[r >> 0] | 0) == 108;q = w ? 3 : 1;n = w ? n + 2 | 0 : r;break;
	                        }case 106:
	                        {
	                          q = 3;n = r;break;
	                        }case 116:case 122:
	                        {
	                          q = 1;n = r;break;
	                        }case 76:
	                        {
	                          q = 2;n = r;break;
	                        }case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:
	                        {
	                          q = 0;break;
	                        }default:
	                        {
	                          P = 154;break b;
	                        }}t = d[n >> 0] | 0;u = (t & 47 | 0) == 3;t = u ? t | 32 : t;u = u ? 1 : q;s = t & 255;switch (s << 24 >> 24) {case 99:
	                        {
	                          o = (o | 0) < 1 ? 1 : o;break;
	                        }case 91:
	                        break;case 110:
	                        {
	                          if (!x) {
	                            o = v;break c;
	                          }switch (u | 0) {case -2:
	                              {
	                                a[x >> 0] = v;o = v;break c;
	                              }case -1:
	                              {
	                                b[x >> 1] = v;o = v;break c;
	                              }case 0:
	                              {
	                                c[x >> 2] = v;o = v;break c;
	                              }case 1:
	                              {
	                                c[x >> 2] = v;o = v;break c;
	                              }case 3:
	                              {
	                                o = x;c[o >> 2] = v;c[o + 4 >> 2] = ((v | 0) < 0) << 31 >> 31;o = v;break c;
	                              }default:
	                              {
	                                o = v;break c;
	                              }}
	                        }default:
	                        {
	                          uc(e, 0);do {
	                            q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                              c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                            } else q = vc(e) | 0;
	                          } while ((zc(q) | 0) != 0);if (!(c[A >> 2] | 0)) q = c[z >> 2] | 0;else {
	                            q = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = q;
	                          }v = (c[B >> 2] | 0) + v + q - (c[C >> 2] | 0) | 0;
	                        }}uc(e, o);q = c[z >> 2] | 0;r = c[A >> 2] | 0;if (q >>> 0 < r >>> 0) c[z >> 2] = q + 1;else {
	                      if ((vc(e) | 0) < 0) {
	                        P = 154;break b;
	                      }r = c[A >> 2] | 0;
	                    }if (r | 0) c[z >> 2] = (c[z >> 2] | 0) + -1;f: do {
	                      switch (s << 24 >> 24) {case 91:case 99:case 115:
	                          {
	                            w = (t | 0) == 99;g: do {
	                              if ((t | 16 | 0) == 115) {
	                                Id(I | 0, -1, 256) | 0;a[M >> 0] = 0;if ((t | 0) == 115) {
	                                  a[F >> 0] = 0;a[E >> 0] = 0;a[E + 1 >> 0] = 0;a[E + 2 >> 0] = 0;a[E + 3 >> 0] = 0;a[E + 4 >> 0] = 0;
	                                }
	                              } else {
	                                s = n + 1 | 0;t = (a[s >> 0] | 0) == 94;q = t & 1;n = t ? n + 2 | 0 : s;Id(J | 0, t & 1 | 0, 256) | 0;a[M >> 0] = 0;switch (a[n >> 0] | 0) {case 45:
	                                    {
	                                      t = (q ^ 1) & 255;a[G >> 0] = t;n = n + 1 | 0;break;
	                                    }case 93:
	                                    {
	                                      t = (q ^ 1) & 255;a[H >> 0] = t;n = n + 1 | 0;break;
	                                    }default:
	                                    t = (q ^ 1) & 255;}while (1) {
	                                  q = a[n >> 0] | 0;h: do {
	                                    switch (q << 24 >> 24) {case 0:
	                                        {
	                                          P = 154;break b;
	                                        }case 93:
	                                        break g;case 45:
	                                        {
	                                          s = n + 1 | 0;q = a[s >> 0] | 0;switch (q << 24 >> 24) {case 93:case 0:
	                                              {
	                                                q = 45;break h;
	                                              }default:
	                                              {}}n = a[n + -1 >> 0] | 0;if ((n & 255) < (q & 255)) {
	                                            n = n & 255;do {
	                                              n = n + 1 | 0;a[M + n >> 0] = t;q = a[s >> 0] | 0;
	                                            } while ((n | 0) < (q & 255 | 0));n = s;
	                                          } else n = s;break;
	                                        }default:
	                                        {}}
	                                  } while (0);a[M + ((q & 255) + 1) >> 0] = t;n = n + 1 | 0;
	                                }
	                              }
	                            } while (0);q = w ? o + 1 | 0 : 31;t = (u | 0) == 1;u = (m | 0) != 0;i: do {
	                              if (t) {
	                                if (u) {
	                                  l = Ad(q << 2) | 0;if (!l) {
	                                    k = 0;P = 154;break b;
	                                  }
	                                } else l = x;c[L >> 2] = 0;c[y >> 2] = 0;s = q;k = 0;j: while (1) {
	                                  r = (l | 0) == 0;do {
	                                    k: while (1) {
	                                      q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                                        c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                                      } else q = vc(e) | 0;if (!(a[M + (q + 1) >> 0] | 0)) break j;a[O >> 0] = q;switch (cd(N, O, 1, L) | 0) {case -1:
	                                          {
	                                            k = 0;P = 154;break b;
	                                          }case -2:
	                                          break;default:
	                                          break k;}
	                                    }if (!r) {
	                                      c[l + (k << 2) >> 2] = c[N >> 2];k = k + 1 | 0;
	                                    }
	                                  } while (!(u & (k | 0) == (s | 0)));k = s << 1 | 1;q = Cd(l, k << 2) | 0;if (!q) {
	                                    k = 0;P = 154;break b;
	                                  } else {
	                                    r = s;s = k;l = q;k = r;
	                                  }
	                                }if (!(dd(L) | 0)) {
	                                  k = 0;P = 154;break b;
	                                } else {
	                                  r = k;k = 0;
	                                }
	                              } else {
	                                if (u) {
	                                  k = Ad(q) | 0;if (!k) {
	                                    k = 0;l = 0;P = 154;break b;
	                                  } else {
	                                    r = q;l = 0;
	                                  }while (1) {
	                                    do {
	                                      q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                                        c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                                      } else q = vc(e) | 0;if (!(a[M + (q + 1) >> 0] | 0)) {
	                                        r = l;l = 0;break i;
	                                      }a[k + l >> 0] = q;l = l + 1 | 0;
	                                    } while ((l | 0) != (r | 0));l = r << 1 | 1;q = Cd(k, l) | 0;if (!q) {
	                                      l = 0;P = 154;break b;
	                                    } else {
	                                      s = r;r = l;k = q;l = s;
	                                    }
	                                  }
	                                }if (!x) {
	                                  l = r;while (1) {
	                                    k = c[z >> 2] | 0;if (k >>> 0 < l >>> 0) {
	                                      c[z >> 2] = k + 1;k = d[k >> 0] | 0;
	                                    } else k = vc(e) | 0;if (!(a[M + (k + 1) >> 0] | 0)) {
	                                      r = 0;k = 0;l = 0;break i;
	                                    }l = c[A >> 2] | 0;
	                                  }
	                                } else {
	                                  q = 0;l = r;while (1) {
	                                    k = c[z >> 2] | 0;if (k >>> 0 < l >>> 0) {
	                                      c[z >> 2] = k + 1;k = d[k >> 0] | 0;
	                                    } else k = vc(e) | 0;if (!(a[M + (k + 1) >> 0] | 0)) {
	                                      r = q;k = x;l = 0;break i;
	                                    }a[x + q >> 0] = k;q = q + 1 | 0;l = c[A >> 2] | 0;
	                                  }
	                                }
	                              }
	                            } while (0);if (!(c[A >> 2] | 0)) q = c[z >> 2] | 0;else {
	                              q = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = q;
	                            }q = q - (c[C >> 2] | 0) + (c[B >> 2] | 0) | 0;if (!q) break b;if (!((q | 0) == (o | 0) | w ^ 1)) break b;do {
	                              if (u) if (t) {
	                                c[x >> 2] = l;break;
	                              } else {
	                                c[x >> 2] = k;break;
	                              }
	                            } while (0);if (!w) {
	                              if (l | 0) c[l + (r << 2) >> 2] = 0;if (!k) {
	                                k = 0;break f;
	                              }a[k + r >> 0] = 0;
	                            }break;
	                          }case 120:case 88:case 112:
	                          {
	                            o = 16;P = 136;break;
	                          }case 111:
	                          {
	                            o = 8;P = 136;break;
	                          }case 117:case 100:
	                          {
	                            o = 10;P = 136;break;
	                          }case 105:
	                          {
	                            o = 0;P = 136;break;
	                          }case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:
	                          {
	                            p = +yc(e, u, 0);if ((c[B >> 2] | 0) == ((c[C >> 2] | 0) - (c[z >> 2] | 0) | 0)) break b;if (x) switch (u | 0) {case 0:
	                                {
	                                  g[x >> 2] = p;break f;
	                                }case 1:
	                                {
	                                  h[x >> 3] = p;break f;
	                                }case 2:
	                                {
	                                  h[x >> 3] = p;break f;
	                                }default:
	                                break f;}break;
	                          }default:
	                          {}}
	                    } while (0);l: do {
	                      if ((P | 0) == 136) {
	                        P = 0;o = Hc(e, o, 0, -1, -1) | 0;if ((c[B >> 2] | 0) == ((c[C >> 2] | 0) - (c[z >> 2] | 0) | 0)) break b;if ((x | 0) != 0 & (t | 0) == 112) {
	                          c[x >> 2] = o;break;
	                        }if (x) switch (u | 0) {case -2:
	                            {
	                              a[x >> 0] = o;break l;
	                            }case -1:
	                            {
	                              b[x >> 1] = o;break l;
	                            }case 0:
	                            {
	                              c[x >> 2] = o;break l;
	                            }case 1:
	                            {
	                              c[x >> 2] = o;break l;
	                            }case 3:
	                            {
	                              w = x;c[w >> 2] = o;c[w + 4 >> 2] = D;break l;
	                            }default:
	                            break l;}
	                      }
	                    } while (0);f = ((x | 0) != 0 & 1) + f | 0;o = (c[B >> 2] | 0) + v + (c[z >> 2] | 0) - (c[C >> 2] | 0) | 0;break c;
	                  }
	                } while (0);n = q + (m & 1) | 0;uc(e, 0);m = c[z >> 2] | 0;if (m >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                  c[z >> 2] = m + 1;m = d[m >> 0] | 0;
	                } else m = vc(e) | 0;if ((m | 0) != (d[n >> 0] | 0)) {
	                  P = 22;break b;
	                }o = v + 1 | 0;
	              } else {
	                n = q;while (1) {
	                  m = n + 1 | 0;if (!(zc(d[m >> 0] | 0) | 0)) break;else n = m;
	                }uc(e, 0);do {
	                  m = c[z >> 2] | 0;if (m >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                    c[z >> 2] = m + 1;m = d[m >> 0] | 0;
	                  } else m = vc(e) | 0;
	                } while ((zc(m) | 0) != 0);if (!(c[A >> 2] | 0)) m = c[z >> 2] | 0;else {
	                  m = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = m;
	                }o = (c[B >> 2] | 0) + v + m - (c[C >> 2] | 0) | 0;
	              }
	            } while (0);q = n + 1 | 0;m = a[q >> 0] | 0;if (!(m << 24 >> 24)) break a;else v = o;
	          }if ((P | 0) == 22) {
	            if (c[A >> 2] | 0) c[z >> 2] = (c[z >> 2] | 0) + -1;if ((f | 0) != 0 | (m | 0) > -1) break;else {
	              m = 0;f = l;P = 155;
	            }
	          } else if ((P | 0) == 154) if (!f) {
	            f = l;P = 155;
	          }if ((P | 0) == 155) {
	            l = f;f = -1;
	          }if (m) {
	            Bd(k);Bd(l);
	          }
	        } else f = 0;
	      } while (0);if (Q | 0) rc(e);i = R;return f | 0;
	    }function cd(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;l = i;i = i + 16 | 0;g = l;j = (f | 0) == 0 ? 15156 : f;f = c[j >> 2] | 0;a: do {
	        if (!d) {
	          if (!f) f = 0;else k = 15;
	        } else {
	          h = (b | 0) == 0 ? g : b;if (!e) f = -2;else {
	            if (!f) {
	              f = a[d >> 0] | 0;b = f & 255;if (f << 24 >> 24 > -1) {
	                c[h >> 2] = b;f = f << 24 >> 24 != 0 & 1;break;
	              }f = b + -194 | 0;if (f >>> 0 > 50) {
	                k = 15;break;
	              }f = c[9204 + (f << 2) >> 2] | 0;g = e + -1 | 0;if (g) {
	                d = d + 1 | 0;k = 9;
	              }
	            } else {
	              g = e;k = 9;
	            }b: do {
	              if ((k | 0) == 9) {
	                b = a[d >> 0] | 0;m = (b & 255) >>> 3;if ((m + -16 | m + (f >> 26)) >>> 0 > 7) {
	                  k = 15;break a;
	                }while (1) {
	                  d = d + 1 | 0;f = (b & 255) + -128 | f << 6;g = g + -1 | 0;if ((f | 0) >= 0) break;if (!g) break b;b = a[d >> 0] | 0;if ((b & -64) << 24 >> 24 != -128) {
	                    k = 15;break a;
	                  }
	                }c[j >> 2] = 0;c[h >> 2] = f;f = e - g | 0;break a;
	              }
	            } while (0);c[j >> 2] = f;f = -2;
	          }
	        }
	      } while (0);if ((k | 0) == 15) {
	        c[j >> 2] = 0;c[(oc() | 0) >> 2] = 84;f = -1;
	      }i = l;return f | 0;
	    }function dd(a) {
	      a = a | 0;if (!a) a = 1;else a = (c[a >> 2] | 0) == 0;return a & 1 | 0;
	    }function ed(b) {
	      b = b | 0;var c = 0,
	          d = 0,
	          e = 0;d = (gd(b, 43) | 0) == 0;c = a[b >> 0] | 0;d = d ? c << 24 >> 24 != 114 & 1 : 2;e = (gd(b, 120) | 0) == 0;d = e ? d : d | 128;b = (gd(b, 101) | 0) == 0;b = b ? d : d | 524288;b = c << 24 >> 24 == 114 ? b : b | 64;b = c << 24 >> 24 == 119 ? b | 512 : b;return (c << 24 >> 24 == 97 ? b | 1024 : b) | 0;
	    }function fd(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;o = i;i = i + 112 | 0;n = o + 40 | 0;l = o + 24 | 0;k = o + 16 | 0;g = o;m = o + 52 | 0;f = a[d >> 0] | 0;if (Sc(15086, f << 24 >> 24, 4) | 0) {
	        e = Ad(1144) | 0;if (!e) e = 0;else {
	          h = e;j = h + 112 | 0;do {
	            c[h >> 2] = 0;h = h + 4 | 0;
	          } while ((h | 0) < (j | 0));if (!(gd(d, 43) | 0)) c[e >> 2] = f << 24 >> 24 == 114 ? 8 : 4;if (gd(d, 101) | 0) {
	            c[g >> 2] = b;c[g + 4 >> 2] = 2;c[g + 8 >> 2] = 1;ha(221, g | 0) | 0;f = a[d >> 0] | 0;
	          }if (f << 24 >> 24 == 97) {
	            c[k >> 2] = b;c[k + 4 >> 2] = 3;f = ha(221, k | 0) | 0;if (!(f & 1024)) {
	              c[l >> 2] = b;c[l + 4 >> 2] = 4;c[l + 8 >> 2] = f | 1024;ha(221, l | 0) | 0;
	            }d = c[e >> 2] | 128;c[e >> 2] = d;
	          } else d = c[e >> 2] | 0;c[e + 60 >> 2] = b;c[e + 44 >> 2] = e + 120;c[e + 48 >> 2] = 1024;f = e + 75 | 0;a[f >> 0] = -1;if ((d & 8 | 0) == 0 ? (c[n >> 2] = b, c[n + 4 >> 2] = 21505, c[n + 8 >> 2] = m, (ta(54, n | 0) | 0) == 0) : 0) a[f >> 0] = 10;c[e + 32 >> 2] = 3;c[e + 36 >> 2] = 6;c[e + 40 >> 2] = 2;c[e + 12 >> 2] = 1;if (!(c[3778] | 0)) c[e + 76 >> 2] = -1;la(15136);f = c[3783] | 0;c[e + 56 >> 2] = f;if (f | 0) c[f + 52 >> 2] = e;c[3783] = e;ua(15136);
	        }
	      } else {
	        c[(oc() | 0) >> 2] = 22;e = 0;
	      }i = o;return e | 0;
	    }function gd(b, c) {
	      b = b | 0;c = c | 0;b = hd(b, c) | 0;return ((a[b >> 0] | 0) == (c & 255) << 24 >> 24 ? b : 0) | 0;
	    }function hd(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;f = d & 255;a: do {
	        if (!f) b = b + (id(b) | 0) | 0;else {
	          if (b & 3) {
	            e = d & 255;do {
	              g = a[b >> 0] | 0;if (g << 24 >> 24 == 0 ? 1 : g << 24 >> 24 == e << 24 >> 24) break a;b = b + 1 | 0;
	            } while ((b & 3 | 0) != 0);
	          }f = S(f, 16843009) | 0;e = c[b >> 2] | 0;b: do {
	            if (!((e & -2139062144 ^ -2139062144) & e + -16843009)) do {
	              g = e ^ f;if ((g & -2139062144 ^ -2139062144) & g + -16843009 | 0) break b;b = b + 4 | 0;e = c[b >> 2] | 0;
	            } while (!((e & -2139062144 ^ -2139062144) & e + -16843009 | 0));
	          } while (0);e = d & 255;while (1) {
	            g = a[b >> 0] | 0;if (g << 24 >> 24 == 0 ? 1 : g << 24 >> 24 == e << 24 >> 24) break;else b = b + 1 | 0;
	          }
	        }
	      } while (0);return b | 0;
	    }function id(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0;f = b;a: do {
	        if (!(f & 3)) e = 4;else {
	          d = f;while (1) {
	            if (!(a[b >> 0] | 0)) {
	              b = d;break a;
	            }b = b + 1 | 0;d = b;if (!(d & 3)) {
	              e = 4;break;
	            }
	          }
	        }
	      } while (0);if ((e | 0) == 4) {
	        while (1) {
	          d = c[b >> 2] | 0;if (!((d & -2139062144 ^ -2139062144) & d + -16843009)) b = b + 4 | 0;else break;
	        }if ((d & 255) << 24 >> 24) do {
	          b = b + 1 | 0;
	        } while ((a[b >> 0] | 0) != 0);
	      }return b - f | 0;
	    }function jd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;kd(a, b, c) | 0;return a | 0;
	    }function kd(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0;g = d;do {
	        if (!((g ^ b) & 3)) {
	          f = (e | 0) != 0;a: do {
	            if (f & (g & 3 | 0) != 0) while (1) {
	              g = a[d >> 0] | 0;a[b >> 0] = g;if (!(g << 24 >> 24)) break a;e = e + -1 | 0;d = d + 1 | 0;b = b + 1 | 0;f = (e | 0) != 0;if (!(f & (d & 3 | 0) != 0)) {
	                h = 5;break;
	              }
	            } else h = 5;
	          } while (0);if ((h | 0) == 5) if (!f) {
	            e = 0;break;
	          }if (a[d >> 0] | 0) {
	            b: do {
	              if (e >>> 0 > 3) {
	                f = d;while (1) {
	                  d = c[f >> 2] | 0;if ((d & -2139062144 ^ -2139062144) & d + -16843009 | 0) {
	                    d = f;break b;
	                  }c[b >> 2] = d;e = e + -4 | 0;d = f + 4 | 0;b = b + 4 | 0;if (e >>> 0 > 3) f = d;else break;
	                }
	              }
	            } while (0);h = 11;
	          }
	        } else h = 11;
	      } while (0);c: do {
	        if ((h | 0) == 11) if (!e) e = 0;else while (1) {
	          h = a[d >> 0] | 0;a[b >> 0] = h;if (!(h << 24 >> 24)) break c;e = e + -1 | 0;b = b + 1 | 0;if (!e) {
	            e = 0;break;
	          } else d = d + 1 | 0;
	        }
	      } while (0);Id(b | 0, 0, e | 0) | 0;return b | 0;
	    }function ld(a) {
	      a = a | 0;var b = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        b = (Nc(a) | 0) == 0;a = (c[a >> 2] | 0) >>> 4 & 1;
	      } else a = (c[a >> 2] | 0) >>> 4 & 1;return a | 0;
	    }function md(a) {
	      a = a | 0;var b = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        b = (Nc(a) | 0) == 0;a = (c[a >> 2] | 0) >>> 5 & 1;
	      } else a = (c[a >> 2] | 0) >>> 5 & 1;return a | 0;
	    }function nd(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        e = (Nc(a) | 0) == 0;b = od(a, b, d) | 0;if (!e) rc(a);
	      } else b = od(a, b, d) | 0;return b | 0;
	    }function od(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0;if ((d | 0) == 1) b = b - (c[a + 8 >> 2] | 0) + (c[a + 4 >> 2] | 0) | 0;e = a + 20 | 0;f = a + 28 | 0;if ((c[e >> 2] | 0) >>> 0 > (c[f >> 2] | 0) >>> 0 ? (Ca[c[a + 36 >> 2] & 7](a, 0, 0) | 0, (c[e >> 2] | 0) == 0) : 0) b = -1;else {
	        c[a + 16 >> 2] = 0;c[f >> 2] = 0;c[e >> 2] = 0;if ((Ca[c[a + 40 >> 2] & 7](a, b, d) | 0) < 0) b = -1;else {
	          c[a + 8 >> 2] = 0;c[a + 4 >> 2] = 0;c[a >> 2] = c[a >> 2] & -17;b = 0;
	        }
	      }return b | 0;
	    }function pd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = a;c[e + 4 >> 2] = b;b = nc(ia(195, e | 0) | 0) | 0;i = d;return b | 0;
	    }function qd(b, e) {
	      b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 16 | 0;k = m;l = e & 255;a[k >> 0] = l;g = b + 16 | 0;h = c[g >> 2] | 0;if (!h) {
	        if (!(Yc(b) | 0)) {
	          h = c[g >> 2] | 0;j = 4;
	        } else f = -1;
	      } else j = 4;do {
	        if ((j | 0) == 4) {
	          j = b + 20 | 0;g = c[j >> 2] | 0;if (g >>> 0 < h >>> 0 ? (f = e & 255, (f | 0) != (a[b + 75 >> 0] | 0)) : 0) {
	            c[j >> 2] = g + 1;a[g >> 0] = l;break;
	          }if ((Ca[c[b + 36 >> 2] & 7](b, k, 1) | 0) == 1) f = d[k >> 0] | 0;else f = -1;
	        }
	      } while (0);i = m;return f | 0;
	    }function rd(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;f = S(d, b) | 0;if ((c[e + 76 >> 2] | 0) > -1) {
	        g = (Nc(e) | 0) == 0;a = Oc(a, f, e) | 0;if (!g) rc(e);
	      } else a = Oc(a, f, e) | 0;if ((a | 0) != (f | 0)) d = (a >>> 0) / (b >>> 0) | 0;return d | 0;
	    }function sd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = b;b = Lc(c[2242] | 0, a, e) | 0;i = d;return b | 0;
	    }function td(a, b) {
	      a = a | 0;b = b | 0;return (rd(a, id(a) | 0, 1, b) | 0) + -1 | 0;
	    }function ud(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = b;b = vd(a, e) | 0;i = d;return b | 0;
	    }function vd(a, b) {
	      a = a | 0;b = b | 0;return bd(c[2272] | 0, a, b) | 0;
	    }function wd(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = S(e, d) | 0;if ((c[f + 76 >> 2] | 0) > -1) j = Nc(f) | 0;else j = 0;g = f + 74 | 0;i = a[g >> 0] | 0;a[g >> 0] = i + 255 | i;g = f + 4 | 0;i = c[g >> 2] | 0;h = (c[f + 8 >> 2] | 0) - i | 0;if ((h | 0) > 0) {
	        h = h >>> 0 < k >>> 0 ? h : k;Sd(b | 0, i | 0, h | 0) | 0;c[g >> 2] = i + h;g = k - h | 0;b = b + h | 0;
	      } else g = k;a: do {
	        if (!g) l = 13;else {
	          i = f + 32 | 0;while (1) {
	            if (xc(f) | 0) break;h = Ca[c[i >> 2] & 7](f, b, g) | 0;if ((h + 1 | 0) >>> 0 < 2) break;g = g - h | 0;if (!g) {
	              l = 13;break a;
	            } else b = b + h | 0;
	          }if (j | 0) rc(f);e = ((k - g | 0) >>> 0) / (d >>> 0) | 0;
	        }
	      } while (0);if ((l | 0) == 13) if (j) rc(f);return e | 0;
	    }function xd(a) {
	      a = a | 0;var b = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        b = (Nc(a) | 0) == 0;a = yd(a) | 0;
	      } else a = yd(a) | 0;return a | 0;
	    }function yd(a) {
	      a = a | 0;var b = 0;if (!(c[a >> 2] & 128)) b = 1;else b = (c[a + 20 >> 2] | 0) >>> 0 > (c[a + 28 >> 2] | 0) >>> 0 ? 2 : 1;b = Ca[c[a + 40 >> 2] & 7](a, 0, b) | 0;if ((b | 0) >= 0) b = b - (c[a + 8 >> 2] | 0) + (c[a + 4 >> 2] | 0) + (c[a + 20 >> 2] | 0) - (c[a + 28 >> 2] | 0) | 0;return b | 0;
	    }function zd(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0;f = c[2242] | 0;if ((c[f + 76 >> 2] | 0) > -1) g = Nc(f) | 0;else g = 0;do {
	        if ((td(b, f) | 0) < 0) b = 1;else {
	          if ((a[f + 75 >> 0] | 0) != 10 ? (d = f + 20 | 0, e = c[d >> 2] | 0, e >>> 0 < (c[f + 16 >> 2] | 0) >>> 0) : 0) {
	            c[d >> 2] = e + 1;a[e >> 0] = 10;b = 0;break;
	          }b = (qd(f, 10) | 0) < 0;
	        }
	      } while (0);if (g | 0) rc(f);return b << 31 >> 31 | 0;
	    }function Ad(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0;L = i;i = i + 16 | 0;p = L;do {
	        if (a >>> 0 < 245) {
	          o = a >>> 0 < 11 ? 16 : a + 11 & -8;a = o >>> 3;t = c[3790] | 0;d = t >>> a;if (d & 3 | 0) {
	            a = (d & 1 ^ 1) + a | 0;d = 15200 + (a << 1 << 2) | 0;e = d + 8 | 0;f = c[e >> 2] | 0;g = f + 8 | 0;h = c[g >> 2] | 0;do {
	              if ((d | 0) != (h | 0)) {
	                if (h >>> 0 < (c[3794] | 0) >>> 0) na();b = h + 12 | 0;if ((c[b >> 2] | 0) == (f | 0)) {
	                  c[b >> 2] = d;c[e >> 2] = h;break;
	                } else na();
	              } else c[3790] = t & ~(1 << a);
	            } while (0);K = a << 3;c[f + 4 >> 2] = K | 3;K = f + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;K = g;i = L;return K | 0;
	          }s = c[3792] | 0;if (o >>> 0 > s >>> 0) {
	            if (d | 0) {
	              j = 2 << a;a = d << a & (j | 0 - j);a = (a & 0 - a) + -1 | 0;j = a >>> 12 & 16;a = a >>> j;e = a >>> 5 & 8;a = a >>> e;g = a >>> 2 & 4;a = a >>> g;d = a >>> 1 & 2;a = a >>> d;b = a >>> 1 & 1;b = (e | j | g | d | b) + (a >>> b) | 0;a = 15200 + (b << 1 << 2) | 0;d = a + 8 | 0;g = c[d >> 2] | 0;j = g + 8 | 0;e = c[j >> 2] | 0;do {
	                if ((a | 0) != (e | 0)) {
	                  if (e >>> 0 < (c[3794] | 0) >>> 0) na();f = e + 12 | 0;if ((c[f >> 2] | 0) == (g | 0)) {
	                    c[f >> 2] = a;c[d >> 2] = e;k = t;break;
	                  } else na();
	                } else {
	                  k = t & ~(1 << b);c[3790] = k;
	                }
	              } while (0);h = (b << 3) - o | 0;c[g + 4 >> 2] = o | 3;e = g + o | 0;c[e + 4 >> 2] = h | 1;c[e + h >> 2] = h;if (s | 0) {
	                f = c[3795] | 0;b = s >>> 3;d = 15200 + (b << 1 << 2) | 0;b = 1 << b;if (k & b) {
	                  b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                    l = a;m = b;
	                  }
	                } else {
	                  c[3790] = k | b;l = d;m = d + 8 | 0;
	                }c[m >> 2] = f;c[l + 12 >> 2] = f;c[f + 8 >> 2] = l;c[f + 12 >> 2] = d;
	              }c[3792] = h;c[3795] = e;K = j;i = L;return K | 0;
	            }l = c[3791] | 0;if (l) {
	              a = (l & 0 - l) + -1 | 0;J = a >>> 12 & 16;a = a >>> J;I = a >>> 5 & 8;a = a >>> I;K = a >>> 2 & 4;a = a >>> K;j = a >>> 1 & 2;a = a >>> j;k = a >>> 1 & 1;k = c[15464 + ((I | J | K | j | k) + (a >>> k) << 2) >> 2] | 0;a = k;j = k;k = (c[k + 4 >> 2] & -8) - o | 0;while (1) {
	                b = c[a + 16 >> 2] | 0;if (!b) {
	                  b = c[a + 20 >> 2] | 0;if (!b) break;
	                }K = (c[b + 4 >> 2] & -8) - o | 0;J = K >>> 0 < k >>> 0;a = b;j = J ? b : j;k = J ? K : k;
	              }f = c[3794] | 0;if (j >>> 0 < f >>> 0) na();h = j + o | 0;if (j >>> 0 >= h >>> 0) na();g = c[j + 24 >> 2] | 0;d = c[j + 12 >> 2] | 0;do {
	                if ((d | 0) == (j | 0)) {
	                  a = j + 20 | 0;b = c[a >> 2] | 0;if (!b) {
	                    a = j + 16 | 0;b = c[a >> 2] | 0;if (!b) {
	                      n = 0;break;
	                    }
	                  }while (1) {
	                    d = b + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                      b = e;a = d;continue;
	                    }d = b + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                      b = e;a = d;
	                    }
	                  }if (a >>> 0 < f >>> 0) na();else {
	                    c[a >> 2] = 0;n = b;break;
	                  }
	                } else {
	                  e = c[j + 8 >> 2] | 0;if (e >>> 0 < f >>> 0) na();b = e + 12 | 0;if ((c[b >> 2] | 0) != (j | 0)) na();a = d + 8 | 0;if ((c[a >> 2] | 0) == (j | 0)) {
	                    c[b >> 2] = d;c[a >> 2] = e;n = d;break;
	                  } else na();
	                }
	              } while (0);do {
	                if (g | 0) {
	                  b = c[j + 28 >> 2] | 0;a = 15464 + (b << 2) | 0;if ((j | 0) == (c[a >> 2] | 0)) {
	                    c[a >> 2] = n;if (!n) {
	                      c[3791] = l & ~(1 << b);break;
	                    }
	                  } else {
	                    if (g >>> 0 < (c[3794] | 0) >>> 0) na();b = g + 16 | 0;if ((c[b >> 2] | 0) == (j | 0)) c[b >> 2] = n;else c[g + 20 >> 2] = n;if (!n) break;
	                  }a = c[3794] | 0;if (n >>> 0 < a >>> 0) na();c[n + 24 >> 2] = g;b = c[j + 16 >> 2] | 0;do {
	                    if (b | 0) if (b >>> 0 < a >>> 0) na();else {
	                      c[n + 16 >> 2] = b;c[b + 24 >> 2] = n;break;
	                    }
	                  } while (0);b = c[j + 20 >> 2] | 0;if (b | 0) if (b >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                    c[n + 20 >> 2] = b;c[b + 24 >> 2] = n;break;
	                  }
	                }
	              } while (0);if (k >>> 0 < 16) {
	                K = k + o | 0;c[j + 4 >> 2] = K | 3;K = j + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	              } else {
	                c[j + 4 >> 2] = o | 3;c[h + 4 >> 2] = k | 1;c[h + k >> 2] = k;if (s | 0) {
	                  e = c[3795] | 0;b = s >>> 3;d = 15200 + (b << 1 << 2) | 0;b = 1 << b;if (t & b) {
	                    b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                      q = a;r = b;
	                    }
	                  } else {
	                    c[3790] = t | b;q = d;r = d + 8 | 0;
	                  }c[r >> 2] = e;c[q + 12 >> 2] = e;c[e + 8 >> 2] = q;c[e + 12 >> 2] = d;
	                }c[3792] = k;c[3795] = h;
	              }K = j + 8 | 0;i = L;return K | 0;
	            }
	          }
	        } else if (a >>> 0 <= 4294967231) {
	          a = a + 11 | 0;o = a & -8;l = c[3791] | 0;if (l) {
	            e = 0 - o | 0;a = a >>> 8;if (a) {
	              if (o >>> 0 > 16777215) k = 31;else {
	                r = (a + 1048320 | 0) >>> 16 & 8;D = a << r;q = (D + 520192 | 0) >>> 16 & 4;D = D << q;k = (D + 245760 | 0) >>> 16 & 2;k = 14 - (q | r | k) + (D << k >>> 15) | 0;k = o >>> (k + 7 | 0) & 1 | k << 1;
	              }
	            } else k = 0;a = c[15464 + (k << 2) >> 2] | 0;a: do {
	              if (!a) {
	                d = 0;f = 0;D = 86;
	              } else {
	                f = 0;j = a;h = o << ((k | 0) == 31 ? 0 : 25 - (k >>> 1) | 0);d = 0;while (1) {
	                  a = (c[j + 4 >> 2] & -8) - o | 0;if (a >>> 0 < e >>> 0) if (!a) {
	                    a = j;e = 0;d = j;D = 90;break a;
	                  } else {
	                    f = j;e = a;
	                  }a = c[j + 20 >> 2] | 0;j = c[j + 16 + (h >>> 31 << 2) >> 2] | 0;d = (a | 0) == 0 | (a | 0) == (j | 0) ? d : a;a = (j | 0) == 0;if (a) {
	                    D = 86;break;
	                  } else h = h << (a & 1 ^ 1);
	                }
	              }
	            } while (0);if ((D | 0) == 86) {
	              if ((d | 0) == 0 & (f | 0) == 0) {
	                a = 2 << k;a = l & (a | 0 - a);if (!a) break;r = (a & 0 - a) + -1 | 0;m = r >>> 12 & 16;r = r >>> m;k = r >>> 5 & 8;r = r >>> k;n = r >>> 2 & 4;r = r >>> n;q = r >>> 1 & 2;r = r >>> q;d = r >>> 1 & 1;d = c[15464 + ((k | m | n | q | d) + (r >>> d) << 2) >> 2] | 0;
	              }if (!d) {
	                k = f;j = e;
	              } else {
	                a = f;D = 90;
	              }
	            }if ((D | 0) == 90) while (1) {
	              D = 0;r = (c[d + 4 >> 2] & -8) - o | 0;f = r >>> 0 < e >>> 0;e = f ? r : e;a = f ? d : a;f = c[d + 16 >> 2] | 0;if (f | 0) {
	                d = f;D = 90;continue;
	              }d = c[d + 20 >> 2] | 0;if (!d) {
	                k = a;j = e;break;
	              } else D = 90;
	            }if ((k | 0) != 0 ? j >>> 0 < ((c[3792] | 0) - o | 0) >>> 0 : 0) {
	              f = c[3794] | 0;if (k >>> 0 < f >>> 0) na();h = k + o | 0;if (k >>> 0 >= h >>> 0) na();g = c[k + 24 >> 2] | 0;d = c[k + 12 >> 2] | 0;do {
	                if ((d | 0) == (k | 0)) {
	                  a = k + 20 | 0;b = c[a >> 2] | 0;if (!b) {
	                    a = k + 16 | 0;b = c[a >> 2] | 0;if (!b) {
	                      s = 0;break;
	                    }
	                  }while (1) {
	                    d = b + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                      b = e;a = d;continue;
	                    }d = b + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                      b = e;a = d;
	                    }
	                  }if (a >>> 0 < f >>> 0) na();else {
	                    c[a >> 2] = 0;s = b;break;
	                  }
	                } else {
	                  e = c[k + 8 >> 2] | 0;if (e >>> 0 < f >>> 0) na();b = e + 12 | 0;if ((c[b >> 2] | 0) != (k | 0)) na();a = d + 8 | 0;if ((c[a >> 2] | 0) == (k | 0)) {
	                    c[b >> 2] = d;c[a >> 2] = e;s = d;break;
	                  } else na();
	                }
	              } while (0);do {
	                if (g) {
	                  b = c[k + 28 >> 2] | 0;a = 15464 + (b << 2) | 0;if ((k | 0) == (c[a >> 2] | 0)) {
	                    c[a >> 2] = s;if (!s) {
	                      t = l & ~(1 << b);c[3791] = t;break;
	                    }
	                  } else {
	                    if (g >>> 0 < (c[3794] | 0) >>> 0) na();b = g + 16 | 0;if ((c[b >> 2] | 0) == (k | 0)) c[b >> 2] = s;else c[g + 20 >> 2] = s;if (!s) {
	                      t = l;break;
	                    }
	                  }a = c[3794] | 0;if (s >>> 0 < a >>> 0) na();c[s + 24 >> 2] = g;b = c[k + 16 >> 2] | 0;do {
	                    if (b | 0) if (b >>> 0 < a >>> 0) na();else {
	                      c[s + 16 >> 2] = b;c[b + 24 >> 2] = s;break;
	                    }
	                  } while (0);b = c[k + 20 >> 2] | 0;if (b) {
	                    if (b >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                      c[s + 20 >> 2] = b;c[b + 24 >> 2] = s;t = l;break;
	                    }
	                  } else t = l;
	                } else t = l;
	              } while (0);do {
	                if (j >>> 0 >= 16) {
	                  c[k + 4 >> 2] = o | 3;c[h + 4 >> 2] = j | 1;c[h + j >> 2] = j;b = j >>> 3;if (j >>> 0 < 256) {
	                    d = 15200 + (b << 1 << 2) | 0;a = c[3790] | 0;b = 1 << b;if (a & b) {
	                      b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                        B = a;C = b;
	                      }
	                    } else {
	                      c[3790] = a | b;B = d;C = d + 8 | 0;
	                    }c[C >> 2] = h;c[B + 12 >> 2] = h;c[h + 8 >> 2] = B;c[h + 12 >> 2] = d;break;
	                  }b = j >>> 8;if (b) {
	                    if (j >>> 0 > 16777215) b = 31;else {
	                      J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;b = (K + 245760 | 0) >>> 16 & 2;b = 14 - (I | J | b) + (K << b >>> 15) | 0;b = j >>> (b + 7 | 0) & 1 | b << 1;
	                    }
	                  } else b = 0;d = 15464 + (b << 2) | 0;c[h + 28 >> 2] = b;a = h + 16 | 0;c[a + 4 >> 2] = 0;c[a >> 2] = 0;a = 1 << b;if (!(t & a)) {
	                    c[3791] = t | a;c[d >> 2] = h;c[h + 24 >> 2] = d;c[h + 12 >> 2] = h;c[h + 8 >> 2] = h;break;
	                  }a = j << ((b | 0) == 31 ? 0 : 25 - (b >>> 1) | 0);e = c[d >> 2] | 0;while (1) {
	                    if ((c[e + 4 >> 2] & -8 | 0) == (j | 0)) {
	                      D = 148;break;
	                    }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                      D = 145;break;
	                    } else {
	                      a = a << 1;e = b;
	                    }
	                  }if ((D | 0) == 145) {
	                    if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                      c[d >> 2] = h;c[h + 24 >> 2] = e;c[h + 12 >> 2] = h;c[h + 8 >> 2] = h;break;
	                    }
	                  } else if ((D | 0) == 148) {
	                    b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3794] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                      c[a + 12 >> 2] = h;c[b >> 2] = h;c[h + 8 >> 2] = a;c[h + 12 >> 2] = e;c[h + 24 >> 2] = 0;break;
	                    } else na();
	                  }
	                } else {
	                  K = j + o | 0;c[k + 4 >> 2] = K | 3;K = k + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	                }
	              } while (0);K = k + 8 | 0;i = L;return K | 0;
	            }
	          }
	        } else o = -1;
	      } while (0);d = c[3792] | 0;if (d >>> 0 >= o >>> 0) {
	        b = d - o | 0;a = c[3795] | 0;if (b >>> 0 > 15) {
	          K = a + o | 0;c[3795] = K;c[3792] = b;c[K + 4 >> 2] = b | 1;c[K + b >> 2] = b;c[a + 4 >> 2] = o | 3;
	        } else {
	          c[3792] = 0;c[3795] = 0;c[a + 4 >> 2] = d | 3;K = a + d + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	        }K = a + 8 | 0;i = L;return K | 0;
	      }j = c[3793] | 0;if (j >>> 0 > o >>> 0) {
	        I = j - o | 0;c[3793] = I;K = c[3796] | 0;J = K + o | 0;c[3796] = J;c[J + 4 >> 2] = I | 1;c[K + 4 >> 2] = o | 3;K = K + 8 | 0;i = L;return K | 0;
	      }if (!(c[3908] | 0)) {
	        c[3910] = 4096;c[3909] = 4096;c[3911] = -1;c[3912] = -1;c[3913] = 0;c[3901] = 0;a = p & -16 ^ 1431655768;c[p >> 2] = a;c[3908] = a;a = 4096;
	      } else a = c[3910] | 0;k = o + 48 | 0;l = o + 47 | 0;h = a + l | 0;f = 0 - a | 0;m = h & f;if (m >>> 0 <= o >>> 0) {
	        K = 0;i = L;return K | 0;
	      }a = c[3900] | 0;if (a | 0 ? (B = c[3898] | 0, C = B + m | 0, C >>> 0 <= B >>> 0 | C >>> 0 > a >>> 0) : 0) {
	        K = 0;i = L;return K | 0;
	      }b: do {
	        if (!(c[3901] & 4)) {
	          d = c[3796] | 0;c: do {
	            if (d) {
	              e = 15608;while (1) {
	                a = c[e >> 2] | 0;if (a >>> 0 <= d >>> 0 ? (u = e + 4 | 0, (a + (c[u >> 2] | 0) | 0) >>> 0 > d >>> 0) : 0) break;a = c[e + 8 >> 2] | 0;if (!a) {
	                  D = 172;break c;
	                } else e = a;
	              }d = h - j & f;if (d >>> 0 < 2147483647) {
	                a = Qd(d | 0) | 0;if ((a | 0) == ((c[e >> 2] | 0) + (c[u >> 2] | 0) | 0)) {
	                  if ((a | 0) != (-1 | 0)) {
	                    h = d;g = a;D = 190;break b;
	                  }
	                } else {
	                  b = d;D = 180;
	                }
	              }
	            } else D = 172;
	          } while (0);do {
	            if (((D | 0) == 172 ? (g = Qd(0) | 0, (g | 0) != (-1 | 0)) : 0) ? (b = g, v = c[3909] | 0, w = v + -1 | 0, b = ((w & b | 0) == 0 ? 0 : (w + b & 0 - v) - b | 0) + m | 0, v = c[3898] | 0, w = b + v | 0, b >>> 0 > o >>> 0 & b >>> 0 < 2147483647) : 0) {
	              C = c[3900] | 0;if (C | 0 ? w >>> 0 <= v >>> 0 | w >>> 0 > C >>> 0 : 0) break;a = Qd(b | 0) | 0;if ((a | 0) == (g | 0)) {
	                h = b;D = 190;break b;
	              } else D = 180;
	            }
	          } while (0);d: do {
	            if ((D | 0) == 180) {
	              d = 0 - b | 0;do {
	                if (k >>> 0 > b >>> 0 & (b >>> 0 < 2147483647 & (a | 0) != (-1 | 0)) ? (x = c[3910] | 0, x = l - b + x & 0 - x, x >>> 0 < 2147483647) : 0) if ((Qd(x | 0) | 0) == (-1 | 0)) {
	                  Qd(d | 0) | 0;break d;
	                } else {
	                  b = x + b | 0;break;
	                }
	              } while (0);if ((a | 0) != (-1 | 0)) {
	                h = b;g = a;D = 190;break b;
	              }
	            }
	          } while (0);c[3901] = c[3901] | 4;D = 187;
	        } else D = 187;
	      } while (0);if ((((D | 0) == 187 ? m >>> 0 < 2147483647 : 0) ? (A = Qd(m | 0) | 0, y = Qd(0) | 0, A >>> 0 < y >>> 0 & ((A | 0) != (-1 | 0) & (y | 0) != (-1 | 0))) : 0) ? (z = y - A | 0, z >>> 0 > (o + 40 | 0) >>> 0) : 0) {
	        h = z;g = A;D = 190;
	      }if ((D | 0) == 190) {
	        b = (c[3898] | 0) + h | 0;c[3898] = b;if (b >>> 0 > (c[3899] | 0) >>> 0) c[3899] = b;l = c[3796] | 0;do {
	          if (l) {
	            b = 15608;while (1) {
	              a = c[b >> 2] | 0;d = b + 4 | 0;e = c[d >> 2] | 0;if ((g | 0) == (a + e | 0)) {
	                D = 200;break;
	              }f = c[b + 8 >> 2] | 0;if (!f) break;else b = f;
	            }if (((D | 0) == 200 ? (c[b + 12 >> 2] & 8 | 0) == 0 : 0) ? l >>> 0 < g >>> 0 & l >>> 0 >= a >>> 0 : 0) {
	              c[d >> 2] = e + h;K = l + 8 | 0;K = (K & 7 | 0) == 0 ? 0 : 0 - K & 7;J = l + K | 0;K = h - K + (c[3793] | 0) | 0;c[3796] = J;c[3793] = K;c[J + 4 >> 2] = K | 1;c[J + K + 4 >> 2] = 40;c[3797] = c[3912];break;
	            }b = c[3794] | 0;if (g >>> 0 < b >>> 0) {
	              c[3794] = g;j = g;
	            } else j = b;a = g + h | 0;b = 15608;while (1) {
	              if ((c[b >> 2] | 0) == (a | 0)) {
	                D = 208;break;
	              }b = c[b + 8 >> 2] | 0;if (!b) {
	                a = 15608;break;
	              }
	            }if ((D | 0) == 208) if (!(c[b + 12 >> 2] & 8)) {
	              c[b >> 2] = g;n = b + 4 | 0;c[n >> 2] = (c[n >> 2] | 0) + h;n = g + 8 | 0;n = g + ((n & 7 | 0) == 0 ? 0 : 0 - n & 7) | 0;b = a + 8 | 0;b = a + ((b & 7 | 0) == 0 ? 0 : 0 - b & 7) | 0;m = n + o | 0;k = b - n - o | 0;c[n + 4 >> 2] = o | 3;do {
	                if ((b | 0) != (l | 0)) {
	                  if ((b | 0) == (c[3795] | 0)) {
	                    K = (c[3792] | 0) + k | 0;c[3792] = K;c[3795] = m;c[m + 4 >> 2] = K | 1;c[m + K >> 2] = K;break;
	                  }a = c[b + 4 >> 2] | 0;if ((a & 3 | 0) == 1) {
	                    h = a & -8;f = a >>> 3;e: do {
	                      if (a >>> 0 >= 256) {
	                        g = c[b + 24 >> 2] | 0;e = c[b + 12 >> 2] | 0;do {
	                          if ((e | 0) == (b | 0)) {
	                            e = b + 16 | 0;d = e + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                              a = c[e >> 2] | 0;if (!a) {
	                                I = 0;break;
	                              } else d = e;
	                            }while (1) {
	                              e = a + 20 | 0;f = c[e >> 2] | 0;if (f | 0) {
	                                a = f;d = e;continue;
	                              }e = a + 16 | 0;f = c[e >> 2] | 0;if (!f) break;else {
	                                a = f;d = e;
	                              }
	                            }if (d >>> 0 < j >>> 0) na();else {
	                              c[d >> 2] = 0;I = a;break;
	                            }
	                          } else {
	                            f = c[b + 8 >> 2] | 0;if (f >>> 0 < j >>> 0) na();a = f + 12 | 0;if ((c[a >> 2] | 0) != (b | 0)) na();d = e + 8 | 0;if ((c[d >> 2] | 0) == (b | 0)) {
	                              c[a >> 2] = e;c[d >> 2] = f;I = e;break;
	                            } else na();
	                          }
	                        } while (0);if (!g) break;a = c[b + 28 >> 2] | 0;d = 15464 + (a << 2) | 0;do {
	                          if ((b | 0) != (c[d >> 2] | 0)) {
	                            if (g >>> 0 < (c[3794] | 0) >>> 0) na();a = g + 16 | 0;if ((c[a >> 2] | 0) == (b | 0)) c[a >> 2] = I;else c[g + 20 >> 2] = I;if (!I) break e;
	                          } else {
	                            c[d >> 2] = I;if (I | 0) break;c[3791] = c[3791] & ~(1 << a);break e;
	                          }
	                        } while (0);e = c[3794] | 0;if (I >>> 0 < e >>> 0) na();c[I + 24 >> 2] = g;a = b + 16 | 0;d = c[a >> 2] | 0;do {
	                          if (d | 0) if (d >>> 0 < e >>> 0) na();else {
	                            c[I + 16 >> 2] = d;c[d + 24 >> 2] = I;break;
	                          }
	                        } while (0);a = c[a + 4 >> 2] | 0;if (!a) break;if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                          c[I + 20 >> 2] = a;c[a + 24 >> 2] = I;break;
	                        }
	                      } else {
	                        d = c[b + 8 >> 2] | 0;e = c[b + 12 >> 2] | 0;a = 15200 + (f << 1 << 2) | 0;do {
	                          if ((d | 0) != (a | 0)) {
	                            if (d >>> 0 < j >>> 0) na();if ((c[d + 12 >> 2] | 0) == (b | 0)) break;na();
	                          }
	                        } while (0);if ((e | 0) == (d | 0)) {
	                          c[3790] = c[3790] & ~(1 << f);break;
	                        }do {
	                          if ((e | 0) == (a | 0)) F = e + 8 | 0;else {
	                            if (e >>> 0 < j >>> 0) na();a = e + 8 | 0;if ((c[a >> 2] | 0) == (b | 0)) {
	                              F = a;break;
	                            }na();
	                          }
	                        } while (0);c[d + 12 >> 2] = e;c[F >> 2] = d;
	                      }
	                    } while (0);b = b + h | 0;f = h + k | 0;
	                  } else f = k;b = b + 4 | 0;c[b >> 2] = c[b >> 2] & -2;c[m + 4 >> 2] = f | 1;c[m + f >> 2] = f;b = f >>> 3;if (f >>> 0 < 256) {
	                    d = 15200 + (b << 1 << 2) | 0;a = c[3790] | 0;b = 1 << b;do {
	                      if (!(a & b)) {
	                        c[3790] = a | b;J = d;K = d + 8 | 0;
	                      } else {
	                        b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 >= (c[3794] | 0) >>> 0) {
	                          J = a;K = b;break;
	                        }na();
	                      }
	                    } while (0);c[K >> 2] = m;c[J + 12 >> 2] = m;c[m + 8 >> 2] = J;c[m + 12 >> 2] = d;break;
	                  }b = f >>> 8;do {
	                    if (!b) b = 0;else {
	                      if (f >>> 0 > 16777215) {
	                        b = 31;break;
	                      }J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;b = (K + 245760 | 0) >>> 16 & 2;b = 14 - (I | J | b) + (K << b >>> 15) | 0;b = f >>> (b + 7 | 0) & 1 | b << 1;
	                    }
	                  } while (0);e = 15464 + (b << 2) | 0;c[m + 28 >> 2] = b;a = m + 16 | 0;c[a + 4 >> 2] = 0;c[a >> 2] = 0;a = c[3791] | 0;d = 1 << b;if (!(a & d)) {
	                    c[3791] = a | d;c[e >> 2] = m;c[m + 24 >> 2] = e;c[m + 12 >> 2] = m;c[m + 8 >> 2] = m;break;
	                  }a = f << ((b | 0) == 31 ? 0 : 25 - (b >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	                    if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	                      D = 278;break;
	                    }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                      D = 275;break;
	                    } else {
	                      a = a << 1;e = b;
	                    }
	                  }if ((D | 0) == 275) {
	                    if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                      c[d >> 2] = m;c[m + 24 >> 2] = e;c[m + 12 >> 2] = m;c[m + 8 >> 2] = m;break;
	                    }
	                  } else if ((D | 0) == 278) {
	                    b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3794] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                      c[a + 12 >> 2] = m;c[b >> 2] = m;c[m + 8 >> 2] = a;c[m + 12 >> 2] = e;c[m + 24 >> 2] = 0;break;
	                    } else na();
	                  }
	                } else {
	                  K = (c[3793] | 0) + k | 0;c[3793] = K;c[3796] = m;c[m + 4 >> 2] = K | 1;
	                }
	              } while (0);K = n + 8 | 0;i = L;return K | 0;
	            } else a = 15608;while (1) {
	              b = c[a >> 2] | 0;if (b >>> 0 <= l >>> 0 ? (E = b + (c[a + 4 >> 2] | 0) | 0, E >>> 0 > l >>> 0) : 0) break;a = c[a + 8 >> 2] | 0;
	            }f = E + -47 | 0;a = f + 8 | 0;a = f + ((a & 7 | 0) == 0 ? 0 : 0 - a & 7) | 0;f = l + 16 | 0;a = a >>> 0 < f >>> 0 ? l : a;b = a + 8 | 0;d = g + 8 | 0;d = (d & 7 | 0) == 0 ? 0 : 0 - d & 7;K = g + d | 0;d = h + -40 - d | 0;c[3796] = K;c[3793] = d;c[K + 4 >> 2] = d | 1;c[K + d + 4 >> 2] = 40;c[3797] = c[3912];d = a + 4 | 0;c[d >> 2] = 27;c[b >> 2] = c[3902];c[b + 4 >> 2] = c[3903];c[b + 8 >> 2] = c[3904];c[b + 12 >> 2] = c[3905];c[3902] = g;c[3903] = h;c[3905] = 0;c[3904] = b;b = a + 24 | 0;do {
	              b = b + 4 | 0;c[b >> 2] = 7;
	            } while ((b + 4 | 0) >>> 0 < E >>> 0);if ((a | 0) != (l | 0)) {
	              g = a - l | 0;c[d >> 2] = c[d >> 2] & -2;c[l + 4 >> 2] = g | 1;c[a >> 2] = g;b = g >>> 3;if (g >>> 0 < 256) {
	                d = 15200 + (b << 1 << 2) | 0;a = c[3790] | 0;b = 1 << b;if (a & b) {
	                  b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                    G = a;H = b;
	                  }
	                } else {
	                  c[3790] = a | b;G = d;H = d + 8 | 0;
	                }c[H >> 2] = l;c[G + 12 >> 2] = l;c[l + 8 >> 2] = G;c[l + 12 >> 2] = d;break;
	              }b = g >>> 8;if (b) {
	                if (g >>> 0 > 16777215) d = 31;else {
	                  J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;d = (K + 245760 | 0) >>> 16 & 2;d = 14 - (I | J | d) + (K << d >>> 15) | 0;d = g >>> (d + 7 | 0) & 1 | d << 1;
	                }
	              } else d = 0;e = 15464 + (d << 2) | 0;c[l + 28 >> 2] = d;c[l + 20 >> 2] = 0;c[f >> 2] = 0;b = c[3791] | 0;a = 1 << d;if (!(b & a)) {
	                c[3791] = b | a;c[e >> 2] = l;c[l + 24 >> 2] = e;c[l + 12 >> 2] = l;c[l + 8 >> 2] = l;break;
	              }a = g << ((d | 0) == 31 ? 0 : 25 - (d >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	                if ((c[e + 4 >> 2] & -8 | 0) == (g | 0)) {
	                  D = 304;break;
	                }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                  D = 301;break;
	                } else {
	                  a = a << 1;e = b;
	                }
	              }if ((D | 0) == 301) {
	                if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                  c[d >> 2] = l;c[l + 24 >> 2] = e;c[l + 12 >> 2] = l;c[l + 8 >> 2] = l;break;
	                }
	              } else if ((D | 0) == 304) {
	                b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3794] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                  c[a + 12 >> 2] = l;c[b >> 2] = l;c[l + 8 >> 2] = a;c[l + 12 >> 2] = e;c[l + 24 >> 2] = 0;break;
	                } else na();
	              }
	            }
	          } else {
	            K = c[3794] | 0;if ((K | 0) == 0 | g >>> 0 < K >>> 0) c[3794] = g;c[3902] = g;c[3903] = h;c[3905] = 0;c[3799] = c[3908];c[3798] = -1;b = 0;do {
	              K = 15200 + (b << 1 << 2) | 0;c[K + 12 >> 2] = K;c[K + 8 >> 2] = K;b = b + 1 | 0;
	            } while ((b | 0) != 32);K = g + 8 | 0;K = (K & 7 | 0) == 0 ? 0 : 0 - K & 7;J = g + K | 0;K = h + -40 - K | 0;c[3796] = J;c[3793] = K;c[J + 4 >> 2] = K | 1;c[J + K + 4 >> 2] = 40;c[3797] = c[3912];
	          }
	        } while (0);b = c[3793] | 0;if (b >>> 0 > o >>> 0) {
	          I = b - o | 0;c[3793] = I;K = c[3796] | 0;J = K + o | 0;c[3796] = J;c[J + 4 >> 2] = I | 1;c[K + 4 >> 2] = o | 3;K = K + 8 | 0;i = L;return K | 0;
	        }
	      }c[(oc() | 0) >> 2] = 12;K = 0;i = L;return K | 0;
	    }function Bd(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;if (!a) return;d = a + -8 | 0;h = c[3794] | 0;if (d >>> 0 < h >>> 0) na();a = c[a + -4 >> 2] | 0;b = a & 3;if ((b | 0) == 1) na();e = a & -8;n = d + e | 0;do {
	        if (!(a & 1)) {
	          a = c[d >> 2] | 0;if (!b) return;k = d + (0 - a) | 0;j = a + e | 0;if (k >>> 0 < h >>> 0) na();if ((k | 0) == (c[3795] | 0)) {
	            a = n + 4 | 0;b = c[a >> 2] | 0;if ((b & 3 | 0) != 3) {
	              q = k;f = j;break;
	            }c[3792] = j;c[a >> 2] = b & -2;c[k + 4 >> 2] = j | 1;c[k + j >> 2] = j;return;
	          }e = a >>> 3;if (a >>> 0 < 256) {
	            b = c[k + 8 >> 2] | 0;d = c[k + 12 >> 2] | 0;a = 15200 + (e << 1 << 2) | 0;if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < h >>> 0) na();if ((c[b + 12 >> 2] | 0) != (k | 0)) na();
	            }if ((d | 0) == (b | 0)) {
	              c[3790] = c[3790] & ~(1 << e);q = k;f = j;break;
	            }if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < h >>> 0) na();a = d + 8 | 0;if ((c[a >> 2] | 0) == (k | 0)) g = a;else na();
	            } else g = d + 8 | 0;c[b + 12 >> 2] = d;c[g >> 2] = b;q = k;f = j;break;
	          }g = c[k + 24 >> 2] | 0;d = c[k + 12 >> 2] | 0;do {
	            if ((d | 0) == (k | 0)) {
	              d = k + 16 | 0;b = d + 4 | 0;a = c[b >> 2] | 0;if (!a) {
	                a = c[d >> 2] | 0;if (!a) {
	                  i = 0;break;
	                } else b = d;
	              }while (1) {
	                d = a + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                  a = e;b = d;continue;
	                }d = a + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                  a = e;b = d;
	                }
	              }if (b >>> 0 < h >>> 0) na();else {
	                c[b >> 2] = 0;i = a;break;
	              }
	            } else {
	              e = c[k + 8 >> 2] | 0;if (e >>> 0 < h >>> 0) na();a = e + 12 | 0;if ((c[a >> 2] | 0) != (k | 0)) na();b = d + 8 | 0;if ((c[b >> 2] | 0) == (k | 0)) {
	                c[a >> 2] = d;c[b >> 2] = e;i = d;break;
	              } else na();
	            }
	          } while (0);if (g) {
	            a = c[k + 28 >> 2] | 0;b = 15464 + (a << 2) | 0;if ((k | 0) == (c[b >> 2] | 0)) {
	              c[b >> 2] = i;if (!i) {
	                c[3791] = c[3791] & ~(1 << a);q = k;f = j;break;
	              }
	            } else {
	              if (g >>> 0 < (c[3794] | 0) >>> 0) na();a = g + 16 | 0;if ((c[a >> 2] | 0) == (k | 0)) c[a >> 2] = i;else c[g + 20 >> 2] = i;if (!i) {
	                q = k;f = j;break;
	              }
	            }d = c[3794] | 0;if (i >>> 0 < d >>> 0) na();c[i + 24 >> 2] = g;a = k + 16 | 0;b = c[a >> 2] | 0;do {
	              if (b | 0) if (b >>> 0 < d >>> 0) na();else {
	                c[i + 16 >> 2] = b;c[b + 24 >> 2] = i;break;
	              }
	            } while (0);a = c[a + 4 >> 2] | 0;if (a) {
	              if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                c[i + 20 >> 2] = a;c[a + 24 >> 2] = i;q = k;f = j;break;
	              }
	            } else {
	              q = k;f = j;
	            }
	          } else {
	            q = k;f = j;
	          }
	        } else {
	          q = d;f = e;
	        }
	      } while (0);if (q >>> 0 >= n >>> 0) na();a = n + 4 | 0;b = c[a >> 2] | 0;if (!(b & 1)) na();if (!(b & 2)) {
	        if ((n | 0) == (c[3796] | 0)) {
	          p = (c[3793] | 0) + f | 0;c[3793] = p;c[3796] = q;c[q + 4 >> 2] = p | 1;if ((q | 0) != (c[3795] | 0)) return;c[3795] = 0;c[3792] = 0;return;
	        }if ((n | 0) == (c[3795] | 0)) {
	          p = (c[3792] | 0) + f | 0;c[3792] = p;c[3795] = q;c[q + 4 >> 2] = p | 1;c[q + p >> 2] = p;return;
	        }f = (b & -8) + f | 0;e = b >>> 3;do {
	          if (b >>> 0 >= 256) {
	            g = c[n + 24 >> 2] | 0;a = c[n + 12 >> 2] | 0;do {
	              if ((a | 0) == (n | 0)) {
	                d = n + 16 | 0;b = d + 4 | 0;a = c[b >> 2] | 0;if (!a) {
	                  a = c[d >> 2] | 0;if (!a) {
	                    m = 0;break;
	                  } else b = d;
	                }while (1) {
	                  d = a + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                    a = e;b = d;continue;
	                  }d = a + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                    a = e;b = d;
	                  }
	                }if (b >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                  c[b >> 2] = 0;m = a;break;
	                }
	              } else {
	                b = c[n + 8 >> 2] | 0;if (b >>> 0 < (c[3794] | 0) >>> 0) na();d = b + 12 | 0;if ((c[d >> 2] | 0) != (n | 0)) na();e = a + 8 | 0;if ((c[e >> 2] | 0) == (n | 0)) {
	                  c[d >> 2] = a;c[e >> 2] = b;m = a;break;
	                } else na();
	              }
	            } while (0);if (g | 0) {
	              a = c[n + 28 >> 2] | 0;b = 15464 + (a << 2) | 0;if ((n | 0) == (c[b >> 2] | 0)) {
	                c[b >> 2] = m;if (!m) {
	                  c[3791] = c[3791] & ~(1 << a);break;
	                }
	              } else {
	                if (g >>> 0 < (c[3794] | 0) >>> 0) na();a = g + 16 | 0;if ((c[a >> 2] | 0) == (n | 0)) c[a >> 2] = m;else c[g + 20 >> 2] = m;if (!m) break;
	              }d = c[3794] | 0;if (m >>> 0 < d >>> 0) na();c[m + 24 >> 2] = g;a = n + 16 | 0;b = c[a >> 2] | 0;do {
	                if (b | 0) if (b >>> 0 < d >>> 0) na();else {
	                  c[m + 16 >> 2] = b;c[b + 24 >> 2] = m;break;
	                }
	              } while (0);a = c[a + 4 >> 2] | 0;if (a | 0) if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                c[m + 20 >> 2] = a;c[a + 24 >> 2] = m;break;
	              }
	            }
	          } else {
	            b = c[n + 8 >> 2] | 0;d = c[n + 12 >> 2] | 0;a = 15200 + (e << 1 << 2) | 0;if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < (c[3794] | 0) >>> 0) na();if ((c[b + 12 >> 2] | 0) != (n | 0)) na();
	            }if ((d | 0) == (b | 0)) {
	              c[3790] = c[3790] & ~(1 << e);break;
	            }if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < (c[3794] | 0) >>> 0) na();a = d + 8 | 0;if ((c[a >> 2] | 0) == (n | 0)) l = a;else na();
	            } else l = d + 8 | 0;c[b + 12 >> 2] = d;c[l >> 2] = b;
	          }
	        } while (0);c[q + 4 >> 2] = f | 1;c[q + f >> 2] = f;if ((q | 0) == (c[3795] | 0)) {
	          c[3792] = f;return;
	        }
	      } else {
	        c[a >> 2] = b & -2;c[q + 4 >> 2] = f | 1;c[q + f >> 2] = f;
	      }a = f >>> 3;if (f >>> 0 < 256) {
	        d = 15200 + (a << 1 << 2) | 0;b = c[3790] | 0;a = 1 << a;if (b & a) {
	          a = d + 8 | 0;b = c[a >> 2] | 0;if (b >>> 0 < (c[3794] | 0) >>> 0) na();else {
	            o = b;p = a;
	          }
	        } else {
	          c[3790] = b | a;o = d;p = d + 8 | 0;
	        }c[p >> 2] = q;c[o + 12 >> 2] = q;c[q + 8 >> 2] = o;c[q + 12 >> 2] = d;return;
	      }a = f >>> 8;if (a) {
	        if (f >>> 0 > 16777215) a = 31;else {
	          o = (a + 1048320 | 0) >>> 16 & 8;p = a << o;n = (p + 520192 | 0) >>> 16 & 4;p = p << n;a = (p + 245760 | 0) >>> 16 & 2;a = 14 - (n | o | a) + (p << a >>> 15) | 0;a = f >>> (a + 7 | 0) & 1 | a << 1;
	        }
	      } else a = 0;e = 15464 + (a << 2) | 0;c[q + 28 >> 2] = a;c[q + 20 >> 2] = 0;c[q + 16 >> 2] = 0;b = c[3791] | 0;d = 1 << a;do {
	        if (b & d) {
	          b = f << ((a | 0) == 31 ? 0 : 25 - (a >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	            if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	              a = 130;break;
	            }d = e + 16 + (b >>> 31 << 2) | 0;a = c[d >> 2] | 0;if (!a) {
	              a = 127;break;
	            } else {
	              b = b << 1;e = a;
	            }
	          }if ((a | 0) == 127) {
	            if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	              c[d >> 2] = q;c[q + 24 >> 2] = e;c[q + 12 >> 2] = q;c[q + 8 >> 2] = q;break;
	            }
	          } else if ((a | 0) == 130) {
	            a = e + 8 | 0;b = c[a >> 2] | 0;p = c[3794] | 0;if (b >>> 0 >= p >>> 0 & e >>> 0 >= p >>> 0) {
	              c[b + 12 >> 2] = q;c[a >> 2] = q;c[q + 8 >> 2] = b;c[q + 12 >> 2] = e;c[q + 24 >> 2] = 0;break;
	            } else na();
	          }
	        } else {
	          c[3791] = b | d;c[e >> 2] = q;c[q + 24 >> 2] = e;c[q + 12 >> 2] = q;c[q + 8 >> 2] = q;
	        }
	      } while (0);q = (c[3798] | 0) + -1 | 0;c[3798] = q;if (!q) a = 15616;else return;while (1) {
	        a = c[a >> 2] | 0;if (!a) break;else a = a + 8 | 0;
	      }c[3798] = -1;return;
	    }function Cd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;if (!a) {
	        b = Ad(b) | 0;return b | 0;
	      }if (b >>> 0 > 4294967231) {
	        c[(oc() | 0) >> 2] = 12;b = 0;return b | 0;
	      }d = Dd(a + -8 | 0, b >>> 0 < 11 ? 16 : b + 11 & -8) | 0;if (d | 0) {
	        b = d + 8 | 0;return b | 0;
	      }d = Ad(b) | 0;if (!d) {
	        b = 0;return b | 0;
	      }e = c[a + -4 >> 2] | 0;e = (e & -8) - ((e & 3 | 0) == 0 ? 8 : 4) | 0;Sd(d | 0, a | 0, (e >>> 0 < b >>> 0 ? e : b) | 0) | 0;Bd(a);b = d;return b | 0;
	    }function Dd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;n = a + 4 | 0;o = c[n >> 2] | 0;d = o & -8;k = a + d | 0;i = c[3794] | 0;e = o & 3;if (!((e | 0) != 1 & a >>> 0 >= i >>> 0 & a >>> 0 < k >>> 0)) na();f = c[k + 4 >> 2] | 0;if (!(f & 1)) na();if (!e) {
	        if (b >>> 0 < 256) {
	          a = 0;return a | 0;
	        }if (d >>> 0 >= (b + 4 | 0) >>> 0 ? (d - b | 0) >>> 0 <= c[3910] << 1 >>> 0 : 0) return a | 0;a = 0;return a | 0;
	      }if (d >>> 0 >= b >>> 0) {
	        d = d - b | 0;if (d >>> 0 <= 15) return a | 0;m = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[m + 4 >> 2] = d | 3;o = m + d + 4 | 0;c[o >> 2] = c[o >> 2] | 1;Ed(m, d);return a | 0;
	      }if ((k | 0) == (c[3796] | 0)) {
	        d = (c[3793] | 0) + d | 0;if (d >>> 0 <= b >>> 0) {
	          a = 0;return a | 0;
	        }m = d - b | 0;l = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[l + 4 >> 2] = m | 1;c[3796] = l;c[3793] = m;return a | 0;
	      }if ((k | 0) == (c[3795] | 0)) {
	        e = (c[3792] | 0) + d | 0;if (e >>> 0 < b >>> 0) {
	          a = 0;return a | 0;
	        }d = e - b | 0;if (d >>> 0 > 15) {
	          e = a + b | 0;m = e + d | 0;c[n >> 2] = o & 1 | b | 2;c[e + 4 >> 2] = d | 1;c[m >> 2] = d;o = m + 4 | 0;c[o >> 2] = c[o >> 2] & -2;
	        } else {
	          c[n >> 2] = o & 1 | e | 2;e = a + e + 4 | 0;c[e >> 2] = c[e >> 2] | 1;e = 0;d = 0;
	        }c[3792] = d;c[3795] = e;return a | 0;
	      }if (f & 2 | 0) {
	        a = 0;return a | 0;
	      }l = (f & -8) + d | 0;if (l >>> 0 < b >>> 0) {
	        a = 0;return a | 0;
	      }m = l - b | 0;g = f >>> 3;do {
	        if (f >>> 0 >= 256) {
	          h = c[k + 24 >> 2] | 0;f = c[k + 12 >> 2] | 0;do {
	            if ((f | 0) == (k | 0)) {
	              f = k + 16 | 0;e = f + 4 | 0;d = c[e >> 2] | 0;if (!d) {
	                d = c[f >> 2] | 0;if (!d) {
	                  j = 0;break;
	                } else e = f;
	              }while (1) {
	                f = d + 20 | 0;g = c[f >> 2] | 0;if (g | 0) {
	                  d = g;e = f;continue;
	                }f = d + 16 | 0;g = c[f >> 2] | 0;if (!g) break;else {
	                  d = g;e = f;
	                }
	              }if (e >>> 0 < i >>> 0) na();else {
	                c[e >> 2] = 0;j = d;break;
	              }
	            } else {
	              g = c[k + 8 >> 2] | 0;if (g >>> 0 < i >>> 0) na();d = g + 12 | 0;if ((c[d >> 2] | 0) != (k | 0)) na();e = f + 8 | 0;if ((c[e >> 2] | 0) == (k | 0)) {
	                c[d >> 2] = f;c[e >> 2] = g;j = f;break;
	              } else na();
	            }
	          } while (0);if (h | 0) {
	            d = c[k + 28 >> 2] | 0;e = 15464 + (d << 2) | 0;if ((k | 0) == (c[e >> 2] | 0)) {
	              c[e >> 2] = j;if (!j) {
	                c[3791] = c[3791] & ~(1 << d);break;
	              }
	            } else {
	              if (h >>> 0 < (c[3794] | 0) >>> 0) na();d = h + 16 | 0;if ((c[d >> 2] | 0) == (k | 0)) c[d >> 2] = j;else c[h + 20 >> 2] = j;if (!j) break;
	            }f = c[3794] | 0;if (j >>> 0 < f >>> 0) na();c[j + 24 >> 2] = h;d = k + 16 | 0;e = c[d >> 2] | 0;do {
	              if (e | 0) if (e >>> 0 < f >>> 0) na();else {
	                c[j + 16 >> 2] = e;c[e + 24 >> 2] = j;break;
	              }
	            } while (0);d = c[d + 4 >> 2] | 0;if (d | 0) if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	              c[j + 20 >> 2] = d;c[d + 24 >> 2] = j;break;
	            }
	          }
	        } else {
	          e = c[k + 8 >> 2] | 0;f = c[k + 12 >> 2] | 0;d = 15200 + (g << 1 << 2) | 0;if ((e | 0) != (d | 0)) {
	            if (e >>> 0 < i >>> 0) na();if ((c[e + 12 >> 2] | 0) != (k | 0)) na();
	          }if ((f | 0) == (e | 0)) {
	            c[3790] = c[3790] & ~(1 << g);break;
	          }if ((f | 0) != (d | 0)) {
	            if (f >>> 0 < i >>> 0) na();d = f + 8 | 0;if ((c[d >> 2] | 0) == (k | 0)) h = d;else na();
	          } else h = f + 8 | 0;c[e + 12 >> 2] = f;c[h >> 2] = e;
	        }
	      } while (0);if (m >>> 0 < 16) {
	        c[n >> 2] = l | o & 1 | 2;o = a + l + 4 | 0;c[o >> 2] = c[o >> 2] | 1;return a | 0;
	      } else {
	        l = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[l + 4 >> 2] = m | 3;o = l + m + 4 | 0;c[o >> 2] = c[o >> 2] | 1;Ed(l, m);return a | 0;
	      }return 0;
	    }function Ed(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;o = a + b | 0;d = c[a + 4 >> 2] | 0;do {
	        if (!(d & 1)) {
	          g = c[a >> 2] | 0;if (!(d & 3)) return;l = a + (0 - g) | 0;k = g + b | 0;i = c[3794] | 0;if (l >>> 0 < i >>> 0) na();if ((l | 0) == (c[3795] | 0)) {
	            a = o + 4 | 0;d = c[a >> 2] | 0;if ((d & 3 | 0) != 3) {
	              r = l;f = k;break;
	            }c[3792] = k;c[a >> 2] = d & -2;c[l + 4 >> 2] = k | 1;c[l + k >> 2] = k;return;
	          }e = g >>> 3;if (g >>> 0 < 256) {
	            d = c[l + 8 >> 2] | 0;b = c[l + 12 >> 2] | 0;a = 15200 + (e << 1 << 2) | 0;if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < i >>> 0) na();if ((c[d + 12 >> 2] | 0) != (l | 0)) na();
	            }if ((b | 0) == (d | 0)) {
	              c[3790] = c[3790] & ~(1 << e);r = l;f = k;break;
	            }if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < i >>> 0) na();a = b + 8 | 0;if ((c[a >> 2] | 0) == (l | 0)) h = a;else na();
	            } else h = b + 8 | 0;c[d + 12 >> 2] = b;c[h >> 2] = d;r = l;f = k;break;
	          }g = c[l + 24 >> 2] | 0;b = c[l + 12 >> 2] | 0;do {
	            if ((b | 0) == (l | 0)) {
	              b = l + 16 | 0;d = b + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                a = c[b >> 2] | 0;if (!a) {
	                  j = 0;break;
	                } else d = b;
	              }while (1) {
	                b = a + 20 | 0;e = c[b >> 2] | 0;if (e | 0) {
	                  a = e;d = b;continue;
	                }b = a + 16 | 0;e = c[b >> 2] | 0;if (!e) break;else {
	                  a = e;d = b;
	                }
	              }if (d >>> 0 < i >>> 0) na();else {
	                c[d >> 2] = 0;j = a;break;
	              }
	            } else {
	              e = c[l + 8 >> 2] | 0;if (e >>> 0 < i >>> 0) na();a = e + 12 | 0;if ((c[a >> 2] | 0) != (l | 0)) na();d = b + 8 | 0;if ((c[d >> 2] | 0) == (l | 0)) {
	                c[a >> 2] = b;c[d >> 2] = e;j = b;break;
	              } else na();
	            }
	          } while (0);if (g) {
	            a = c[l + 28 >> 2] | 0;d = 15464 + (a << 2) | 0;if ((l | 0) == (c[d >> 2] | 0)) {
	              c[d >> 2] = j;if (!j) {
	                c[3791] = c[3791] & ~(1 << a);r = l;f = k;break;
	              }
	            } else {
	              if (g >>> 0 < (c[3794] | 0) >>> 0) na();a = g + 16 | 0;if ((c[a >> 2] | 0) == (l | 0)) c[a >> 2] = j;else c[g + 20 >> 2] = j;if (!j) {
	                r = l;f = k;break;
	              }
	            }b = c[3794] | 0;if (j >>> 0 < b >>> 0) na();c[j + 24 >> 2] = g;a = l + 16 | 0;d = c[a >> 2] | 0;do {
	              if (d | 0) if (d >>> 0 < b >>> 0) na();else {
	                c[j + 16 >> 2] = d;c[d + 24 >> 2] = j;break;
	              }
	            } while (0);a = c[a + 4 >> 2] | 0;if (a) {
	              if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                c[j + 20 >> 2] = a;c[a + 24 >> 2] = j;r = l;f = k;break;
	              }
	            } else {
	              r = l;f = k;
	            }
	          } else {
	            r = l;f = k;
	          }
	        } else {
	          r = a;f = b;
	        }
	      } while (0);h = c[3794] | 0;if (o >>> 0 < h >>> 0) na();a = o + 4 | 0;d = c[a >> 2] | 0;if (!(d & 2)) {
	        if ((o | 0) == (c[3796] | 0)) {
	          q = (c[3793] | 0) + f | 0;c[3793] = q;c[3796] = r;c[r + 4 >> 2] = q | 1;if ((r | 0) != (c[3795] | 0)) return;c[3795] = 0;c[3792] = 0;return;
	        }if ((o | 0) == (c[3795] | 0)) {
	          q = (c[3792] | 0) + f | 0;c[3792] = q;c[3795] = r;c[r + 4 >> 2] = q | 1;c[r + q >> 2] = q;return;
	        }f = (d & -8) + f | 0;e = d >>> 3;do {
	          if (d >>> 0 >= 256) {
	            g = c[o + 24 >> 2] | 0;b = c[o + 12 >> 2] | 0;do {
	              if ((b | 0) == (o | 0)) {
	                b = o + 16 | 0;d = b + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                  a = c[b >> 2] | 0;if (!a) {
	                    n = 0;break;
	                  } else d = b;
	                }while (1) {
	                  b = a + 20 | 0;e = c[b >> 2] | 0;if (e | 0) {
	                    a = e;d = b;continue;
	                  }b = a + 16 | 0;e = c[b >> 2] | 0;if (!e) break;else {
	                    a = e;d = b;
	                  }
	                }if (d >>> 0 < h >>> 0) na();else {
	                  c[d >> 2] = 0;n = a;break;
	                }
	              } else {
	                e = c[o + 8 >> 2] | 0;if (e >>> 0 < h >>> 0) na();a = e + 12 | 0;if ((c[a >> 2] | 0) != (o | 0)) na();d = b + 8 | 0;if ((c[d >> 2] | 0) == (o | 0)) {
	                  c[a >> 2] = b;c[d >> 2] = e;n = b;break;
	                } else na();
	              }
	            } while (0);if (g | 0) {
	              a = c[o + 28 >> 2] | 0;d = 15464 + (a << 2) | 0;if ((o | 0) == (c[d >> 2] | 0)) {
	                c[d >> 2] = n;if (!n) {
	                  c[3791] = c[3791] & ~(1 << a);break;
	                }
	              } else {
	                if (g >>> 0 < (c[3794] | 0) >>> 0) na();a = g + 16 | 0;if ((c[a >> 2] | 0) == (o | 0)) c[a >> 2] = n;else c[g + 20 >> 2] = n;if (!n) break;
	              }b = c[3794] | 0;if (n >>> 0 < b >>> 0) na();c[n + 24 >> 2] = g;a = o + 16 | 0;d = c[a >> 2] | 0;do {
	                if (d | 0) if (d >>> 0 < b >>> 0) na();else {
	                  c[n + 16 >> 2] = d;c[d + 24 >> 2] = n;break;
	                }
	              } while (0);a = c[a + 4 >> 2] | 0;if (a | 0) if (a >>> 0 < (c[3794] | 0) >>> 0) na();else {
	                c[n + 20 >> 2] = a;c[a + 24 >> 2] = n;break;
	              }
	            }
	          } else {
	            d = c[o + 8 >> 2] | 0;b = c[o + 12 >> 2] | 0;a = 15200 + (e << 1 << 2) | 0;if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < h >>> 0) na();if ((c[d + 12 >> 2] | 0) != (o | 0)) na();
	            }if ((b | 0) == (d | 0)) {
	              c[3790] = c[3790] & ~(1 << e);break;
	            }if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < h >>> 0) na();a = b + 8 | 0;if ((c[a >> 2] | 0) == (o | 0)) m = a;else na();
	            } else m = b + 8 | 0;c[d + 12 >> 2] = b;c[m >> 2] = d;
	          }
	        } while (0);c[r + 4 >> 2] = f | 1;c[r + f >> 2] = f;if ((r | 0) == (c[3795] | 0)) {
	          c[3792] = f;return;
	        }
	      } else {
	        c[a >> 2] = d & -2;c[r + 4 >> 2] = f | 1;c[r + f >> 2] = f;
	      }a = f >>> 3;if (f >>> 0 < 256) {
	        b = 15200 + (a << 1 << 2) | 0;d = c[3790] | 0;a = 1 << a;if (d & a) {
	          a = b + 8 | 0;d = c[a >> 2] | 0;if (d >>> 0 < (c[3794] | 0) >>> 0) na();else {
	            p = d;q = a;
	          }
	        } else {
	          c[3790] = d | a;p = b;q = b + 8 | 0;
	        }c[q >> 2] = r;c[p + 12 >> 2] = r;c[r + 8 >> 2] = p;c[r + 12 >> 2] = b;return;
	      }a = f >>> 8;if (a) {
	        if (f >>> 0 > 16777215) a = 31;else {
	          p = (a + 1048320 | 0) >>> 16 & 8;q = a << p;o = (q + 520192 | 0) >>> 16 & 4;q = q << o;a = (q + 245760 | 0) >>> 16 & 2;a = 14 - (o | p | a) + (q << a >>> 15) | 0;a = f >>> (a + 7 | 0) & 1 | a << 1;
	        }
	      } else a = 0;e = 15464 + (a << 2) | 0;c[r + 28 >> 2] = a;c[r + 20 >> 2] = 0;c[r + 16 >> 2] = 0;d = c[3791] | 0;b = 1 << a;if (!(d & b)) {
	        c[3791] = d | b;c[e >> 2] = r;c[r + 24 >> 2] = e;c[r + 12 >> 2] = r;c[r + 8 >> 2] = r;return;
	      }d = f << ((a | 0) == 31 ? 0 : 25 - (a >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	        if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	          a = 127;break;
	        }b = e + 16 + (d >>> 31 << 2) | 0;a = c[b >> 2] | 0;if (!a) {
	          a = 124;break;
	        } else {
	          d = d << 1;e = a;
	        }
	      }if ((a | 0) == 124) {
	        if (b >>> 0 < (c[3794] | 0) >>> 0) na();c[b >> 2] = r;c[r + 24 >> 2] = e;c[r + 12 >> 2] = r;c[r + 8 >> 2] = r;return;
	      } else if ((a | 0) == 127) {
	        a = e + 8 | 0;d = c[a >> 2] | 0;q = c[3794] | 0;if (!(d >>> 0 >= q >>> 0 & e >>> 0 >= q >>> 0)) na();c[d + 12 >> 2] = r;c[a >> 2] = r;c[r + 8 >> 2] = d;c[r + 12 >> 2] = e;c[r + 24 >> 2] = 0;return;
	      }
	    }function Fd() {}function Gd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;d = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;return (D = d, a - c >>> 0 | 0) | 0;
	    }function Hd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;c = a + c >>> 0;return (D = b + d + (c >>> 0 < a >>> 0 | 0) >>> 0, c | 0) | 0;
	    }function Id(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;f = b + e | 0;if ((e | 0) >= 20) {
	        d = d & 255;h = b & 3;i = d | d << 8 | d << 16 | d << 24;g = f & ~3;if (h) {
	          h = b + 4 - h | 0;while ((b | 0) < (h | 0)) {
	            a[b >> 0] = d;b = b + 1 | 0;
	          }
	        }while ((b | 0) < (g | 0)) {
	          c[b >> 2] = i;b = b + 4 | 0;
	        }
	      }while ((b | 0) < (f | 0)) {
	        a[b >> 0] = d;b = b + 1 | 0;
	      }return b - e | 0;
	    }function Jd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c | 0) < 32) {
	        D = b >>> c;return a >>> c | (b & (1 << c) - 1) << 32 - c;
	      }D = 0;return b >>> c - 32 | 0;
	    }function Kd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c | 0) < 32) {
	        D = b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c;return a << c;
	      }D = a << c - 32;return 0;
	    }function Ld(b) {
	      b = b | 0;var c = 0;c = a[n + (b & 255) >> 0] | 0;if ((c | 0) < 8) return c | 0;c = a[n + (b >> 8 & 255) >> 0] | 0;if ((c | 0) < 8) return c + 8 | 0;c = a[n + (b >> 16 & 255) >> 0] | 0;if ((c | 0) < 8) return c + 16 | 0;return (a[n + (b >>> 24) >> 0] | 0) + 24 | 0;
	    }function Md(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;l = a;j = b;k = j;h = d;n = e;i = n;if (!k) {
	        g = (f | 0) != 0;if (!i) {
	          if (g) {
	            c[f >> 2] = (l >>> 0) % (h >>> 0);c[f + 4 >> 2] = 0;
	          }n = 0;f = (l >>> 0) / (h >>> 0) >>> 0;return (D = n, f) | 0;
	        } else {
	          if (!g) {
	            n = 0;f = 0;return (D = n, f) | 0;
	          }c[f >> 2] = a | 0;c[f + 4 >> 2] = b & 0;n = 0;f = 0;return (D = n, f) | 0;
	        }
	      }g = (i | 0) == 0;do {
	        if (h) {
	          if (!g) {
	            g = (V(i | 0) | 0) - (V(k | 0) | 0) | 0;if (g >>> 0 <= 31) {
	              m = g + 1 | 0;i = 31 - g | 0;b = g - 31 >> 31;h = m;a = l >>> (m >>> 0) & b | k << i;b = k >>> (m >>> 0) & b;g = 0;i = l << i;break;
	            }if (!f) {
	              n = 0;f = 0;return (D = n, f) | 0;
	            }c[f >> 2] = a | 0;c[f + 4 >> 2] = j | b & 0;n = 0;f = 0;return (D = n, f) | 0;
	          }g = h - 1 | 0;if (g & h | 0) {
	            i = (V(h | 0) | 0) + 33 - (V(k | 0) | 0) | 0;p = 64 - i | 0;m = 32 - i | 0;j = m >> 31;o = i - 32 | 0;b = o >> 31;h = i;a = m - 1 >> 31 & k >>> (o >>> 0) | (k << m | l >>> (i >>> 0)) & b;b = b & k >>> (i >>> 0);g = l << p & j;i = (k << p | l >>> (o >>> 0)) & j | l << m & i - 33 >> 31;break;
	          }if (f | 0) {
	            c[f >> 2] = g & l;c[f + 4 >> 2] = 0;
	          }if ((h | 0) == 1) {
	            o = j | b & 0;p = a | 0 | 0;return (D = o, p) | 0;
	          } else {
	            p = Ld(h | 0) | 0;o = k >>> (p >>> 0) | 0;p = k << 32 - p | l >>> (p >>> 0) | 0;return (D = o, p) | 0;
	          }
	        } else {
	          if (g) {
	            if (f | 0) {
	              c[f >> 2] = (k >>> 0) % (h >>> 0);c[f + 4 >> 2] = 0;
	            }o = 0;p = (k >>> 0) / (h >>> 0) >>> 0;return (D = o, p) | 0;
	          }if (!l) {
	            if (f | 0) {
	              c[f >> 2] = 0;c[f + 4 >> 2] = (k >>> 0) % (i >>> 0);
	            }o = 0;p = (k >>> 0) / (i >>> 0) >>> 0;return (D = o, p) | 0;
	          }g = i - 1 | 0;if (!(g & i)) {
	            if (f | 0) {
	              c[f >> 2] = a | 0;c[f + 4 >> 2] = g & k | b & 0;
	            }o = 0;p = k >>> ((Ld(i | 0) | 0) >>> 0);return (D = o, p) | 0;
	          }g = (V(i | 0) | 0) - (V(k | 0) | 0) | 0;if (g >>> 0 <= 30) {
	            b = g + 1 | 0;i = 31 - g | 0;h = b;a = k << i | l >>> (b >>> 0);b = k >>> (b >>> 0);g = 0;i = l << i;break;
	          }if (!f) {
	            o = 0;p = 0;return (D = o, p) | 0;
	          }c[f >> 2] = a | 0;c[f + 4 >> 2] = j | b & 0;o = 0;p = 0;return (D = o, p) | 0;
	        }
	      } while (0);if (!h) {
	        k = i;j = 0;i = 0;
	      } else {
	        m = d | 0 | 0;l = n | e & 0;k = Hd(m | 0, l | 0, -1, -1) | 0;d = D;j = i;i = 0;do {
	          e = j;j = g >>> 31 | j << 1;g = i | g << 1;e = a << 1 | e >>> 31 | 0;n = a >>> 31 | b << 1 | 0;Gd(k | 0, d | 0, e | 0, n | 0) | 0;p = D;o = p >> 31 | ((p | 0) < 0 ? -1 : 0) << 1;i = o & 1;a = Gd(e | 0, n | 0, o & m | 0, (((p | 0) < 0 ? -1 : 0) >> 31 | ((p | 0) < 0 ? -1 : 0) << 1) & l | 0) | 0;b = D;h = h - 1 | 0;
	        } while ((h | 0) != 0);k = j;j = 0;
	      }h = 0;if (f | 0) {
	        c[f >> 2] = a;c[f + 4 >> 2] = b;
	      }o = (g | 0) >>> 31 | (k | h) << 1 | (h << 1 | g >>> 31) & 0 | j;p = (g << 1 | 0 >>> 31) & -2 | i;return (D = o, p) | 0;
	    }function Nd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return Md(a, b, c, d, 0) | 0;
	    }function Od(a, b) {
	      a = a | 0;b = b | 0;var c = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = a & 65535;e = b & 65535;c = S(e, f) | 0;d = a >>> 16;a = (c >>> 16) + (S(e, d) | 0) | 0;e = b >>> 16;b = S(e, f) | 0;return (D = (a >>> 16) + (S(e, d) | 0) + (((a & 65535) + b | 0) >>> 16) | 0, a + b << 16 | c & 65535 | 0) | 0;
	    }function Pd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;var e = 0,
	          f = 0;e = a;f = c;c = Od(e, f) | 0;a = D;return (D = (S(b, f) | 0) + (S(d, e) | 0) + a | a & 0, c | 0 | 0) | 0;
	    }function Qd(a) {
	      a = a | 0;var b = 0,
	          d = 0;d = a + 15 & -16 | 0;b = c[k >> 2] | 0;a = b + d | 0;if ((d | 0) > 0 & (a | 0) < (b | 0) | (a | 0) < 0) {
	        _() | 0;Aa(12);return -1;
	      }c[k >> 2] = a;if ((a | 0) > (Z() | 0) ? (Y() | 0) == 0 : 0) {
	        Aa(12);c[k >> 2] = b;return -1;
	      }return b | 0;
	    }function Rd(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;g = i;i = i + 16 | 0;f = g | 0;Md(a, b, d, e, f) | 0;i = g;return (D = c[f + 4 >> 2] | 0, c[f >> 2] | 0) | 0;
	    }function Sd(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0;if ((e | 0) >= 4096) return sa(b | 0, d | 0, e | 0) | 0;f = b | 0;if ((b & 3) == (d & 3)) {
	        while (b & 3) {
	          if (!e) return f | 0;a[b >> 0] = a[d >> 0] | 0;b = b + 1 | 0;d = d + 1 | 0;e = e - 1 | 0;
	        }while ((e | 0) >= 4) {
	          c[b >> 2] = c[d >> 2];b = b + 4 | 0;d = d + 4 | 0;e = e - 4 | 0;
	        }
	      }while ((e | 0) > 0) {
	        a[b >> 0] = a[d >> 0] | 0;b = b + 1 | 0;d = d + 1 | 0;e = e - 1 | 0;
	      }return f | 0;
	    }function Td() {
	      return 0;
	    }function Ud(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return Ca[a & 7](b | 0, c | 0, d | 0) | 0;
	    }function Vd(a, b) {
	      a = a | 0;b = b | 0;Da[a & 3](b | 0);
	    }function Wd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;Ea[a & 1](b | 0, c | 0);
	    }function Xd(a, b) {
	      a = a | 0;b = b | 0;return Fa[a & 1](b | 0) | 0;
	    }function Yd(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;return Ga[a & 3](b | 0, c | 0, d | 0, e | 0) | 0;
	    }function Zd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;return Ha[a & 7](b | 0, c | 0) | 0;
	    }function _d(a, b, c, d, e, f) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;f = f | 0;return Ia[a & 1](b | 0, c | 0, d | 0, e | 0, f | 0) | 0;
	    }function $d(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;W(0);return 0;
	    }function ae(a) {
	      a = a | 0;W(1);
	    }function be(a, b) {
	      a = a | 0;b = b | 0;W(2);
	    }function ce(a) {
	      a = a | 0;W(3);return 0;
	    }function de(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;W(4);return 0;
	    }function ee(a, b) {
	      a = a | 0;b = b | 0;W(5);return 0;
	    }function fe(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;W(6);return 0;
	    }
	
	    // EMSCRIPTEN_END_FUNCS
	    var Ca = [$d, lc, mc, sc, ob, gc, pc, $d];var Da = [ae, qc, tc, ae];var Ea = [be, hc];var Fa = [ce, kc];var Ga = [de, jb, kb, de];var Ha = [ee, Bb, Cb, Db, pb, lb, mb, ee];var Ia = [fe, qb];return { ___muldsi3: Od, _sbrk: Qd, _i64Subtract: Gd, _free: Bd, _main: Sa, _i64Add: Hd, _pthread_self: Td, _memset: Id, _llvm_cttz_i32: Ld, _malloc: Ad, _memcpy: Sd, ___muldi3: Pd, _bitshift64Shl: Kd, _bitshift64Lshr: Jd, _fflush: $c, ___udivdi3: Nd, ___uremdi3: Rd, ___errno_location: oc, ___udivmoddi4: Md, runPostSets: Fd, stackAlloc: Ja, stackSave: Ka, stackRestore: La, establishStackSpace: Ma, setThrew: Na, setTempRet0: Oa, getTempRet0: Pa, dynCall_iiii: Ud, dynCall_vi: Vd, dynCall_vii: Wd, dynCall_ii: Xd, dynCall_iiiii: Yd, dynCall_iii: Zd, dynCall_iiiiii: _d };
	  }(
	
	  // EMSCRIPTEN_END_ASM
	  Module.asmGlobalArg, Module.asmLibraryArg, buffer);var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];var _malloc = Module["_malloc"] = asm["_malloc"];var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];var _free = Module["_free"] = asm["_free"];var _main = Module["_main"] = asm["_main"];var _i64Add = Module["_i64Add"] = asm["_i64Add"];var runPostSets = Module["runPostSets"] = asm["runPostSets"];var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];var _memset = Module["_memset"] = asm["_memset"];var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];var _sbrk = Module["_sbrk"] = asm["_sbrk"];var _memcpy = Module["_memcpy"] = asm["_memcpy"];var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];var _fflush = Module["_fflush"] = asm["_fflush"];var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];var ___errno_location = Module["___errno_location"] = asm["___errno_location"];var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];Runtime.stackAlloc = asm["stackAlloc"];Runtime.stackSave = asm["stackSave"];Runtime.stackRestore = asm["stackRestore"];Runtime.establishStackSpace = asm["establishStackSpace"];Runtime.setTempRet0 = asm["setTempRet0"];Runtime.getTempRet0 = asm["getTempRet0"];function ExitStatus(status) {
	    this.name = "ExitStatus";this.message = "Program terminated with exit(" + status + ")";this.status = status;
	  }ExitStatus.prototype = new Error();ExitStatus.prototype.constructor = ExitStatus;var initialStackTop;var preloadStartTime = null;var calledMain = false;dependenciesFulfilled = function runCaller() {
	    if (!Module["calledRun"]) run();if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
	  };Module["callMain"] = Module.callMain = function callMain(args) {
	    args = args || [];ensureInitRuntime();var argc = args.length + 1;function pad() {
	      for (var i = 0; i < 4 - 1; i++) {
	        argv.push(0);
	      }
	    }var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];pad();for (var i = 0; i < argc - 1; i = i + 1) {
	      argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));pad();
	    }argv.push(0);argv = allocate(argv, "i32", ALLOC_NORMAL);try {
	      var ret = Module["_main"](argc, argv, 0);exit(ret, true);
	    } catch (e) {
	      if (e instanceof ExitStatus) {
	        return;
	      } else if (e == "SimulateInfiniteLoop") {
	        Module["noExitRuntime"] = true;return;
	      } else {
	        if (e && (typeof e === "undefined" ? "undefined" : _typeof(e)) === "object" && e.stack) Module.printErr("exception thrown: " + [e, e.stack]);throw e;
	      }
	    } finally {
	      calledMain = true;
	    }
	  };function run(args) {
	    args = args || Module["arguments"];if (preloadStartTime === null) preloadStartTime = Date.now();if (runDependencies > 0) {
	      return;
	    }preRun();if (runDependencies > 0) return;if (Module["calledRun"]) return;function doRun() {
	      if (Module["calledRun"]) return;Module["calledRun"] = true;if (ABORT) return;ensureInitRuntime();preMain();if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();if (Module["_main"] && shouldRunNow) Module["callMain"](args);postRun();
	    }if (Module["setStatus"]) {
	      Module["setStatus"]("Running...");setTimeout(function () {
	        setTimeout(function () {
	          Module["setStatus"]("");
	        }, 1);doRun();
	      }, 1);
	    } else {
	      doRun();
	    }
	  }Module["run"] = Module.run = run;function exit(status, implicit) {
	    if (implicit && Module["noExitRuntime"]) {
	      return;
	    }if (Module["noExitRuntime"]) {} else {
	      ABORT = true;EXITSTATUS = status;STACKTOP = initialStackTop;exitRuntime();if (Module["onExit"]) Module["onExit"](status);
	    }if (ENVIRONMENT_IS_NODE) {
	      process["exit"](status);
	    } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
	      quit(status);
	    }throw new ExitStatus(status);
	  }Module["exit"] = Module.exit = exit;var abortDecorators = [];function abort(what) {
	    if (what !== undefined) {
	      Module.print(what);Module.printErr(what);what = JSON.stringify(what);
	    } else {
	      what = "";
	    }ABORT = true;EXITSTATUS = 1;var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output = "abort(" + what + ") at " + stackTrace() + extra;if (abortDecorators) {
	      abortDecorators.forEach(function (decorator) {
	        output = decorator(output, what);
	      });
	    }throw output;
	  }Module["abort"] = Module.abort = abort;if (Module["preInit"]) {
	    if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];while (Module["preInit"].length > 0) {
	      Module["preInit"].pop()();
	    }
	  }var shouldRunNow = true;if (Module["noInitialRun"]) {
	    shouldRunNow = false;
	  }run();return Module["return"];
	};module["exports"] = zip;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(10)(module), __webpack_require__(2).Buffer))

/***/ },
/* 9 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 11 */
/***/ function(module, exports) {



/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// resolves . and .. elements in a path array with directory names there
	// must be no slashes, empty elements, or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = parts.length - 1; i >= 0; i--) {
	    var last = parts[i];
	    if (last === '.') {
	      parts.splice(i, 1);
	    } else if (last === '..') {
	      parts.splice(i, 1);
	      up++;
	    } else if (up) {
	      parts.splice(i, 1);
	      up--;
	    }
	  }
	
	  // if the path is allowed to go above the root, restore leading ..s
	  if (allowAboveRoot) {
	    for (; up--; up) {
	      parts.unshift('..');
	    }
	  }
	
	  return parts;
	}
	
	// Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.
	var splitPathRe =
	    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	var splitPath = function(filename) {
	  return splitPathRe.exec(filename).slice(1);
	};
	
	// path.resolve([from ...], to)
	// posix version
	exports.resolve = function() {
	  var resolvedPath = '',
	      resolvedAbsolute = false;
	
	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = (i >= 0) ? arguments[i] : process.cwd();
	
	    // Skip empty and invalid entries
	    if (typeof path !== 'string') {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }
	
	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path.charAt(0) === '/';
	  }
	
	  // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)
	
	  // Normalize the path
	  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
	    return !!p;
	  }), !resolvedAbsolute).join('/');
	
	  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
	};
	
	// path.normalize(path)
	// posix version
	exports.normalize = function(path) {
	  var isAbsolute = exports.isAbsolute(path),
	      trailingSlash = substr(path, -1) === '/';
	
	  // Normalize the path
	  path = normalizeArray(filter(path.split('/'), function(p) {
	    return !!p;
	  }), !isAbsolute).join('/');
	
	  if (!path && !isAbsolute) {
	    path = '.';
	  }
	  if (path && trailingSlash) {
	    path += '/';
	  }
	
	  return (isAbsolute ? '/' : '') + path;
	};
	
	// posix version
	exports.isAbsolute = function(path) {
	  return path.charAt(0) === '/';
	};
	
	// posix version
	exports.join = function() {
	  var paths = Array.prototype.slice.call(arguments, 0);
	  return exports.normalize(filter(paths, function(p, index) {
	    if (typeof p !== 'string') {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    return p;
	  }).join('/'));
	};
	
	
	// path.relative(from, to)
	// posix version
	exports.relative = function(from, to) {
	  from = exports.resolve(from).substr(1);
	  to = exports.resolve(to).substr(1);
	
	  function trim(arr) {
	    var start = 0;
	    for (; start < arr.length; start++) {
	      if (arr[start] !== '') break;
	    }
	
	    var end = arr.length - 1;
	    for (; end >= 0; end--) {
	      if (arr[end] !== '') break;
	    }
	
	    if (start > end) return [];
	    return arr.slice(start, end - start + 1);
	  }
	
	  var fromParts = trim(from.split('/'));
	  var toParts = trim(to.split('/'));
	
	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }
	
	  var outputParts = [];
	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }
	
	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	
	  return outputParts.join('/');
	};
	
	exports.sep = '/';
	exports.delimiter = ':';
	
	exports.dirname = function(path) {
	  var result = splitPath(path),
	      root = result[0],
	      dir = result[1];
	
	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }
	
	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }
	
	  return root + dir;
	};
	
	
	exports.basename = function(path, ext) {
	  var f = splitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};
	
	
	exports.extname = function(path) {
	  return splitPath(path)[3];
	};
	
	function filter (xs, f) {
	    if (xs.filter) return xs.filter(f);
	    var res = [];
	    for (var i = 0; i < xs.length; i++) {
	        if (f(xs[i], i, xs)) res.push(xs[i]);
	    }
	    return res;
	}
	
	// String.prototype.substr - negative index don't work in IE8
	var substr = 'ab'.substr(-1) === 'b'
	    ? function (str, start, len) { return str.substr(start, len) }
	    : function (str, start, len) {
	        if (start < 0) start = str.length + start;
	        return str.substr(start, len);
	    }
	;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var rng = __webpack_require__(14)
	
	function error () {
	  var m = [].slice.call(arguments).join(' ')
	  throw new Error([
	    m,
	    'we accept pull requests',
	    'http://github.com/dominictarr/crypto-browserify'
	    ].join('\n'))
	}
	
	exports.createHash = __webpack_require__(16)
	
	exports.createHmac = __webpack_require__(28)
	
	exports.randomBytes = function(size, callback) {
	  if (callback && callback.call) {
	    try {
	      callback.call(this, undefined, new Buffer(rng(size)))
	    } catch (err) { callback(err) }
	  } else {
	    return new Buffer(rng(size))
	  }
	}
	
	function each(a, f) {
	  for(var i in a)
	    f(a[i], i)
	}
	
	exports.getHashes = function () {
	  return ['sha1', 'sha256', 'sha512', 'md5', 'rmd160']
	}
	
	var p = __webpack_require__(29)(exports)
	exports.pbkdf2 = p.pbkdf2
	exports.pbkdf2Sync = p.pbkdf2Sync
	
	
	// the least I can do is make error messages for the rest of the node.js/crypto api.
	each(['createCredentials'
	, 'createCipher'
	, 'createCipheriv'
	, 'createDecipher'
	, 'createDecipheriv'
	, 'createSign'
	, 'createVerify'
	, 'createDiffieHellman'
	], function (name) {
	  exports[name] = function () {
	    error('sorry,', name, 'is not implemented yet')
	  }
	})
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {(function() {
	  var g = ('undefined' === typeof window ? global : window) || {}
	  _crypto = (
	    g.crypto || g.msCrypto || __webpack_require__(15)
	  )
	  module.exports = function(size) {
	    // Modern Browsers
	    if(_crypto.getRandomValues) {
	      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
	      /* This will not work in older browsers.
	       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
	       */
	    
	      _crypto.getRandomValues(bytes);
	      return bytes;
	    }
	    else if (_crypto.randomBytes) {
	      return _crypto.randomBytes(size)
	    }
	    else
	      throw new Error(
	        'secure random number generation not supported by this browser\n'+
	        'use chrome, FireFox or Internet Explorer 11'
	      )
	  }
	}())
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2).Buffer))

/***/ },
/* 15 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(17)
	
	var md5 = toConstructor(__webpack_require__(25))
	var rmd160 = toConstructor(__webpack_require__(27))
	
	function toConstructor (fn) {
	  return function () {
	    var buffers = []
	    var m= {
	      update: function (data, enc) {
	        if(!Buffer.isBuffer(data)) data = new Buffer(data, enc)
	        buffers.push(data)
	        return this
	      },
	      digest: function (enc) {
	        var buf = Buffer.concat(buffers)
	        var r = fn(buf)
	        buffers = null
	        return enc ? r.toString(enc) : r
	      }
	    }
	    return m
	  }
	}
	
	module.exports = function (alg) {
	  if('md5' === alg) return new md5()
	  if('rmd160' === alg) return new rmd160()
	  return createHash(alg)
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var exports = module.exports = function (alg) {
	  var Alg = exports[alg]
	  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')
	  return new Alg()
	}
	
	var Buffer = __webpack_require__(2).Buffer
	var Hash   = __webpack_require__(18)(Buffer)
	
	exports.sha1 = __webpack_require__(19)(Buffer, Hash)
	exports.sha256 = __webpack_require__(23)(Buffer, Hash)
	exports.sha512 = __webpack_require__(24)(Buffer, Hash)


/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = function (Buffer) {
	
	  //prototype class for hash functions
	  function Hash (blockSize, finalSize) {
	    this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)
	    this._finalSize = finalSize
	    this._blockSize = blockSize
	    this._len = 0
	    this._s = 0
	  }
	
	  Hash.prototype.init = function () {
	    this._s = 0
	    this._len = 0
	  }
	
	  Hash.prototype.update = function (data, enc) {
	    if ("string" === typeof data) {
	      enc = enc || "utf8"
	      data = new Buffer(data, enc)
	    }
	
	    var l = this._len += data.length
	    var s = this._s = (this._s || 0)
	    var f = 0
	    var buffer = this._block
	
	    while (s < l) {
	      var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
	      var ch = (t - f)
	
	      for (var i = 0; i < ch; i++) {
	        buffer[(s % this._blockSize) + i] = data[i + f]
	      }
	
	      s += ch
	      f += ch
	
	      if ((s % this._blockSize) === 0) {
	        this._update(buffer)
	      }
	    }
	    this._s = s
	
	    return this
	  }
	
	  Hash.prototype.digest = function (enc) {
	    // Suppose the length of the message M, in bits, is l
	    var l = this._len * 8
	
	    // Append the bit 1 to the end of the message
	    this._block[this._len % this._blockSize] = 0x80
	
	    // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
	    this._block.fill(0, this._len % this._blockSize + 1)
	
	    if (l % (this._blockSize * 8) >= this._finalSize * 8) {
	      this._update(this._block)
	      this._block.fill(0)
	    }
	
	    // to this append the block which is equal to the number l written in binary
	    // TODO: handle case where l is > Math.pow(2, 29)
	    this._block.writeInt32BE(l, this._blockSize - 4)
	
	    var hash = this._update(this._block) || this._hash()
	
	    return enc ? hash.toString(enc) : hash
	  }
	
	  Hash.prototype._update = function () {
	    throw new Error('_update must be implemented by subclass')
	  }
	
	  return Hash
	}


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
	 * in FIPS PUB 180-1
	 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for details.
	 */
	
	var inherits = __webpack_require__(20).inherits
	
	module.exports = function (Buffer, Hash) {
	
	  var A = 0|0
	  var B = 4|0
	  var C = 8|0
	  var D = 12|0
	  var E = 16|0
	
	  var W = new (typeof Int32Array === 'undefined' ? Array : Int32Array)(80)
	
	  var POOL = []
	
	  function Sha1 () {
	    if(POOL.length)
	      return POOL.pop().init()
	
	    if(!(this instanceof Sha1)) return new Sha1()
	    this._w = W
	    Hash.call(this, 16*4, 14*4)
	
	    this._h = null
	    this.init()
	  }
	
	  inherits(Sha1, Hash)
	
	  Sha1.prototype.init = function () {
	    this._a = 0x67452301
	    this._b = 0xefcdab89
	    this._c = 0x98badcfe
	    this._d = 0x10325476
	    this._e = 0xc3d2e1f0
	
	    Hash.prototype.init.call(this)
	    return this
	  }
	
	  Sha1.prototype._POOL = POOL
	  Sha1.prototype._update = function (X) {
	
	    var a, b, c, d, e, _a, _b, _c, _d, _e
	
	    a = _a = this._a
	    b = _b = this._b
	    c = _c = this._c
	    d = _d = this._d
	    e = _e = this._e
	
	    var w = this._w
	
	    for(var j = 0; j < 80; j++) {
	      var W = w[j] = j < 16 ? X.readInt32BE(j*4)
	        : rol(w[j - 3] ^ w[j -  8] ^ w[j - 14] ^ w[j - 16], 1)
	
	      var t = add(
	        add(rol(a, 5), sha1_ft(j, b, c, d)),
	        add(add(e, W), sha1_kt(j))
	      )
	
	      e = d
	      d = c
	      c = rol(b, 30)
	      b = a
	      a = t
	    }
	
	    this._a = add(a, _a)
	    this._b = add(b, _b)
	    this._c = add(c, _c)
	    this._d = add(d, _d)
	    this._e = add(e, _e)
	  }
	
	  Sha1.prototype._hash = function () {
	    if(POOL.length < 100) POOL.push(this)
	    var H = new Buffer(20)
	    //console.log(this._a|0, this._b|0, this._c|0, this._d|0, this._e|0)
	    H.writeInt32BE(this._a|0, A)
	    H.writeInt32BE(this._b|0, B)
	    H.writeInt32BE(this._c|0, C)
	    H.writeInt32BE(this._d|0, D)
	    H.writeInt32BE(this._e|0, E)
	    return H
	  }
	
	  /*
	   * Perform the appropriate triplet combination function for the current
	   * iteration
	   */
	  function sha1_ft(t, b, c, d) {
	    if(t < 20) return (b & c) | ((~b) & d);
	    if(t < 40) return b ^ c ^ d;
	    if(t < 60) return (b & c) | (b & d) | (c & d);
	    return b ^ c ^ d;
	  }
	
	  /*
	   * Determine the appropriate additive constant for the current iteration
	   */
	  function sha1_kt(t) {
	    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
	           (t < 60) ? -1894007588 : -899497514;
	  }
	
	  /*
	   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	   * to work around bugs in some JS interpreters.
	   * //dominictarr: this is 10 years old, so maybe this can be dropped?)
	   *
	   */
	  function add(x, y) {
	    return (x + y ) | 0
	  //lets see how this goes on testling.
	  //  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  //  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  //  return (msw << 16) | (lsw & 0xFFFF);
	  }
	
	  /*
	   * Bitwise rotate a 32-bit number to the left.
	   */
	  function rol(num, cnt) {
	    return (num << cnt) | (num >>> (32 - cnt));
	  }
	
	  return Sha1
	}


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(21);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(22);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(9)))

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 22 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
	 * in FIPS 180-2
	 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 *
	 */
	
	var inherits = __webpack_require__(20).inherits
	
	module.exports = function (Buffer, Hash) {
	
	  var K = [
	      0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
	      0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
	      0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
	      0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
	      0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
	      0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
	      0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
	      0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
	      0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
	      0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
	      0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
	      0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
	      0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
	      0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
	      0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
	      0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
	    ]
	
	  var W = new Array(64)
	
	  function Sha256() {
	    this.init()
	
	    this._w = W //new Array(64)
	
	    Hash.call(this, 16*4, 14*4)
	  }
	
	  inherits(Sha256, Hash)
	
	  Sha256.prototype.init = function () {
	
	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0
	
	    this._len = this._s = 0
	
	    return this
	  }
	
	  function S (X, n) {
	    return (X >>> n) | (X << (32 - n));
	  }
	
	  function R (X, n) {
	    return (X >>> n);
	  }
	
	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }
	
	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }
	
	  function Sigma0256 (x) {
	    return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
	  }
	
	  function Sigma1256 (x) {
	    return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
	  }
	
	  function Gamma0256 (x) {
	    return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
	  }
	
	  function Gamma1256 (x) {
	    return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
	  }
	
	  Sha256.prototype._update = function(M) {
	
	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var T1, T2
	
	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0
	
	    for (var j = 0; j < 64; j++) {
	      var w = W[j] = j < 16
	        ? M.readInt32BE(j * 4)
	        : Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16]
	
	      T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w
	
	      T2 = Sigma0256(a) + Maj(a, b, c);
	      h = g; g = f; f = e; e = d + T1; d = c; c = b; b = a; a = T1 + T2;
	    }
	
	    this._a = (a + this._a) | 0
	    this._b = (b + this._b) | 0
	    this._c = (c + this._c) | 0
	    this._d = (d + this._d) | 0
	    this._e = (e + this._e) | 0
	    this._f = (f + this._f) | 0
	    this._g = (g + this._g) | 0
	    this._h = (h + this._h) | 0
	
	  };
	
	  Sha256.prototype._hash = function () {
	    var H = new Buffer(32)
	
	    H.writeInt32BE(this._a,  0)
	    H.writeInt32BE(this._b,  4)
	    H.writeInt32BE(this._c,  8)
	    H.writeInt32BE(this._d, 12)
	    H.writeInt32BE(this._e, 16)
	    H.writeInt32BE(this._f, 20)
	    H.writeInt32BE(this._g, 24)
	    H.writeInt32BE(this._h, 28)
	
	    return H
	  }
	
	  return Sha256
	
	}


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(20).inherits
	
	module.exports = function (Buffer, Hash) {
	  var K = [
	    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
	    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
	    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
	    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
	    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
	    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
	    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
	    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
	    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
	    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
	    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
	    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
	    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
	    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
	    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
	    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
	    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
	    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
	    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
	    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
	    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
	    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
	    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
	    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
	    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
	    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
	    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
	    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
	    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
	    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
	    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
	    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
	    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
	    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
	    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
	    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
	    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
	    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
	    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
	    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
	  ]
	
	  var W = new Array(160)
	
	  function Sha512() {
	    this.init()
	    this._w = W
	
	    Hash.call(this, 128, 112)
	  }
	
	  inherits(Sha512, Hash)
	
	  Sha512.prototype.init = function () {
	
	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0
	
	    this._al = 0xf3bcc908|0
	    this._bl = 0x84caa73b|0
	    this._cl = 0xfe94f82b|0
	    this._dl = 0x5f1d36f1|0
	    this._el = 0xade682d1|0
	    this._fl = 0x2b3e6c1f|0
	    this._gl = 0xfb41bd6b|0
	    this._hl = 0x137e2179|0
	
	    this._len = this._s = 0
	
	    return this
	  }
	
	  function S (X, Xl, n) {
	    return (X >>> n) | (Xl << (32 - n))
	  }
	
	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }
	
	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }
	
	  Sha512.prototype._update = function(M) {
	
	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var al, bl, cl, dl, el, fl, gl, hl
	
	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0
	
	    al = this._al | 0
	    bl = this._bl | 0
	    cl = this._cl | 0
	    dl = this._dl | 0
	    el = this._el | 0
	    fl = this._fl | 0
	    gl = this._gl | 0
	    hl = this._hl | 0
	
	    for (var i = 0; i < 80; i++) {
	      var j = i * 2
	
	      var Wi, Wil
	
	      if (i < 16) {
	        Wi = W[j] = M.readInt32BE(j * 4)
	        Wil = W[j + 1] = M.readInt32BE(j * 4 + 4)
	
	      } else {
	        var x  = W[j - 15*2]
	        var xl = W[j - 15*2 + 1]
	        var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)
	        var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)
	
	        x  = W[j - 2*2]
	        xl = W[j - 2*2 + 1]
	        var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)
	        var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)
	
	        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	        var Wi7  = W[j - 7*2]
	        var Wi7l = W[j - 7*2 + 1]
	
	        var Wi16  = W[j - 16*2]
	        var Wi16l = W[j - 16*2 + 1]
	
	        Wil = gamma0l + Wi7l
	        Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)
	        Wil = Wil + gamma1l
	        Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)
	        Wil = Wil + Wi16l
	        Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)
	
	        W[j] = Wi
	        W[j + 1] = Wil
	      }
	
	      var maj = Maj(a, b, c)
	      var majl = Maj(al, bl, cl)
	
	      var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)
	      var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)
	      var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)
	      var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)
	
	      // t1 = h + sigma1 + ch + K[i] + W[i]
	      var Ki = K[j]
	      var Kil = K[j + 1]
	
	      var ch = Ch(e, f, g)
	      var chl = Ch(el, fl, gl)
	
	      var t1l = hl + sigma1l
	      var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)
	      t1l = t1l + chl
	      t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)
	      t1l = t1l + Kil
	      t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)
	      t1l = t1l + Wil
	      t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)
	
	      // t2 = sigma0 + maj
	      var t2l = sigma0l + majl
	      var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)
	
	      h  = g
	      hl = gl
	      g  = f
	      gl = fl
	      f  = e
	      fl = el
	      el = (dl + t1l) | 0
	      e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	      d  = c
	      dl = cl
	      c  = b
	      cl = bl
	      b  = a
	      bl = al
	      al = (t1l + t2l) | 0
	      a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0
	    }
	
	    this._al = (this._al + al) | 0
	    this._bl = (this._bl + bl) | 0
	    this._cl = (this._cl + cl) | 0
	    this._dl = (this._dl + dl) | 0
	    this._el = (this._el + el) | 0
	    this._fl = (this._fl + fl) | 0
	    this._gl = (this._gl + gl) | 0
	    this._hl = (this._hl + hl) | 0
	
	    this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0
	    this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0
	    this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0
	    this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	    this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0
	    this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0
	    this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0
	    this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0
	  }
	
	  Sha512.prototype._hash = function () {
	    var H = new Buffer(64)
	
	    function writeInt64BE(h, l, offset) {
	      H.writeInt32BE(h, offset)
	      H.writeInt32BE(l, offset + 4)
	    }
	
	    writeInt64BE(this._a, this._al, 0)
	    writeInt64BE(this._b, this._bl, 8)
	    writeInt64BE(this._c, this._cl, 16)
	    writeInt64BE(this._d, this._dl, 24)
	    writeInt64BE(this._e, this._el, 32)
	    writeInt64BE(this._f, this._fl, 40)
	    writeInt64BE(this._g, this._gl, 48)
	    writeInt64BE(this._h, this._hl, 56)
	
	    return H
	  }
	
	  return Sha512
	
	}


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */
	
	var helpers = __webpack_require__(26);
	
	/*
	 * Calculate the MD5 of an array of little-endian words, and a bit length
	 */
	function core_md5(x, len)
	{
	  /* append padding */
	  x[len >> 5] |= 0x80 << ((len) % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;
	
	  var a =  1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d =  271733878;
	
	  for(var i = 0; i < x.length; i += 16)
	  {
	    var olda = a;
	    var oldb = b;
	    var oldc = c;
	    var oldd = d;
	
	    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
	    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
	    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
	    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
	    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
	    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
	    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
	    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
	    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
	    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
	    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
	    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
	    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
	    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
	    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
	    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
	
	    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
	    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
	    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
	    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
	    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
	    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
	    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
	    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
	    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
	    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
	    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
	    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
	    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
	    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
	    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
	    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
	
	    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
	    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
	    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
	    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
	    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
	    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
	    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
	    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
	    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
	    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
	    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
	    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
	    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
	    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
	    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
	    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
	
	    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
	    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
	    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
	    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
	    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
	    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
	    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
	    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
	    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
	    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
	    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
	    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
	    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
	    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
	    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
	    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
	
	    a = safe_add(a, olda);
	    b = safe_add(b, oldb);
	    c = safe_add(c, oldc);
	    d = safe_add(d, oldd);
	  }
	  return Array(a, b, c, d);
	
	}
	
	/*
	 * These functions implement the four basic operations the algorithm uses.
	 */
	function md5_cmn(q, a, b, x, s, t)
	{
	  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
	}
	function md5_ff(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
	}
	function md5_gg(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
	}
	function md5_hh(a, b, c, d, x, s, t)
	{
	  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5_ii(a, b, c, d, x, s, t)
	{
	  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
	}
	
	/*
	 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	 * to work around bugs in some JS interpreters.
	 */
	function safe_add(x, y)
	{
	  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xFFFF);
	}
	
	/*
	 * Bitwise rotate a 32-bit number to the left.
	 */
	function bit_rol(num, cnt)
	{
	  return (num << cnt) | (num >>> (32 - cnt));
	}
	
	module.exports = function md5(buf) {
	  return helpers.hash(buf, core_md5, 16);
	};


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var intSize = 4;
	var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
	var chrsz = 8;
	
	function toArray(buf, bigEndian) {
	  if ((buf.length % intSize) !== 0) {
	    var len = buf.length + (intSize - (buf.length % intSize));
	    buf = Buffer.concat([buf, zeroBuffer], len);
	  }
	
	  var arr = [];
	  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
	  for (var i = 0; i < buf.length; i += intSize) {
	    arr.push(fn.call(buf, i));
	  }
	  return arr;
	}
	
	function toBuffer(arr, size, bigEndian) {
	  var buf = new Buffer(size);
	  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
	  for (var i = 0; i < arr.length; i++) {
	    fn.call(buf, arr[i], i * 4, true);
	  }
	  return buf;
	}
	
	function hash(buf, fn, hashSize, bigEndian) {
	  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
	  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
	  return toBuffer(arr, hashSize, bigEndian);
	}
	
	module.exports = { hash: hash };
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {
	module.exports = ripemd160
	
	
	
	/*
	CryptoJS v3.1.2
	code.google.com/p/crypto-js
	(c) 2009-2013 by Jeff Mott. All rights reserved.
	code.google.com/p/crypto-js/wiki/License
	*/
	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.
	
	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
	
	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
	
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	// Constants table
	var zl = [
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13];
	var zr = [
	    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11];
	var sl = [
	     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ];
	var sr = [
	    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ];
	
	var hl =  [ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];
	var hr =  [ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];
	
	var bytesToWords = function (bytes) {
	  var words = [];
	  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
	    words[b >>> 5] |= bytes[i] << (24 - b % 32);
	  }
	  return words;
	};
	
	var wordsToBytes = function (words) {
	  var bytes = [];
	  for (var b = 0; b < words.length * 32; b += 8) {
	    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
	  }
	  return bytes;
	};
	
	var processBlock = function (H, M, offset) {
	
	  // Swap endian
	  for (var i = 0; i < 16; i++) {
	    var offset_i = offset + i;
	    var M_offset_i = M[offset_i];
	
	    // Swap
	    M[offset_i] = (
	        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	    );
	  }
	
	  // Working variables
	  var al, bl, cl, dl, el;
	  var ar, br, cr, dr, er;
	
	  ar = al = H[0];
	  br = bl = H[1];
	  cr = cl = H[2];
	  dr = dl = H[3];
	  er = el = H[4];
	  // Computation
	  var t;
	  for (var i = 0; i < 80; i += 1) {
	    t = (al +  M[offset+zl[i]])|0;
	    if (i<16){
	        t +=  f1(bl,cl,dl) + hl[0];
	    } else if (i<32) {
	        t +=  f2(bl,cl,dl) + hl[1];
	    } else if (i<48) {
	        t +=  f3(bl,cl,dl) + hl[2];
	    } else if (i<64) {
	        t +=  f4(bl,cl,dl) + hl[3];
	    } else {// if (i<80) {
	        t +=  f5(bl,cl,dl) + hl[4];
	    }
	    t = t|0;
	    t =  rotl(t,sl[i]);
	    t = (t+el)|0;
	    al = el;
	    el = dl;
	    dl = rotl(cl, 10);
	    cl = bl;
	    bl = t;
	
	    t = (ar + M[offset+zr[i]])|0;
	    if (i<16){
	        t +=  f5(br,cr,dr) + hr[0];
	    } else if (i<32) {
	        t +=  f4(br,cr,dr) + hr[1];
	    } else if (i<48) {
	        t +=  f3(br,cr,dr) + hr[2];
	    } else if (i<64) {
	        t +=  f2(br,cr,dr) + hr[3];
	    } else {// if (i<80) {
	        t +=  f1(br,cr,dr) + hr[4];
	    }
	    t = t|0;
	    t =  rotl(t,sr[i]) ;
	    t = (t+er)|0;
	    ar = er;
	    er = dr;
	    dr = rotl(cr, 10);
	    cr = br;
	    br = t;
	  }
	  // Intermediate hash value
	  t    = (H[1] + cl + dr)|0;
	  H[1] = (H[2] + dl + er)|0;
	  H[2] = (H[3] + el + ar)|0;
	  H[3] = (H[4] + al + br)|0;
	  H[4] = (H[0] + bl + cr)|0;
	  H[0] =  t;
	};
	
	function f1(x, y, z) {
	  return ((x) ^ (y) ^ (z));
	}
	
	function f2(x, y, z) {
	  return (((x)&(y)) | ((~x)&(z)));
	}
	
	function f3(x, y, z) {
	  return (((x) | (~(y))) ^ (z));
	}
	
	function f4(x, y, z) {
	  return (((x) & (z)) | ((y)&(~(z))));
	}
	
	function f5(x, y, z) {
	  return ((x) ^ ((y) |(~(z))));
	}
	
	function rotl(x,n) {
	  return (x<<n) | (x>>>(32-n));
	}
	
	function ripemd160(message) {
	  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];
	
	  if (typeof message == 'string')
	    message = new Buffer(message, 'utf8');
	
	  var m = bytesToWords(message);
	
	  var nBitsLeft = message.length * 8;
	  var nBitsTotal = message.length * 8;
	
	  // Add padding
	  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	  );
	
	  for (var i=0 ; i<m.length; i += 16) {
	    processBlock(H, m, i);
	  }
	
	  // Swap endian
	  for (var i = 0; i < 5; i++) {
	      // Shortcut
	    var H_i = H[i];
	
	    // Swap
	    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	  }
	
	  var digestbytes = wordsToBytes(H);
	  return new Buffer(digestbytes);
	}
	
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(16)
	
	var zeroBuffer = new Buffer(128)
	zeroBuffer.fill(0)
	
	module.exports = Hmac
	
	function Hmac (alg, key) {
	  if(!(this instanceof Hmac)) return new Hmac(alg, key)
	  this._opad = opad
	  this._alg = alg
	
	  var blocksize = (alg === 'sha512') ? 128 : 64
	
	  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key
	
	  if(key.length > blocksize) {
	    key = createHash(alg).update(key).digest()
	  } else if(key.length < blocksize) {
	    key = Buffer.concat([key, zeroBuffer], blocksize)
	  }
	
	  var ipad = this._ipad = new Buffer(blocksize)
	  var opad = this._opad = new Buffer(blocksize)
	
	  for(var i = 0; i < blocksize; i++) {
	    ipad[i] = key[i] ^ 0x36
	    opad[i] = key[i] ^ 0x5C
	  }
	
	  this._hash = createHash(alg).update(ipad)
	}
	
	Hmac.prototype.update = function (data, enc) {
	  this._hash.update(data, enc)
	  return this
	}
	
	Hmac.prototype.digest = function (enc) {
	  var h = this._hash.digest()
	  return createHash(this._alg).update(this._opad).update(h).digest(enc)
	}
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var pbkdf2Export = __webpack_require__(30)
	
	module.exports = function (crypto, exports) {
	  exports = exports || {}
	
	  var exported = pbkdf2Export(crypto)
	
	  exports.pbkdf2 = exported.pbkdf2
	  exports.pbkdf2Sync = exported.pbkdf2Sync
	
	  return exports
	}


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function(crypto) {
	  function pbkdf2(password, salt, iterations, keylen, digest, callback) {
	    if ('function' === typeof digest) {
	      callback = digest
	      digest = undefined
	    }
	
	    if ('function' !== typeof callback)
	      throw new Error('No callback provided to pbkdf2')
	
	    setTimeout(function() {
	      var result
	
	      try {
	        result = pbkdf2Sync(password, salt, iterations, keylen, digest)
	      } catch (e) {
	        return callback(e)
	      }
	
	      callback(undefined, result)
	    })
	  }
	
	  function pbkdf2Sync(password, salt, iterations, keylen, digest) {
	    if ('number' !== typeof iterations)
	      throw new TypeError('Iterations not a number')
	
	    if (iterations < 0)
	      throw new TypeError('Bad iterations')
	
	    if ('number' !== typeof keylen)
	      throw new TypeError('Key length not a number')
	
	    if (keylen < 0)
	      throw new TypeError('Bad key length')
	
	    digest = digest || 'sha1'
	
	    if (!Buffer.isBuffer(password)) password = new Buffer(password)
	    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)
	
	    var hLen, l = 1, r, T
	    var DK = new Buffer(keylen)
	    var block1 = new Buffer(salt.length + 4)
	    salt.copy(block1, 0, 0, salt.length)
	
	    for (var i = 1; i <= l; i++) {
	      block1.writeUInt32BE(i, salt.length)
	
	      var U = crypto.createHmac(digest, password).update(block1).digest()
	
	      if (!hLen) {
	        hLen = U.length
	        T = new Buffer(hLen)
	        l = Math.ceil(keylen / hLen)
	        r = keylen - (l - 1) * hLen
	
	        if (keylen > (Math.pow(2, 32) - 1) * hLen)
	          throw new TypeError('keylen exceeds maximum length')
	      }
	
	      U.copy(T, 0, 0, hLen)
	
	      for (var j = 1; j < iterations; j++) {
	        U = crypto.createHmac(digest, password).update(U).digest()
	
	        for (var k = 0; k < hLen; k++) {
	          T[k] ^= U[k]
	        }
	      }
	
	      var destPos = (i - 1) * hLen
	      var len = (i == l ? r : hLen)
	      T.copy(DK, destPos, 0, len)
	    }
	
	    return DK
	  }
	
	  return {
	    pbkdf2: pbkdf2,
	    pbkdf2Sync: pbkdf2Sync
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, module, Buffer) {"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var unzip = function unzip(data, password, cbMessage) {
	  cbMessage = cbMessage ? cbMessage : function () {};var filepath = "file.zip";var output = "/output";var Module = { ENVIRONMENT: "WEB", data: data, password: password, cbMessage: cbMessage, requireValidPassword: false, filepath: filepath, output: output, arguments: [filepath, "-d", output], print: function print(message) {
	      if (message == "error -3 with zipfile in unzReadCurrentFile") {
	        Module["requireValidPassword"] = true;
	      }Module["cbMessage"](message);
	    }, preRun: function preRun() {
	      FS.writeFile(Module["filepath"], Module["data"], { encoding: "binary" });FS.mkdir(Module["output"]);
	    }, postRun: function postRun() {
	      if (Module["requireValidPassword"]) {
	        Module["return"] = null;return;
	      }var fileTree = FS.lookupPath(Module["output"]).node;var folder = walkFileTree(fileTree);function walkFileTree(fileTree) {
	        var folder = {};var contents = fileTree.contents;Object.keys(contents).forEach(function (key) {
	          var mode = contents[key].mode;if (FS.isDir(mode)) {
	            folder[key] = { isDir: true, contents: walkFileTree(contents[key]) };
	          } else {
	            folder[key] = { isDir: false, contents: contents[key].contents };
	          }
	        });return folder;
	      }Module["return"] = folder;
	    }, noExitRuntime: true };if (password) {
	    Module["arguments"].push("-p", password);
	  }var Module;if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};var moduleOverrides = {};for (var key in Module) {
	    if (Module.hasOwnProperty(key)) {
	      moduleOverrides[key] = Module[key];
	    }
	  }var ENVIRONMENT_IS_WEB = false;var ENVIRONMENT_IS_WORKER = false;var ENVIRONMENT_IS_NODE = false;var ENVIRONMENT_IS_SHELL = false;if (Module["ENVIRONMENT"]) {
	    if (Module["ENVIRONMENT"] === "WEB") {
	      ENVIRONMENT_IS_WEB = true;
	    } else if (Module["ENVIRONMENT"] === "WORKER") {
	      ENVIRONMENT_IS_WORKER = true;
	    } else if (Module["ENVIRONMENT"] === "NODE") {
	      ENVIRONMENT_IS_NODE = true;
	    } else if (Module["ENVIRONMENT"] === "SHELL") {
	      ENVIRONMENT_IS_SHELL = true;
	    } else {
	      throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
	    }
	  } else {
	    ENVIRONMENT_IS_WEB = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object";ENVIRONMENT_IS_WORKER = typeof importScripts === "function";ENVIRONMENT_IS_NODE = (typeof process === "undefined" ? "undefined" : _typeof(process)) === "object" && "function" === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
	  }if (ENVIRONMENT_IS_NODE) {
	    if (!Module["print"]) Module["print"] = console.log;if (!Module["printErr"]) Module["printErr"] = console.warn;var nodeFS;var nodePath;Module["read"] = function read(filename, binary) {
	      if (!nodeFS) nodeFS = __webpack_require__(11);if (!nodePath) nodePath = __webpack_require__(12);filename = nodePath["normalize"](filename);var ret = nodeFS["readFileSync"](filename);return binary ? ret : ret.toString();
	    };Module["readBinary"] = function readBinary(filename) {
	      var ret = Module["read"](filename, true);if (!ret.buffer) {
	        ret = new Uint8Array(ret);
	      }assert(ret.buffer);return ret;
	    };Module["load"] = function load(f) {
	      globalEval(read(f));
	    };if (!Module["thisProgram"]) {
	      if (process["argv"].length > 1) {
	        Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
	      } else {
	        Module["thisProgram"] = "unknown-program";
	      }
	    }Module["arguments"] = process["argv"].slice(2);if (true) {
	      module["exports"] = Module;
	    }process["on"]("uncaughtException", function (ex) {
	      if (!(ex instanceof ExitStatus)) {
	        throw ex;
	      }
	    });Module["inspect"] = function () {
	      return "[Emscripten Module object]";
	    };
	  } else if (ENVIRONMENT_IS_SHELL) {
	    if (!Module["print"]) Module["print"] = print;if (typeof printErr != "undefined") Module["printErr"] = printErr;if (typeof read != "undefined") {
	      Module["read"] = read;
	    } else {
	      Module["read"] = function read() {
	        throw "no read() available";
	      };
	    }Module["readBinary"] = function readBinary(f) {
	      if (typeof readbuffer === "function") {
	        return new Uint8Array(readbuffer(f));
	      }var data = read(f, "binary");assert((typeof data === "undefined" ? "undefined" : _typeof(data)) === "object");return data;
	    };if (typeof scriptArgs != "undefined") {
	      Module["arguments"] = scriptArgs;
	    } else if (typeof arguments != "undefined") {
	      Module["arguments"] = arguments;
	    }
	  } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
	    Module["read"] = function read(url) {
	      var xhr = new XMLHttpRequest();xhr.open("GET", url, false);xhr.send(null);return xhr.responseText;
	    };Module["readAsync"] = function readAsync(url, onload, onerror) {
	      var xhr = new XMLHttpRequest();xhr.open("GET", url, true);xhr.responseType = "arraybuffer";xhr.onload = function xhr_onload() {
	        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
	          onload(xhr.response);
	        } else {
	          onerror();
	        }
	      };xhr.onerror = onerror;xhr.send(null);
	    };if (typeof arguments != "undefined") {
	      Module["arguments"] = arguments;
	    }if (typeof console !== "undefined") {
	      if (!Module["print"]) Module["print"] = function print(x) {
	        console.log(x);
	      };if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
	        console.warn(x);
	      };
	    } else {
	      var TRY_USE_DUMP = false;if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function (x) {
	        dump(x);
	      } : function (x) {};
	    }if (ENVIRONMENT_IS_WORKER) {
	      Module["load"] = importScripts;
	    }if (typeof Module["setWindowTitle"] === "undefined") {
	      Module["setWindowTitle"] = function (title) {
	        document.title = title;
	      };
	    }
	  } else {
	    throw "Unknown runtime environment. Where are we?";
	  }function globalEval(x) {
	    eval.call(null, x);
	  }if (!Module["load"] && Module["read"]) {
	    Module["load"] = function load(f) {
	      globalEval(Module["read"](f));
	    };
	  }if (!Module["print"]) {
	    Module["print"] = function () {};
	  }if (!Module["printErr"]) {
	    Module["printErr"] = Module["print"];
	  }if (!Module["arguments"]) {
	    Module["arguments"] = [];
	  }if (!Module["thisProgram"]) {
	    Module["thisProgram"] = "./this.program";
	  }Module.print = Module["print"];Module.printErr = Module["printErr"];Module["preRun"] = [];Module["postRun"] = [];for (var key in moduleOverrides) {
	    if (moduleOverrides.hasOwnProperty(key)) {
	      Module[key] = moduleOverrides[key];
	    }
	  }moduleOverrides = undefined;var Runtime = { setTempRet0: function setTempRet0(value) {
	      tempRet0 = value;
	    }, getTempRet0: function getTempRet0() {
	      return tempRet0;
	    }, stackSave: function stackSave() {
	      return STACKTOP;
	    }, stackRestore: function stackRestore(stackTop) {
	      STACKTOP = stackTop;
	    }, getNativeTypeSize: function getNativeTypeSize(type) {
	      switch (type) {case "i1":case "i8":
	          return 1;case "i16":
	          return 2;case "i32":
	          return 4;case "i64":
	          return 8;case "float":
	          return 4;case "double":
	          return 8;default:
	          {
	            if (type[type.length - 1] === "*") {
	              return Runtime.QUANTUM_SIZE;
	            } else if (type[0] === "i") {
	              var bits = parseInt(type.substr(1));assert(bits % 8 === 0);return bits / 8;
	            } else {
	              return 0;
	            }
	          }}
	    }, getNativeFieldSize: function getNativeFieldSize(type) {
	      return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
	    }, STACK_ALIGN: 16, prepVararg: function prepVararg(ptr, type) {
	      if (type === "double" || type === "i64") {
	        if (ptr & 7) {
	          assert((ptr & 7) === 4);ptr += 4;
	        }
	      } else {
	        assert((ptr & 3) === 0);
	      }return ptr;
	    }, getAlignSize: function getAlignSize(type, size, vararg) {
	      if (!vararg && (type == "i64" || type == "double")) return 8;if (!type) return Math.min(size, 8);return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
	    }, dynCall: function dynCall(sig, ptr, args) {
	      if (args && args.length) {
	        return Module["dynCall_" + sig].apply(null, [ptr].concat(args));
	      } else {
	        return Module["dynCall_" + sig].call(null, ptr);
	      }
	    }, functionPointers: [], addFunction: function addFunction(func) {
	      for (var i = 0; i < Runtime.functionPointers.length; i++) {
	        if (!Runtime.functionPointers[i]) {
	          Runtime.functionPointers[i] = func;return 2 * (1 + i);
	        }
	      }throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
	    }, removeFunction: function removeFunction(index) {
	      Runtime.functionPointers[(index - 2) / 2] = null;
	    }, warnOnce: function warnOnce(text) {
	      if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};if (!Runtime.warnOnce.shown[text]) {
	        Runtime.warnOnce.shown[text] = 1;Module.printErr(text);
	      }
	    }, funcWrappers: {}, getFuncWrapper: function getFuncWrapper(func, sig) {
	      assert(sig);if (!Runtime.funcWrappers[sig]) {
	        Runtime.funcWrappers[sig] = {};
	      }var sigCache = Runtime.funcWrappers[sig];if (!sigCache[func]) {
	        if (sig.length === 1) {
	          sigCache[func] = function dynCall_wrapper() {
	            return Runtime.dynCall(sig, func);
	          };
	        } else if (sig.length === 2) {
	          sigCache[func] = function dynCall_wrapper(arg) {
	            return Runtime.dynCall(sig, func, [arg]);
	          };
	        } else {
	          sigCache[func] = function dynCall_wrapper() {
	            return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
	          };
	        }
	      }return sigCache[func];
	    }, getCompilerSetting: function getCompilerSetting(name) {
	      throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
	    }, stackAlloc: function stackAlloc(size) {
	      var ret = STACKTOP;STACKTOP = STACKTOP + size | 0;STACKTOP = STACKTOP + 15 & -16;return ret;
	    }, staticAlloc: function staticAlloc(size) {
	      var ret = STATICTOP;STATICTOP = STATICTOP + size | 0;STATICTOP = STATICTOP + 15 & -16;return ret;
	    }, dynamicAlloc: function dynamicAlloc(size) {
	      var ret = HEAP32[DYNAMICTOP_PTR >> 2];var end = (ret + size + 15 | 0) & -16;HEAP32[DYNAMICTOP_PTR >> 2] = end;if (end >= TOTAL_MEMORY) {
	        var success = enlargeMemory();if (!success) {
	          HEAP32[DYNAMICTOP_PTR >> 2] = ret;return 0;
	        }
	      }return ret;
	    }, alignMemory: function alignMemory(size, quantum) {
	      var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);return ret;
	    }, makeBigInt: function makeBigInt(low, high, unsigned) {
	      var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;return ret;
	    }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };Module["Runtime"] = Runtime;var ABORT = 0;var EXITSTATUS = 0;function assert(condition, text) {
	    if (!condition) {
	      abort("Assertion failed: " + text);
	    }
	  }function getCFunc(ident) {
	    var func = Module["_" + ident];if (!func) {
	      try {
	        func = eval("_" + ident);
	      } catch (e) {}
	    }assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");return func;
	  }var cwrap, ccall;(function () {
	    var JSfuncs = { "stackSave": function stackSave() {
	        Runtime.stackSave();
	      }, "stackRestore": function stackRestore() {
	        Runtime.stackRestore();
	      }, "arrayToC": function arrayToC(arr) {
	        var ret = Runtime.stackAlloc(arr.length);writeArrayToMemory(arr, ret);return ret;
	      }, "stringToC": function stringToC(str) {
	        var ret = 0;if (str !== null && str !== undefined && str !== 0) {
	          var len = (str.length << 2) + 1;ret = Runtime.stackAlloc(len);stringToUTF8(str, ret, len);
	        }return ret;
	      } };var toC = { "string": JSfuncs["stringToC"], "array": JSfuncs["arrayToC"] };ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
	      var func = getCFunc(ident);var cArgs = [];var stack = 0;if (args) {
	        for (var i = 0; i < args.length; i++) {
	          var converter = toC[argTypes[i]];if (converter) {
	            if (stack === 0) stack = Runtime.stackSave();cArgs[i] = converter(args[i]);
	          } else {
	            cArgs[i] = args[i];
	          }
	        }
	      }var ret = func.apply(null, cArgs);if (returnType === "string") ret = Pointer_stringify(ret);if (stack !== 0) {
	        if (opts && opts.async) {
	          EmterpreterAsync.asyncFinalizers.push(function () {
	            Runtime.stackRestore(stack);
	          });return;
	        }Runtime.stackRestore(stack);
	      }return ret;
	    };var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc) {
	      var parsed = jsfunc.toString().match(sourceRegex).slice(1);return { arguments: parsed[0], body: parsed[1], returnValue: parsed[2] };
	    }var JSsource = null;function ensureJSsource() {
	      if (!JSsource) {
	        JSsource = {};for (var fun in JSfuncs) {
	          if (JSfuncs.hasOwnProperty(fun)) {
	            JSsource[fun] = parseJSFunc(JSfuncs[fun]);
	          }
	        }
	      }
	    }cwrap = function cwrap(ident, returnType, argTypes) {
	      argTypes = argTypes || [];var cfunc = getCFunc(ident);var numericArgs = argTypes.every(function (type) {
	        return type === "number";
	      });var numericRet = returnType !== "string";if (numericRet && numericArgs) {
	        return cfunc;
	      }var argNames = argTypes.map(function (x, i) {
	        return "$" + i;
	      });var funcstr = "(function(" + argNames.join(",") + ") {";var nargs = argTypes.length;if (!numericArgs) {
	        ensureJSsource();funcstr += "var stack = " + JSsource["stackSave"].body + ";";for (var i = 0; i < nargs; i++) {
	          var arg = argNames[i],
	              type = argTypes[i];if (type === "number") continue;var convertCode = JSsource[type + "ToC"];funcstr += "var " + convertCode.arguments + " = " + arg + ";";funcstr += convertCode.body + ";";funcstr += arg + "=(" + convertCode.returnValue + ");";
	        }
	      }var cfuncname = parseJSFunc(function () {
	        return cfunc;
	      }).returnValue;funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";if (!numericRet) {
	        var strgfy = parseJSFunc(function () {
	          return Pointer_stringify;
	        }).returnValue;funcstr += "ret = " + strgfy + "(ret);";
	      }if (!numericArgs) {
	        ensureJSsource();funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
	      }funcstr += "return ret})";return eval(funcstr);
	    };
	  })();Module["ccall"] = ccall;Module["cwrap"] = cwrap;function setValue(ptr, value, type, noSafe) {
	    type = type || "i8";if (type.charAt(type.length - 1) === "*") type = "i32";switch (type) {case "i1":
	        HEAP8[ptr >> 0] = value;break;case "i8":
	        HEAP8[ptr >> 0] = value;break;case "i16":
	        HEAP16[ptr >> 1] = value;break;case "i32":
	        HEAP32[ptr >> 2] = value;break;case "i64":
	        tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];break;case "float":
	        HEAPF32[ptr >> 2] = value;break;case "double":
	        HEAPF64[ptr >> 3] = value;break;default:
	        abort("invalid type for setValue: " + type);}
	  }Module["setValue"] = setValue;function getValue(ptr, type, noSafe) {
	    type = type || "i8";if (type.charAt(type.length - 1) === "*") type = "i32";switch (type) {case "i1":
	        return HEAP8[ptr >> 0];case "i8":
	        return HEAP8[ptr >> 0];case "i16":
	        return HEAP16[ptr >> 1];case "i32":
	        return HEAP32[ptr >> 2];case "i64":
	        return HEAP32[ptr >> 2];case "float":
	        return HEAPF32[ptr >> 2];case "double":
	        return HEAPF64[ptr >> 3];default:
	        abort("invalid type for setValue: " + type);}return null;
	  }Module["getValue"] = getValue;var ALLOC_NORMAL = 0;var ALLOC_STACK = 1;var ALLOC_STATIC = 2;var ALLOC_DYNAMIC = 3;var ALLOC_NONE = 4;Module["ALLOC_NORMAL"] = ALLOC_NORMAL;Module["ALLOC_STACK"] = ALLOC_STACK;Module["ALLOC_STATIC"] = ALLOC_STATIC;Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;Module["ALLOC_NONE"] = ALLOC_NONE;function allocate(slab, types, allocator, ptr) {
	    var zeroinit, size;if (typeof slab === "number") {
	      zeroinit = true;size = slab;
	    } else {
	      zeroinit = false;size = slab.length;
	    }var singleType = typeof types === "string" ? types : null;var ret;if (allocator == ALLOC_NONE) {
	      ret = ptr;
	    } else {
	      ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
	    }if (zeroinit) {
	      var ptr = ret,
	          stop;assert((ret & 3) == 0);stop = ret + (size & ~3);for (; ptr < stop; ptr += 4) {
	        HEAP32[ptr >> 2] = 0;
	      }stop = ret + size;while (ptr < stop) {
	        HEAP8[ptr++ >> 0] = 0;
	      }return ret;
	    }if (singleType === "i8") {
	      if (slab.subarray || slab.slice) {
	        HEAPU8.set(slab, ret);
	      } else {
	        HEAPU8.set(new Uint8Array(slab), ret);
	      }return ret;
	    }var i = 0,
	        type,
	        typeSize,
	        previousType;while (i < size) {
	      var curr = slab[i];if (typeof curr === "function") {
	        curr = Runtime.getFunctionIndex(curr);
	      }type = singleType || types[i];if (type === 0) {
	        i++;continue;
	      }if (type == "i64") type = "i32";setValue(ret + i, curr, type);if (previousType !== type) {
	        typeSize = Runtime.getNativeTypeSize(type);previousType = type;
	      }i += typeSize;
	    }return ret;
	  }Module["allocate"] = allocate;function getMemory(size) {
	    if (!staticSealed) return Runtime.staticAlloc(size);if (!runtimeInitialized) return Runtime.dynamicAlloc(size);return _malloc(size);
	  }Module["getMemory"] = getMemory;function Pointer_stringify(ptr, length) {
	    if (length === 0 || !ptr) return "";var hasUtf = 0;var t;var i = 0;while (1) {
	      t = HEAPU8[ptr + i >> 0];hasUtf |= t;if (t == 0 && !length) break;i++;if (length && i == length) break;
	    }if (!length) length = i;var ret = "";if (hasUtf < 128) {
	      var MAX_CHUNK = 1024;var curr;while (length > 0) {
	        curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));ret = ret ? ret + curr : curr;ptr += MAX_CHUNK;length -= MAX_CHUNK;
	      }return ret;
	    }return Module["UTF8ToString"](ptr);
	  }Module["Pointer_stringify"] = Pointer_stringify;function AsciiToString(ptr) {
	    var str = "";while (1) {
	      var ch = HEAP8[ptr++ >> 0];if (!ch) return str;str += String.fromCharCode(ch);
	    }
	  }Module["AsciiToString"] = AsciiToString;function stringToAscii(str, outPtr) {
	    return writeAsciiToMemory(str, outPtr, false);
	  }Module["stringToAscii"] = stringToAscii;var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;function UTF8ArrayToString(u8Array, idx) {
	    var endPtr = idx;while (u8Array[endPtr]) {
	      ++endPtr;
	    }if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
	      return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
	    } else {
	      var u0, u1, u2, u3, u4, u5;var str = "";while (1) {
	        u0 = u8Array[idx++];if (!u0) return str;if (!(u0 & 128)) {
	          str += String.fromCharCode(u0);continue;
	        }u1 = u8Array[idx++] & 63;if ((u0 & 224) == 192) {
	          str += String.fromCharCode((u0 & 31) << 6 | u1);continue;
	        }u2 = u8Array[idx++] & 63;if ((u0 & 240) == 224) {
	          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
	        } else {
	          u3 = u8Array[idx++] & 63;if ((u0 & 248) == 240) {
	            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
	          } else {
	            u4 = u8Array[idx++] & 63;if ((u0 & 252) == 248) {
	              u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
	            } else {
	              u5 = u8Array[idx++] & 63;u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
	            }
	          }
	        }if (u0 < 65536) {
	          str += String.fromCharCode(u0);
	        } else {
	          var ch = u0 - 65536;str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
	        }
	      }
	    }
	  }Module["UTF8ArrayToString"] = UTF8ArrayToString;function UTF8ToString(ptr) {
	    return UTF8ArrayToString(HEAPU8, ptr);
	  }Module["UTF8ToString"] = UTF8ToString;function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
	    if (!(maxBytesToWrite > 0)) return 0;var startIdx = outIdx;var endIdx = outIdx + maxBytesToWrite - 1;for (var i = 0; i < str.length; ++i) {
	      var u = str.charCodeAt(i);if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;if (u <= 127) {
	        if (outIdx >= endIdx) break;outU8Array[outIdx++] = u;
	      } else if (u <= 2047) {
	        if (outIdx + 1 >= endIdx) break;outU8Array[outIdx++] = 192 | u >> 6;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 65535) {
	        if (outIdx + 2 >= endIdx) break;outU8Array[outIdx++] = 224 | u >> 12;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 2097151) {
	        if (outIdx + 3 >= endIdx) break;outU8Array[outIdx++] = 240 | u >> 18;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else if (u <= 67108863) {
	        if (outIdx + 4 >= endIdx) break;outU8Array[outIdx++] = 248 | u >> 24;outU8Array[outIdx++] = 128 | u >> 18 & 63;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      } else {
	        if (outIdx + 5 >= endIdx) break;outU8Array[outIdx++] = 252 | u >> 30;outU8Array[outIdx++] = 128 | u >> 24 & 63;outU8Array[outIdx++] = 128 | u >> 18 & 63;outU8Array[outIdx++] = 128 | u >> 12 & 63;outU8Array[outIdx++] = 128 | u >> 6 & 63;outU8Array[outIdx++] = 128 | u & 63;
	      }
	    }outU8Array[outIdx] = 0;return outIdx - startIdx;
	  }Module["stringToUTF8Array"] = stringToUTF8Array;function stringToUTF8(str, outPtr, maxBytesToWrite) {
	    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
	  }Module["stringToUTF8"] = stringToUTF8;function lengthBytesUTF8(str) {
	    var len = 0;for (var i = 0; i < str.length; ++i) {
	      var u = str.charCodeAt(i);if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;if (u <= 127) {
	        ++len;
	      } else if (u <= 2047) {
	        len += 2;
	      } else if (u <= 65535) {
	        len += 3;
	      } else if (u <= 2097151) {
	        len += 4;
	      } else if (u <= 67108863) {
	        len += 5;
	      } else {
	        len += 6;
	      }
	    }return len;
	  }Module["lengthBytesUTF8"] = lengthBytesUTF8;var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;function demangle(func) {
	    var hasLibcxxabi = !!Module["___cxa_demangle"];if (hasLibcxxabi) {
	      try {
	        var s = func.substr(1);var len = lengthBytesUTF8(s) + 1;var buf = _malloc(len);stringToUTF8(s, buf, len);var status = _malloc(4);var ret = Module["___cxa_demangle"](buf, 0, 0, status);if (getValue(status, "i32") === 0 && ret) {
	          return Pointer_stringify(ret);
	        }
	      } catch (e) {} finally {
	        if (buf) _free(buf);if (status) _free(status);if (ret) _free(ret);
	      }return func;
	    }Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func;
	  }function demangleAll(text) {
	    return text.replace(/__Z[\w\d_]+/g, function (x) {
	      var y = demangle(x);return x === y ? x : x + " [" + y + "]";
	    });
	  }function jsStackTrace() {
	    var err = new Error();if (!err.stack) {
	      try {
	        throw new Error(0);
	      } catch (e) {
	        err = e;
	      }if (!err.stack) {
	        return "(no stack trace available)";
	      }
	    }return err.stack.toString();
	  }function stackTrace() {
	    var js = jsStackTrace();if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();return demangleAll(js);
	  }Module["stackTrace"] = stackTrace;var HEAP;var buffer;var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;function updateGlobalBufferViews() {
	    Module["HEAP8"] = HEAP8 = new Int8Array(buffer);Module["HEAP16"] = HEAP16 = new Int16Array(buffer);Module["HEAP32"] = HEAP32 = new Int32Array(buffer);Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
	  }var STATIC_BASE, STATICTOP, staticSealed;var STACK_BASE, STACKTOP, STACK_MAX;var DYNAMIC_BASE, DYNAMICTOP_PTR;STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;staticSealed = false;function abortOnCannotGrowMemory() {
	    abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
	  }function enlargeMemory() {
	    abortOnCannotGrowMemory();
	  }var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;var WASM_PAGE_SIZE = 64 * 1024;var totalMemory = WASM_PAGE_SIZE;while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
	    if (totalMemory < 16 * 1024 * 1024) {
	      totalMemory *= 2;
	    } else {
	      totalMemory += 16 * 1024 * 1024;
	    }
	  }if (totalMemory !== TOTAL_MEMORY) {
	    TOTAL_MEMORY = totalMemory;
	  }if (Module["buffer"]) {
	    buffer = Module["buffer"];
	  } else {
	    {
	      buffer = new ArrayBuffer(TOTAL_MEMORY);
	    }
	  }updateGlobalBufferViews();function getTotalMemory() {
	    return TOTAL_MEMORY;
	  }HEAP32[0] = 1668509029;HEAP16[1] = 25459;if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";Module["HEAP"] = HEAP;Module["buffer"] = buffer;Module["HEAP8"] = HEAP8;Module["HEAP16"] = HEAP16;Module["HEAP32"] = HEAP32;Module["HEAPU8"] = HEAPU8;Module["HEAPU16"] = HEAPU16;Module["HEAPU32"] = HEAPU32;Module["HEAPF32"] = HEAPF32;Module["HEAPF64"] = HEAPF64;function callRuntimeCallbacks(callbacks) {
	    while (callbacks.length > 0) {
	      var callback = callbacks.shift();if (typeof callback == "function") {
	        callback();continue;
	      }var func = callback.func;if (typeof func === "number") {
	        if (callback.arg === undefined) {
	          Runtime.dynCall("v", func);
	        } else {
	          Runtime.dynCall("vi", func, [callback.arg]);
	        }
	      } else {
	        func(callback.arg === undefined ? null : callback.arg);
	      }
	    }
	  }var __ATPRERUN__ = [];var __ATINIT__ = [];var __ATMAIN__ = [];var __ATEXIT__ = [];var __ATPOSTRUN__ = [];var runtimeInitialized = false;var runtimeExited = false;function preRun() {
	    if (Module["preRun"]) {
	      if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];while (Module["preRun"].length) {
	        addOnPreRun(Module["preRun"].shift());
	      }
	    }callRuntimeCallbacks(__ATPRERUN__);
	  }function ensureInitRuntime() {
	    if (runtimeInitialized) return;runtimeInitialized = true;callRuntimeCallbacks(__ATINIT__);
	  }function preMain() {
	    callRuntimeCallbacks(__ATMAIN__);
	  }function exitRuntime() {
	    callRuntimeCallbacks(__ATEXIT__);runtimeExited = true;
	  }function postRun() {
	    if (Module["postRun"]) {
	      if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];while (Module["postRun"].length) {
	        addOnPostRun(Module["postRun"].shift());
	      }
	    }callRuntimeCallbacks(__ATPOSTRUN__);
	  }function addOnPreRun(cb) {
	    __ATPRERUN__.unshift(cb);
	  }Module["addOnPreRun"] = addOnPreRun;function addOnInit(cb) {
	    __ATINIT__.unshift(cb);
	  }Module["addOnInit"] = addOnInit;function addOnPreMain(cb) {
	    __ATMAIN__.unshift(cb);
	  }Module["addOnPreMain"] = addOnPreMain;function addOnExit(cb) {
	    __ATEXIT__.unshift(cb);
	  }Module["addOnExit"] = addOnExit;function addOnPostRun(cb) {
	    __ATPOSTRUN__.unshift(cb);
	  }Module["addOnPostRun"] = addOnPostRun;function intArrayFromString(stringy, dontAddNull, length) {
	    var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;var u8array = new Array(len);var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);if (dontAddNull) u8array.length = numBytesWritten;return u8array;
	  }Module["intArrayFromString"] = intArrayFromString;function intArrayToString(array) {
	    var ret = [];for (var i = 0; i < array.length; i++) {
	      var chr = array[i];if (chr > 255) {
	        chr &= 255;
	      }ret.push(String.fromCharCode(chr));
	    }return ret.join("");
	  }Module["intArrayToString"] = intArrayToString;function writeStringToMemory(string, buffer, dontAddNull) {
	    Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var lastChar, end;if (dontAddNull) {
	      end = buffer + lengthBytesUTF8(string);lastChar = HEAP8[end];
	    }stringToUTF8(string, buffer, Infinity);if (dontAddNull) HEAP8[end] = lastChar;
	  }Module["writeStringToMemory"] = writeStringToMemory;function writeArrayToMemory(array, buffer) {
	    HEAP8.set(array, buffer);
	  }Module["writeArrayToMemory"] = writeArrayToMemory;function writeAsciiToMemory(str, buffer, dontAddNull) {
	    for (var i = 0; i < str.length; ++i) {
	      HEAP8[buffer++ >> 0] = str.charCodeAt(i);
	    }if (!dontAddNull) HEAP8[buffer >> 0] = 0;
	  }Module["writeAsciiToMemory"] = writeAsciiToMemory;if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
	    var ah = a >>> 16;var al = a & 65535;var bh = b >>> 16;var bl = b & 65535;return al * bl + (ah * bl + al * bh << 16) | 0;
	  };Math.imul = Math["imul"];if (!Math["clz32"]) Math["clz32"] = function (x) {
	    x = x >>> 0;for (var i = 0; i < 32; i++) {
	      if (x & 1 << 31 - i) return i;
	    }return 32;
	  };Math.clz32 = Math["clz32"];if (!Math["trunc"]) Math["trunc"] = function (x) {
	    return x < 0 ? Math.ceil(x) : Math.floor(x);
	  };Math.trunc = Math["trunc"];var Math_abs = Math.abs;var Math_cos = Math.cos;var Math_sin = Math.sin;var Math_tan = Math.tan;var Math_acos = Math.acos;var Math_asin = Math.asin;var Math_atan = Math.atan;var Math_atan2 = Math.atan2;var Math_exp = Math.exp;var Math_log = Math.log;var Math_sqrt = Math.sqrt;var Math_ceil = Math.ceil;var Math_floor = Math.floor;var Math_pow = Math.pow;var Math_imul = Math.imul;var Math_fround = Math.fround;var Math_round = Math.round;var Math_min = Math.min;var Math_clz32 = Math.clz32;var Math_trunc = Math.trunc;var runDependencies = 0;var runDependencyWatcher = null;var dependenciesFulfilled = null;function getUniqueRunDependency(id) {
	    return id;
	  }function addRunDependency(id) {
	    runDependencies++;if (Module["monitorRunDependencies"]) {
	      Module["monitorRunDependencies"](runDependencies);
	    }
	  }Module["addRunDependency"] = addRunDependency;function removeRunDependency(id) {
	    runDependencies--;if (Module["monitorRunDependencies"]) {
	      Module["monitorRunDependencies"](runDependencies);
	    }if (runDependencies == 0) {
	      if (runDependencyWatcher !== null) {
	        clearInterval(runDependencyWatcher);runDependencyWatcher = null;
	      }if (dependenciesFulfilled) {
	        var callback = dependenciesFulfilled;dependenciesFulfilled = null;callback();
	      }
	    }
	  }Module["removeRunDependency"] = removeRunDependency;Module["preloadedImages"] = {};Module["preloadedAudios"] = {};var ASM_CONSTS = [];STATIC_BASE = 8;STATICTOP = STATIC_BASE + 18224;__ATINIT__.push();allocate([0, 0, 0, 0, 150, 48, 7, 119, 44, 97, 14, 238, 186, 81, 9, 153, 25, 196, 109, 7, 143, 244, 106, 112, 53, 165, 99, 233, 163, 149, 100, 158, 50, 136, 219, 14, 164, 184, 220, 121, 30, 233, 213, 224, 136, 217, 210, 151, 43, 76, 182, 9, 189, 124, 177, 126, 7, 45, 184, 231, 145, 29, 191, 144, 100, 16, 183, 29, 242, 32, 176, 106, 72, 113, 185, 243, 222, 65, 190, 132, 125, 212, 218, 26, 235, 228, 221, 109, 81, 181, 212, 244, 199, 133, 211, 131, 86, 152, 108, 19, 192, 168, 107, 100, 122, 249, 98, 253, 236, 201, 101, 138, 79, 92, 1, 20, 217, 108, 6, 99, 99, 61, 15, 250, 245, 13, 8, 141, 200, 32, 110, 59, 94, 16, 105, 76, 228, 65, 96, 213, 114, 113, 103, 162, 209, 228, 3, 60, 71, 212, 4, 75, 253, 133, 13, 210, 107, 181, 10, 165, 250, 168, 181, 53, 108, 152, 178, 66, 214, 201, 187, 219, 64, 249, 188, 172, 227, 108, 216, 50, 117, 92, 223, 69, 207, 13, 214, 220, 89, 61, 209, 171, 172, 48, 217, 38, 58, 0, 222, 81, 128, 81, 215, 200, 22, 97, 208, 191, 181, 244, 180, 33, 35, 196, 179, 86, 153, 149, 186, 207, 15, 165, 189, 184, 158, 184, 2, 40, 8, 136, 5, 95, 178, 217, 12, 198, 36, 233, 11, 177, 135, 124, 111, 47, 17, 76, 104, 88, 171, 29, 97, 193, 61, 45, 102, 182, 144, 65, 220, 118, 6, 113, 219, 1, 188, 32, 210, 152, 42, 16, 213, 239, 137, 133, 177, 113, 31, 181, 182, 6, 165, 228, 191, 159, 51, 212, 184, 232, 162, 201, 7, 120, 52, 249, 0, 15, 142, 168, 9, 150, 24, 152, 14, 225, 187, 13, 106, 127, 45, 61, 109, 8, 151, 108, 100, 145, 1, 92, 99, 230, 244, 81, 107, 107, 98, 97, 108, 28, 216, 48, 101, 133, 78, 0, 98, 242, 237, 149, 6, 108, 123, 165, 1, 27, 193, 244, 8, 130, 87, 196, 15, 245, 198, 217, 176, 101, 80, 233, 183, 18, 234, 184, 190, 139, 124, 136, 185, 252, 223, 29, 221, 98, 73, 45, 218, 21, 243, 124, 211, 140, 101, 76, 212, 251, 88, 97, 178, 77, 206, 81, 181, 58, 116, 0, 188, 163, 226, 48, 187, 212, 65, 165, 223, 74, 215, 149, 216, 61, 109, 196, 209, 164, 251, 244, 214, 211, 106, 233, 105, 67, 252, 217, 110, 52, 70, 136, 103, 173, 208, 184, 96, 218, 115, 45, 4, 68, 229, 29, 3, 51, 95, 76, 10, 170, 201, 124, 13, 221, 60, 113, 5, 80, 170, 65, 2, 39, 16, 16, 11, 190, 134, 32, 12, 201, 37, 181, 104, 87, 179, 133, 111, 32, 9, 212, 102, 185, 159, 228, 97, 206, 14, 249, 222, 94, 152, 201, 217, 41, 34, 152, 208, 176, 180, 168, 215, 199, 23, 61, 179, 89, 129, 13, 180, 46, 59, 92, 189, 183, 173, 108, 186, 192, 32, 131, 184, 237, 182, 179, 191, 154, 12, 226, 182, 3, 154, 210, 177, 116, 57, 71, 213, 234, 175, 119, 210, 157, 21, 38, 219, 4, 131, 22, 220, 115, 18, 11, 99, 227, 132, 59, 100, 148, 62, 106, 109, 13, 168, 90, 106, 122, 11, 207, 14, 228, 157, 255, 9, 147, 39, 174, 0, 10, 177, 158, 7, 125, 68, 147, 15, 240, 210, 163, 8, 135, 104, 242, 1, 30, 254, 194, 6, 105, 93, 87, 98, 247, 203, 103, 101, 128, 113, 54, 108, 25, 231, 6, 107, 110, 118, 27, 212, 254, 224, 43, 211, 137, 90, 122, 218, 16, 204, 74, 221, 103, 111, 223, 185, 249, 249, 239, 190, 142, 67, 190, 183, 23, 213, 142, 176, 96, 232, 163, 214, 214, 126, 147, 209, 161, 196, 194, 216, 56, 82, 242, 223, 79, 241, 103, 187, 209, 103, 87, 188, 166, 221, 6, 181, 63, 75, 54, 178, 72, 218, 43, 13, 216, 76, 27, 10, 175, 246, 74, 3, 54, 96, 122, 4, 65, 195, 239, 96, 223, 85, 223, 103, 168, 239, 142, 110, 49, 121, 190, 105, 70, 140, 179, 97, 203, 26, 131, 102, 188, 160, 210, 111, 37, 54, 226, 104, 82, 149, 119, 12, 204, 3, 71, 11, 187, 185, 22, 2, 34, 47, 38, 5, 85, 190, 59, 186, 197, 40, 11, 189, 178, 146, 90, 180, 43, 4, 106, 179, 92, 167, 255, 215, 194, 49, 207, 208, 181, 139, 158, 217, 44, 29, 174, 222, 91, 176, 194, 100, 155, 38, 242, 99, 236, 156, 163, 106, 117, 10, 147, 109, 2, 169, 6, 9, 156, 63, 54, 14, 235, 133, 103, 7, 114, 19, 87, 0, 5, 130, 74, 191, 149, 20, 122, 184, 226, 174, 43, 177, 123, 56, 27, 182, 12, 155, 142, 210, 146, 13, 190, 213, 229, 183, 239, 220, 124, 33, 223, 219, 11, 212, 210, 211, 134, 66, 226, 212, 241, 248, 179, 221, 104, 110, 131, 218, 31, 205, 22, 190, 129, 91, 38, 185, 246, 225, 119, 176, 111, 119, 71, 183, 24, 230, 90, 8, 136, 112, 106, 15, 255, 202, 59, 6, 102, 92, 11, 1, 17, 255, 158, 101, 143, 105, 174, 98, 248, 211, 255, 107, 97, 69, 207, 108, 22, 120, 226, 10, 160, 238, 210, 13, 215, 84, 131, 4, 78, 194, 179, 3, 57, 97, 38, 103, 167, 247, 22, 96, 208, 77, 71, 105, 73, 219, 119, 110, 62, 74, 106, 209, 174, 220, 90, 214, 217, 102, 11, 223, 64, 240, 59, 216, 55, 83, 174, 188, 169, 197, 158, 187, 222, 127, 207, 178, 71, 233, 255, 181, 48, 28, 242, 189, 189, 138, 194, 186, 202, 48, 147, 179, 83, 166, 163, 180, 36, 5, 54, 208, 186, 147, 6, 215, 205, 41, 87, 222, 84, 191, 103, 217, 35, 46, 122, 102, 179, 184, 74, 97, 196, 2, 27, 104, 93, 148, 43, 111, 42, 55, 190, 11, 180, 161, 142, 12, 195, 27, 223, 5, 90, 141, 239, 2, 45, 0, 0, 0, 0, 65, 49, 27, 25, 130, 98, 54, 50, 195, 83, 45, 43, 4, 197, 108, 100, 69, 244, 119, 125, 134, 167, 90, 86, 199, 150, 65, 79, 8, 138, 217, 200, 73, 187, 194, 209, 138, 232, 239, 250, 203, 217, 244, 227, 12, 79, 181, 172, 77, 126, 174, 181, 142, 45, 131, 158, 207, 28, 152, 135, 81, 18, 194, 74, 16, 35, 217, 83, 211, 112, 244, 120, 146, 65, 239, 97, 85, 215, 174, 46, 20, 230, 181, 55, 215, 181, 152, 28, 150, 132, 131, 5, 89, 152, 27, 130, 24, 169, 0, 155, 219, 250, 45, 176, 154, 203, 54, 169, 93, 93, 119, 230, 28, 108, 108, 255, 223, 63, 65, 212, 158, 14, 90, 205, 162, 36, 132, 149, 227, 21, 159, 140, 32, 70, 178, 167, 97, 119, 169, 190, 166, 225, 232, 241, 231, 208, 243, 232, 36, 131, 222, 195, 101, 178, 197, 218, 170, 174, 93, 93, 235, 159, 70, 68, 40, 204, 107, 111, 105, 253, 112, 118, 174, 107, 49, 57, 239, 90, 42, 32, 44, 9, 7, 11, 109, 56, 28, 18, 243, 54, 70, 223, 178, 7, 93, 198, 113, 84, 112, 237, 48, 101, 107, 244, 247, 243, 42, 187, 182, 194, 49, 162, 117, 145, 28, 137, 52, 160, 7, 144, 251, 188, 159, 23, 186, 141, 132, 14, 121, 222, 169, 37, 56, 239, 178, 60, 255, 121, 243, 115, 190, 72, 232, 106, 125, 27, 197, 65, 60, 42, 222, 88, 5, 79, 121, 240, 68, 126, 98, 233, 135, 45, 79, 194, 198, 28, 84, 219, 1, 138, 21, 148, 64, 187, 14, 141, 131, 232, 35, 166, 194, 217, 56, 191, 13, 197, 160, 56, 76, 244, 187, 33, 143, 167, 150, 10, 206, 150, 141, 19, 9, 0, 204, 92, 72, 49, 215, 69, 139, 98, 250, 110, 202, 83, 225, 119, 84, 93, 187, 186, 21, 108, 160, 163, 214, 63, 141, 136, 151, 14, 150, 145, 80, 152, 215, 222, 17, 169, 204, 199, 210, 250, 225, 236, 147, 203, 250, 245, 92, 215, 98, 114, 29, 230, 121, 107, 222, 181, 84, 64, 159, 132, 79, 89, 88, 18, 14, 22, 25, 35, 21, 15, 218, 112, 56, 36, 155, 65, 35, 61, 167, 107, 253, 101, 230, 90, 230, 124, 37, 9, 203, 87, 100, 56, 208, 78, 163, 174, 145, 1, 226, 159, 138, 24, 33, 204, 167, 51, 96, 253, 188, 42, 175, 225, 36, 173, 238, 208, 63, 180, 45, 131, 18, 159, 108, 178, 9, 134, 171, 36, 72, 201, 234, 21, 83, 208, 41, 70, 126, 251, 104, 119, 101, 226, 246, 121, 63, 47, 183, 72, 36, 54, 116, 27, 9, 29, 53, 42, 18, 4, 242, 188, 83, 75, 179, 141, 72, 82, 112, 222, 101, 121, 49, 239, 126, 96, 254, 243, 230, 231, 191, 194, 253, 254, 124, 145, 208, 213, 61, 160, 203, 204, 250, 54, 138, 131, 187, 7, 145, 154, 120, 84, 188, 177, 57, 101, 167, 168, 75, 152, 131, 59, 10, 169, 152, 34, 201, 250, 181, 9, 136, 203, 174, 16, 79, 93, 239, 95, 14, 108, 244, 70, 205, 63, 217, 109, 140, 14, 194, 116, 67, 18, 90, 243, 2, 35, 65, 234, 193, 112, 108, 193, 128, 65, 119, 216, 71, 215, 54, 151, 6, 230, 45, 142, 197, 181, 0, 165, 132, 132, 27, 188, 26, 138, 65, 113, 91, 187, 90, 104, 152, 232, 119, 67, 217, 217, 108, 90, 30, 79, 45, 21, 95, 126, 54, 12, 156, 45, 27, 39, 221, 28, 0, 62, 18, 0, 152, 185, 83, 49, 131, 160, 144, 98, 174, 139, 209, 83, 181, 146, 22, 197, 244, 221, 87, 244, 239, 196, 148, 167, 194, 239, 213, 150, 217, 246, 233, 188, 7, 174, 168, 141, 28, 183, 107, 222, 49, 156, 42, 239, 42, 133, 237, 121, 107, 202, 172, 72, 112, 211, 111, 27, 93, 248, 46, 42, 70, 225, 225, 54, 222, 102, 160, 7, 197, 127, 99, 84, 232, 84, 34, 101, 243, 77, 229, 243, 178, 2, 164, 194, 169, 27, 103, 145, 132, 48, 38, 160, 159, 41, 184, 174, 197, 228, 249, 159, 222, 253, 58, 204, 243, 214, 123, 253, 232, 207, 188, 107, 169, 128, 253, 90, 178, 153, 62, 9, 159, 178, 127, 56, 132, 171, 176, 36, 28, 44, 241, 21, 7, 53, 50, 70, 42, 30, 115, 119, 49, 7, 180, 225, 112, 72, 245, 208, 107, 81, 54, 131, 70, 122, 119, 178, 93, 99, 78, 215, 250, 203, 15, 230, 225, 210, 204, 181, 204, 249, 141, 132, 215, 224, 74, 18, 150, 175, 11, 35, 141, 182, 200, 112, 160, 157, 137, 65, 187, 132, 70, 93, 35, 3, 7, 108, 56, 26, 196, 63, 21, 49, 133, 14, 14, 40, 66, 152, 79, 103, 3, 169, 84, 126, 192, 250, 121, 85, 129, 203, 98, 76, 31, 197, 56, 129, 94, 244, 35, 152, 157, 167, 14, 179, 220, 150, 21, 170, 27, 0, 84, 229, 90, 49, 79, 252, 153, 98, 98, 215, 216, 83, 121, 206, 23, 79, 225, 73, 86, 126, 250, 80, 149, 45, 215, 123, 212, 28, 204, 98, 19, 138, 141, 45, 82, 187, 150, 52, 145, 232, 187, 31, 208, 217, 160, 6, 236, 243, 126, 94, 173, 194, 101, 71, 110, 145, 72, 108, 47, 160, 83, 117, 232, 54, 18, 58, 169, 7, 9, 35, 106, 84, 36, 8, 43, 101, 63, 17, 228, 121, 167, 150, 165, 72, 188, 143, 102, 27, 145, 164, 39, 42, 138, 189, 224, 188, 203, 242, 161, 141, 208, 235, 98, 222, 253, 192, 35, 239, 230, 217, 189, 225, 188, 20, 252, 208, 167, 13, 63, 131, 138, 38, 126, 178, 145, 63, 185, 36, 208, 112, 248, 21, 203, 105, 59, 70, 230, 66, 122, 119, 253, 91, 181, 107, 101, 220, 244, 90, 126, 197, 55, 9, 83, 238, 118, 56, 72, 247, 177, 174, 9, 184, 240, 159, 18, 161, 51, 204, 63, 138, 114, 253, 36, 147, 0, 0, 0, 0, 55, 106, 194, 1, 110, 212, 132, 3, 89, 190, 70, 2, 220, 168, 9, 7, 235, 194, 203, 6, 178, 124, 141, 4, 133, 22, 79, 5, 184, 81, 19, 14, 143, 59, 209, 15, 214, 133, 151, 13, 225, 239, 85, 12, 100, 249, 26, 9, 83, 147, 216, 8, 10, 45, 158, 10, 61, 71, 92, 11, 112, 163, 38, 28, 71, 201, 228, 29, 30, 119, 162, 31, 41, 29, 96, 30, 172, 11, 47, 27, 155, 97, 237, 26, 194, 223, 171, 24, 245, 181, 105, 25, 200, 242, 53, 18, 255, 152, 247, 19, 166, 38, 177, 17, 145, 76, 115, 16, 20, 90, 60, 21, 35, 48, 254, 20, 122, 142, 184, 22, 77, 228, 122, 23, 224, 70, 77, 56, 215, 44, 143, 57, 142, 146, 201, 59, 185, 248, 11, 58, 60, 238, 68, 63, 11, 132, 134, 62, 82, 58, 192, 60, 101, 80, 2, 61, 88, 23, 94, 54, 111, 125, 156, 55, 54, 195, 218, 53, 1, 169, 24, 52, 132, 191, 87, 49, 179, 213, 149, 48, 234, 107, 211, 50, 221, 1, 17, 51, 144, 229, 107, 36, 167, 143, 169, 37, 254, 49, 239, 39, 201, 91, 45, 38, 76, 77, 98, 35, 123, 39, 160, 34, 34, 153, 230, 32, 21, 243, 36, 33, 40, 180, 120, 42, 31, 222, 186, 43, 70, 96, 252, 41, 113, 10, 62, 40, 244, 28, 113, 45, 195, 118, 179, 44, 154, 200, 245, 46, 173, 162, 55, 47, 192, 141, 154, 112, 247, 231, 88, 113, 174, 89, 30, 115, 153, 51, 220, 114, 28, 37, 147, 119, 43, 79, 81, 118, 114, 241, 23, 116, 69, 155, 213, 117, 120, 220, 137, 126, 79, 182, 75, 127, 22, 8, 13, 125, 33, 98, 207, 124, 164, 116, 128, 121, 147, 30, 66, 120, 202, 160, 4, 122, 253, 202, 198, 123, 176, 46, 188, 108, 135, 68, 126, 109, 222, 250, 56, 111, 233, 144, 250, 110, 108, 134, 181, 107, 91, 236, 119, 106, 2, 82, 49, 104, 53, 56, 243, 105, 8, 127, 175, 98, 63, 21, 109, 99, 102, 171, 43, 97, 81, 193, 233, 96, 212, 215, 166, 101, 227, 189, 100, 100, 186, 3, 34, 102, 141, 105, 224, 103, 32, 203, 215, 72, 23, 161, 21, 73, 78, 31, 83, 75, 121, 117, 145, 74, 252, 99, 222, 79, 203, 9, 28, 78, 146, 183, 90, 76, 165, 221, 152, 77, 152, 154, 196, 70, 175, 240, 6, 71, 246, 78, 64, 69, 193, 36, 130, 68, 68, 50, 205, 65, 115, 88, 15, 64, 42, 230, 73, 66, 29, 140, 139, 67, 80, 104, 241, 84, 103, 2, 51, 85, 62, 188, 117, 87, 9, 214, 183, 86, 140, 192, 248, 83, 187, 170, 58, 82, 226, 20, 124, 80, 213, 126, 190, 81, 232, 57, 226, 90, 223, 83, 32, 91, 134, 237, 102, 89, 177, 135, 164, 88, 52, 145, 235, 93, 3, 251, 41, 92, 90, 69, 111, 94, 109, 47, 173, 95, 128, 27, 53, 225, 183, 113, 247, 224, 238, 207, 177, 226, 217, 165, 115, 227, 92, 179, 60, 230, 107, 217, 254, 231, 50, 103, 184, 229, 5, 13, 122, 228, 56, 74, 38, 239, 15, 32, 228, 238, 86, 158, 162, 236, 97, 244, 96, 237, 228, 226, 47, 232, 211, 136, 237, 233, 138, 54, 171, 235, 189, 92, 105, 234, 240, 184, 19, 253, 199, 210, 209, 252, 158, 108, 151, 254, 169, 6, 85, 255, 44, 16, 26, 250, 27, 122, 216, 251, 66, 196, 158, 249, 117, 174, 92, 248, 72, 233, 0, 243, 127, 131, 194, 242, 38, 61, 132, 240, 17, 87, 70, 241, 148, 65, 9, 244, 163, 43, 203, 245, 250, 149, 141, 247, 205, 255, 79, 246, 96, 93, 120, 217, 87, 55, 186, 216, 14, 137, 252, 218, 57, 227, 62, 219, 188, 245, 113, 222, 139, 159, 179, 223, 210, 33, 245, 221, 229, 75, 55, 220, 216, 12, 107, 215, 239, 102, 169, 214, 182, 216, 239, 212, 129, 178, 45, 213, 4, 164, 98, 208, 51, 206, 160, 209, 106, 112, 230, 211, 93, 26, 36, 210, 16, 254, 94, 197, 39, 148, 156, 196, 126, 42, 218, 198, 73, 64, 24, 199, 204, 86, 87, 194, 251, 60, 149, 195, 162, 130, 211, 193, 149, 232, 17, 192, 168, 175, 77, 203, 159, 197, 143, 202, 198, 123, 201, 200, 241, 17, 11, 201, 116, 7, 68, 204, 67, 109, 134, 205, 26, 211, 192, 207, 45, 185, 2, 206, 64, 150, 175, 145, 119, 252, 109, 144, 46, 66, 43, 146, 25, 40, 233, 147, 156, 62, 166, 150, 171, 84, 100, 151, 242, 234, 34, 149, 197, 128, 224, 148, 248, 199, 188, 159, 207, 173, 126, 158, 150, 19, 56, 156, 161, 121, 250, 157, 36, 111, 181, 152, 19, 5, 119, 153, 74, 187, 49, 155, 125, 209, 243, 154, 48, 53, 137, 141, 7, 95, 75, 140, 94, 225, 13, 142, 105, 139, 207, 143, 236, 157, 128, 138, 219, 247, 66, 139, 130, 73, 4, 137, 181, 35, 198, 136, 136, 100, 154, 131, 191, 14, 88, 130, 230, 176, 30, 128, 209, 218, 220, 129, 84, 204, 147, 132, 99, 166, 81, 133, 58, 24, 23, 135, 13, 114, 213, 134, 160, 208, 226, 169, 151, 186, 32, 168, 206, 4, 102, 170, 249, 110, 164, 171, 124, 120, 235, 174, 75, 18, 41, 175, 18, 172, 111, 173, 37, 198, 173, 172, 24, 129, 241, 167, 47, 235, 51, 166, 118, 85, 117, 164, 65, 63, 183, 165, 196, 41, 248, 160, 243, 67, 58, 161, 170, 253, 124, 163, 157, 151, 190, 162, 208, 115, 196, 181, 231, 25, 6, 180, 190, 167, 64, 182, 137, 205, 130, 183, 12, 219, 205, 178, 59, 177, 15, 179, 98, 15, 73, 177, 85, 101, 139, 176, 104, 34, 215, 187, 95, 72, 21, 186, 6, 246, 83, 184, 49, 156, 145, 185, 180, 138, 222, 188, 131, 224, 28, 189, 218, 94, 90, 191, 237, 52, 152, 190, 0, 0, 0, 0, 101, 103, 188, 184, 139, 200, 9, 170, 238, 175, 181, 18, 87, 151, 98, 143, 50, 240, 222, 55, 220, 95, 107, 37, 185, 56, 215, 157, 239, 40, 180, 197, 138, 79, 8, 125, 100, 224, 189, 111, 1, 135, 1, 215, 184, 191, 214, 74, 221, 216, 106, 242, 51, 119, 223, 224, 86, 16, 99, 88, 159, 87, 25, 80, 250, 48, 165, 232, 20, 159, 16, 250, 113, 248, 172, 66, 200, 192, 123, 223, 173, 167, 199, 103, 67, 8, 114, 117, 38, 111, 206, 205, 112, 127, 173, 149, 21, 24, 17, 45, 251, 183, 164, 63, 158, 208, 24, 135, 39, 232, 207, 26, 66, 143, 115, 162, 172, 32, 198, 176, 201, 71, 122, 8, 62, 175, 50, 160, 91, 200, 142, 24, 181, 103, 59, 10, 208, 0, 135, 178, 105, 56, 80, 47, 12, 95, 236, 151, 226, 240, 89, 133, 135, 151, 229, 61, 209, 135, 134, 101, 180, 224, 58, 221, 90, 79, 143, 207, 63, 40, 51, 119, 134, 16, 228, 234, 227, 119, 88, 82, 13, 216, 237, 64, 104, 191, 81, 248, 161, 248, 43, 240, 196, 159, 151, 72, 42, 48, 34, 90, 79, 87, 158, 226, 246, 111, 73, 127, 147, 8, 245, 199, 125, 167, 64, 213, 24, 192, 252, 109, 78, 208, 159, 53, 43, 183, 35, 141, 197, 24, 150, 159, 160, 127, 42, 39, 25, 71, 253, 186, 124, 32, 65, 2, 146, 143, 244, 16, 247, 232, 72, 168, 61, 88, 20, 155, 88, 63, 168, 35, 182, 144, 29, 49, 211, 247, 161, 137, 106, 207, 118, 20, 15, 168, 202, 172, 225, 7, 127, 190, 132, 96, 195, 6, 210, 112, 160, 94, 183, 23, 28, 230, 89, 184, 169, 244, 60, 223, 21, 76, 133, 231, 194, 209, 224, 128, 126, 105, 14, 47, 203, 123, 107, 72, 119, 195, 162, 15, 13, 203, 199, 104, 177, 115, 41, 199, 4, 97, 76, 160, 184, 217, 245, 152, 111, 68, 144, 255, 211, 252, 126, 80, 102, 238, 27, 55, 218, 86, 77, 39, 185, 14, 40, 64, 5, 182, 198, 239, 176, 164, 163, 136, 12, 28, 26, 176, 219, 129, 127, 215, 103, 57, 145, 120, 210, 43, 244, 31, 110, 147, 3, 247, 38, 59, 102, 144, 154, 131, 136, 63, 47, 145, 237, 88, 147, 41, 84, 96, 68, 180, 49, 7, 248, 12, 223, 168, 77, 30, 186, 207, 241, 166, 236, 223, 146, 254, 137, 184, 46, 70, 103, 23, 155, 84, 2, 112, 39, 236, 187, 72, 240, 113, 222, 47, 76, 201, 48, 128, 249, 219, 85, 231, 69, 99, 156, 160, 63, 107, 249, 199, 131, 211, 23, 104, 54, 193, 114, 15, 138, 121, 203, 55, 93, 228, 174, 80, 225, 92, 64, 255, 84, 78, 37, 152, 232, 246, 115, 136, 139, 174, 22, 239, 55, 22, 248, 64, 130, 4, 157, 39, 62, 188, 36, 31, 233, 33, 65, 120, 85, 153, 175, 215, 224, 139, 202, 176, 92, 51, 59, 182, 89, 237, 94, 209, 229, 85, 176, 126, 80, 71, 213, 25, 236, 255, 108, 33, 59, 98, 9, 70, 135, 218, 231, 233, 50, 200, 130, 142, 142, 112, 212, 158, 237, 40, 177, 249, 81, 144, 95, 86, 228, 130, 58, 49, 88, 58, 131, 9, 143, 167, 230, 110, 51, 31, 8, 193, 134, 13, 109, 166, 58, 181, 164, 225, 64, 189, 193, 134, 252, 5, 47, 41, 73, 23, 74, 78, 245, 175, 243, 118, 34, 50, 150, 17, 158, 138, 120, 190, 43, 152, 29, 217, 151, 32, 75, 201, 244, 120, 46, 174, 72, 192, 192, 1, 253, 210, 165, 102, 65, 106, 28, 94, 150, 247, 121, 57, 42, 79, 151, 150, 159, 93, 242, 241, 35, 229, 5, 25, 107, 77, 96, 126, 215, 245, 142, 209, 98, 231, 235, 182, 222, 95, 82, 142, 9, 194, 55, 233, 181, 122, 217, 70, 0, 104, 188, 33, 188, 208, 234, 49, 223, 136, 143, 86, 99, 48, 97, 249, 214, 34, 4, 158, 106, 154, 189, 166, 189, 7, 216, 193, 1, 191, 54, 110, 180, 173, 83, 9, 8, 21, 154, 78, 114, 29, 255, 41, 206, 165, 17, 134, 123, 183, 116, 225, 199, 15, 205, 217, 16, 146, 168, 190, 172, 42, 70, 17, 25, 56, 35, 118, 165, 128, 117, 102, 198, 216, 16, 1, 122, 96, 254, 174, 207, 114, 155, 201, 115, 202, 34, 241, 164, 87, 71, 150, 24, 239, 169, 57, 173, 253, 204, 94, 17, 69, 6, 238, 77, 118, 99, 137, 241, 206, 141, 38, 68, 220, 232, 65, 248, 100, 81, 121, 47, 249, 52, 30, 147, 65, 218, 177, 38, 83, 191, 214, 154, 235, 233, 198, 249, 179, 140, 161, 69, 11, 98, 14, 240, 25, 7, 105, 76, 161, 190, 81, 155, 60, 219, 54, 39, 132, 53, 153, 146, 150, 80, 254, 46, 46, 153, 185, 84, 38, 252, 222, 232, 158, 18, 113, 93, 140, 119, 22, 225, 52, 206, 46, 54, 169, 171, 73, 138, 17, 69, 230, 63, 3, 32, 129, 131, 187, 118, 145, 224, 227, 19, 246, 92, 91, 253, 89, 233, 73, 152, 62, 85, 241, 33, 6, 130, 108, 68, 97, 62, 212, 170, 206, 139, 198, 207, 169, 55, 126, 56, 65, 127, 214, 93, 38, 195, 110, 179, 137, 118, 124, 214, 238, 202, 196, 111, 214, 29, 89, 10, 177, 161, 225, 228, 30, 20, 243, 129, 121, 168, 75, 215, 105, 203, 19, 178, 14, 119, 171, 92, 161, 194, 185, 57, 198, 126, 1, 128, 254, 169, 156, 229, 153, 21, 36, 11, 54, 160, 54, 110, 81, 28, 142, 167, 22, 102, 134, 194, 113, 218, 62, 44, 222, 111, 44, 73, 185, 211, 148, 240, 129, 4, 9, 149, 230, 184, 177, 123, 73, 13, 163, 30, 46, 177, 27, 72, 62, 210, 67, 45, 89, 110, 251, 195, 246, 219, 233, 166, 145, 103, 81, 31, 169, 176, 204, 122, 206, 12, 116, 148, 97, 185, 102, 241, 6, 5, 222, 0, 0, 0, 0, 119, 7, 48, 150, 238, 14, 97, 44, 153, 9, 81, 186, 7, 109, 196, 25, 112, 106, 244, 143, 233, 99, 165, 53, 158, 100, 149, 163, 14, 219, 136, 50, 121, 220, 184, 164, 224, 213, 233, 30, 151, 210, 217, 136, 9, 182, 76, 43, 126, 177, 124, 189, 231, 184, 45, 7, 144, 191, 29, 145, 29, 183, 16, 100, 106, 176, 32, 242, 243, 185, 113, 72, 132, 190, 65, 222, 26, 218, 212, 125, 109, 221, 228, 235, 244, 212, 181, 81, 131, 211, 133, 199, 19, 108, 152, 86, 100, 107, 168, 192, 253, 98, 249, 122, 138, 101, 201, 236, 20, 1, 92, 79, 99, 6, 108, 217, 250, 15, 61, 99, 141, 8, 13, 245, 59, 110, 32, 200, 76, 105, 16, 94, 213, 96, 65, 228, 162, 103, 113, 114, 60, 3, 228, 209, 75, 4, 212, 71, 210, 13, 133, 253, 165, 10, 181, 107, 53, 181, 168, 250, 66, 178, 152, 108, 219, 187, 201, 214, 172, 188, 249, 64, 50, 216, 108, 227, 69, 223, 92, 117, 220, 214, 13, 207, 171, 209, 61, 89, 38, 217, 48, 172, 81, 222, 0, 58, 200, 215, 81, 128, 191, 208, 97, 22, 33, 180, 244, 181, 86, 179, 196, 35, 207, 186, 149, 153, 184, 189, 165, 15, 40, 2, 184, 158, 95, 5, 136, 8, 198, 12, 217, 178, 177, 11, 233, 36, 47, 111, 124, 135, 88, 104, 76, 17, 193, 97, 29, 171, 182, 102, 45, 61, 118, 220, 65, 144, 1, 219, 113, 6, 152, 210, 32, 188, 239, 213, 16, 42, 113, 177, 133, 137, 6, 182, 181, 31, 159, 191, 228, 165, 232, 184, 212, 51, 120, 7, 201, 162, 15, 0, 249, 52, 150, 9, 168, 142, 225, 14, 152, 24, 127, 106, 13, 187, 8, 109, 61, 45, 145, 100, 108, 151, 230, 99, 92, 1, 107, 107, 81, 244, 28, 108, 97, 98, 133, 101, 48, 216, 242, 98, 0, 78, 108, 6, 149, 237, 27, 1, 165, 123, 130, 8, 244, 193, 245, 15, 196, 87, 101, 176, 217, 198, 18, 183, 233, 80, 139, 190, 184, 234, 252, 185, 136, 124, 98, 221, 29, 223, 21, 218, 45, 73, 140, 211, 124, 243, 251, 212, 76, 101, 77, 178, 97, 88, 58, 181, 81, 206, 163, 188, 0, 116, 212, 187, 48, 226, 74, 223, 165, 65, 61, 216, 149, 215, 164, 209, 196, 109, 211, 214, 244, 251, 67, 105, 233, 106, 52, 110, 217, 252, 173, 103, 136, 70, 218, 96, 184, 208, 68, 4, 45, 115, 51, 3, 29, 229, 170, 10, 76, 95, 221, 13, 124, 201, 80, 5, 113, 60, 39, 2, 65, 170, 190, 11, 16, 16, 201, 12, 32, 134, 87, 104, 181, 37, 32, 111, 133, 179, 185, 102, 212, 9, 206, 97, 228, 159, 94, 222, 249, 14, 41, 217, 201, 152, 176, 208, 152, 34, 199, 215, 168, 180, 89, 179, 61, 23, 46, 180, 13, 129, 183, 189, 92, 59, 192, 186, 108, 173, 237, 184, 131, 32, 154, 191, 179, 182, 3, 182, 226, 12, 116, 177, 210, 154, 234, 213, 71, 57, 157, 210, 119, 175, 4, 219, 38, 21, 115, 220, 22, 131, 227, 99, 11, 18, 148, 100, 59, 132, 13, 109, 106, 62, 122, 106, 90, 168, 228, 14, 207, 11, 147, 9, 255, 157, 10, 0, 174, 39, 125, 7, 158, 177, 240, 15, 147, 68, 135, 8, 163, 210, 30, 1, 242, 104, 105, 6, 194, 254, 247, 98, 87, 93, 128, 101, 103, 203, 25, 108, 54, 113, 110, 107, 6, 231, 254, 212, 27, 118, 137, 211, 43, 224, 16, 218, 122, 90, 103, 221, 74, 204, 249, 185, 223, 111, 142, 190, 239, 249, 23, 183, 190, 67, 96, 176, 142, 213, 214, 214, 163, 232, 161, 209, 147, 126, 56, 216, 194, 196, 79, 223, 242, 82, 209, 187, 103, 241, 166, 188, 87, 103, 63, 181, 6, 221, 72, 178, 54, 75, 216, 13, 43, 218, 175, 10, 27, 76, 54, 3, 74, 246, 65, 4, 122, 96, 223, 96, 239, 195, 168, 103, 223, 85, 49, 110, 142, 239, 70, 105, 190, 121, 203, 97, 179, 140, 188, 102, 131, 26, 37, 111, 210, 160, 82, 104, 226, 54, 204, 12, 119, 149, 187, 11, 71, 3, 34, 2, 22, 185, 85, 5, 38, 47, 197, 186, 59, 190, 178, 189, 11, 40, 43, 180, 90, 146, 92, 179, 106, 4, 194, 215, 255, 167, 181, 208, 207, 49, 44, 217, 158, 139, 91, 222, 174, 29, 155, 100, 194, 176, 236, 99, 242, 38, 117, 106, 163, 156, 2, 109, 147, 10, 156, 9, 6, 169, 235, 14, 54, 63, 114, 7, 103, 133, 5, 0, 87, 19, 149, 191, 74, 130, 226, 184, 122, 20, 123, 177, 43, 174, 12, 182, 27, 56, 146, 210, 142, 155, 229, 213, 190, 13, 124, 220, 239, 183, 11, 219, 223, 33, 134, 211, 210, 212, 241, 212, 226, 66, 104, 221, 179, 248, 31, 218, 131, 110, 129, 190, 22, 205, 246, 185, 38, 91, 111, 176, 119, 225, 24, 183, 71, 119, 136, 8, 90, 230, 255, 15, 106, 112, 102, 6, 59, 202, 17, 1, 11, 92, 143, 101, 158, 255, 248, 98, 174, 105, 97, 107, 255, 211, 22, 108, 207, 69, 160, 10, 226, 120, 215, 13, 210, 238, 78, 4, 131, 84, 57, 3, 179, 194, 167, 103, 38, 97, 208, 96, 22, 247, 73, 105, 71, 77, 62, 110, 119, 219, 174, 209, 106, 74, 217, 214, 90, 220, 64, 223, 11, 102, 55, 216, 59, 240, 169, 188, 174, 83, 222, 187, 158, 197, 71, 178, 207, 127, 48, 181, 255, 233, 189, 189, 242, 28, 202, 186, 194, 138, 83, 179, 147, 48, 36, 180, 163, 166, 186, 208, 54, 5, 205, 215, 6, 147, 84, 222, 87, 41, 35, 217, 103, 191, 179, 102, 122, 46, 196, 97, 74, 184, 93, 104, 27, 2, 42, 111, 43, 148, 180, 11, 190, 55, 195, 12, 142, 161, 90, 5, 223, 27, 45, 2, 239, 141, 0, 0, 0, 0, 25, 27, 49, 65, 50, 54, 98, 130, 43, 45, 83, 195, 100, 108, 197, 4, 125, 119, 244, 69, 86, 90, 167, 134, 79, 65, 150, 199, 200, 217, 138, 8, 209, 194, 187, 73, 250, 239, 232, 138, 227, 244, 217, 203, 172, 181, 79, 12, 181, 174, 126, 77, 158, 131, 45, 142, 135, 152, 28, 207, 74, 194, 18, 81, 83, 217, 35, 16, 120, 244, 112, 211, 97, 239, 65, 146, 46, 174, 215, 85, 55, 181, 230, 20, 28, 152, 181, 215, 5, 131, 132, 150, 130, 27, 152, 89, 155, 0, 169, 24, 176, 45, 250, 219, 169, 54, 203, 154, 230, 119, 93, 93, 255, 108, 108, 28, 212, 65, 63, 223, 205, 90, 14, 158, 149, 132, 36, 162, 140, 159, 21, 227, 167, 178, 70, 32, 190, 169, 119, 97, 241, 232, 225, 166, 232, 243, 208, 231, 195, 222, 131, 36, 218, 197, 178, 101, 93, 93, 174, 170, 68, 70, 159, 235, 111, 107, 204, 40, 118, 112, 253, 105, 57, 49, 107, 174, 32, 42, 90, 239, 11, 7, 9, 44, 18, 28, 56, 109, 223, 70, 54, 243, 198, 93, 7, 178, 237, 112, 84, 113, 244, 107, 101, 48, 187, 42, 243, 247, 162, 49, 194, 182, 137, 28, 145, 117, 144, 7, 160, 52, 23, 159, 188, 251, 14, 132, 141, 186, 37, 169, 222, 121, 60, 178, 239, 56, 115, 243, 121, 255, 106, 232, 72, 190, 65, 197, 27, 125, 88, 222, 42, 60, 240, 121, 79, 5, 233, 98, 126, 68, 194, 79, 45, 135, 219, 84, 28, 198, 148, 21, 138, 1, 141, 14, 187, 64, 166, 35, 232, 131, 191, 56, 217, 194, 56, 160, 197, 13, 33, 187, 244, 76, 10, 150, 167, 143, 19, 141, 150, 206, 92, 204, 0, 9, 69, 215, 49, 72, 110, 250, 98, 139, 119, 225, 83, 202, 186, 187, 93, 84, 163, 160, 108, 21, 136, 141, 63, 214, 145, 150, 14, 151, 222, 215, 152, 80, 199, 204, 169, 17, 236, 225, 250, 210, 245, 250, 203, 147, 114, 98, 215, 92, 107, 121, 230, 29, 64, 84, 181, 222, 89, 79, 132, 159, 22, 14, 18, 88, 15, 21, 35, 25, 36, 56, 112, 218, 61, 35, 65, 155, 101, 253, 107, 167, 124, 230, 90, 230, 87, 203, 9, 37, 78, 208, 56, 100, 1, 145, 174, 163, 24, 138, 159, 226, 51, 167, 204, 33, 42, 188, 253, 96, 173, 36, 225, 175, 180, 63, 208, 238, 159, 18, 131, 45, 134, 9, 178, 108, 201, 72, 36, 171, 208, 83, 21, 234, 251, 126, 70, 41, 226, 101, 119, 104, 47, 63, 121, 246, 54, 36, 72, 183, 29, 9, 27, 116, 4, 18, 42, 53, 75, 83, 188, 242, 82, 72, 141, 179, 121, 101, 222, 112, 96, 126, 239, 49, 231, 230, 243, 254, 254, 253, 194, 191, 213, 208, 145, 124, 204, 203, 160, 61, 131, 138, 54, 250, 154, 145, 7, 187, 177, 188, 84, 120, 168, 167, 101, 57, 59, 131, 152, 75, 34, 152, 169, 10, 9, 181, 250, 201, 16, 174, 203, 136, 95, 239, 93, 79, 70, 244, 108, 14, 109, 217, 63, 205, 116, 194, 14, 140, 243, 90, 18, 67, 234, 65, 35, 2, 193, 108, 112, 193, 216, 119, 65, 128, 151, 54, 215, 71, 142, 45, 230, 6, 165, 0, 181, 197, 188, 27, 132, 132, 113, 65, 138, 26, 104, 90, 187, 91, 67, 119, 232, 152, 90, 108, 217, 217, 21, 45, 79, 30, 12, 54, 126, 95, 39, 27, 45, 156, 62, 0, 28, 221, 185, 152, 0, 18, 160, 131, 49, 83, 139, 174, 98, 144, 146, 181, 83, 209, 221, 244, 197, 22, 196, 239, 244, 87, 239, 194, 167, 148, 246, 217, 150, 213, 174, 7, 188, 233, 183, 28, 141, 168, 156, 49, 222, 107, 133, 42, 239, 42, 202, 107, 121, 237, 211, 112, 72, 172, 248, 93, 27, 111, 225, 70, 42, 46, 102, 222, 54, 225, 127, 197, 7, 160, 84, 232, 84, 99, 77, 243, 101, 34, 2, 178, 243, 229, 27, 169, 194, 164, 48, 132, 145, 103, 41, 159, 160, 38, 228, 197, 174, 184, 253, 222, 159, 249, 214, 243, 204, 58, 207, 232, 253, 123, 128, 169, 107, 188, 153, 178, 90, 253, 178, 159, 9, 62, 171, 132, 56, 127, 44, 28, 36, 176, 53, 7, 21, 241, 30, 42, 70, 50, 7, 49, 119, 115, 72, 112, 225, 180, 81, 107, 208, 245, 122, 70, 131, 54, 99, 93, 178, 119, 203, 250, 215, 78, 210, 225, 230, 15, 249, 204, 181, 204, 224, 215, 132, 141, 175, 150, 18, 74, 182, 141, 35, 11, 157, 160, 112, 200, 132, 187, 65, 137, 3, 35, 93, 70, 26, 56, 108, 7, 49, 21, 63, 196, 40, 14, 14, 133, 103, 79, 152, 66, 126, 84, 169, 3, 85, 121, 250, 192, 76, 98, 203, 129, 129, 56, 197, 31, 152, 35, 244, 94, 179, 14, 167, 157, 170, 21, 150, 220, 229, 84, 0, 27, 252, 79, 49, 90, 215, 98, 98, 153, 206, 121, 83, 216, 73, 225, 79, 23, 80, 250, 126, 86, 123, 215, 45, 149, 98, 204, 28, 212, 45, 141, 138, 19, 52, 150, 187, 82, 31, 187, 232, 145, 6, 160, 217, 208, 94, 126, 243, 236, 71, 101, 194, 173, 108, 72, 145, 110, 117, 83, 160, 47, 58, 18, 54, 232, 35, 9, 7, 169, 8, 36, 84, 106, 17, 63, 101, 43, 150, 167, 121, 228, 143, 188, 72, 165, 164, 145, 27, 102, 189, 138, 42, 39, 242, 203, 188, 224, 235, 208, 141, 161, 192, 253, 222, 98, 217, 230, 239, 35, 20, 188, 225, 189, 13, 167, 208, 252, 38, 138, 131, 63, 63, 145, 178, 126, 112, 208, 36, 185, 105, 203, 21, 248, 66, 230, 70, 59, 91, 253, 119, 122, 220, 101, 107, 181, 197, 126, 90, 244, 238, 83, 9, 55, 247, 72, 56, 118, 184, 9, 174, 177, 161, 18, 159, 240, 138, 63, 204, 51, 147, 36, 253, 114, 0, 0, 0, 0, 1, 194, 106, 55, 3, 132, 212, 110, 2, 70, 190, 89, 7, 9, 168, 220, 6, 203, 194, 235, 4, 141, 124, 178, 5, 79, 22, 133, 14, 19, 81, 184, 15, 209, 59, 143, 13, 151, 133, 214, 12, 85, 239, 225, 9, 26, 249, 100, 8, 216, 147, 83, 10, 158, 45, 10, 11, 92, 71, 61, 28, 38, 163, 112, 29, 228, 201, 71, 31, 162, 119, 30, 30, 96, 29, 41, 27, 47, 11, 172, 26, 237, 97, 155, 24, 171, 223, 194, 25, 105, 181, 245, 18, 53, 242, 200, 19, 247, 152, 255, 17, 177, 38, 166, 16, 115, 76, 145, 21, 60, 90, 20, 20, 254, 48, 35, 22, 184, 142, 122, 23, 122, 228, 77, 56, 77, 70, 224, 57, 143, 44, 215, 59, 201, 146, 142, 58, 11, 248, 185, 63, 68, 238, 60, 62, 134, 132, 11, 60, 192, 58, 82, 61, 2, 80, 101, 54, 94, 23, 88, 55, 156, 125, 111, 53, 218, 195, 54, 52, 24, 169, 1, 49, 87, 191, 132, 48, 149, 213, 179, 50, 211, 107, 234, 51, 17, 1, 221, 36, 107, 229, 144, 37, 169, 143, 167, 39, 239, 49, 254, 38, 45, 91, 201, 35, 98, 77, 76, 34, 160, 39, 123, 32, 230, 153, 34, 33, 36, 243, 21, 42, 120, 180, 40, 43, 186, 222, 31, 41, 252, 96, 70, 40, 62, 10, 113, 45, 113, 28, 244, 44, 179, 118, 195, 46, 245, 200, 154, 47, 55, 162, 173, 112, 154, 141, 192, 113, 88, 231, 247, 115, 30, 89, 174, 114, 220, 51, 153, 119, 147, 37, 28, 118, 81, 79, 43, 116, 23, 241, 114, 117, 213, 155, 69, 126, 137, 220, 120, 127, 75, 182, 79, 125, 13, 8, 22, 124, 207, 98, 33, 121, 128, 116, 164, 120, 66, 30, 147, 122, 4, 160, 202, 123, 198, 202, 253, 108, 188, 46, 176, 109, 126, 68, 135, 111, 56, 250, 222, 110, 250, 144, 233, 107, 181, 134, 108, 106, 119, 236, 91, 104, 49, 82, 2, 105, 243, 56, 53, 98, 175, 127, 8, 99, 109, 21, 63, 97, 43, 171, 102, 96, 233, 193, 81, 101, 166, 215, 212, 100, 100, 189, 227, 102, 34, 3, 186, 103, 224, 105, 141, 72, 215, 203, 32, 73, 21, 161, 23, 75, 83, 31, 78, 74, 145, 117, 121, 79, 222, 99, 252, 78, 28, 9, 203, 76, 90, 183, 146, 77, 152, 221, 165, 70, 196, 154, 152, 71, 6, 240, 175, 69, 64, 78, 246, 68, 130, 36, 193, 65, 205, 50, 68, 64, 15, 88, 115, 66, 73, 230, 42, 67, 139, 140, 29, 84, 241, 104, 80, 85, 51, 2, 103, 87, 117, 188, 62, 86, 183, 214, 9, 83, 248, 192, 140, 82, 58, 170, 187, 80, 124, 20, 226, 81, 190, 126, 213, 90, 226, 57, 232, 91, 32, 83, 223, 89, 102, 237, 134, 88, 164, 135, 177, 93, 235, 145, 52, 92, 41, 251, 3, 94, 111, 69, 90, 95, 173, 47, 109, 225, 53, 27, 128, 224, 247, 113, 183, 226, 177, 207, 238, 227, 115, 165, 217, 230, 60, 179, 92, 231, 254, 217, 107, 229, 184, 103, 50, 228, 122, 13, 5, 239, 38, 74, 56, 238, 228, 32, 15, 236, 162, 158, 86, 237, 96, 244, 97, 232, 47, 226, 228, 233, 237, 136, 211, 235, 171, 54, 138, 234, 105, 92, 189, 253, 19, 184, 240, 252, 209, 210, 199, 254, 151, 108, 158, 255, 85, 6, 169, 250, 26, 16, 44, 251, 216, 122, 27, 249, 158, 196, 66, 248, 92, 174, 117, 243, 0, 233, 72, 242, 194, 131, 127, 240, 132, 61, 38, 241, 70, 87, 17, 244, 9, 65, 148, 245, 203, 43, 163, 247, 141, 149, 250, 246, 79, 255, 205, 217, 120, 93, 96, 216, 186, 55, 87, 218, 252, 137, 14, 219, 62, 227, 57, 222, 113, 245, 188, 223, 179, 159, 139, 221, 245, 33, 210, 220, 55, 75, 229, 215, 107, 12, 216, 214, 169, 102, 239, 212, 239, 216, 182, 213, 45, 178, 129, 208, 98, 164, 4, 209, 160, 206, 51, 211, 230, 112, 106, 210, 36, 26, 93, 197, 94, 254, 16, 196, 156, 148, 39, 198, 218, 42, 126, 199, 24, 64, 73, 194, 87, 86, 204, 195, 149, 60, 251, 193, 211, 130, 162, 192, 17, 232, 149, 203, 77, 175, 168, 202, 143, 197, 159, 200, 201, 123, 198, 201, 11, 17, 241, 204, 68, 7, 116, 205, 134, 109, 67, 207, 192, 211, 26, 206, 2, 185, 45, 145, 175, 150, 64, 144, 109, 252, 119, 146, 43, 66, 46, 147, 233, 40, 25, 150, 166, 62, 156, 151, 100, 84, 171, 149, 34, 234, 242, 148, 224, 128, 197, 159, 188, 199, 248, 158, 126, 173, 207, 156, 56, 19, 150, 157, 250, 121, 161, 152, 181, 111, 36, 153, 119, 5, 19, 155, 49, 187, 74, 154, 243, 209, 125, 141, 137, 53, 48, 140, 75, 95, 7, 142, 13, 225, 94, 143, 207, 139, 105, 138, 128, 157, 236, 139, 66, 247, 219, 137, 4, 73, 130, 136, 198, 35, 181, 131, 154, 100, 136, 130, 88, 14, 191, 128, 30, 176, 230, 129, 220, 218, 209, 132, 147, 204, 84, 133, 81, 166, 99, 135, 23, 24, 58, 134, 213, 114, 13, 169, 226, 208, 160, 168, 32, 186, 151, 170, 102, 4, 206, 171, 164, 110, 249, 174, 235, 120, 124, 175, 41, 18, 75, 173, 111, 172, 18, 172, 173, 198, 37, 167, 241, 129, 24, 166, 51, 235, 47, 164, 117, 85, 118, 165, 183, 63, 65, 160, 248, 41, 196, 161, 58, 67, 243, 163, 124, 253, 170, 162, 190, 151, 157, 181, 196, 115, 208, 180, 6, 25, 231, 182, 64, 167, 190, 183, 130, 205, 137, 178, 205, 219, 12, 179, 15, 177, 59, 177, 73, 15, 98, 176, 139, 101, 85, 187, 215, 34, 104, 186, 21, 72, 95, 184, 83, 246, 6, 185, 145, 156, 49, 188, 222, 138, 180, 189, 28, 224, 131, 191, 90, 94, 218, 190, 152, 52, 237, 0, 0, 0, 0, 184, 188, 103, 101, 170, 9, 200, 139, 18, 181, 175, 238, 143, 98, 151, 87, 55, 222, 240, 50, 37, 107, 95, 220, 157, 215, 56, 185, 197, 180, 40, 239, 125, 8, 79, 138, 111, 189, 224, 100, 215, 1, 135, 1, 74, 214, 191, 184, 242, 106, 216, 221, 224, 223, 119, 51, 88, 99, 16, 86, 80, 25, 87, 159, 232, 165, 48, 250, 250, 16, 159, 20, 66, 172, 248, 113, 223, 123, 192, 200, 103, 199, 167, 173, 117, 114, 8, 67, 205, 206, 111, 38, 149, 173, 127, 112, 45, 17, 24, 21, 63, 164, 183, 251, 135, 24, 208, 158, 26, 207, 232, 39, 162, 115, 143, 66, 176, 198, 32, 172, 8, 122, 71, 201, 160, 50, 175, 62, 24, 142, 200, 91, 10, 59, 103, 181, 178, 135, 0, 208, 47, 80, 56, 105, 151, 236, 95, 12, 133, 89, 240, 226, 61, 229, 151, 135, 101, 134, 135, 209, 221, 58, 224, 180, 207, 143, 79, 90, 119, 51, 40, 63, 234, 228, 16, 134, 82, 88, 119, 227, 64, 237, 216, 13, 248, 81, 191, 104, 240, 43, 248, 161, 72, 151, 159, 196, 90, 34, 48, 42, 226, 158, 87, 79, 127, 73, 111, 246, 199, 245, 8, 147, 213, 64, 167, 125, 109, 252, 192, 24, 53, 159, 208, 78, 141, 35, 183, 43, 159, 150, 24, 197, 39, 42, 127, 160, 186, 253, 71, 25, 2, 65, 32, 124, 16, 244, 143, 146, 168, 72, 232, 247, 155, 20, 88, 61, 35, 168, 63, 88, 49, 29, 144, 182, 137, 161, 247, 211, 20, 118, 207, 106, 172, 202, 168, 15, 190, 127, 7, 225, 6, 195, 96, 132, 94, 160, 112, 210, 230, 28, 23, 183, 244, 169, 184, 89, 76, 21, 223, 60, 209, 194, 231, 133, 105, 126, 128, 224, 123, 203, 47, 14, 195, 119, 72, 107, 203, 13, 15, 162, 115, 177, 104, 199, 97, 4, 199, 41, 217, 184, 160, 76, 68, 111, 152, 245, 252, 211, 255, 144, 238, 102, 80, 126, 86, 218, 55, 27, 14, 185, 39, 77, 182, 5, 64, 40, 164, 176, 239, 198, 28, 12, 136, 163, 129, 219, 176, 26, 57, 103, 215, 127, 43, 210, 120, 145, 147, 110, 31, 244, 59, 38, 247, 3, 131, 154, 144, 102, 145, 47, 63, 136, 41, 147, 88, 237, 180, 68, 96, 84, 12, 248, 7, 49, 30, 77, 168, 223, 166, 241, 207, 186, 254, 146, 223, 236, 70, 46, 184, 137, 84, 155, 23, 103, 236, 39, 112, 2, 113, 240, 72, 187, 201, 76, 47, 222, 219, 249, 128, 48, 99, 69, 231, 85, 107, 63, 160, 156, 211, 131, 199, 249, 193, 54, 104, 23, 121, 138, 15, 114, 228, 93, 55, 203, 92, 225, 80, 174, 78, 84, 255, 64, 246, 232, 152, 37, 174, 139, 136, 115, 22, 55, 239, 22, 4, 130, 64, 248, 188, 62, 39, 157, 33, 233, 31, 36, 153, 85, 120, 65, 139, 224, 215, 175, 51, 92, 176, 202, 237, 89, 182, 59, 85, 229, 209, 94, 71, 80, 126, 176, 255, 236, 25, 213, 98, 59, 33, 108, 218, 135, 70, 9, 200, 50, 233, 231, 112, 142, 142, 130, 40, 237, 158, 212, 144, 81, 249, 177, 130, 228, 86, 95, 58, 88, 49, 58, 167, 143, 9, 131, 31, 51, 110, 230, 13, 134, 193, 8, 181, 58, 166, 109, 189, 64, 225, 164, 5, 252, 134, 193, 23, 73, 41, 47, 175, 245, 78, 74, 50, 34, 118, 243, 138, 158, 17, 150, 152, 43, 190, 120, 32, 151, 217, 29, 120, 244, 201, 75, 192, 72, 174, 46, 210, 253, 1, 192, 106, 65, 102, 165, 247, 150, 94, 28, 79, 42, 57, 121, 93, 159, 150, 151, 229, 35, 241, 242, 77, 107, 25, 5, 245, 215, 126, 96, 231, 98, 209, 142, 95, 222, 182, 235, 194, 9, 142, 82, 122, 181, 233, 55, 104, 0, 70, 217, 208, 188, 33, 188, 136, 223, 49, 234, 48, 99, 86, 143, 34, 214, 249, 97, 154, 106, 158, 4, 7, 189, 166, 189, 191, 1, 193, 216, 173, 180, 110, 54, 21, 8, 9, 83, 29, 114, 78, 154, 165, 206, 41, 255, 183, 123, 134, 17, 15, 199, 225, 116, 146, 16, 217, 205, 42, 172, 190, 168, 56, 25, 17, 70, 128, 165, 118, 35, 216, 198, 102, 117, 96, 122, 1, 16, 114, 207, 174, 254, 202, 115, 201, 155, 87, 164, 241, 34, 239, 24, 150, 71, 253, 173, 57, 169, 69, 17, 94, 204, 118, 77, 238, 6, 206, 241, 137, 99, 220, 68, 38, 141, 100, 248, 65, 232, 249, 47, 121, 81, 65, 147, 30, 52, 83, 38, 177, 218, 235, 154, 214, 191, 179, 249, 198, 233, 11, 69, 161, 140, 25, 240, 14, 98, 161, 76, 105, 7, 60, 155, 81, 190, 132, 39, 54, 219, 150, 146, 153, 53, 46, 46, 254, 80, 38, 84, 185, 153, 158, 232, 222, 252, 140, 93, 113, 18, 52, 225, 22, 119, 169, 54, 46, 206, 17, 138, 73, 171, 3, 63, 230, 69, 187, 131, 129, 32, 227, 224, 145, 118, 91, 92, 246, 19, 73, 233, 89, 253, 241, 85, 62, 152, 108, 130, 6, 33, 212, 62, 97, 68, 198, 139, 206, 170, 126, 55, 169, 207, 214, 127, 65, 56, 110, 195, 38, 93, 124, 118, 137, 179, 196, 202, 238, 214, 89, 29, 214, 111, 225, 161, 177, 10, 243, 20, 30, 228, 75, 168, 121, 129, 19, 203, 105, 215, 171, 119, 14, 178, 185, 194, 161, 92, 1, 126, 198, 57, 156, 169, 254, 128, 36, 21, 153, 229, 54, 160, 54, 11, 142, 28, 81, 110, 134, 102, 22, 167, 62, 218, 113, 194, 44, 111, 222, 44, 148, 211, 185, 73, 9, 4, 129, 240, 177, 184, 230, 149, 163, 13, 73, 123, 27, 177, 46, 30, 67, 210, 62, 72, 251, 110, 89, 45, 233, 219, 246, 195, 81, 103, 145, 166, 204, 176, 169, 31, 116, 12, 206, 122, 102, 185, 97, 148, 222, 5, 6, 241, 12, 32, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 32, 63, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 32, 0, 0, 132, 32, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 40, 67, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 192, 3, 0, 0, 192, 4, 0, 0, 192, 5, 0, 0, 192, 6, 0, 0, 192, 7, 0, 0, 192, 8, 0, 0, 192, 9, 0, 0, 192, 10, 0, 0, 192, 11, 0, 0, 192, 12, 0, 0, 192, 13, 0, 0, 192, 14, 0, 0, 192, 15, 0, 0, 192, 16, 0, 0, 192, 17, 0, 0, 192, 18, 0, 0, 192, 19, 0, 0, 192, 20, 0, 0, 192, 21, 0, 0, 192, 22, 0, 0, 192, 23, 0, 0, 192, 24, 0, 0, 192, 25, 0, 0, 192, 26, 0, 0, 192, 27, 0, 0, 192, 28, 0, 0, 192, 29, 0, 0, 192, 30, 0, 0, 192, 31, 0, 0, 192, 0, 0, 0, 179, 1, 0, 0, 195, 2, 0, 0, 195, 3, 0, 0, 195, 4, 0, 0, 195, 5, 0, 0, 195, 6, 0, 0, 195, 7, 0, 0, 195, 8, 0, 0, 195, 9, 0, 0, 195, 10, 0, 0, 195, 11, 0, 0, 195, 12, 0, 0, 195, 13, 0, 0, 211, 14, 0, 0, 195, 15, 0, 0, 195, 0, 0, 12, 187, 1, 0, 12, 195, 2, 0, 12, 195, 3, 0, 12, 195, 4, 0, 12, 211, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 95, 112, 137, 0, 255, 9, 47, 15, 16, 0, 17, 0, 18, 0, 0, 0, 8, 0, 7, 0, 9, 0, 6, 0, 10, 0, 5, 0, 11, 0, 4, 0, 12, 0, 3, 0, 13, 0, 2, 0, 14, 0, 1, 0, 15, 0, 96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 192, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 160, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 224, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 144, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 208, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 176, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 240, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 200, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 168, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 232, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 152, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 216, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 184, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 248, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 196, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 164, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 228, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 148, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 212, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 180, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 244, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 204, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 172, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 236, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 156, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 220, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 188, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8, 78, 0, 0, 9, 252, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 194, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 162, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 226, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 146, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 210, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 178, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 242, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 2, 1, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 202, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 170, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 234, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 154, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 218, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 186, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 250, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 198, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 166, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 230, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 150, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 214, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 182, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 246, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 206, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 174, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 238, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 158, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 222, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 190, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 254, 0, 96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 193, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 161, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 225, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 145, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 209, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 177, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 241, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 201, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 169, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 233, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 153, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 217, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 185, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 249, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 197, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 165, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 229, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 149, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 213, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 181, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 245, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 205, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 173, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 237, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 157, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 221, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 189, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);allocate([78, 0, 0, 9, 253, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 195, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 163, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 227, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 147, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 211, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 179, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 243, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 2, 1, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 203, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 171, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 235, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 155, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 219, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 187, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 251, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 199, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 167, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 231, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 151, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 215, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 183, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 247, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 207, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 175, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 239, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 159, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 223, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 191, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 255, 0, 16, 5, 1, 0, 23, 5, 1, 1, 19, 5, 17, 0, 27, 5, 1, 16, 17, 5, 5, 0, 25, 5, 1, 4, 21, 5, 65, 0, 29, 5, 1, 64, 16, 5, 3, 0, 24, 5, 1, 2, 20, 5, 33, 0, 28, 5, 1, 32, 18, 5, 9, 0, 26, 5, 1, 8, 22, 5, 129, 0, 64, 5, 0, 0, 16, 5, 2, 0, 23, 5, 129, 1, 19, 5, 25, 0, 27, 5, 1, 24, 17, 5, 7, 0, 25, 5, 1, 6, 21, 5, 97, 0, 29, 5, 1, 96, 16, 5, 4, 0, 24, 5, 1, 3, 20, 5, 49, 0, 28, 5, 1, 48, 18, 5, 13, 0, 26, 5, 1, 12, 22, 5, 193, 0, 64, 5, 0, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 13, 0, 15, 0, 17, 0, 19, 0, 23, 0, 27, 0, 31, 0, 35, 0, 43, 0, 51, 0, 59, 0, 67, 0, 83, 0, 99, 0, 115, 0, 131, 0, 163, 0, 195, 0, 227, 0, 2, 1, 0, 0, 0, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 17, 0, 17, 0, 18, 0, 18, 0, 18, 0, 18, 0, 19, 0, 19, 0, 19, 0, 19, 0, 20, 0, 20, 0, 20, 0, 20, 0, 21, 0, 21, 0, 21, 0, 21, 0, 16, 0, 192, 0, 202, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 7, 0, 9, 0, 13, 0, 17, 0, 25, 0, 33, 0, 49, 0, 65, 0, 97, 0, 129, 0, 193, 0, 1, 1, 129, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 8, 1, 12, 1, 16, 1, 24, 1, 32, 1, 48, 1, 64, 1, 96, 0, 0, 0, 0, 16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 22, 0, 23, 0, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 26, 0, 27, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 64, 0, 64, 0, 99, 111, 117, 108, 100, 110, 39, 116, 32, 99, 114, 101, 97, 116, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 37, 115, 10, 0, 37, 115, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 71, 101, 116, 71, 108, 111, 98, 97, 108, 73, 110, 102, 111, 32, 10, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 71, 101, 116, 67, 117, 114, 114, 101, 110, 116, 70, 105, 108, 101, 73, 110, 102, 111, 10, 0, 83, 116, 111, 114, 101, 100, 0, 68, 101, 102, 108, 58, 78, 0, 68, 101, 102, 108, 58, 88, 0, 68, 101, 102, 108, 58, 70, 0, 66, 90, 105, 112, 50, 32, 0, 85, 110, 107, 110, 46, 32, 0, 32, 32, 37, 54, 115, 37, 99, 0, 32, 37, 51, 108, 117, 37, 37, 32, 32, 37, 50, 46, 50, 108, 117, 45, 37, 50, 46, 50, 108, 117, 45, 37, 50, 46, 50, 108, 117, 32, 32, 37, 50, 46, 50, 108, 117, 58, 37, 50, 46, 50, 108, 117, 32, 32, 37, 56, 46, 56, 108, 120, 32, 32, 32, 37, 115, 10, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 71, 111, 84, 111, 78, 101, 120, 116, 70, 105, 108, 101, 10, 0, 99, 114, 101, 97, 116, 105, 110, 103, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 58, 32, 37, 115, 10, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 79, 112, 101, 110, 67, 117, 114, 114, 101, 110, 116, 70, 105, 108, 101, 80, 97, 115, 115, 119, 111, 114, 100, 10, 0, 84, 104, 101, 32, 102, 105, 108, 101, 32, 37, 115, 32, 101, 120, 105, 115, 116, 115, 46, 32, 79, 118, 101, 114, 119, 114, 105, 116, 101, 32, 63, 32, 91, 121, 93, 101, 115, 44, 32, 91, 110, 93, 111, 44, 32, 91, 65, 93, 108, 108, 58, 32, 0, 37, 49, 115, 0, 101, 114, 114, 111, 114, 32, 111, 112, 101, 110, 105, 110, 103, 32, 37, 115, 10, 0, 32, 101, 120, 116, 114, 97, 99, 116, 105, 110, 103, 58, 32, 37, 115, 10, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 82, 101, 97, 100, 67, 117, 114, 114, 101, 110, 116, 70, 105, 108, 101, 10, 0, 101, 114, 114, 111, 114, 32, 37, 100, 32, 119, 105, 116, 104, 32, 122, 105, 112, 102, 105, 108, 101, 32, 105, 110, 32, 117, 110, 122, 67, 108, 111, 115, 101, 67, 117, 114, 114, 101, 110, 116, 70, 105, 108, 101, 10, 0, 102, 105, 108, 101, 32, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 116, 104, 101, 32, 122, 105, 112, 102, 105, 108, 101, 10, 0, 46, 122, 105, 112, 0, 67, 97, 110, 110, 111, 116, 32, 111, 112, 101, 110, 32, 37, 115, 32, 111, 114, 32, 37, 115, 46, 122, 105, 112, 10, 0, 37, 115, 32, 111, 112, 101, 110, 101, 100, 10, 0, 69, 114, 114, 111, 114, 32, 99, 104, 97, 110, 103, 105, 110, 103, 32, 105, 110, 116, 111, 32, 37, 115, 44, 32, 97, 98, 111, 114, 116, 105, 110, 103, 10, 0, 77, 105, 110, 105, 85, 110, 122, 32, 49, 46, 48, 49, 98, 44, 32, 100, 101, 109, 111, 32, 111, 102, 32, 122, 76, 105, 98, 32, 43, 32, 85, 110, 122, 32, 112, 97, 99, 107, 97, 103, 101, 32, 119, 114, 105, 116, 116, 101, 110, 32, 98, 121, 32, 71, 105, 108, 108, 101, 115, 32, 86, 111, 108, 108, 97, 110, 116, 0, 109, 111, 114, 101, 32, 105, 110, 102, 111, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 105, 110, 105, 109, 97, 103, 101, 46, 99, 111, 109, 47, 122, 76, 105, 98, 68, 108, 108, 47, 117, 110, 122, 105, 112, 46, 104, 116, 109, 108, 10, 0, 85, 115, 97, 103, 101, 32, 58, 32, 109, 105, 110, 105, 117, 110, 122, 32, 91, 45, 101, 93, 32, 91, 45, 120, 93, 32, 91, 45, 118, 93, 32, 91, 45, 108, 93, 32, 91, 45, 111, 93, 32, 91, 45, 112, 32, 112, 97, 115, 115, 119, 111, 114, 100, 93, 32, 102, 105, 108, 101, 46, 122, 105, 112, 32, 91, 102, 105, 108, 101, 95, 116, 111, 95, 101, 120, 116, 114, 46, 93, 32, 91, 45, 100, 32, 101, 120, 116, 114, 97, 99, 116, 100, 105, 114, 93, 10, 10, 32, 32, 45, 101, 32, 32, 69, 120, 116, 114, 97, 99, 116, 32, 119, 105, 116, 104, 111, 117, 116, 32, 112, 97, 116, 104, 110, 97, 109, 101, 32, 40, 106, 117, 110, 107, 32, 112, 97, 116, 104, 115, 41, 10, 32, 32, 45, 120, 32, 32, 69, 120, 116, 114, 97, 99, 116, 32, 119, 105, 116, 104, 32, 112, 97, 116, 104, 110, 97, 109, 101, 10, 32, 32, 45, 118, 32, 32, 108, 105, 115, 116, 32, 102, 105, 108, 101, 115, 10, 32, 32, 45, 108, 32, 32, 108, 105, 115, 116, 32, 102, 105, 108, 101, 115, 10, 32, 32, 45, 100, 32, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 116, 111, 32, 101, 120, 116, 114, 97, 99, 116, 32, 105, 110, 116, 111, 10, 32, 32, 45, 111, 32, 32, 111, 118, 101, 114, 119, 114, 105, 116, 101, 32, 102, 105, 108, 101, 115, 32, 119, 105, 116, 104, 111, 117, 116, 32, 112, 114, 111, 109, 112, 116, 105, 110, 103, 10, 32, 32, 45, 112, 32, 32, 101, 120, 116, 114, 97, 99, 116, 32, 99, 114, 121, 112, 116, 101, 100, 32, 102, 105, 108, 101, 32, 117, 115, 105, 110, 103, 32, 112, 97, 115, 115, 119, 111, 114, 100, 10, 0, 32, 32, 76, 101, 110, 103, 116, 104, 32, 32, 77, 101, 116, 104, 111, 100, 32, 32, 32, 32, 32, 83, 105, 122, 101, 32, 82, 97, 116, 105, 111, 32, 32, 32, 68, 97, 116, 101, 32, 32, 32, 32, 84, 105, 109, 101, 32, 32, 32, 67, 82, 67, 45, 51, 50, 32, 32, 32, 32, 32, 78, 97, 109, 101, 0, 32, 32, 45, 45, 45, 45, 45, 45, 32, 32, 45, 45, 45, 45, 45, 45, 32, 32, 32, 32, 32, 45, 45, 45, 45, 32, 45, 45, 45, 45, 45, 32, 32, 32, 45, 45, 45, 45, 32, 32, 32, 32, 45, 45, 45, 45, 32, 32, 32, 45, 45, 45, 45, 45, 45, 32, 32, 32, 32, 32, 45, 45, 45, 45, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 119, 114, 105, 116, 105, 110, 103, 32, 101, 120, 116, 114, 97, 99, 116, 101, 100, 32, 102, 105, 108, 101, 0, 69, 114, 114, 111, 114, 32, 97, 108, 108, 111, 99, 97, 116, 105, 110, 103, 32, 109, 101, 109, 111, 114, 121, 0, 119, 98, 0, 114, 98, 0, 114, 43, 98, 0, 49, 46, 50, 46, 49, 48, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 104, 101, 97, 100, 101, 114, 32, 99, 104, 101, 99, 107, 0, 117, 110, 107, 110, 111, 119, 110, 32, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 32, 109, 101, 116, 104, 111, 100, 0, 105, 110, 118, 97, 108, 105, 100, 32, 119, 105, 110, 100, 111, 119, 32, 115, 105, 122, 101, 0, 117, 110, 107, 110, 111, 119, 110, 32, 104, 101, 97, 100, 101, 114, 32, 102, 108, 97, 103, 115, 32, 115, 101, 116, 0, 104, 101, 97, 100, 101, 114, 32, 99, 114, 99, 32, 109, 105, 115, 109, 97, 116, 99, 104, 0, 105, 110, 118, 97, 108, 105, 100, 32, 98, 108, 111, 99, 107, 32, 116, 121, 112, 101, 0, 105, 110, 118, 97, 108, 105, 100, 32, 115, 116, 111, 114, 101, 100, 32, 98, 108, 111, 99, 107, 32, 108, 101, 110, 103, 116, 104, 115, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 108, 101, 110, 103, 116, 104, 32, 111, 114, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 115, 121, 109, 98, 111, 108, 115, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 100, 101, 32, 108, 101, 110, 103, 116, 104, 115, 32, 115, 101, 116, 0, 105, 110, 118, 97, 108, 105, 100, 32, 98, 105, 116, 32, 108, 101, 110, 103, 116, 104, 32, 114, 101, 112, 101, 97, 116, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 100, 101, 32, 45, 45, 32, 109, 105, 115, 115, 105, 110, 103, 32, 101, 110, 100, 45, 111, 102, 45, 98, 108, 111, 99, 107, 0, 105, 110, 118, 97, 108, 105, 100, 32, 108, 105, 116, 101, 114, 97, 108, 47, 108, 101, 110, 103, 116, 104, 115, 32, 115, 101, 116, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 115, 32, 115, 101, 116, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 100, 97, 116, 97, 32, 99, 104, 101, 99, 107, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 108, 101, 110, 103, 116, 104, 32, 99, 104, 101, 99, 107, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 116, 111, 111, 32, 102, 97, 114, 32, 98, 97, 99, 107, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 99, 111, 100, 101, 0, 105, 110, 118, 97, 108, 105, 100, 32, 108, 105, 116, 101, 114, 97, 108, 47, 108, 101, 110, 103, 116, 104, 32, 99, 111, 100, 101, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 4, 7, 3, 6, 5, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 114, 119, 97, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);var tempDoublePtr = STATICTOP;STATICTOP += 16;Module["_i64Subtract"] = _i64Subtract;Module["_i64Add"] = _i64Add;Module["_memset"] = _memset;function _pthread_cleanup_push(routine, arg) {
	    __ATEXIT__.push(function () {
	      Runtime.dynCall("vi", routine, [arg]);
	    });_pthread_cleanup_push.level = __ATEXIT__.length;
	  }Module["_bitshift64Lshr"] = _bitshift64Lshr;var ERRNO_CODES = { EPERM: 1, ENOENT: 2, ESRCH: 3, EINTR: 4, EIO: 5, ENXIO: 6, E2BIG: 7, ENOEXEC: 8, EBADF: 9, ECHILD: 10, EAGAIN: 11, EWOULDBLOCK: 11, ENOMEM: 12, EACCES: 13, EFAULT: 14, ENOTBLK: 15, EBUSY: 16, EEXIST: 17, EXDEV: 18, ENODEV: 19, ENOTDIR: 20, EISDIR: 21, EINVAL: 22, ENFILE: 23, EMFILE: 24, ENOTTY: 25, ETXTBSY: 26, EFBIG: 27, ENOSPC: 28, ESPIPE: 29, EROFS: 30, EMLINK: 31, EPIPE: 32, EDOM: 33, ERANGE: 34, ENOMSG: 42, EIDRM: 43, ECHRNG: 44, EL2NSYNC: 45, EL3HLT: 46, EL3RST: 47, ELNRNG: 48, EUNATCH: 49, ENOCSI: 50, EL2HLT: 51, EDEADLK: 35, ENOLCK: 37, EBADE: 52, EBADR: 53, EXFULL: 54, ENOANO: 55, EBADRQC: 56, EBADSLT: 57, EDEADLOCK: 35, EBFONT: 59, ENOSTR: 60, ENODATA: 61, ETIME: 62, ENOSR: 63, ENONET: 64, ENOPKG: 65, EREMOTE: 66, ENOLINK: 67, EADV: 68, ESRMNT: 69, ECOMM: 70, EPROTO: 71, EMULTIHOP: 72, EDOTDOT: 73, EBADMSG: 74, ENOTUNIQ: 76, EBADFD: 77, EREMCHG: 78, ELIBACC: 79, ELIBBAD: 80, ELIBSCN: 81, ELIBMAX: 82, ELIBEXEC: 83, ENOSYS: 38, ENOTEMPTY: 39, ENAMETOOLONG: 36, ELOOP: 40, EOPNOTSUPP: 95, EPFNOSUPPORT: 96, ECONNRESET: 104, ENOBUFS: 105, EAFNOSUPPORT: 97, EPROTOTYPE: 91, ENOTSOCK: 88, ENOPROTOOPT: 92, ESHUTDOWN: 108, ECONNREFUSED: 111, EADDRINUSE: 98, ECONNABORTED: 103, ENETUNREACH: 101, ENETDOWN: 100, ETIMEDOUT: 110, EHOSTDOWN: 112, EHOSTUNREACH: 113, EINPROGRESS: 115, EALREADY: 114, EDESTADDRREQ: 89, EMSGSIZE: 90, EPROTONOSUPPORT: 93, ESOCKTNOSUPPORT: 94, EADDRNOTAVAIL: 99, ENETRESET: 102, EISCONN: 106, ENOTCONN: 107, ETOOMANYREFS: 109, EUSERS: 87, EDQUOT: 122, ESTALE: 116, ENOTSUP: 95, ENOMEDIUM: 123, EILSEQ: 84, EOVERFLOW: 75, ECANCELED: 125, ENOTRECOVERABLE: 131, EOWNERDEAD: 130, ESTRPIPE: 86 };var ERRNO_MESSAGES = { 0: "Success", 1: "Not super-user", 2: "No such file or directory", 3: "No such process", 4: "Interrupted system call", 5: "I/O error", 6: "No such device or address", 7: "Arg list too long", 8: "Exec format error", 9: "Bad file number", 10: "No children", 11: "No more processes", 12: "Not enough core", 13: "Permission denied", 14: "Bad address", 15: "Block device required", 16: "Mount device busy", 17: "File exists", 18: "Cross-device link", 19: "No such device", 20: "Not a directory", 21: "Is a directory", 22: "Invalid argument", 23: "Too many open files in system", 24: "Too many open files", 25: "Not a typewriter", 26: "Text file busy", 27: "File too large", 28: "No space left on device", 29: "Illegal seek", 30: "Read only file system", 31: "Too many links", 32: "Broken pipe", 33: "Math arg out of domain of func", 34: "Math result not representable", 35: "File locking deadlock error", 36: "File or path name too long", 37: "No record locks available", 38: "Function not implemented", 39: "Directory not empty", 40: "Too many symbolic links", 42: "No message of desired type", 43: "Identifier removed", 44: "Channel number out of range", 45: "Level 2 not synchronized", 46: "Level 3 halted", 47: "Level 3 reset", 48: "Link number out of range", 49: "Protocol driver not attached", 50: "No CSI structure available", 51: "Level 2 halted", 52: "Invalid exchange", 53: "Invalid request descriptor", 54: "Exchange full", 55: "No anode", 56: "Invalid request code", 57: "Invalid slot", 59: "Bad font file fmt", 60: "Device not a stream", 61: "No data (for no delay io)", 62: "Timer expired", 63: "Out of streams resources", 64: "Machine is not on the network", 65: "Package not installed", 66: "The object is remote", 67: "The link has been severed", 68: "Advertise error", 69: "Srmount error", 70: "Communication error on send", 71: "Protocol error", 72: "Multihop attempted", 73: "Cross mount point (not really error)", 74: "Trying to read unreadable message", 75: "Value too large for defined data type", 76: "Given log. name not unique", 77: "f.d. invalid for this operation", 78: "Remote address changed", 79: "Can   access a needed shared lib", 80: "Accessing a corrupted shared lib", 81: ".lib section in a.out corrupted", 82: "Attempting to link in too many libs", 83: "Attempting to exec a shared library", 84: "Illegal byte sequence", 86: "Streams pipe error", 87: "Too many users", 88: "Socket operation on non-socket", 89: "Destination address required", 90: "Message too long", 91: "Protocol wrong type for socket", 92: "Protocol not available", 93: "Unknown protocol", 94: "Socket type not supported", 95: "Not supported", 96: "Protocol family not supported", 97: "Address family not supported by protocol family", 98: "Address already in use", 99: "Address not available", 100: "Network interface is not configured", 101: "Network is unreachable", 102: "Connection reset by network", 103: "Connection aborted", 104: "Connection reset by peer", 105: "No buffer space available", 106: "Socket is already connected", 107: "Socket is not connected", 108: "Can't send after socket shutdown", 109: "Too many references", 110: "Connection timed out", 111: "Connection refused", 112: "Host is down", 113: "Host is unreachable", 114: "Socket already connected", 115: "Connection already in progress", 116: "Stale file handle", 122: "Quota exceeded", 123: "No medium (in tape drive)", 125: "Operation canceled", 130: "Previous owner died", 131: "State not recoverable" };function ___setErrNo(value) {
	    if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;return value;
	  }var PATH = { splitPath: function splitPath(filename) {
	      var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1);
	    }, normalizeArray: function normalizeArray(parts, allowAboveRoot) {
	      var up = 0;for (var i = parts.length - 1; i >= 0; i--) {
	        var last = parts[i];if (last === ".") {
	          parts.splice(i, 1);
	        } else if (last === "..") {
	          parts.splice(i, 1);up++;
	        } else if (up) {
	          parts.splice(i, 1);up--;
	        }
	      }if (allowAboveRoot) {
	        for (; up--; up) {
	          parts.unshift("..");
	        }
	      }return parts;
	    }, normalize: function normalize(path) {
	      var isAbsolute = path.charAt(0) === "/",
	          trailingSlash = path.substr(-1) === "/";path = PATH.normalizeArray(path.split("/").filter(function (p) {
	        return !!p;
	      }), !isAbsolute).join("/");if (!path && !isAbsolute) {
	        path = ".";
	      }if (path && trailingSlash) {
	        path += "/";
	      }return (isAbsolute ? "/" : "") + path;
	    }, dirname: function dirname(path) {
	      var result = PATH.splitPath(path),
	          root = result[0],
	          dir = result[1];if (!root && !dir) {
	        return ".";
	      }if (dir) {
	        dir = dir.substr(0, dir.length - 1);
	      }return root + dir;
	    }, basename: function basename(path) {
	      if (path === "/") return "/";var lastSlash = path.lastIndexOf("/");if (lastSlash === -1) return path;return path.substr(lastSlash + 1);
	    }, extname: function extname(path) {
	      return PATH.splitPath(path)[3];
	    }, join: function join() {
	      var paths = Array.prototype.slice.call(arguments, 0);return PATH.normalize(paths.join("/"));
	    }, join2: function join2(l, r) {
	      return PATH.normalize(l + "/" + r);
	    }, resolve: function resolve() {
	      var resolvedPath = "",
	          resolvedAbsolute = false;for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	        var path = i >= 0 ? arguments[i] : FS.cwd();if (typeof path !== "string") {
	          throw new TypeError("Arguments to path.resolve must be strings");
	        } else if (!path) {
	          return "";
	        }resolvedPath = path + "/" + resolvedPath;resolvedAbsolute = path.charAt(0) === "/";
	      }resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function (p) {
	        return !!p;
	      }), !resolvedAbsolute).join("/");return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
	    }, relative: function relative(from, to) {
	      from = PATH.resolve(from).substr(1);to = PATH.resolve(to).substr(1);function trim(arr) {
	        var start = 0;for (; start < arr.length; start++) {
	          if (arr[start] !== "") break;
	        }var end = arr.length - 1;for (; end >= 0; end--) {
	          if (arr[end] !== "") break;
	        }if (start > end) return [];return arr.slice(start, end - start + 1);
	      }var fromParts = trim(from.split("/"));var toParts = trim(to.split("/"));var length = Math.min(fromParts.length, toParts.length);var samePartsLength = length;for (var i = 0; i < length; i++) {
	        if (fromParts[i] !== toParts[i]) {
	          samePartsLength = i;break;
	        }
	      }var outputParts = [];for (var i = samePartsLength; i < fromParts.length; i++) {
	        outputParts.push("..");
	      }outputParts = outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/");
	    } };var TTY = { ttys: [], init: function init() {}, shutdown: function shutdown() {}, register: function register(dev, ops) {
	      TTY.ttys[dev] = { input: [], output: [], ops: ops };FS.registerDevice(dev, TTY.stream_ops);
	    }, stream_ops: { open: function open(stream) {
	        var tty = TTY.ttys[stream.node.rdev];if (!tty) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }stream.tty = tty;stream.seekable = false;
	      }, close: function close(stream) {
	        stream.tty.ops.flush(stream.tty);
	      }, flush: function flush(stream) {
	        stream.tty.ops.flush(stream.tty);
	      }, read: function read(stream, buffer, offset, length, pos) {
	        if (!stream.tty || !stream.tty.ops.get_char) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	        }var bytesRead = 0;for (var i = 0; i < length; i++) {
	          var result;try {
	            result = stream.tty.ops.get_char(stream.tty);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }if (result === undefined && bytesRead === 0) {
	            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	          }if (result === null || result === undefined) break;bytesRead++;buffer[offset + i] = result;
	        }if (bytesRead) {
	          stream.node.timestamp = Date.now();
	        }return bytesRead;
	      }, write: function write(stream, buffer, offset, length, pos) {
	        if (!stream.tty || !stream.tty.ops.put_char) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	        }for (var i = 0; i < length; i++) {
	          try {
	            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }
	        }if (length) {
	          stream.node.timestamp = Date.now();
	        }return i;
	      } }, default_tty_ops: { get_char: function get_char(tty) {
	        if (!tty.input.length) {
	          var result = null;if (ENVIRONMENT_IS_NODE) {
	            var BUFSIZE = 256;var buf = new Buffer(BUFSIZE);var bytesRead = 0;var isPosixPlatform = process.platform != "win32";var fd = process.stdin.fd;if (isPosixPlatform) {
	              var usingDevice = false;try {
	                fd = fs.openSync("/dev/stdin", "r");usingDevice = true;
	              } catch (e) {}
	            }try {
	              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
	            } catch (e) {
	              if (e.toString().indexOf("EOF") != -1) bytesRead = 0;else throw e;
	            }if (usingDevice) {
	              fs.closeSync(fd);
	            }if (bytesRead > 0) {
	              result = buf.slice(0, bytesRead).toString("utf-8");
	            } else {
	              result = null;
	            }
	          } else if (typeof window != "undefined" && typeof window.prompt == "function") {
	            result = window.prompt("Input: ");if (result !== null) {
	              result += "\n";
	            }
	          } else if (typeof readline == "function") {
	            result = readline();if (result !== null) {
	              result += "\n";
	            }
	          }if (!result) {
	            return null;
	          }tty.input = intArrayFromString(result, true);
	        }return tty.input.shift();
	      }, put_char: function put_char(tty, val) {
	        if (val === null || val === 10) {
	          Module["print"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        } else {
	          if (val != 0) tty.output.push(val);
	        }
	      }, flush: function flush(tty) {
	        if (tty.output && tty.output.length > 0) {
	          Module["print"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        }
	      } }, default_tty1_ops: { put_char: function put_char(tty, val) {
	        if (val === null || val === 10) {
	          Module["printErr"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        } else {
	          if (val != 0) tty.output.push(val);
	        }
	      }, flush: function flush(tty) {
	        if (tty.output && tty.output.length > 0) {
	          Module["printErr"](UTF8ArrayToString(tty.output, 0));tty.output = [];
	        }
	      } } };var MEMFS = { ops_table: null, mount: function mount(_mount) {
	      return MEMFS.createNode(null, "/", 16384 | 511, 0);
	    }, createNode: function createNode(parent, name, mode, dev) {
	      if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (!MEMFS.ops_table) {
	        MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };
	      }var node = FS.createNode(parent, name, mode, dev);if (FS.isDir(node.mode)) {
	        node.node_ops = MEMFS.ops_table.dir.node;node.stream_ops = MEMFS.ops_table.dir.stream;node.contents = {};
	      } else if (FS.isFile(node.mode)) {
	        node.node_ops = MEMFS.ops_table.file.node;node.stream_ops = MEMFS.ops_table.file.stream;node.usedBytes = 0;node.contents = null;
	      } else if (FS.isLink(node.mode)) {
	        node.node_ops = MEMFS.ops_table.link.node;node.stream_ops = MEMFS.ops_table.link.stream;
	      } else if (FS.isChrdev(node.mode)) {
	        node.node_ops = MEMFS.ops_table.chrdev.node;node.stream_ops = MEMFS.ops_table.chrdev.stream;
	      }node.timestamp = Date.now();if (parent) {
	        parent.contents[name] = node;
	      }return node;
	    }, getFileDataAsRegularArray: function getFileDataAsRegularArray(node) {
	      if (node.contents && node.contents.subarray) {
	        var arr = [];for (var i = 0; i < node.usedBytes; ++i) {
	          arr.push(node.contents[i]);
	        }return arr;
	      }return node.contents;
	    }, getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {
	      if (!node.contents) return new Uint8Array();if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);return new Uint8Array(node.contents);
	    }, expandFileStorage: function expandFileStorage(node, newCapacity) {
	      if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
	        node.contents = MEMFS.getFileDataAsRegularArray(node);node.usedBytes = node.contents.length;
	      }if (!node.contents || node.contents.subarray) {
	        var prevCapacity = node.contents ? node.contents.length : 0;if (prevCapacity >= newCapacity) return;var CAPACITY_DOUBLING_MAX = 1024 * 1024;newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);var oldContents = node.contents;node.contents = new Uint8Array(newCapacity);if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);return;
	      }if (!node.contents && newCapacity > 0) node.contents = [];while (node.contents.length < newCapacity) {
	        node.contents.push(0);
	      }
	    }, resizeFileStorage: function resizeFileStorage(node, newSize) {
	      if (node.usedBytes == newSize) return;if (newSize == 0) {
	        node.contents = null;node.usedBytes = 0;return;
	      }if (!node.contents || node.contents.subarray) {
	        var oldContents = node.contents;node.contents = new Uint8Array(new ArrayBuffer(newSize));if (oldContents) {
	          node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
	        }node.usedBytes = newSize;return;
	      }if (!node.contents) node.contents = [];if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) {
	        node.contents.push(0);
	      }node.usedBytes = newSize;
	    }, node_ops: { getattr: function getattr(node) {
	        var attr = {};attr.dev = FS.isChrdev(node.mode) ? node.id : 1;attr.ino = node.id;attr.mode = node.mode;attr.nlink = 1;attr.uid = 0;attr.gid = 0;attr.rdev = node.rdev;if (FS.isDir(node.mode)) {
	          attr.size = 4096;
	        } else if (FS.isFile(node.mode)) {
	          attr.size = node.usedBytes;
	        } else if (FS.isLink(node.mode)) {
	          attr.size = node.link.length;
	        } else {
	          attr.size = 0;
	        }attr.atime = new Date(node.timestamp);attr.mtime = new Date(node.timestamp);attr.ctime = new Date(node.timestamp);attr.blksize = 4096;attr.blocks = Math.ceil(attr.size / attr.blksize);return attr;
	      }, setattr: function setattr(node, attr) {
	        if (attr.mode !== undefined) {
	          node.mode = attr.mode;
	        }if (attr.timestamp !== undefined) {
	          node.timestamp = attr.timestamp;
	        }if (attr.size !== undefined) {
	          MEMFS.resizeFileStorage(node, attr.size);
	        }
	      }, lookup: function lookup(parent, name) {
	        throw FS.genericErrors[ERRNO_CODES.ENOENT];
	      }, mknod: function mknod(parent, name, mode, dev) {
	        return MEMFS.createNode(parent, name, mode, dev);
	      }, rename: function rename(old_node, new_dir, new_name) {
	        if (FS.isDir(old_node.mode)) {
	          var new_node;try {
	            new_node = FS.lookupNode(new_dir, new_name);
	          } catch (e) {}if (new_node) {
	            for (var i in new_node.contents) {
	              throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	            }
	          }
	        }delete old_node.parent.contents[old_node.name];old_node.name = new_name;new_dir.contents[new_name] = old_node;old_node.parent = new_dir;
	      }, unlink: function unlink(parent, name) {
	        delete parent.contents[name];
	      }, rmdir: function rmdir(parent, name) {
	        var node = FS.lookupNode(parent, name);for (var i in node.contents) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	        }delete parent.contents[name];
	      }, readdir: function readdir(node) {
	        var entries = [".", ".."];for (var key in node.contents) {
	          if (!node.contents.hasOwnProperty(key)) {
	            continue;
	          }entries.push(key);
	        }return entries;
	      }, symlink: function symlink(parent, newname, oldpath) {
	        var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);node.link = oldpath;return node;
	      }, readlink: function readlink(node) {
	        if (!FS.isLink(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return node.link;
	      } }, stream_ops: { read: function read(stream, buffer, offset, length, position) {
	        var contents = stream.node.contents;if (position >= stream.node.usedBytes) return 0;var size = Math.min(stream.node.usedBytes - position, length);assert(size >= 0);if (size > 8 && contents.subarray) {
	          buffer.set(contents.subarray(position, position + size), offset);
	        } else {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents[position + i];
	          }
	        }return size;
	      }, write: function write(stream, buffer, offset, length, position, canOwn) {
	        if (!length) return 0;var node = stream.node;node.timestamp = Date.now();if (buffer.subarray && (!node.contents || node.contents.subarray)) {
	          if (canOwn) {
	            node.contents = buffer.subarray(offset, offset + length);node.usedBytes = length;return length;
	          } else if (node.usedBytes === 0 && position === 0) {
	            node.contents = new Uint8Array(buffer.subarray(offset, offset + length));node.usedBytes = length;return length;
	          } else if (position + length <= node.usedBytes) {
	            node.contents.set(buffer.subarray(offset, offset + length), position);return length;
	          }
	        }MEMFS.expandFileStorage(node, position + length);if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position);else {
	          for (var i = 0; i < length; i++) {
	            node.contents[position + i] = buffer[offset + i];
	          }
	        }node.usedBytes = Math.max(node.usedBytes, position + length);return length;
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            position += stream.node.usedBytes;
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      }, allocate: function allocate(stream, offset, length) {
	        MEMFS.expandFileStorage(stream.node, offset + length);stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
	      }, mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {
	        if (!FS.isFile(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }var ptr;var allocated;var contents = stream.node.contents;if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
	          allocated = false;ptr = contents.byteOffset;
	        } else {
	          if (position > 0 || position + length < stream.node.usedBytes) {
	            if (contents.subarray) {
	              contents = contents.subarray(position, position + length);
	            } else {
	              contents = Array.prototype.slice.call(contents, position, position + length);
	            }
	          }allocated = true;ptr = _malloc(length);if (!ptr) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
	          }buffer.set(contents, ptr);
	        }return { ptr: ptr, allocated: allocated };
	      }, msync: function msync(stream, buffer, offset, length, mmapFlags) {
	        if (!FS.isFile(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }if (mmapFlags & 2) {
	          return 0;
	        }var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);return 0;
	      } } };var IDBFS = { dbs: {}, indexedDB: function (_indexedDB) {
	      function indexedDB() {
	        return _indexedDB.apply(this, arguments);
	      }
	
	      indexedDB.toString = function () {
	        return _indexedDB.toString();
	      };
	
	      return indexedDB;
	    }(function () {
	      if (typeof indexedDB !== "undefined") return indexedDB;var ret = null;if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;assert(ret, "IDBFS used, but indexedDB not supported");return ret;
	    }), DB_VERSION: 21, DB_STORE_NAME: "FILE_DATA", mount: function mount(_mount2) {
	      return MEMFS.mount.apply(null, arguments);
	    }, syncfs: function syncfs(mount, populate, callback) {
	      IDBFS.getLocalSet(mount, function (err, local) {
	        if (err) return callback(err);IDBFS.getRemoteSet(mount, function (err, remote) {
	          if (err) return callback(err);var src = populate ? remote : local;var dst = populate ? local : remote;IDBFS.reconcile(src, dst, callback);
	        });
	      });
	    }, getDB: function getDB(name, callback) {
	      var db = IDBFS.dbs[name];if (db) {
	        return callback(null, db);
	      }var req;try {
	        req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
	      } catch (e) {
	        return callback(e);
	      }if (!req) {
	        return callback("Unable to connect to IndexedDB");
	      }req.onupgradeneeded = function (e) {
	        var db = e.target.result;var transaction = e.target.transaction;var fileStore;if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
	          fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
	        } else {
	          fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
	        }if (!fileStore.indexNames.contains("timestamp")) {
	          fileStore.createIndex("timestamp", "timestamp", { unique: false });
	        }
	      };req.onsuccess = function () {
	        db = req.result;IDBFS.dbs[name] = db;callback(null, db);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, getLocalSet: function getLocalSet(mount, callback) {
	      var entries = {};function isRealDir(p) {
	        return p !== "." && p !== "..";
	      }function toAbsolute(root) {
	        return function (p) {
	          return PATH.join2(root, p);
	        };
	      }var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while (check.length) {
	        var path = check.pop();var stat;try {
	          stat = FS.stat(path);
	        } catch (e) {
	          return callback(e);
	        }if (FS.isDir(stat.mode)) {
	          check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
	        }entries[path] = { timestamp: stat.mtime };
	      }return callback(null, { type: "local", entries: entries });
	    }, getRemoteSet: function getRemoteSet(mount, callback) {
	      var entries = {};IDBFS.getDB(mount.mountpoint, function (err, db) {
	        if (err) return callback(err);var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");transaction.onerror = function (e) {
	          callback(this.error);e.preventDefault();
	        };var store = transaction.objectStore(IDBFS.DB_STORE_NAME);var index = store.index("timestamp");index.openKeyCursor().onsuccess = function (event) {
	          var cursor = event.target.result;if (!cursor) {
	            return callback(null, { type: "remote", db: db, entries: entries });
	          }entries[cursor.primaryKey] = { timestamp: cursor.key };cursor.continue();
	        };
	      });
	    }, loadLocalEntry: function loadLocalEntry(path, callback) {
	      var stat, node;try {
	        var lookup = FS.lookupPath(path);node = lookup.node;stat = FS.stat(path);
	      } catch (e) {
	        return callback(e);
	      }if (FS.isDir(stat.mode)) {
	        return callback(null, { timestamp: stat.mtime, mode: stat.mode });
	      } else if (FS.isFile(stat.mode)) {
	        node.contents = MEMFS.getFileDataAsTypedArray(node);return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
	      } else {
	        return callback(new Error("node type not supported"));
	      }
	    }, storeLocalEntry: function storeLocalEntry(path, entry, callback) {
	      try {
	        if (FS.isDir(entry.mode)) {
	          FS.mkdir(path, entry.mode);
	        } else if (FS.isFile(entry.mode)) {
	          FS.writeFile(path, entry.contents, { encoding: "binary", canOwn: true });
	        } else {
	          return callback(new Error("node type not supported"));
	        }FS.chmod(path, entry.mode);FS.utime(path, entry.timestamp, entry.timestamp);
	      } catch (e) {
	        return callback(e);
	      }callback(null);
	    }, removeLocalEntry: function removeLocalEntry(path, callback) {
	      try {
	        var lookup = FS.lookupPath(path);var stat = FS.stat(path);if (FS.isDir(stat.mode)) {
	          FS.rmdir(path);
	        } else if (FS.isFile(stat.mode)) {
	          FS.unlink(path);
	        }
	      } catch (e) {
	        return callback(e);
	      }callback(null);
	    }, loadRemoteEntry: function loadRemoteEntry(store, path, callback) {
	      var req = store.get(path);req.onsuccess = function (event) {
	        callback(null, event.target.result);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, storeRemoteEntry: function storeRemoteEntry(store, path, entry, callback) {
	      var req = store.put(entry, path);req.onsuccess = function () {
	        callback(null);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, removeRemoteEntry: function removeRemoteEntry(store, path, callback) {
	      var req = store.delete(path);req.onsuccess = function () {
	        callback(null);
	      };req.onerror = function (e) {
	        callback(this.error);e.preventDefault();
	      };
	    }, reconcile: function reconcile(src, dst, callback) {
	      var total = 0;var create = [];Object.keys(src.entries).forEach(function (key) {
	        var e = src.entries[key];var e2 = dst.entries[key];if (!e2 || e.timestamp > e2.timestamp) {
	          create.push(key);total++;
	        }
	      });var remove = [];Object.keys(dst.entries).forEach(function (key) {
	        var e = dst.entries[key];var e2 = src.entries[key];if (!e2) {
	          remove.push(key);total++;
	        }
	      });if (!total) {
	        return callback(null);
	      }var completed = 0;var db = src.type === "remote" ? src.db : dst.db;var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readwrite");var store = transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err) {
	        if (err) {
	          if (!done.errored) {
	            done.errored = true;return callback(err);
	          }return;
	        }if (++completed >= total) {
	          return callback(null);
	        }
	      }transaction.onerror = function (e) {
	        done(this.error);e.preventDefault();
	      };create.sort().forEach(function (path) {
	        if (dst.type === "local") {
	          IDBFS.loadRemoteEntry(store, path, function (err, entry) {
	            if (err) return done(err);IDBFS.storeLocalEntry(path, entry, done);
	          });
	        } else {
	          IDBFS.loadLocalEntry(path, function (err, entry) {
	            if (err) return done(err);IDBFS.storeRemoteEntry(store, path, entry, done);
	          });
	        }
	      });remove.sort().reverse().forEach(function (path) {
	        if (dst.type === "local") {
	          IDBFS.removeLocalEntry(path, done);
	        } else {
	          IDBFS.removeRemoteEntry(store, path, done);
	        }
	      });
	    } };var NODEFS = { isWindows: false, staticInit: function staticInit() {
	      NODEFS.isWindows = !!process.platform.match(/^win/);
	    }, mount: function mount(_mount3) {
	      assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null, "/", NODEFS.getMode(_mount3.opts.root), 0);
	    }, createNode: function createNode(parent, name, mode, dev) {
	      if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node = FS.createNode(parent, name, mode);node.node_ops = NODEFS.node_ops;node.stream_ops = NODEFS.stream_ops;return node;
	    }, getMode: function getMode(path) {
	      var stat;try {
	        stat = fs.lstatSync(path);if (NODEFS.isWindows) {
	          stat.mode = stat.mode | (stat.mode & 146) >> 1;
	        }
	      } catch (e) {
	        if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	      }return stat.mode;
	    }, realPath: function realPath(node) {
	      var parts = [];while (node.parent !== node) {
	        parts.push(node.name);node = node.parent;
	      }parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null, parts);
	    }, flagsToPermissionStringMap: { 0: "r", 1: "r+", 2: "r+", 64: "r", 65: "r+", 66: "r+", 129: "rx+", 193: "rx+", 514: "w+", 577: "w", 578: "w+", 705: "wx", 706: "wx+", 1024: "a", 1025: "a", 1026: "a+", 1089: "a", 1090: "a+", 1153: "ax", 1154: "ax+", 1217: "ax", 1218: "ax+", 4096: "rs", 4098: "rs+" }, flagsToPermissionString: function flagsToPermissionString(flags) {
	      flags &= ~2097152;flags &= ~2048;flags &= ~32768;flags &= ~524288;if (flags in NODEFS.flagsToPermissionStringMap) {
	        return NODEFS.flagsToPermissionStringMap[flags];
	      } else {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }
	    }, node_ops: { getattr: function getattr(node) {
	        var path = NODEFS.realPath(node);var stat;try {
	          stat = fs.lstatSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }if (NODEFS.isWindows && !stat.blksize) {
	          stat.blksize = 4096;
	        }if (NODEFS.isWindows && !stat.blocks) {
	          stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
	        }return { dev: stat.dev, ino: stat.ino, mode: stat.mode, nlink: stat.nlink, uid: stat.uid, gid: stat.gid, rdev: stat.rdev, size: stat.size, atime: stat.atime, mtime: stat.mtime, ctime: stat.ctime, blksize: stat.blksize, blocks: stat.blocks };
	      }, setattr: function setattr(node, attr) {
	        var path = NODEFS.realPath(node);try {
	          if (attr.mode !== undefined) {
	            fs.chmodSync(path, attr.mode);node.mode = attr.mode;
	          }if (attr.timestamp !== undefined) {
	            var date = new Date(attr.timestamp);fs.utimesSync(path, date, date);
	          }if (attr.size !== undefined) {
	            fs.truncateSync(path, attr.size);
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, lookup: function lookup(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);var mode = NODEFS.getMode(path);return NODEFS.createNode(parent, name, mode);
	      }, mknod: function mknod(parent, name, mode, dev) {
	        var node = NODEFS.createNode(parent, name, mode, dev);var path = NODEFS.realPath(node);try {
	          if (FS.isDir(node.mode)) {
	            fs.mkdirSync(path, node.mode);
	          } else {
	            fs.writeFileSync(path, "", { mode: node.mode });
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }return node;
	      }, rename: function rename(oldNode, newDir, newName) {
	        var oldPath = NODEFS.realPath(oldNode);var newPath = PATH.join2(NODEFS.realPath(newDir), newName);try {
	          fs.renameSync(oldPath, newPath);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, unlink: function unlink(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);try {
	          fs.unlinkSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, rmdir: function rmdir(parent, name) {
	        var path = PATH.join2(NODEFS.realPath(parent), name);try {
	          fs.rmdirSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, readdir: function readdir(node) {
	        var path = NODEFS.realPath(node);try {
	          return fs.readdirSync(path);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, symlink: function symlink(parent, newName, oldPath) {
	        var newPath = PATH.join2(NODEFS.realPath(parent), newName);try {
	          fs.symlinkSync(oldPath, newPath);
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, readlink: function readlink(node) {
	        var path = NODEFS.realPath(node);try {
	          path = fs.readlinkSync(path);path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);return path;
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      } }, stream_ops: { open: function open(stream) {
	        var path = NODEFS.realPath(stream.node);try {
	          if (FS.isFile(stream.node.mode)) {
	            stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, close: function close(stream) {
	        try {
	          if (FS.isFile(stream.node.mode) && stream.nfd) {
	            fs.closeSync(stream.nfd);
	          }
	        } catch (e) {
	          if (!e.code) throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	      }, read: function read(stream, buffer, offset, length, position) {
	        if (length === 0) return 0;var nbuffer = new Buffer(length);var res;try {
	          res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
	        } catch (e) {
	          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }if (res > 0) {
	          for (var i = 0; i < res; i++) {
	            buffer[offset + i] = nbuffer[i];
	          }
	        }return res;
	      }, write: function write(stream, buffer, offset, length, position) {
	        var nbuffer = new Buffer(buffer.subarray(offset, offset + length));var res;try {
	          res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
	        } catch (e) {
	          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }return res;
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            try {
	              var stat = fs.fstatSync(stream.nfd);position += stat.size;
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	            }
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      } } };var WORKERFS = { DIR_MODE: 16895, FILE_MODE: 33279, reader: null, mount: function mount(_mount4) {
	      assert(ENVIRONMENT_IS_WORKER);if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);var createdParents = {};function ensureParent(path) {
	        var parts = path.split("/");var parent = root;for (var i = 0; i < parts.length - 1; i++) {
	          var curr = parts.slice(0, i + 1).join("/");if (!createdParents[curr]) {
	            createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
	          }parent = createdParents[curr];
	        }return parent;
	      }function base(path) {
	        var parts = path.split("/");return parts[parts.length - 1];
	      }Array.prototype.forEach.call(_mount4.opts["files"] || [], function (file) {
	        WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
	      });(_mount4.opts["blobs"] || []).forEach(function (obj) {
	        WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
	      });(_mount4.opts["packages"] || []).forEach(function (pack) {
	        pack["metadata"].files.forEach(function (file) {
	          var name = file.filename.substr(1);WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
	        });
	      });return root;
	    }, createNode: function createNode(parent, name, mode, dev, contents, mtime) {
	      var node = FS.createNode(parent, name, mode);node.mode = mode;node.node_ops = WORKERFS.node_ops;node.stream_ops = WORKERFS.stream_ops;node.timestamp = (mtime || new Date()).getTime();assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);if (mode === WORKERFS.FILE_MODE) {
	        node.size = contents.size;node.contents = contents;
	      } else {
	        node.size = 4096;node.contents = {};
	      }if (parent) {
	        parent.contents[name] = node;
	      }return node;
	    }, node_ops: { getattr: function getattr(node) {
	        return { dev: 1, ino: undefined, mode: node.mode, nlink: 1, uid: 0, gid: 0, rdev: undefined, size: node.size, atime: new Date(node.timestamp), mtime: new Date(node.timestamp), ctime: new Date(node.timestamp), blksize: 4096, blocks: Math.ceil(node.size / 4096) };
	      }, setattr: function setattr(node, attr) {
	        if (attr.mode !== undefined) {
	          node.mode = attr.mode;
	        }if (attr.timestamp !== undefined) {
	          node.timestamp = attr.timestamp;
	        }
	      }, lookup: function lookup(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }, mknod: function mknod(parent, name, mode, dev) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, rename: function rename(oldNode, newDir, newName) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, unlink: function unlink(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, rmdir: function rmdir(parent, name) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, readdir: function readdir(node) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, symlink: function symlink(parent, newName, oldPath) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }, readlink: function readlink(node) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      } }, stream_ops: { read: function read(stream, buffer, offset, length, position) {
	        if (position >= stream.node.size) return 0;var chunk = stream.node.contents.slice(position, position + length);var ab = WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab), offset);return chunk.size;
	      }, write: function write(stream, buffer, offset, length, position) {
	        throw new FS.ErrnoError(ERRNO_CODES.EIO);
	      }, llseek: function llseek(stream, offset, whence) {
	        var position = offset;if (whence === 1) {
	          position += stream.position;
	        } else if (whence === 2) {
	          if (FS.isFile(stream.node.mode)) {
	            position += stream.node.size;
	          }
	        }if (position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }return position;
	      } } };STATICTOP += 16;STATICTOP += 16;STATICTOP += 16;var FS = { root: null, mounts: [], devices: [null], streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, handleFSError: function handleFSError(e) {
	      if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();return ___setErrNo(e.errno);
	    }, lookupPath: function lookupPath(path, opts) {
	      path = PATH.resolve(FS.cwd(), path);opts = opts || {};if (!path) return { path: "", node: null };var defaults = { follow_mount: true, recurse_count: 0 };for (var key in defaults) {
	        if (opts[key] === undefined) {
	          opts[key] = defaults[key];
	        }
	      }if (opts.recurse_count > 8) {
	        throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	      }var parts = PATH.normalizeArray(path.split("/").filter(function (p) {
	        return !!p;
	      }), false);var current = FS.root;var current_path = "/";for (var i = 0; i < parts.length; i++) {
	        var islast = i === parts.length - 1;if (islast && opts.parent) {
	          break;
	        }current = FS.lookupNode(current, parts[i]);current_path = PATH.join2(current_path, parts[i]);if (FS.isMountpoint(current)) {
	          if (!islast || islast && opts.follow_mount) {
	            current = current.mounted.root;
	          }
	        }if (!islast || opts.follow) {
	          var count = 0;while (FS.isLink(current.mode)) {
	            var link = FS.readlink(current_path);current_path = PATH.resolve(PATH.dirname(current_path), link);var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });current = lookup.node;if (count++ > 40) {
	              throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	            }
	          }
	        }
	      }return { path: current_path, node: current };
	    }, getPath: function getPath(node) {
	      var path;while (true) {
	        if (FS.isRoot(node)) {
	          var mount = node.mount.mountpoint;if (!path) return mount;return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
	        }path = path ? node.name + "/" + path : node.name;node = node.parent;
	      }
	    }, hashName: function hashName(parentid, name) {
	      var hash = 0;for (var i = 0; i < name.length; i++) {
	        hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
	      }return (parentid + hash >>> 0) % FS.nameTable.length;
	    }, hashAddNode: function hashAddNode(node) {
	      var hash = FS.hashName(node.parent.id, node.name);node.name_next = FS.nameTable[hash];FS.nameTable[hash] = node;
	    }, hashRemoveNode: function hashRemoveNode(node) {
	      var hash = FS.hashName(node.parent.id, node.name);if (FS.nameTable[hash] === node) {
	        FS.nameTable[hash] = node.name_next;
	      } else {
	        var current = FS.nameTable[hash];while (current) {
	          if (current.name_next === node) {
	            current.name_next = node.name_next;break;
	          }current = current.name_next;
	        }
	      }
	    }, lookupNode: function lookupNode(parent, name) {
	      var err = FS.mayLookup(parent);if (err) {
	        throw new FS.ErrnoError(err, parent);
	      }var hash = FS.hashName(parent.id, name);for (var node = FS.nameTable[hash]; node; node = node.name_next) {
	        var nodeName = node.name;if (node.parent.id === parent.id && nodeName === name) {
	          return node;
	        }
	      }return FS.lookup(parent, name);
	    }, createNode: function createNode(parent, name, mode, rdev) {
	      if (!FS.FSNode) {
	        FS.FSNode = function (parent, name, mode, rdev) {
	          if (!parent) {
	            parent = this;
	          }this.parent = parent;this.mount = parent.mount;this.mounted = null;this.id = FS.nextInode++;this.name = name;this.mode = mode;this.node_ops = {};this.stream_ops = {};this.rdev = rdev;
	        };FS.FSNode.prototype = {};var readMode = 292 | 73;var writeMode = 146;Object.defineProperties(FS.FSNode.prototype, { read: { get: function get() {
	              return (this.mode & readMode) === readMode;
	            }, set: function set(val) {
	              val ? this.mode |= readMode : this.mode &= ~readMode;
	            } }, write: { get: function get() {
	              return (this.mode & writeMode) === writeMode;
	            }, set: function set(val) {
	              val ? this.mode |= writeMode : this.mode &= ~writeMode;
	            } }, isFolder: { get: function get() {
	              return FS.isDir(this.mode);
	            } }, isDevice: { get: function get() {
	              return FS.isChrdev(this.mode);
	            } } });
	      }var node = new FS.FSNode(parent, name, mode, rdev);FS.hashAddNode(node);return node;
	    }, destroyNode: function destroyNode(node) {
	      FS.hashRemoveNode(node);
	    }, isRoot: function isRoot(node) {
	      return node === node.parent;
	    }, isMountpoint: function isMountpoint(node) {
	      return !!node.mounted;
	    }, isFile: function isFile(mode) {
	      return (mode & 61440) === 32768;
	    }, isDir: function isDir(mode) {
	      return (mode & 61440) === 16384;
	    }, isLink: function isLink(mode) {
	      return (mode & 61440) === 40960;
	    }, isChrdev: function isChrdev(mode) {
	      return (mode & 61440) === 8192;
	    }, isBlkdev: function isBlkdev(mode) {
	      return (mode & 61440) === 24576;
	    }, isFIFO: function isFIFO(mode) {
	      return (mode & 61440) === 4096;
	    }, isSocket: function isSocket(mode) {
	      return (mode & 49152) === 49152;
	    }, flagModes: { "r": 0, "rs": 1052672, "r+": 2, "w": 577, "wx": 705, "xw": 705, "w+": 578, "wx+": 706, "xw+": 706, "a": 1089, "ax": 1217, "xa": 1217, "a+": 1090, "ax+": 1218, "xa+": 1218 }, modeStringToFlags: function modeStringToFlags(str) {
	      var flags = FS.flagModes[str];if (typeof flags === "undefined") {
	        throw new Error("Unknown file open mode: " + str);
	      }return flags;
	    }, flagsToPermissionString: function flagsToPermissionString(flag) {
	      var perms = ["r", "w", "rw"][flag & 3];if (flag & 512) {
	        perms += "w";
	      }return perms;
	    }, nodePermissions: function nodePermissions(node, perms) {
	      if (FS.ignorePermissions) {
	        return 0;
	      }if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
	        return ERRNO_CODES.EACCES;
	      } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
	        return ERRNO_CODES.EACCES;
	      } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
	        return ERRNO_CODES.EACCES;
	      }return 0;
	    }, mayLookup: function mayLookup(dir) {
	      var err = FS.nodePermissions(dir, "x");if (err) return err;if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;return 0;
	    }, mayCreate: function mayCreate(dir, name) {
	      try {
	        var node = FS.lookupNode(dir, name);return ERRNO_CODES.EEXIST;
	      } catch (e) {}return FS.nodePermissions(dir, "wx");
	    }, mayDelete: function mayDelete(dir, name, isdir) {
	      var node;try {
	        node = FS.lookupNode(dir, name);
	      } catch (e) {
	        return e.errno;
	      }var err = FS.nodePermissions(dir, "wx");if (err) {
	        return err;
	      }if (isdir) {
	        if (!FS.isDir(node.mode)) {
	          return ERRNO_CODES.ENOTDIR;
	        }if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
	          return ERRNO_CODES.EBUSY;
	        }
	      } else {
	        if (FS.isDir(node.mode)) {
	          return ERRNO_CODES.EISDIR;
	        }
	      }return 0;
	    }, mayOpen: function mayOpen(node, flags) {
	      if (!node) {
	        return ERRNO_CODES.ENOENT;
	      }if (FS.isLink(node.mode)) {
	        return ERRNO_CODES.ELOOP;
	      } else if (FS.isDir(node.mode)) {
	        if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
	          return ERRNO_CODES.EISDIR;
	        }
	      }return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
	    }, MAX_OPEN_FDS: 4096, nextfd: function nextfd(fd_start, fd_end) {
	      fd_start = fd_start || 0;fd_end = fd_end || FS.MAX_OPEN_FDS;for (var fd = fd_start; fd <= fd_end; fd++) {
	        if (!FS.streams[fd]) {
	          return fd;
	        }
	      }throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
	    }, getStream: function getStream(fd) {
	      return FS.streams[fd];
	    }, createStream: function createStream(stream, fd_start, fd_end) {
	      if (!FS.FSStream) {
	        FS.FSStream = function () {};FS.FSStream.prototype = {};Object.defineProperties(FS.FSStream.prototype, { object: { get: function get() {
	              return this.node;
	            }, set: function set(val) {
	              this.node = val;
	            } }, isRead: { get: function get() {
	              return (this.flags & 2097155) !== 1;
	            } }, isWrite: { get: function get() {
	              return (this.flags & 2097155) !== 0;
	            } }, isAppend: { get: function get() {
	              return this.flags & 1024;
	            } } });
	      }var newStream = new FS.FSStream();for (var p in stream) {
	        newStream[p] = stream[p];
	      }stream = newStream;var fd = FS.nextfd(fd_start, fd_end);stream.fd = fd;FS.streams[fd] = stream;return stream;
	    }, closeStream: function closeStream(fd) {
	      FS.streams[fd] = null;
	    }, chrdev_stream_ops: { open: function open(stream) {
	        var device = FS.getDevice(stream.node.rdev);stream.stream_ops = device.stream_ops;if (stream.stream_ops.open) {
	          stream.stream_ops.open(stream);
	        }
	      }, llseek: function llseek() {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      } }, major: function major(dev) {
	      return dev >> 8;
	    }, minor: function minor(dev) {
	      return dev & 255;
	    }, makedev: function makedev(ma, mi) {
	      return ma << 8 | mi;
	    }, registerDevice: function registerDevice(dev, ops) {
	      FS.devices[dev] = { stream_ops: ops };
	    }, getDevice: function getDevice(dev) {
	      return FS.devices[dev];
	    }, getMounts: function getMounts(mount) {
	      var mounts = [];var check = [mount];while (check.length) {
	        var m = check.pop();mounts.push(m);check.push.apply(check, m.mounts);
	      }return mounts;
	    }, syncfs: function syncfs(populate, callback) {
	      if (typeof populate === "function") {
	        callback = populate;populate = false;
	      }FS.syncFSRequests++;if (FS.syncFSRequests > 1) {
	        console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
	      }var mounts = FS.getMounts(FS.root.mount);var completed = 0;function doCallback(err) {
	        assert(FS.syncFSRequests > 0);FS.syncFSRequests--;return callback(err);
	      }function done(err) {
	        if (err) {
	          if (!done.errored) {
	            done.errored = true;return doCallback(err);
	          }return;
	        }if (++completed >= mounts.length) {
	          doCallback(null);
	        }
	      }mounts.forEach(function (mount) {
	        if (!mount.type.syncfs) {
	          return done(null);
	        }mount.type.syncfs(mount, populate, done);
	      });
	    }, mount: function mount(type, opts, mountpoint) {
	      var root = mountpoint === "/";var pseudo = !mountpoint;var node;if (root && FS.root) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      } else if (!root && !pseudo) {
	        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });mountpoint = lookup.path;node = lookup.node;if (FS.isMountpoint(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }if (!FS.isDir(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	        }
	      }var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] };var mountRoot = type.mount(mount);mountRoot.mount = mount;mount.root = mountRoot;if (root) {
	        FS.root = mountRoot;
	      } else if (node) {
	        node.mounted = mount;if (node.mount) {
	          node.mount.mounts.push(mount);
	        }
	      }return mountRoot;
	    }, unmount: function unmount(mountpoint) {
	      var lookup = FS.lookupPath(mountpoint, { follow_mount: false });if (!FS.isMountpoint(lookup.node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node = lookup.node;var mount = node.mounted;var mounts = FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function (hash) {
	        var current = FS.nameTable[hash];while (current) {
	          var next = current.name_next;if (mounts.indexOf(current.mount) !== -1) {
	            FS.destroyNode(current);
	          }current = next;
	        }
	      });node.mounted = null;var idx = node.mount.mounts.indexOf(mount);assert(idx !== -1);node.mount.mounts.splice(idx, 1);
	    }, lookup: function lookup(parent, name) {
	      return parent.node_ops.lookup(parent, name);
	    }, mknod: function mknod(path, mode, dev) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);if (!name || name === "." || name === "..") {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var err = FS.mayCreate(parent, name);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.mknod) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return parent.node_ops.mknod(parent, name, mode, dev);
	    }, create: function create(path, mode) {
	      mode = mode !== undefined ? mode : 438;mode &= 4095;mode |= 32768;return FS.mknod(path, mode, 0);
	    }, mkdir: function mkdir(path, mode) {
	      mode = mode !== undefined ? mode : 511;mode &= 511 | 512;mode |= 16384;return FS.mknod(path, mode, 0);
	    }, mkdirTree: function mkdirTree(path, mode) {
	      var dirs = path.split("/");var d = "";for (var i = 0; i < dirs.length; ++i) {
	        if (!dirs[i]) continue;d += "/" + dirs[i];try {
	          FS.mkdir(d, mode);
	        } catch (e) {
	          if (e.errno != ERRNO_CODES.EEXIST) throw e;
	        }
	      }
	    }, mkdev: function mkdev(path, mode, dev) {
	      if (typeof dev === "undefined") {
	        dev = mode;mode = 438;
	      }mode |= 8192;return FS.mknod(path, mode, dev);
	    }, symlink: function symlink(oldpath, newpath) {
	      if (!PATH.resolve(oldpath)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }var lookup = FS.lookupPath(newpath, { parent: true });var parent = lookup.node;if (!parent) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }var newname = PATH.basename(newpath);var err = FS.mayCreate(parent, newname);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.symlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return parent.node_ops.symlink(parent, newname, oldpath);
	    }, rename: function rename(old_path, new_path) {
	      var old_dirname = PATH.dirname(old_path);var new_dirname = PATH.dirname(new_path);var old_name = PATH.basename(old_path);var new_name = PATH.basename(new_path);var lookup, old_dir, new_dir;try {
	        lookup = FS.lookupPath(old_path, { parent: true });old_dir = lookup.node;lookup = FS.lookupPath(new_path, { parent: true });new_dir = lookup.node;
	      } catch (e) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if (old_dir.mount !== new_dir.mount) {
	        throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
	      }var old_node = FS.lookupNode(old_dir, old_name);var relative = PATH.relative(old_path, new_dirname);if (relative.charAt(0) !== ".") {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }relative = PATH.relative(new_path, old_dirname);if (relative.charAt(0) !== ".") {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	      }var new_node;try {
	        new_node = FS.lookupNode(new_dir, new_name);
	      } catch (e) {}if (old_node === new_node) {
	        return;
	      }var isdir = FS.isDir(old_node.mode);var err = FS.mayDelete(old_dir, old_name, isdir);if (err) {
	        throw new FS.ErrnoError(err);
	      }err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!old_dir.node_ops.rename) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }if (new_dir !== old_dir) {
	        err = FS.nodePermissions(old_dir, "w");if (err) {
	          throw new FS.ErrnoError(err);
	        }
	      }try {
	        if (FS.trackingDelegate["willMovePath"]) {
	          FS.trackingDelegate["willMovePath"](old_path, new_path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
	      }FS.hashRemoveNode(old_node);try {
	        old_dir.node_ops.rename(old_node, new_dir, new_name);
	      } catch (e) {
	        throw e;
	      } finally {
	        FS.hashAddNode(old_node);
	      }try {
	        if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
	      }
	    }, rmdir: function rmdir(path) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);var node = FS.lookupNode(parent, name);var err = FS.mayDelete(parent, name, true);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.rmdir) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }try {
	        if (FS.trackingDelegate["willDeletePath"]) {
	          FS.trackingDelegate["willDeletePath"](path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
	      }parent.node_ops.rmdir(parent, name);FS.destroyNode(node);try {
	        if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
	      }
	    }, readdir: function readdir(path) {
	      var lookup = FS.lookupPath(path, { follow: true });var node = lookup.node;if (!node.node_ops.readdir) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }return node.node_ops.readdir(node);
	    }, unlink: function unlink(path) {
	      var lookup = FS.lookupPath(path, { parent: true });var parent = lookup.node;var name = PATH.basename(path);var node = FS.lookupNode(parent, name);var err = FS.mayDelete(parent, name, false);if (err) {
	        throw new FS.ErrnoError(err);
	      }if (!parent.node_ops.unlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isMountpoint(node)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	      }try {
	        if (FS.trackingDelegate["willDeletePath"]) {
	          FS.trackingDelegate["willDeletePath"](path);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
	      }parent.node_ops.unlink(parent, name);FS.destroyNode(node);try {
	        if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
	      }
	    }, readlink: function readlink(path) {
	      var lookup = FS.lookupPath(path);var link = lookup.node;if (!link) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!link.node_ops.readlink) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
	    }, stat: function stat(path, dontFollow) {
	      var lookup = FS.lookupPath(path, { follow: !dontFollow });var node = lookup.node;if (!node) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!node.node_ops.getattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }return node.node_ops.getattr(node);
	    }, lstat: function lstat(path) {
	      return FS.stat(path, true);
	    }, chmod: function chmod(path, mode, dontFollow) {
	      var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: !dontFollow });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });
	    }, lchmod: function lchmod(path, mode) {
	      FS.chmod(path, mode, true);
	    }, fchmod: function fchmod(fd, mode) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }FS.chmod(stream.node, mode);
	    }, chown: function chown(path, uid, gid, dontFollow) {
	      var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: !dontFollow });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }node.node_ops.setattr(node, { timestamp: Date.now() });
	    }, lchown: function lchown(path, uid, gid) {
	      FS.chown(path, uid, gid, true);
	    }, fchown: function fchown(fd, uid, gid) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }FS.chown(stream.node, uid, gid);
	    }, truncate: function truncate(path, len) {
	      if (len < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var node;if (typeof path === "string") {
	        var lookup = FS.lookupPath(path, { follow: true });node = lookup.node;
	      } else {
	        node = path;
	      }if (!node.node_ops.setattr) {
	        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	      }if (FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!FS.isFile(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var err = FS.nodePermissions(node, "w");if (err) {
	        throw new FS.ErrnoError(err);
	      }node.node_ops.setattr(node, { size: len, timestamp: Date.now() });
	    }, ftruncate: function ftruncate(fd, len) {
	      var stream = FS.getStream(fd);if (!stream) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }FS.truncate(stream.node, len);
	    }, utime: function utime(path, atime, mtime) {
	      var lookup = FS.lookupPath(path, { follow: true });var node = lookup.node;node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });
	    }, open: function open(path, flags, mode, fd_start, fd_end) {
	      if (path === "") {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;mode = typeof mode === "undefined" ? 438 : mode;if (flags & 64) {
	        mode = mode & 4095 | 32768;
	      } else {
	        mode = 0;
	      }var node;if ((typeof path === "undefined" ? "undefined" : _typeof(path)) === "object") {
	        node = path;
	      } else {
	        path = PATH.normalize(path);try {
	          var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });node = lookup.node;
	        } catch (e) {}
	      }var created = false;if (flags & 64) {
	        if (node) {
	          if (flags & 128) {
	            throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
	          }
	        } else {
	          node = FS.mknod(path, mode, 0);created = true;
	        }
	      }if (!node) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (FS.isChrdev(node.mode)) {
	        flags &= ~512;
	      }if (flags & 65536 && !FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }if (!created) {
	        var err = FS.mayOpen(node, flags);if (err) {
	          throw new FS.ErrnoError(err);
	        }
	      }if (flags & 512) {
	        FS.truncate(node, 0);
	      }flags &= ~(128 | 512);var stream = FS.createStream({ node: node, path: FS.getPath(node), flags: flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);if (stream.stream_ops.open) {
	        stream.stream_ops.open(stream);
	      }if (Module["logReadFiles"] && !(flags & 1)) {
	        if (!FS.readFiles) FS.readFiles = {};if (!(path in FS.readFiles)) {
	          FS.readFiles[path] = 1;Module["printErr"]("read file: " + path);
	        }
	      }try {
	        if (FS.trackingDelegate["onOpenFile"]) {
	          var trackingFlags = 0;if ((flags & 2097155) !== 1) {
	            trackingFlags |= FS.tracking.openFlags.READ;
	          }if ((flags & 2097155) !== 0) {
	            trackingFlags |= FS.tracking.openFlags.WRITE;
	          }FS.trackingDelegate["onOpenFile"](path, trackingFlags);
	        }
	      } catch (e) {
	        console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
	      }return stream;
	    }, close: function close(stream) {
	      if (stream.getdents) stream.getdents = null;try {
	        if (stream.stream_ops.close) {
	          stream.stream_ops.close(stream);
	        }
	      } catch (e) {
	        throw e;
	      } finally {
	        FS.closeStream(stream.fd);
	      }
	    }, llseek: function llseek(stream, offset, whence) {
	      if (!stream.seekable || !stream.stream_ops.llseek) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }stream.position = stream.stream_ops.llseek(stream, offset, whence);stream.ungotten = [];return stream.position;
	    }, read: function read(stream, buffer, offset, length, position) {
	      if (length < 0 || position < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 1) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (FS.isDir(stream.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!stream.stream_ops.read) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }var seeking = true;if (typeof position === "undefined") {
	        position = stream.position;seeking = false;
	      } else if (!stream.seekable) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);if (!seeking) stream.position += bytesRead;return bytesRead;
	    }, write: function write(stream, buffer, offset, length, position, canOwn) {
	      if (length < 0 || position < 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (FS.isDir(stream.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	      }if (!stream.stream_ops.write) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if (stream.flags & 1024) {
	        FS.llseek(stream, 0, 2);
	      }var seeking = true;if (typeof position === "undefined") {
	        position = stream.position;seeking = false;
	      } else if (!stream.seekable) {
	        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	      }var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);if (!seeking) stream.position += bytesWritten;try {
	        if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
	      } catch (e) {
	        console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
	      }return bytesWritten;
	    }, allocate: function allocate(stream, offset, length) {
	      if (offset < 0 || length <= 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	      }if ((stream.flags & 2097155) === 0) {
	        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	      }if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	      }if (!stream.stream_ops.allocate) {
	        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
	      }stream.stream_ops.allocate(stream, offset, length);
	    }, mmap: function mmap(stream, buffer, offset, length, position, prot, flags) {
	      if ((stream.flags & 2097155) === 1) {
	        throw new FS.ErrnoError(ERRNO_CODES.EACCES);
	      }if (!stream.stream_ops.mmap) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	      }return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
	    }, msync: function msync(stream, buffer, offset, length, mmapFlags) {
	      if (!stream || !stream.stream_ops.msync) {
	        return 0;
	      }return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
	    }, munmap: function munmap(stream) {
	      return 0;
	    }, ioctl: function ioctl(stream, cmd, arg) {
	      if (!stream.stream_ops.ioctl) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
	      }return stream.stream_ops.ioctl(stream, cmd, arg);
	    }, readFile: function readFile(path, opts) {
	      opts = opts || {};opts.flags = opts.flags || "r";opts.encoding = opts.encoding || "binary";if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
	        throw new Error('Invalid encoding type "' + opts.encoding + '"');
	      }var ret;var stream = FS.open(path, opts.flags);var stat = FS.stat(path);var length = stat.size;var buf = new Uint8Array(length);FS.read(stream, buf, 0, length, 0);if (opts.encoding === "utf8") {
	        ret = UTF8ArrayToString(buf, 0);
	      } else if (opts.encoding === "binary") {
	        ret = buf;
	      }FS.close(stream);return ret;
	    }, writeFile: function writeFile(path, data, opts) {
	      opts = opts || {};opts.flags = opts.flags || "w";opts.encoding = opts.encoding || "utf8";if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
	        throw new Error('Invalid encoding type "' + opts.encoding + '"');
	      }var stream = FS.open(path, opts.flags, opts.mode);if (opts.encoding === "utf8") {
	        var buf = new Uint8Array(lengthBytesUTF8(data) + 1);var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
	      } else if (opts.encoding === "binary") {
	        FS.write(stream, data, 0, data.length, 0, opts.canOwn);
	      }FS.close(stream);
	    }, cwd: function cwd() {
	      return FS.currentPath;
	    }, chdir: function chdir(path) {
	      var lookup = FS.lookupPath(path, { follow: true });if (lookup.node === null) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	      }if (!FS.isDir(lookup.node.mode)) {
	        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	      }var err = FS.nodePermissions(lookup.node, "x");if (err) {
	        throw new FS.ErrnoError(err);
	      }FS.currentPath = lookup.path;
	    }, createDefaultDirectories: function createDefaultDirectories() {
	      FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user");
	    }, createDefaultDevices: function createDefaultDevices() {
	      FS.mkdir("/dev");FS.registerDevice(FS.makedev(1, 3), { read: function read() {
	          return 0;
	        }, write: function write(stream, buffer, offset, length, pos) {
	          return length;
	        } });FS.mkdev("/dev/null", FS.makedev(1, 3));TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);FS.mkdev("/dev/tty", FS.makedev(5, 0));FS.mkdev("/dev/tty1", FS.makedev(6, 0));var random_device;if (typeof crypto !== "undefined") {
	        var randomBuffer = new Uint8Array(1);random_device = function random_device() {
	          crypto.getRandomValues(randomBuffer);return randomBuffer[0];
	        };
	      } else if (ENVIRONMENT_IS_NODE) {
	        random_device = function random_device() {
	          return __webpack_require__(13).randomBytes(1)[0];
	        };
	      } else {
	        random_device = function random_device() {
	          return Math.random() * 256 | 0;
	        };
	      }FS.createDevice("/dev", "random", random_device);FS.createDevice("/dev", "urandom", random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp");
	    }, createSpecialDirectories: function createSpecialDirectories() {
	      FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({ mount: function mount() {
	          var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);node.node_ops = { lookup: function lookup(parent, name) {
	              var fd = +name;var stream = FS.getStream(fd);if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: function readlink() {
	                    return stream.path;
	                  } } };ret.parent = ret;return ret;
	            } };return node;
	        } }, {}, "/proc/self/fd");
	    }, createStandardStreams: function createStandardStreams() {
	      if (Module["stdin"]) {
	        FS.createDevice("/dev", "stdin", Module["stdin"]);
	      } else {
	        FS.symlink("/dev/tty", "/dev/stdin");
	      }if (Module["stdout"]) {
	        FS.createDevice("/dev", "stdout", null, Module["stdout"]);
	      } else {
	        FS.symlink("/dev/tty", "/dev/stdout");
	      }if (Module["stderr"]) {
	        FS.createDevice("/dev", "stderr", null, Module["stderr"]);
	      } else {
	        FS.symlink("/dev/tty1", "/dev/stderr");
	      }var stdin = FS.open("/dev/stdin", "r");assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");var stdout = FS.open("/dev/stdout", "w");assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");var stderr = FS.open("/dev/stderr", "w");assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
	    }, ensureErrnoError: function ensureErrnoError() {
	      if (FS.ErrnoError) return;FS.ErrnoError = function ErrnoError(errno, node) {
	        this.node = node;this.setErrno = function (errno) {
	          this.errno = errno;for (var key in ERRNO_CODES) {
	            if (ERRNO_CODES[key] === errno) {
	              this.code = key;break;
	            }
	          }
	        };this.setErrno(errno);this.message = ERRNO_MESSAGES[errno];
	      };FS.ErrnoError.prototype = new Error();FS.ErrnoError.prototype.constructor = FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach(function (code) {
	        FS.genericErrors[code] = new FS.ErrnoError(code);FS.genericErrors[code].stack = "<generic error, no stack>";
	      });
	    }, staticInit: function staticInit() {
	      FS.ensureErrnoError();FS.nameTable = new Array(4096);FS.mount(MEMFS, {}, "/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems = { "MEMFS": MEMFS, "IDBFS": IDBFS, "NODEFS": NODEFS, "WORKERFS": WORKERFS };
	    }, init: function init(input, output, error) {
	      assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized = true;FS.ensureErrnoError();Module["stdin"] = input || Module["stdin"];Module["stdout"] = output || Module["stdout"];Module["stderr"] = error || Module["stderr"];FS.createStandardStreams();
	    }, quit: function quit() {
	      FS.init.initialized = false;var fflush = Module["_fflush"];if (fflush) fflush(0);for (var i = 0; i < FS.streams.length; i++) {
	        var stream = FS.streams[i];if (!stream) {
	          continue;
	        }FS.close(stream);
	      }
	    }, getMode: function getMode(canRead, canWrite) {
	      var mode = 0;if (canRead) mode |= 292 | 73;if (canWrite) mode |= 146;return mode;
	    }, joinPath: function joinPath(parts, forceRelative) {
	      var path = PATH.join.apply(null, parts);if (forceRelative && path[0] == "/") path = path.substr(1);return path;
	    }, absolutePath: function absolutePath(relative, base) {
	      return PATH.resolve(base, relative);
	    }, standardizePath: function standardizePath(path) {
	      return PATH.normalize(path);
	    }, findObject: function findObject(path, dontResolveLastLink) {
	      var ret = FS.analyzePath(path, dontResolveLastLink);if (ret.exists) {
	        return ret.object;
	      } else {
	        ___setErrNo(ret.error);return null;
	      }
	    }, analyzePath: function analyzePath(path, dontResolveLastLink) {
	      try {
	        var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });path = lookup.path;
	      } catch (e) {}var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };try {
	        var lookup = FS.lookupPath(path, { parent: true });ret.parentExists = true;ret.parentPath = lookup.path;ret.parentObject = lookup.node;ret.name = PATH.basename(path);lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });ret.exists = true;ret.path = lookup.path;ret.object = lookup.node;ret.name = lookup.node.name;ret.isRoot = lookup.path === "/";
	      } catch (e) {
	        ret.error = e.errno;
	      }return ret;
	    }, createFolder: function createFolder(parent, name, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(canRead, canWrite);return FS.mkdir(path, mode);
	    }, createPath: function createPath(parent, path, canRead, canWrite) {
	      parent = typeof parent === "string" ? parent : FS.getPath(parent);var parts = path.split("/").reverse();while (parts.length) {
	        var part = parts.pop();if (!part) continue;var current = PATH.join2(parent, part);try {
	          FS.mkdir(current);
	        } catch (e) {}parent = current;
	      }return current;
	    }, createFile: function createFile(parent, name, properties, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(canRead, canWrite);return FS.create(path, mode);
	    }, createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {
	      var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;var mode = FS.getMode(canRead, canWrite);var node = FS.create(path, mode);if (data) {
	        if (typeof data === "string") {
	          var arr = new Array(data.length);for (var i = 0, len = data.length; i < len; ++i) {
	            arr[i] = data.charCodeAt(i);
	          }data = arr;
	        }FS.chmod(node, mode | 146);var stream = FS.open(node, "w");FS.write(stream, data, 0, data.length, 0, canOwn);FS.close(stream);FS.chmod(node, mode);
	      }return node;
	    }, createDevice: function createDevice(parent, name, input, output) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);var mode = FS.getMode(!!input, !!output);if (!FS.createDevice.major) FS.createDevice.major = 64;var dev = FS.makedev(FS.createDevice.major++, 0);FS.registerDevice(dev, { open: function open(stream) {
	          stream.seekable = false;
	        }, close: function close(stream) {
	          if (output && output.buffer && output.buffer.length) {
	            output(10);
	          }
	        }, read: function read(stream, buffer, offset, length, pos) {
	          var bytesRead = 0;for (var i = 0; i < length; i++) {
	            var result;try {
	              result = input();
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }if (result === undefined && bytesRead === 0) {
	              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	            }if (result === null || result === undefined) break;bytesRead++;buffer[offset + i] = result;
	          }if (bytesRead) {
	            stream.node.timestamp = Date.now();
	          }return bytesRead;
	        }, write: function write(stream, buffer, offset, length, pos) {
	          for (var i = 0; i < length; i++) {
	            try {
	              output(buffer[offset + i]);
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }
	          }if (length) {
	            stream.node.timestamp = Date.now();
	          }return i;
	        } });return FS.mkdev(path, mode, dev);
	    }, createLink: function createLink(parent, name, target, canRead, canWrite) {
	      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);return FS.symlink(target, path);
	    }, forceLoadFile: function forceLoadFile(obj) {
	      if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;var success = true;if (typeof XMLHttpRequest !== "undefined") {
	        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
	      } else if (Module["read"]) {
	        try {
	          obj.contents = intArrayFromString(Module["read"](obj.url), true);obj.usedBytes = obj.contents.length;
	        } catch (e) {
	          success = false;
	        }
	      } else {
	        throw new Error("Cannot load without read() or XMLHttpRequest.");
	      }if (!success) ___setErrNo(ERRNO_CODES.EIO);return success;
	    }, createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {
	      function LazyUint8Array() {
	        this.lengthKnown = false;this.chunks = [];
	      }LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
	        if (idx > this.length - 1 || idx < 0) {
	          return undefined;
	        }var chunkOffset = idx % this.chunkSize;var chunkNum = idx / this.chunkSize | 0;return this.getter(chunkNum)[chunkOffset];
	      };LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
	        this.getter = getter;
	      };LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
	        var xhr = new XMLHttpRequest();xhr.open("HEAD", url, false);xhr.send(null);if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);var datalength = Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";var chunkSize = 1024 * 1024;if (!hasByteServing) chunkSize = datalength;var doXHR = function doXHR(from, to) {
	          if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");var xhr = new XMLHttpRequest();xhr.open("GET", url, false);if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";if (xhr.overrideMimeType) {
	            xhr.overrideMimeType("text/plain; charset=x-user-defined");
	          }xhr.send(null);if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);if (xhr.response !== undefined) {
	            return new Uint8Array(xhr.response || []);
	          } else {
	            return intArrayFromString(xhr.responseText || "", true);
	          }
	        };var lazyArray = this;lazyArray.setDataGetter(function (chunkNum) {
	          var start = chunkNum * chunkSize;var end = (chunkNum + 1) * chunkSize - 1;end = Math.min(end, datalength - 1);if (typeof lazyArray.chunks[chunkNum] === "undefined") {
	            lazyArray.chunks[chunkNum] = doXHR(start, end);
	          }if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum];
	        });if (usesGzip || !datalength) {
	          chunkSize = datalength = 1;datalength = this.getter(0).length;chunkSize = datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
	        }this._length = datalength;this._chunkSize = chunkSize;this.lengthKnown = true;
	      };if (typeof XMLHttpRequest !== "undefined") {
	        if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray = new LazyUint8Array();Object.defineProperties(lazyArray, { length: { get: function get() {
	              if (!this.lengthKnown) {
	                this.cacheLength();
	              }return this._length;
	            } }, chunkSize: { get: function get() {
	              if (!this.lengthKnown) {
	                this.cacheLength();
	              }return this._chunkSize;
	            } } });var properties = { isDevice: false, contents: lazyArray };
	      } else {
	        var properties = { isDevice: false, url: url };
	      }var node = FS.createFile(parent, name, properties, canRead, canWrite);if (properties.contents) {
	        node.contents = properties.contents;
	      } else if (properties.url) {
	        node.contents = null;node.url = properties.url;
	      }Object.defineProperties(node, { usedBytes: { get: function get() {
	            return this.contents.length;
	          } } });var stream_ops = {};var keys = Object.keys(node.stream_ops);keys.forEach(function (key) {
	        var fn = node.stream_ops[key];stream_ops[key] = function forceLoadLazyFile() {
	          if (!FS.forceLoadFile(node)) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }return fn.apply(null, arguments);
	        };
	      });stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
	        if (!FS.forceLoadFile(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EIO);
	        }var contents = stream.node.contents;if (position >= contents.length) return 0;var size = Math.min(contents.length - position, length);assert(size >= 0);if (contents.slice) {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents[position + i];
	          }
	        } else {
	          for (var i = 0; i < size; i++) {
	            buffer[offset + i] = contents.get(position + i);
	          }
	        }return size;
	      };node.stream_ops = stream_ops;return node;
	    }, createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
	      Browser.init();var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;var dep = getUniqueRunDependency("cp " + fullname);function processData(byteArray) {
	        function finish(byteArray) {
	          if (preFinish) preFinish();if (!dontCreateFile) {
	            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
	          }if (onload) onload();removeRunDependency(dep);
	        }var handled = false;Module["preloadPlugins"].forEach(function (plugin) {
	          if (handled) return;if (plugin["canHandle"](fullname)) {
	            plugin["handle"](byteArray, fullname, finish, function () {
	              if (onerror) onerror();removeRunDependency(dep);
	            });handled = true;
	          }
	        });if (!handled) finish(byteArray);
	      }addRunDependency(dep);if (typeof url == "string") {
	        Browser.asyncLoad(url, function (byteArray) {
	          processData(byteArray);
	        }, onerror);
	      } else {
	        processData(url);
	      }
	    }, indexedDB: function indexedDB() {
	      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
	    }, DB_NAME: function DB_NAME() {
	      return "EM_FS_" + window.location.pathname;
	    }, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {
	      onload = onload || function () {};onerror = onerror || function () {};var indexedDB = FS.indexedDB();try {
	        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	      } catch (e) {
	        return onerror(e);
	      }openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
	        console.log("creating db");var db = openRequest.result;db.createObjectStore(FS.DB_STORE_NAME);
	      };openRequest.onsuccess = function openRequest_onsuccess() {
	        var db = openRequest.result;var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");var files = transaction.objectStore(FS.DB_STORE_NAME);var ok = 0,
	            fail = 0,
	            total = paths.length;function finish() {
	          if (fail == 0) onload();else onerror();
	        }paths.forEach(function (path) {
	          var putRequest = files.put(FS.analyzePath(path).object.contents, path);putRequest.onsuccess = function putRequest_onsuccess() {
	            ok++;if (ok + fail == total) finish();
	          };putRequest.onerror = function putRequest_onerror() {
	            fail++;if (ok + fail == total) finish();
	          };
	        });transaction.onerror = onerror;
	      };openRequest.onerror = onerror;
	    }, loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {
	      onload = onload || function () {};onerror = onerror || function () {};var indexedDB = FS.indexedDB();try {
	        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	      } catch (e) {
	        return onerror(e);
	      }openRequest.onupgradeneeded = onerror;openRequest.onsuccess = function openRequest_onsuccess() {
	        var db = openRequest.result;try {
	          var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
	        } catch (e) {
	          onerror(e);return;
	        }var files = transaction.objectStore(FS.DB_STORE_NAME);var ok = 0,
	            fail = 0,
	            total = paths.length;function finish() {
	          if (fail == 0) onload();else onerror();
	        }paths.forEach(function (path) {
	          var getRequest = files.get(path);getRequest.onsuccess = function getRequest_onsuccess() {
	            if (FS.analyzePath(path).exists) {
	              FS.unlink(path);
	            }FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);ok++;if (ok + fail == total) finish();
	          };getRequest.onerror = function getRequest_onerror() {
	            fail++;if (ok + fail == total) finish();
	          };
	        });transaction.onerror = onerror;
	      };openRequest.onerror = onerror;
	    } };var SYSCALLS = { DEFAULT_POLLMASK: 5, mappings: {}, umask: 511, calculateAt: function calculateAt(dirfd, path) {
	      if (path[0] !== "/") {
	        var dir;if (dirfd === -100) {
	          dir = FS.cwd();
	        } else {
	          var dirstream = FS.getStream(dirfd);if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir = dirstream.path;
	        }path = PATH.join2(dir, path);
	      }return path;
	    }, doStat: function doStat(func, path, buf) {
	      try {
	        var stat = func(path);
	      } catch (e) {
	        if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
	          return -ERRNO_CODES.ENOTDIR;
	        }throw e;
	      }HEAP32[buf >> 2] = stat.dev;HEAP32[buf + 4 >> 2] = 0;HEAP32[buf + 8 >> 2] = stat.ino;HEAP32[buf + 12 >> 2] = stat.mode;HEAP32[buf + 16 >> 2] = stat.nlink;HEAP32[buf + 20 >> 2] = stat.uid;HEAP32[buf + 24 >> 2] = stat.gid;HEAP32[buf + 28 >> 2] = stat.rdev;HEAP32[buf + 32 >> 2] = 0;HEAP32[buf + 36 >> 2] = stat.size;HEAP32[buf + 40 >> 2] = 4096;HEAP32[buf + 44 >> 2] = stat.blocks;HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;HEAP32[buf + 52 >> 2] = 0;HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;HEAP32[buf + 60 >> 2] = 0;HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;HEAP32[buf + 68 >> 2] = 0;HEAP32[buf + 72 >> 2] = stat.ino;return 0;
	    }, doMsync: function doMsync(addr, stream, len, flags) {
	      var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));FS.msync(stream, buffer, 0, len, flags);
	    }, doMkdir: function doMkdir(path, mode) {
	      path = PATH.normalize(path);if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);FS.mkdir(path, mode, 0);return 0;
	    }, doMknod: function doMknod(path, mode, dev) {
	      switch (mode & 61440) {case 32768:case 8192:case 24576:case 4096:case 49152:
	          break;default:
	          return -ERRNO_CODES.EINVAL;}FS.mknod(path, mode, dev);return 0;
	    }, doReadlink: function doReadlink(path, buf, bufsize) {
	      if (bufsize <= 0) return -ERRNO_CODES.EINVAL;var ret = FS.readlink(path);var len = Math.min(bufsize, lengthBytesUTF8(ret));var endChar = HEAP8[buf + len];stringToUTF8(ret, buf, bufsize + 1);HEAP8[buf + len] = endChar;return len;
	    }, doAccess: function doAccess(path, amode) {
	      if (amode & ~7) {
	        return -ERRNO_CODES.EINVAL;
	      }var node;var lookup = FS.lookupPath(path, { follow: true });node = lookup.node;var perms = "";if (amode & 4) perms += "r";if (amode & 2) perms += "w";if (amode & 1) perms += "x";if (perms && FS.nodePermissions(node, perms)) {
	        return -ERRNO_CODES.EACCES;
	      }return 0;
	    }, doDup: function doDup(path, flags, suggestFD) {
	      var suggest = FS.getStream(suggestFD);if (suggest) FS.close(suggest);return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
	    }, doReadv: function doReadv(stream, iov, iovcnt, offset) {
	      var ret = 0;for (var i = 0; i < iovcnt; i++) {
	        var ptr = HEAP32[iov + i * 8 >> 2];var len = HEAP32[iov + (i * 8 + 4) >> 2];var curr = FS.read(stream, HEAP8, ptr, len, offset);if (curr < 0) return -1;ret += curr;if (curr < len) break;
	      }return ret;
	    }, doWritev: function doWritev(stream, iov, iovcnt, offset) {
	      var ret = 0;for (var i = 0; i < iovcnt; i++) {
	        var ptr = HEAP32[iov + i * 8 >> 2];var len = HEAP32[iov + (i * 8 + 4) >> 2];var curr = FS.write(stream, HEAP8, ptr, len, offset);if (curr < 0) return -1;ret += curr;
	      }return ret;
	    }, varargs: 0, get: function get(varargs) {
	      SYSCALLS.varargs += 4;var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];return ret;
	    }, getStr: function getStr() {
	      var ret = Pointer_stringify(SYSCALLS.get());return ret;
	    }, getStreamFromFD: function getStreamFromFD() {
	      var stream = FS.getStream(SYSCALLS.get());if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream;
	    }, getSocketFromFD: function getSocketFromFD() {
	      var socket = SOCKFS.getSocket(SYSCALLS.get());if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket;
	    }, getSocketAddress: function getSocketAddress(allowNull) {
	      var addrp = SYSCALLS.get(),
	          addrlen = SYSCALLS.get();if (allowNull && addrp === 0) return null;var info = __read_sockaddr(addrp, addrlen);if (info.errno) throw new FS.ErrnoError(info.errno);info.addr = DNS.lookup_addr(info.addr) || info.addr;return info;
	    }, get64: function get64() {
	      var low = SYSCALLS.get(),
	          high = SYSCALLS.get();if (low >= 0) assert(high === 0);else assert(high === -1);return low;
	    }, getZero: function getZero() {
	      assert(SYSCALLS.get() === 0);
	    } };function ___syscall12(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var path = SYSCALLS.getStr();FS.chdir(path);return 0;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }Module["_bitshift64Shl"] = _bitshift64Shl;function _pthread_cleanup_pop() {
	    assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level = __ATEXIT__.length;
	  }function _abort() {
	    Module["abort"]();
	  }function ___syscall5(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var pathname = SYSCALLS.getStr(),
	          flags = SYSCALLS.get(),
	          mode = SYSCALLS.get();var stream = FS.open(pathname, flags, mode);return stream.fd;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___lock() {}function ___unlock() {}function _utime(path, times) {
	    var time;if (times) {
	      var offset = 4;time = HEAP32[times + offset >> 2];time *= 1e3;
	    } else {
	      time = Date.now();
	    }path = Pointer_stringify(path);try {
	      FS.utime(path, time, time);return 0;
	    } catch (e) {
	      FS.handleFSError(e);return -1;
	    }
	  }var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_STATIC);Module["_llvm_cttz_i32"] = _llvm_cttz_i32;Module["___udivmoddi4"] = ___udivmoddi4;Module["___udivdi3"] = ___udivdi3;Module["___muldsi3"] = ___muldsi3;Module["___muldi3"] = ___muldi3;Module["_sbrk"] = _sbrk;function ___syscall39(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var path = SYSCALLS.getStr(),
	          mode = SYSCALLS.get();return SYSCALLS.doMkdir(path, mode);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }Module["___uremdi3"] = ___uremdi3;function _emscripten_memcpy_big(dest, src, num) {
	    HEAPU8.set(HEAPU8.subarray(src, src + num), dest);return dest;
	  }Module["_memcpy"] = _memcpy;var _tzname = STATICTOP;STATICTOP += 16;var _daylight = STATICTOP;STATICTOP += 16;var _timezone = STATICTOP;STATICTOP += 16;function _tzset() {
	    if (_tzset.called) return;_tzset.called = true;HEAP32[_timezone >> 2] = -new Date().getTimezoneOffset() * 60;var winter = new Date(2e3, 0, 1);var summer = new Date(2e3, 6, 1);HEAP32[_daylight >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());function extractZone(date) {
	      var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match ? match[1] : "GMT";
	    }var winterName = extractZone(winter);var summerName = extractZone(summer);var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
	      HEAP32[_tzname >> 2] = winterNamePtr;HEAP32[_tzname + 4 >> 2] = summerNamePtr;
	    } else {
	      HEAP32[_tzname >> 2] = summerNamePtr;HEAP32[_tzname + 4 >> 2] = winterNamePtr;
	    }
	  }function _mktime(tmPtr) {
	    _tzset();var date = new Date(HEAP32[tmPtr + 20 >> 2] + 1900, HEAP32[tmPtr + 16 >> 2], HEAP32[tmPtr + 12 >> 2], HEAP32[tmPtr + 8 >> 2], HEAP32[tmPtr + 4 >> 2], HEAP32[tmPtr >> 2], 0);var dst = HEAP32[tmPtr + 32 >> 2];var guessedOffset = date.getTimezoneOffset();var start = new Date(date.getFullYear(), 0, 1);var summerOffset = new Date(2e3, 6, 1).getTimezoneOffset();var winterOffset = start.getTimezoneOffset();var dstOffset = Math.min(winterOffset, summerOffset);if (dst < 0) {
	      HEAP32[tmPtr + 32 >> 2] = Number(dstOffset == guessedOffset);
	    } else if (dst > 0 != (dstOffset == guessedOffset)) {
	      var nonDstOffset = Math.max(winterOffset, summerOffset);var trueOffset = dst > 0 ? dstOffset : nonDstOffset;date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);
	    }HEAP32[tmPtr + 24 >> 2] = date.getDay();var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;HEAP32[tmPtr + 28 >> 2] = yday;return date.getTime() / 1e3 | 0;
	  }function __exit(status) {
	    Module["exit"](status);
	  }function _exit(status) {
	    __exit(status);
	  }Module["_pthread_self"] = _pthread_self;function ___syscall140(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          offset_high = SYSCALLS.get(),
	          offset_low = SYSCALLS.get(),
	          result = SYSCALLS.get(),
	          whence = SYSCALLS.get();var offset = offset_low;assert(offset_high === 0);FS.llseek(stream, offset, whence);HEAP32[result >> 2] = stream.position;if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;return 0;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall6(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD();FS.close(stream);return 0;
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall146(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          iov = SYSCALLS.get(),
	          iovcnt = SYSCALLS.get();return SYSCALLS.doWritev(stream, iov, iovcnt);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall54(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          op = SYSCALLS.get();switch (op) {case 21505:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return 0;
	          };case 21506:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return 0;
	          };case 21519:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;var argp = SYSCALLS.get();HEAP32[argp >> 2] = 0;return 0;
	          };case 21520:
	          {
	            if (!stream.tty) return -ERRNO_CODES.ENOTTY;return -ERRNO_CODES.EINVAL;
	          };case 21531:
	          {
	            var argp = SYSCALLS.get();return FS.ioctl(stream, op, argp);
	          };default:
	          abort("bad ioctl syscall " + op);}
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall221(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          cmd = SYSCALLS.get();switch (cmd) {case 0:
	          {
	            var arg = SYSCALLS.get();if (arg < 0) {
	              return -ERRNO_CODES.EINVAL;
	            }var newStream;newStream = FS.open(stream.path, stream.flags, 0, arg);return newStream.fd;
	          };case 1:case 2:
	          return 0;case 3:
	          return stream.flags;case 4:
	          {
	            var arg = SYSCALLS.get();stream.flags |= arg;return 0;
	          };case 12:case 12:
	          {
	            var arg = SYSCALLS.get();var offset = 0;HEAP16[arg + offset >> 1] = 2;return 0;
	          };case 13:case 14:case 13:case 14:
	          return 0;case 16:case 8:
	          return -ERRNO_CODES.EINVAL;case 9:
	          ___setErrNo(ERRNO_CODES.EINVAL);return -1;default:
	          {
	            return -ERRNO_CODES.EINVAL;
	          }}
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }function ___syscall145(which, varargs) {
	    SYSCALLS.varargs = varargs;try {
	      var stream = SYSCALLS.getStreamFromFD(),
	          iov = SYSCALLS.get(),
	          iovcnt = SYSCALLS.get();return SYSCALLS.doReadv(stream, iov, iovcnt);
	    } catch (e) {
	      if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);return -e.errno;
	    }
	  }FS.staticInit();__ATINIT__.unshift(function () {
	    if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
	  });__ATMAIN__.push(function () {
	    FS.ignorePermissions = false;
	  });__ATEXIT__.push(function () {
	    FS.quit();
	  });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;__ATINIT__.unshift(function () {
	    TTY.init();
	  });__ATEXIT__.push(function () {
	    TTY.shutdown();
	  });if (ENVIRONMENT_IS_NODE) {
	    var fs = __webpack_require__(11);var NODEJS_PATH = __webpack_require__(12);NODEFS.staticInit();
	  }DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);STACK_MAX = STACK_BASE + TOTAL_STACK;DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;staticSealed = true;function invoke_iiii(index, a1, a2, a3) {
	    try {
	      return Module["dynCall_iiii"](index, a1, a2, a3);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_vi(index, a1) {
	    try {
	      Module["dynCall_vi"](index, a1);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_vii(index, a1, a2) {
	    try {
	      Module["dynCall_vii"](index, a1, a2);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_ii(index, a1) {
	    try {
	      return Module["dynCall_ii"](index, a1);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iiiii(index, a1, a2, a3, a4) {
	    try {
	      return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iii(index, a1, a2) {
	    try {
	      return Module["dynCall_iii"](index, a1, a2);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
	    try {
	      return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
	    } catch (e) {
	      if (typeof e !== "number" && e !== "longjmp") throw e;asm["setThrew"](1, 0);
	    }
	  }Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_iiii": invoke_iiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "___syscall221": ___syscall221, "_utime": _utime, "__exit": __exit, "_tzset": _tzset, "___syscall145": ___syscall145, "___lock": ___lock, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "_abort": _abort, "___syscall140": ___syscall140, "___setErrNo": ___setErrNo, "___syscall5": ___syscall5, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___syscall54": ___syscall54, "___unlock": ___unlock, "_exit": _exit, "___syscall39": ___syscall39, "___syscall12": ___syscall12, "___syscall146": ___syscall146, "_mktime": _mktime, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 }; // EMSCRIPTEN_START_ASM
	  var asm = function (global, env, buffer) {
	    "use asm";
	    var a = new global.Int8Array(buffer);var b = new global.Int16Array(buffer);var c = new global.Int32Array(buffer);var d = new global.Uint8Array(buffer);var e = new global.Uint16Array(buffer);var f = new global.Uint32Array(buffer);var g = new global.Float32Array(buffer);var h = new global.Float64Array(buffer);var i = env.STACKTOP | 0;var j = env.STACK_MAX | 0;var k = env.DYNAMICTOP_PTR | 0;var l = env.tempDoublePtr | 0;var m = env.ABORT | 0;var n = env.cttz_i8 | 0;var o = 0;var p = 0;var q = 0;var r = 0;var s = global.NaN,
	        t = global.Infinity;var u = 0,
	        v = 0,
	        w = 0,
	        x = 0,
	        y = 0.0,
	        z = 0,
	        A = 0,
	        B = 0,
	        C = 0.0;var D = 0;var E = global.Math.floor;var F = global.Math.abs;var G = global.Math.sqrt;var H = global.Math.pow;var I = global.Math.cos;var J = global.Math.sin;var K = global.Math.tan;var L = global.Math.acos;var M = global.Math.asin;var N = global.Math.atan;var O = global.Math.atan2;var P = global.Math.exp;var Q = global.Math.log;var R = global.Math.ceil;var S = global.Math.imul;var T = global.Math.min;var U = global.Math.max;var V = global.Math.clz32;var W = env.abort;var X = env.assert;var Y = env.enlargeMemory;var Z = env.getTotalMemory;var _ = env.abortOnCannotGrowMemory;var $ = env.invoke_iiii;var aa = env.invoke_vi;var ba = env.invoke_vii;var ca = env.invoke_ii;var da = env.invoke_iiiii;var ea = env.invoke_iii;var fa = env.invoke_iiiiii;var ga = env._pthread_cleanup_pop;var ha = env.___syscall221;var ia = env._utime;var ja = env.__exit;var ka = env._tzset;var la = env.___syscall145;var ma = env.___lock;var na = env.___syscall6;var oa = env._pthread_cleanup_push;var pa = env._abort;var qa = env.___syscall140;var ra = env.___setErrNo;var sa = env.___syscall5;var ta = env._emscripten_memcpy_big;var ua = env.___syscall54;var va = env.___unlock;var wa = env._exit;var xa = env.___syscall39;var ya = env.___syscall12;var za = env.___syscall146;var Aa = env._mktime;var Ba = 0.0;
	    // EMSCRIPTEN_START_FUNCS
	    function Ja(a) {
	      a = a | 0;var b = 0;b = i;i = i + a | 0;i = i + 15 & -16;return b | 0;
	    }function Ka() {
	      return i | 0;
	    }function La(a) {
	      a = a | 0;i = a;
	    }function Ma(a, b) {
	      a = a | 0;b = b | 0;i = a;j = b;
	    }function Na(a, b) {
	      a = a | 0;b = b | 0;if (!o) {
	        o = a;p = b;
	      }
	    }function Oa(a) {
	      a = a | 0;D = a;
	    }function Pa() {
	      return D | 0;
	    }function Qa(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0;g = i;i = i + 16 | 0;f = g;d = Hc(b) | 0;if ((d | 0) < 1) {
	        f = 0;i = g;return f | 0;
	      }e = bd(d + 1 | 0) | 0;if (!e) {
	        $c(12397) | 0;f = -104;i = g;return f | 0;
	      }Ic(e, b) | 0;b = e + (d + -1) | 0;if ((a[b >> 0] | 0) == 47) a[b >> 0] = 0;if (!(Pc(e, 509) | 0)) {
	        cd(e);f = 1;i = g;return f | 0;
	      } else b = e;while (1) {
	        a: while (1) {
	          b = b + 1 | 0;d = a[b >> 0] | 0;switch (d << 24 >> 24) {case 47:case 92:case 0:
	              break a;default:
	              {}}
	        }a[b >> 0] = 0;if ((Pc(e, 509) | 0) == -1 ? (c[(Pb() | 0) >> 2] | 0) == 2 : 0) {
	          b = 12;break;
	        }if (!(d << 24 >> 24)) {
	          b = 15;break;
	        }a[b >> 0] = d;
	      }if ((b | 0) == 12) {
	        c[f >> 2] = e;Uc(11146, f) | 0;cd(e);f = 0;i = g;return f | 0;
	      } else if ((b | 0) == 15) {
	        cd(e);f = 1;i = g;return f | 0;
	      }return 0;
	    }function Ra(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0;K = i;i = i + 464 | 0;J = K + 176 | 0;F = K + 144 | 0;E = K + 136 | 0;H = K + 128 | 0;G = K + 120 | 0;I = K + 112 | 0;e = K + 104 | 0;z = K + 440 | 0;A = K + 88 | 0;B = K + 184 | 0;C = K;d = $a(b, A) | 0;if (d | 0) {
	        c[e >> 2] = d;Uc(11179, e) | 0;
	      }$c(12235) | 0;$c(12300) | 0;y = A;if ((c[y >> 2] | 0) == 0 & (c[y + 4 >> 2] | 0) == 0) {
	        i = K;return 0;
	      }n = C + 32 | 0;o = C + 8 | 0;p = C + 12 | 0;q = z + 20 | 0;r = z + 19 | 0;s = C + 24 | 0;t = C + 80 | 0;u = C + 76 | 0;v = C + 84 | 0;w = C + 72 | 0;x = C + 68 | 0;y = C + 20 | 0;f = 0;m = 0;while (1) {
	        e = ab(b, C, B, 256, 0, 0, 0, 0) | 0;if (e | 0) {
	          d = 6;break;
	        }h = n;e = c[h >> 2] | 0;h = c[h + 4 >> 2] | 0;if ((e | 0) == 0 & (h | 0) == 0) k = 0;else {
	          k = s;k = qd(c[k >> 2] | 0, c[k + 4 >> 2] | 0, 100, 0) | 0;k = od(k | 0, D | 0, e | 0, h | 0) | 0;
	        }d = c[o >> 2] | 0;j = (d & 1 | 0) == 0 ? 32 : 42;a: do {
	          switch (c[p >> 2] | 0) {case 0:
	              {
	                l = 11271;break;
	              }case 8:
	              {
	                d = d >>> 1;switch (d & 3) {case 0:
	                    {
	                      l = 11278;break a;
	                    }case 1:
	                    {
	                      l = 11285;break a;
	                    }default:
	                    {
	                      l = (d & 2 | 1 | 0) == 3 ? 11292 : f;break a;
	                    }}
	              }case 12:
	              {
	                l = 11299;break;
	              }default:
	              l = 11306;}
	        } while (0);a[q >> 0] = 0;g = sd(e | 0, h | 0, 10, 0) | 0;a[r >> 0] = g | 48;g = 19;f = 19;d = h;do {
	          e = od(e | 0, d | 0, 10, 0) | 0;d = D;f = f + -1 | 0;h = sd(e | 0, d | 0, 10, 0) | 0;h = h | 48;a[z + f >> 0] = h;g = (h | 0) == 48 & (D | 0) == 0 ? g : f;
	        } while ((f | 0) != 0);e = 19 - g | 0;if ((e | 0) < 7) {
	          d = 7;do {
	            d = d + -1 | 0;Rc(32) | 0;
	          } while ((d | 0) > (e | 0));
	        }c[G >> 2] = z + g;Uc(11176, G) | 0;c[H >> 2] = l;c[H + 4 >> 2] = j;Uc(11313, H) | 0;f = s;e = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;a[q >> 0] = 0;g = sd(e | 0, f | 0, 10, 0) | 0;a[r >> 0] = g | 48;g = 19;d = 19;do {
	          e = od(e | 0, f | 0, 10, 0) | 0;f = D;d = d + -1 | 0;j = sd(e | 0, f | 0, 10, 0) | 0;j = j | 48;a[z + d >> 0] = j;g = (j | 0) == 48 & (D | 0) == 0 ? g : d;
	        } while ((d | 0) != 0);e = 19 - g | 0;if ((e | 0) < 7) {
	          d = 7;do {
	            d = d + -1 | 0;Rc(32) | 0;
	          } while ((d | 0) > (e | 0));
	        }c[E >> 2] = z + g;Uc(11176, E) | 0;f = (c[t >> 2] | 0) + 1 | 0;g = c[u >> 2] | 0;h = ((c[v >> 2] | 0) >>> 0) % 100 | 0;j = c[w >> 2] | 0;e = c[x >> 2] | 0;d = c[y >> 2] | 0;c[F >> 2] = k;c[F + 4 >> 2] = f;c[F + 8 >> 2] = g;c[F + 12 >> 2] = h;c[F + 16 >> 2] = j;c[F + 20 >> 2] = e;c[F + 24 >> 2] = d;c[F + 28 >> 2] = B;Uc(11321, F) | 0;m = m + 1 | 0;d = A;e = c[d >> 2] | 0;d = c[d + 4 >> 2] | 0;if (0 < d >>> 0 | 0 == (d | 0) & m >>> 0 < e >>> 0) {
	          e = bb(b) | 0;if (e | 0) {
	            d = 26;break;
	          }e = A;d = c[e + 4 >> 2] | 0;e = c[e >> 2] | 0;
	        }if (!(0 < d >>> 0 | 0 == (d | 0) & m >>> 0 < e >>> 0)) {
	          d = 29;break;
	        } else f = l;
	      }if ((d | 0) == 6) {
	        c[I >> 2] = e;Uc(11223, I) | 0;
	      } else if ((d | 0) == 26) {
	        c[J >> 2] = e;Uc(11380, J) | 0;
	      } else if ((d | 0) == 29) {
	        i = K;return 0;
	      }i = K;return 0;
	    }function Sa(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0;B = i;i = i + 544 | 0;A = B + 152 | 0;y = B + 144 | 0;x = B + 136 | 0;t = B + 128 | 0;n = B + 120 | 0;p = B + 112 | 0;o = B + 104 | 0;k = B + 96 | 0;h = B + 88 | 0;v = B + 160 | 0;j = B + 288 | 0;w = B;g = ab(b, w, j, 256, 0, 0, 0, 0) | 0;if (g | 0) {
	        c[h >> 2] = g;Uc(11223, h) | 0;A = g;i = B;return A | 0;
	      }z = bd(8192) | 0;if (!z) {
	        $c(12397) | 0;A = -104;i = B;return A | 0;
	      } else q = 0;a: while (1) {
	        g = q;b: while (1) {
	          switch (a[j + g >> 0] | 0) {case 0:
	              break a;case 92:case 47:
	              break b;default:
	              {}}g = g + 1 | 0;
	        }q = g + 1 | 0;
	      }l = j + q | 0;g = (c[d >> 2] | 0) == 0;c: do {
	        if (!(a[l >> 0] | 0)) {
	          if (g) {
	            c[k >> 2] = j;Uc(11422, k) | 0;Pc(j, 509) | 0;g = 0;
	          } else g = 0;
	        } else {
	          k = g ? j : l;g = eb(b, f) | 0;j = (g | 0) == 0;if (!j) {
	            c[o >> 2] = g;Uc(11446, o) | 0;
	          }if ((c[e >> 2] | g | 0) == 0 ? (m = wc(k, 12424) | 0, (m | 0) != 0) : 0) {
	            xc(m) | 0;d: while (1) {
	              c[p >> 2] = k;Uc(11499, p) | 0;c[n >> 2] = v;if ((Wc(11552, n) | 0) != 1) {
	                u = 18;break;
	              }r = a[v >> 0] | 0;r = (r + -97 & 255) < 26 ? (r & 255) + 224 & 255 : r;switch (r << 24 >> 24) {case 65:case 78:case 89:
	                  break d;default:
	                  {}}
	            }if ((u | 0) == 18) wa(1);h = r << 24 >> 24 == 78 & 1;if (r << 24 >> 24 == 65) c[e >> 2] = 1;
	          } else h = 0;e: do {
	            if (!(h | g)) {
	              h = wc(k, 12421) | 0;do {
	                if (!h) {
	                  if (!((q | 0) == 0 | (c[d >> 2] | 0) != 0) ? (s = l + -1 | 0, u = a[s >> 0] | 0, a[s >> 0] = 0, Qa(k) | 0, a[s >> 0] = u, s = wc(k, 12421) | 0, s | 0) : 0) {
	                    h = s;break;
	                  }c[t >> 2] = k;Uc(11556, t) | 0;u = 35;break e;
	                }
	              } while (0);c[x >> 2] = k;Uc(11574, x) | 0;while (1) {
	                g = fb(b, z, 8192) | 0;if ((g | 0) < 0) {
	                  u = 29;break;
	                }if (!g) {
	                  u = 34;break;
	                }if ((Tc(z, g, 1, h) | 0) != 1) {
	                  u = 32;break;
	                }
	              }if ((u | 0) == 29) {
	                c[y >> 2] = g;Uc(11591, y) | 0;
	              } else if ((u | 0) == 32) {
	                $c(12365) | 0;g = -1;
	              } else if ((u | 0) == 34) {
	                xc(h) | 0;d = c[w + 68 >> 2] | 0;s = c[w + 72 >> 2] | 0;t = c[w + 76 >> 2] | 0;y = c[w + 80 >> 2] | 0;g = c[w + 84 >> 2] | 0;c[v >> 2] = c[w + 64 >> 2];c[v + 4 >> 2] = d;c[v + 8 >> 2] = s;c[v + 12 >> 2] = t;c[v + 16 >> 2] = y;c[v + 20 >> 2] = g >>> 0 > 1900 ? g + -1900 | 0 : g;c[v + 32 >> 2] = -1;g = Aa(v | 0) | 0;c[x + 4 >> 2] = g;c[x >> 2] = g;ia(k | 0, x | 0) | 0;g = _a(b) | 0;break;
	              }xc(h) | 0;_a(b) | 0;break c;
	            } else u = 35;
	          } while (0);if ((u | 0) == 35) {
	            h = _a(b) | 0;if (j) g = h;else break;
	          }if (!g) g = 0;else {
	            c[A >> 2] = g;Uc(11636, A) | 0;
	          }
	        }
	      } while (0);cd(z);A = g;i = B;return A | 0;
	    }function Ta(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;l = i;i = i + 48 | 0;k = l + 24 | 0;f = l + 16 | 0;g = l + 32 | 0;h = l + 28 | 0;j = l;c[g >> 2] = b;c[h >> 2] = d;b = $a(a, j) | 0;if (b | 0) {
	        c[f >> 2] = b;Uc(11179, f) | 0;
	      }f = j;if ((c[f >> 2] | 0) == 0 & (c[f + 4 >> 2] | 0) == 0) {
	        i = l;return 0;
	      } else f = 0;while (1) {
	        if (Sa(a, g, h, e) | 0) {
	          b = 10;break;
	        }f = f + 1 | 0;b = j;d = c[b >> 2] | 0;b = c[b + 4 >> 2] | 0;if (0 < b >>> 0 | 0 == (b | 0) & f >>> 0 < d >>> 0) {
	          d = bb(a) | 0;if (d | 0) {
	            b = 9;break;
	          }d = j;b = c[d + 4 >> 2] | 0;d = c[d >> 2] | 0;
	        }if (!(0 < b >>> 0 | 0 == (b | 0) & f >>> 0 < d >>> 0)) {
	          b = 10;break;
	        }
	      }if ((b | 0) == 9) {
	        c[k >> 2] = d;Uc(11380, k) | 0;i = l;return 0;
	      } else if ((b | 0) == 10) {
	        i = l;return 0;
	      }return 0;
	    }function Ua(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0;z = i;i = i + 304 | 0;y = z + 24 | 0;x = z + 16 | 0;w = z + 8 | 0;v = z;t = z + 28 | 0;u = z + 32 | 0;jd(u | 0, 0, 272) | 0;$c(11792) | 0;$c(11860) | 0;if ((b | 0) == 1) {
	        $c(11917) | 0;y = 0;i = z;return y | 0;
	      }do {
	        if ((b | 0) > 1) {
	          g = 0;o = 1;l = 0;s = 0;e = 0;k = 0;m = 0;j = 0;h = 0;while (1) {
	            f = c[d + (o << 2) >> 2] | 0;a: do {
	              if ((a[f >> 0] | 0) != 45) {
	                if (!e) {
	                  p = s;e = f;f = o;
	                } else {
	                  p = (s | 0) != 0 | (m | 0) != 0 ? s : f;f = o;
	                }
	              } else {
	                n = o + 1 | 0;p = d + (n << 2) | 0;if ((n | 0) < (b | 0)) {
	                  q = o;r = l;o = n;while (1) {
	                    b: while (1) {
	                      f = f + 1 | 0;l = a[f >> 0] | 0;switch (l << 24 >> 24) {case 0:
	                          {
	                            p = s;f = q;l = r;break a;
	                          }case 76:case 108:
	                          {
	                            g = 1;break;
	                          }default:
	                          {}}switch (l << 24 >> 24) {case 86:case 118:
	                          {
	                            g = 1;break;
	                          }default:
	                          {}}switch (l << 24 >> 24) {case 69:case 101:
	                          {
	                            h = 1;break;
	                          }default:
	                          {}}switch (l << 24 >> 24) {case 79:case 111:
	                          {
	                            j = 1;break;
	                          }default:
	                          {}}switch (l << 24 >> 24) {case 68:case 100:
	                          {
	                            k = c[p >> 2] | 0;m = 1;break;
	                          }default:
	                          {}}switch (l << 24 >> 24) {case 80:case 112:
	                          break b;default:
	                          {}}
	                    }l = c[p >> 2] | 0;n = o + 1 | 0;p = d + (n << 2) | 0;if ((n | 0) < (b | 0)) {
	                      q = o;r = l;o = n;
	                    } else break;
	                  }
	                }n = k;while (1) {
	                  c: while (1) {
	                    f = f + 1 | 0;k = a[f >> 0] | 0;switch (k << 24 >> 24) {case 0:
	                        {
	                          p = s;k = n;f = o;break a;
	                        }case 76:case 108:
	                        {
	                          g = 1;break;
	                        }default:
	                        {}}switch (k << 24 >> 24) {case 86:case 118:
	                        {
	                          g = 1;break;
	                        }default:
	                        {}}switch (k << 24 >> 24) {case 69:case 101:
	                        {
	                          h = 1;break;
	                        }default:
	                        {}}switch (k << 24 >> 24) {case 79:case 111:
	                        {
	                          j = 1;break;
	                        }default:
	                        {}}switch (k << 24 >> 24) {case 68:case 100:
	                        break c;default:
	                        {}}
	                  }n = c[p >> 2] | 0;m = 1;
	                }
	              }
	            } while (0);o = f + 1 | 0;if ((o | 0) >= (b | 0)) break;else s = p;
	          }if (e) {
	            Kc(u, e, 255) | 0;a[u + 256 >> 0] = 0;f = Ya(e) | 0;if (!f) {
	              f = u + (Hc(u) | 0) | 0;a[f >> 0] = a[11716] | 0;a[f + 1 >> 0] = a[11717] | 0;a[f + 2 >> 0] = a[11718] | 0;a[f + 3 >> 0] = a[11719] | 0;a[f + 4 >> 0] = a[11720] | 0;f = Ya(u) | 0;if (!f) break;
	            }c[w >> 2] = u;Uc(11747, w) | 0;do {
	              if ((g | 0) == 1) {
	                Ra(f) | 0;e = 0;
	              } else {
	                if (m | 0 ? ad(k) | 0 : 0) {
	                  c[x >> 2] = k;Uc(11758, x) | 0;wa(-1);
	                }if (!p) {
	                  Ta(f, h, j, l) | 0;e = 0;break;
	                }c[w >> 2] = h;c[t >> 2] = j;if (!(cb(f, p, 0) | 0)) e = (Sa(f, w, t, l) | 0) != 0 & 1;else {
	                  c[y >> 2] = p;Uc(11682, y) | 0;e = 2;
	                }
	              }
	            } while (0);Za(f) | 0;y = e;i = z;return y | 0;
	          } else e = 0;
	        } else e = 0;
	      } while (0);c[v >> 2] = e;c[v + 4 >> 2] = e;Uc(11721, v) | 0;y = 1;i = z;return y | 0;
	    }function Va(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0;C = i;i = i + 288 | 0;y = C + 272 | 0;p = C + 264 | 0;B = C + 8 | 0;x = C;c[B + 40 >> 2] = 0;c[B + 36 >> 2] = 0;if (!e) nb(B);else {
	        h = B;g = h + 44 | 0;do {
	          c[h >> 2] = c[e >> 2];h = h + 4 | 0;e = e + 4 | 0;
	        } while ((h | 0) < (g | 0));
	      }c[B + 44 >> 2] = f;o = gb(B, b, 5) | 0;z = B + 48 | 0;c[z >> 2] = o;if (!o) {
	        B = 0;i = C;return B | 0;
	      }a: do {
	        if ((hb(B, o, 0, 0, 2) | 0) == 0 ? (j = ib(B, o) | 0, k = D, m = k >>> 0 < 0 | (k | 0) == 0 & j >>> 0 < 65535, l = m ? j : 65535, m = m ? k : 0, n = bd(1028) | 0, (n | 0) != 0) : 0) {
	          v = B + 4 | 0;w = B + 28 | 0;b: do {
	            if (m >>> 0 > 0 | (m | 0) == 0 & l >>> 0 > 4) {
	              f = 4;h = 0;c: while (1) {
	                E = id(f | 0, h | 0, 1024, 0) | 0;g = D;b = g >>> 0 > m >>> 0 | (g | 0) == (m | 0) & E >>> 0 > l >>> 0;f = b ? l : E;h = b ? m : g;g = hd(j | 0, k | 0, f | 0, h | 0) | 0;b = D;E = h >>> 0 < 0 | (h | 0) == 0 & f >>> 0 < 1028;e = E ? f : 1028;if (hb(B, o, g, b, 0) | 0) break b;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, n, e) | 0) != (e | 0)) break b;d: do {
	                  if ((e | 0) > 3) {
	                    e = e + -4 | 0;while (1) {
	                      E = n + e | 0;if ((((a[E >> 0] | 0) == 80 ? (a[E + 1 >> 0] | 0) == 75 : 0) ? (a[E + 2 >> 0] | 0) == 6 : 0) ? (a[E + 3 >> 0] | 0) == 7 : 0) break;if ((e | 0) > 0) e = e + -1 | 0;else break d;
	                    }e = id(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, g | 0, b | 0) | 0;g = D;if (!((e | 0) == 0 & (g | 0) == 0)) break c;
	                  }
	                } while (0);if (!(h >>> 0 < m >>> 0 | (h | 0) == (m | 0) & f >>> 0 < l >>> 0)) break b;
	              }cd(n);if (hb(B, o, e, g, 0) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) e = 0;else {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) g = e;else {
	                  A = 74;break a;
	                }
	              } else g = d[y >> 0] | 0;b = g << 8 | e;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) e = g;else {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;g = b | e << 16;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;if ((e << 24 | 0) != (0 - g | 0)) {
	                A = 74;break a;
	              }if (Wa(B, o, p) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) e = 0;else {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) g = e;else {
	                  A = 74;break a;
	                }
	              } else g = d[y >> 0] | 0;b = g << 8 | e;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) e = g;else {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;g = b | e << 16;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;if (((e << 24) + g | 0) != 1) {
	                A = 74;break a;
	              }j = p;b = c[j >> 2] | 0;j = c[j + 4 >> 2] | 0;if (hb(B, o, b, j, 0) | 0) {
	                A = 74;break a;
	              }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) g = 0;else {
	                  A = 74;break a;
	                }
	              } else g = d[y >> 0] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0)) e = g;else {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;g = e << 8 | g;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;g = g | e << 16;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, o, y, 1) | 0) != 1) {
	                if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, o) | 0) {
	                  A = 74;break a;
	                }
	              } else e = d[y >> 0] | 0;if (((e << 24) + g | 0) != 101075792) {
	                A = 74;break a;
	              }if ((b | 0) == 0 & (j | 0) == 0) {
	                A = 130;break a;
	              }c[B + 232 >> 2] = 1;e = ((hb(B, c[z >> 2] | 0, b, j, 0) | 0) != 0) << 31 >> 31;g = c[z >> 2] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1 ? (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) != 0 : 0) e = -1;else A = 79;do {
	                if ((A | 0) == 79) {
	                  if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) {
	                    e = -1;break;
	                  }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) {
	                    e = -1;break;
	                  }if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) {
	                    e = -1;break;
	                  }
	                }
	              } while (0);g = (Wa(B, c[z >> 2] | 0, p) | 0) == 0;e = g ? e : -1;g = c[z >> 2] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1 ? (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) != 0 : 0) e = -1;else A = 92;do {
	                if ((A | 0) == 92) if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) {
	                  e = -1;break;
	                }
	              } while (0);g = c[z >> 2] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1 ? (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) != 0 : 0) e = -1;else A = 99;do {
	                if ((A | 0) == 99) if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, g, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, g) | 0) {
	                  e = -1;break;
	                }
	              } while (0);k = c[z >> 2] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0)) {
	                  g = 0;A = 106;
	                } else {
	                  e = -1;l = 0;
	                }
	              } else {
	                g = d[y >> 0] | 0;A = 106;
	              }do {
	                if ((A | 0) == 106) {
	                  if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0)) f = g;else {
	                      e = -1;l = 0;break;
	                    }
	                  } else f = d[y >> 0] | 0;h = f << 8 | g;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0)) g = f;else {
	                      e = -1;l = 0;break;
	                    }
	                  } else g = d[y >> 0] | 0;f = h | g << 16;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0) {
	                      e = -1;l = 0;break;
	                    }
	                  } else g = d[y >> 0] | 0;l = (g << 24) + f | 0;
	                }
	              } while (0);k = c[z >> 2] | 0;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0)) {
	                  g = 0;A = 119;
	                } else {
	                  g = -1;e = 0;
	                }
	              } else {
	                g = d[y >> 0] | 0;A = 119;
	              }do {
	                if ((A | 0) == 119) {
	                  if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (!(Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0)) f = g;else {
	                      g = -1;e = 0;break;
	                    }
	                  } else f = d[y >> 0] | 0;g = f << 8 | g;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0) {
	                      g = -1;e = 0;break;
	                    }
	                  } else f = d[y >> 0] | 0;h = g | f << 16;if ((Ga[c[v >> 2] & 3](c[w >> 2] | 0, k, y, 1) | 0) != 1) {
	                    if (Ha[c[B + 24 >> 2] & 3](c[w >> 2] | 0, k) | 0) {
	                      g = -1;e = 0;break;
	                    }
	                  } else f = d[y >> 0] | 0;g = e;e = (f << 24) + h | 0;
	                }
	              } while (0);k = B + 56 | 0;f = Wa(B, c[z >> 2] | 0, k) | 0;f = (Wa(B, c[z >> 2] | 0, x) | 0 | f | 0) == 0;E = x;f = (e | l | 0) != 0 | ((c[E >> 2] | 0) != (c[k >> 2] | 0) ? 1 : (c[E + 4 >> 2] | 0) != (c[k + 4 >> 2] | 0)) ? -103 : f ? g : -1;k = B + 112 | 0;E = Wa(B, c[z >> 2] | 0, k) | 0;h = B + 120 | 0;E = (Wa(B, c[z >> 2] | 0, h) | 0 | E | 0) == 0;c[B + 64 >> 2] = 0;f = E ? f : -1;break a;
	            }
	          } while (0);cd(n);A = 74;
	        } else A = 74;
	      } while (0);if ((A | 0) == 74) A = 130;if ((A | 0) == 130) {
	        f = c[z >> 2] | 0;if ((hb(B, f, 0, 0, 2) | 0) == 0 ? (q = ib(B, f) | 0, r = D, t = r >>> 0 < 0 | (r | 0) == 0 & q >>> 0 < 65535, s = t ? q : 65535, t = t ? r : 0, u = bd(1028) | 0, (u | 0) != 0) : 0) {
	          h = B + 4 | 0;j = B + 28 | 0;e: do {
	            if (t >>> 0 > 0 | (t | 0) == 0 & s >>> 0 > 4) {
	              k = 4;l = 0;while (1) {
	                E = id(k | 0, l | 0, 1024, 0) | 0;g = D;b = g >>> 0 > t >>> 0 | (g | 0) == (t | 0) & E >>> 0 > s >>> 0;k = b ? s : E;l = b ? t : g;g = hd(q | 0, r | 0, k | 0, l | 0) | 0;b = D;E = l >>> 0 < 0 | (l | 0) == 0 & k >>> 0 < 1028;e = E ? k : 1028;if (hb(B, f, g, b, 0) | 0) {
	                  e = 0;g = 0;break e;
	                }if ((Ga[c[h >> 2] & 3](c[j >> 2] | 0, f, u, e) | 0) != (e | 0)) {
	                  e = 0;g = 0;break e;
	                }f: do {
	                  if ((e | 0) > 3) {
	                    e = e + -4 | 0;while (1) {
	                      E = u + e | 0;if ((((a[E >> 0] | 0) == 80 ? (a[E + 1 >> 0] | 0) == 75 : 0) ? (a[E + 2 >> 0] | 0) == 5 : 0) ? (a[E + 3 >> 0] | 0) == 6 : 0) break;if ((e | 0) > 0) e = e + -1 | 0;else break f;
	                    }e = id(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, g | 0, b | 0) | 0;g = D;if (!((e | 0) == 0 & (g | 0) == 0)) break e;
	                  }
	                } while (0);if (!(l >>> 0 < t >>> 0 | (l | 0) == (t | 0) & k >>> 0 < s >>> 0)) {
	                  e = 0;g = 0;break;
	                }
	              }
	            } else {
	              e = 0;g = 0;
	            }
	          } while (0);cd(u);
	        } else {
	          e = 0;g = 0;
	        }c[B + 232 >> 2] = 0;b = (hb(B, c[z >> 2] | 0, e, g, 0) | 0) == 0;b = b ? ((e | 0) == 0 & (g | 0) == 0) << 31 >> 31 : -1;f = c[z >> 2] | 0;m = B + 4 | 0;n = B + 28 | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1 ? (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0) != 0 : 0) b = -1;else A = 148;do {
	          if ((A | 0) == 148) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0) {
	              b = -1;break;
	            }if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0) {
	              b = -1;break;
	            }if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) if (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0) {
	              b = -1;break;
	            }
	          }
	        } while (0);f = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) {
	            h = 0;A = 161;
	          } else {
	            b = -1;l = 0;
	          }
	        } else {
	          h = d[y >> 0] | 0;A = 161;
	        }do {
	          if ((A | 0) == 161) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) f = h;else {
	                b = -1;l = 0;break;
	              }
	            } else f = d[y >> 0] | 0;l = f << 8 | h;
	          }
	        } while (0);f = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) {
	            h = 0;A = 168;
	          } else {
	            b = -1;k = 0;
	          }
	        } else {
	          h = d[y >> 0] | 0;A = 168;
	        }do {
	          if ((A | 0) == 168) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) f = h;else {
	                b = -1;k = 0;break;
	              }
	            } else f = d[y >> 0] | 0;k = f << 8 | h;
	          }
	        } while (0);f = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) {
	            h = 0;A = 175;
	          } else {
	            b = -1;f = 0;
	          }
	        } else {
	          h = d[y >> 0] | 0;A = 175;
	        }do {
	          if ((A | 0) == 175) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) f = h;else {
	                b = -1;f = 0;break;
	              }
	            } else f = d[y >> 0] | 0;f = f << 8 | h;
	          }
	        } while (0);j = B + 56 | 0;E = j;c[E >> 2] = f;c[E + 4 >> 2] = 0;f = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) {
	            h = 0;A = 182;
	          } else {
	            b = -1;f = 0;
	          }
	        } else {
	          h = d[y >> 0] | 0;A = 182;
	        }do {
	          if ((A | 0) == 182) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, f, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, f) | 0)) f = h;else {
	                b = -1;f = 0;break;
	              }
	            } else f = d[y >> 0] | 0;f = f << 8 | h;
	          }
	        } while (0);E = x;c[E >> 2] = f;c[E + 4 >> 2] = 0;E = j;f = (k | l | 0) != 0 | ((f | 0) != (c[E >> 2] | 0) ? 1 : 0 != (c[E + 4 >> 2] | 0)) ? -103 : b;k = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, k, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, k) | 0)) {
	            b = 0;A = 189;
	          } else {
	            f = -1;b = 0;h = 0;
	          }
	        } else {
	          b = d[y >> 0] | 0;A = 189;
	        }do {
	          if ((A | 0) == 189) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, k, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, k) | 0)) h = b;else {
	                f = -1;b = 0;h = 0;break;
	              }
	            } else h = d[y >> 0] | 0;j = h << 8 | b;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, k, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, k) | 0)) b = h;else {
	                f = -1;b = 0;h = 0;break;
	              }
	            } else b = d[y >> 0] | 0;h = j | b << 16;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, k, y, 1) | 0) != 1) {
	              if (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, k) | 0) {
	                f = -1;b = 0;h = 0;break;
	              }
	            } else b = d[y >> 0] | 0;b = (b << 24) + h | 0;h = 0;
	          }
	        } while (0);k = B + 112 | 0;l = k;c[l >> 2] = b;c[l + 4 >> 2] = h;l = c[z >> 2] | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, l, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, l) | 0)) {
	            b = 0;A = 202;
	          } else {
	            f = -1;b = 0;j = 0;
	          }
	        } else {
	          b = d[y >> 0] | 0;A = 202;
	        }do {
	          if ((A | 0) == 202) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, l, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, l) | 0)) h = b;else {
	                f = -1;b = 0;j = 0;break;
	              }
	            } else h = d[y >> 0] | 0;j = h << 8 | b;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, l, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, l) | 0)) b = h;else {
	                f = -1;b = 0;j = 0;break;
	              }
	            } else b = d[y >> 0] | 0;h = j | b << 16;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, l, y, 1) | 0) != 1) {
	              if (Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, l) | 0) {
	                f = -1;b = 0;j = 0;break;
	              }
	            } else b = d[y >> 0] | 0;b = (b << 24) + h | 0;j = 0;
	          }
	        } while (0);h = B + 120 | 0;l = h;c[l >> 2] = b;c[l + 4 >> 2] = j;b = c[z >> 2] | 0;l = B + 64 | 0;if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, b, y, 1) | 0) != 1) {
	          if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, b) | 0)) {
	            j = 0;A = 215;
	          } else {
	            f = -1;b = 0;
	          }
	        } else {
	          j = d[y >> 0] | 0;A = 215;
	        }do {
	          if ((A | 0) == 215) {
	            if ((Ga[c[m >> 2] & 3](c[n >> 2] | 0, b, y, 1) | 0) != 1) {
	              if (!(Ha[c[B + 24 >> 2] & 3](c[n >> 2] | 0, b) | 0)) b = j;else {
	                f = -1;b = 0;break;
	              }
	            } else b = d[y >> 0] | 0;b = b << 8 | j;
	          }
	        } while (0);c[l >> 2] = b;j = g;b = e;
	      }e = h;g = k;e = id(c[g >> 2] | 0, c[g + 4 >> 2] | 0, c[e >> 2] | 0, c[e + 4 >> 2] | 0) | 0;g = D;if (!((f | 0) == 0 & ((f | 0) != 0 | (j >>> 0 > g >>> 0 | (j | 0) == (g | 0) & b >>> 0 >= e >>> 0)))) {
	        Ha[c[B + 20 >> 2] & 3](c[B + 28 >> 2] | 0, c[z >> 2] | 0) | 0;E = 0;i = C;return E | 0;
	      }E = hd(b | 0, j | 0, e | 0, g | 0) | 0;e = B + 72 | 0;c[e >> 2] = E;c[e + 4 >> 2] = D;e = B + 104 | 0;c[e >> 2] = b;c[e + 4 >> 2] = j;c[B + 224 >> 2] = 0;c[B + 228 >> 2] = 0;e = bd(256) | 0;if (!e) {
	        E = 0;i = C;return E | 0;
	      }td(e | 0, B | 0, 256) | 0;A = e + 120 | 0;B = c[A + 4 >> 2] | 0;E = e + 88 | 0;c[E >> 2] = c[A >> 2];c[E + 4 >> 2] = B;E = e + 80 | 0;c[E >> 2] = 0;c[E + 4 >> 2] = 0;E = e + 96 | 0;c[E >> 2] = (Xa(e, e + 128 | 0, e + 216 | 0, 0, 0, 0, 0, 0, 0) | 0) == 0 & 1;c[E + 4 >> 2] = 0;E = e;i = C;return E | 0;
	    }function Wa(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;r = i;i = i + 16 | 0;o = r;p = b + 4 | 0;q = b + 28 | 0;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	          g = 0;j = 0;l = 0;k = 4;
	        } else {
	          j = -1;h = 0;g = 0;
	        }
	      } else {
	        j = a[o >> 0] | 0;g = j & 255;j = j & 255;l = 0;k = 4;
	      }do {
	        if ((k | 0) == 4) {
	          if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              m = g;h = 0;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;m = g & 255;g = g & 255;h = 0;
	          }k = ld(g | 0, h | 0, 8) | 0;j = k | j;k = D | l;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              n = m;h = m;g = ((m | 0) < 0) << 31 >> 31;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            h = a[o >> 0] | 0;n = h & 255;h = h & 255;g = 0;
	          }m = ld(h | 0, g | 0, 16) | 0;j = j | m;k = k | D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              l = n;h = n;g = ((n | 0) < 0) << 31 >> 31;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            h = a[o >> 0] | 0;l = h & 255;h = h & 255;g = 0;
	          }n = ld(h | 0, g | 0, 24) | 0;n = j | n;h = k | D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              j = l;g = l;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;j = g & 255;g = g & 255;
	          }l = h | g;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              m = j;g = j;h = 0;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            g = a[o >> 0] | 0;m = g & 255;g = g & 255;h = 0;
	          }k = ld(g | 0, h | 0, 40) | 0;k = n | k;l = l | D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) {
	              g = m;h = m;j = 0;
	            } else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            h = a[o >> 0] | 0;g = h & 255;h = h & 255;j = 0;
	          }n = ld(h | 0, j | 0, 48) | 0;k = k | n;l = l | D;if ((Ga[c[p >> 2] & 3](c[q >> 2] | 0, e, o, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[q >> 2] | 0, e) | 0)) h = 0;else {
	              j = -1;h = 0;g = 0;break;
	            }
	          } else {
	            g = d[o >> 0] | 0;h = 0;
	          }h = ld(g | 0, h | 0, 56) | 0;j = 0;h = k | h;g = l | D;
	        }
	      } while (0);c[f >> 2] = h;c[f + 4 >> 2] = g;i = r;return j | 0;
	    }function Xa(b, e, f, g, h, j, k, l, m) {
	      b = b | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;j = j | 0;k = k | 0;l = l | 0;m = m | 0;var n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0;H = i;i = i + 112 | 0;B = H + 96 | 0;F = H + 8 | 0;G = H;if (!b) {
	        f = -102;i = H;return f | 0;
	      }E = b + 48 | 0;q = c[E >> 2] | 0;A = b + 88 | 0;z = b + 72 | 0;A = id(c[z >> 2] | 0, c[z + 4 >> 2] | 0, c[A >> 2] | 0, c[A + 4 >> 2] | 0) | 0;A = (hb(b, q, A, D, 0) | 0) == 0;q = (A ^ 1) << 31 >> 31;do {
	        if (A) {
	          p = c[E >> 2] | 0;r = b + 4 | 0;s = b + 28 | 0;if ((Ga[c[r >> 2] & 3](c[s >> 2] | 0, p, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, p) | 0)) o = 0;else {
	              p = -1;A = r;break;
	            }
	          } else o = d[B >> 0] | 0;if ((Ga[c[r >> 2] & 3](c[s >> 2] | 0, p, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, p) | 0)) n = o;else {
	              p = -1;A = r;break;
	            }
	          } else n = d[B >> 0] | 0;o = n << 8 | o;if ((Ga[c[r >> 2] & 3](c[s >> 2] | 0, p, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, p) | 0) {
	              p = -1;A = r;break;
	            }
	          } else n = d[B >> 0] | 0;o = o | n << 16;if ((Ga[c[r >> 2] & 3](c[s >> 2] | 0, p, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, p) | 0) {
	              p = -1;A = r;break;
	            }
	          } else n = d[B >> 0] | 0;p = ((n << 24) + o | 0) == 33639248 ? q : -103;A = r;
	        } else {
	          p = -1;A = b + 4 | 0;s = b + 28 | 0;
	        }
	      } while (0);n = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          o = 0;C = 20;
	        } else {
	          p = -1;n = 0;
	        }
	      } else {
	        o = d[B >> 0] | 0;C = 20;
	      }do {
	        if ((C | 0) == 20) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = o;else {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | o;
	        }
	      } while (0);c[F >> 2] = n;n = c[E >> 2] | 0;q = F + 4 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          o = 0;C = 27;
	        } else {
	          p = -1;n = 0;
	        }
	      } else {
	        o = d[B >> 0] | 0;C = 27;
	      }do {
	        if ((C | 0) == 27) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = o;else {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | o;
	        }
	      } while (0);c[q >> 2] = n;n = c[E >> 2] | 0;q = F + 8 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          o = 0;C = 34;
	        } else {
	          p = -1;n = 0;
	        }
	      } else {
	        o = d[B >> 0] | 0;C = 34;
	      }do {
	        if ((C | 0) == 34) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = o;else {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | o;
	        }
	      } while (0);c[q >> 2] = n;n = c[E >> 2] | 0;q = F + 12 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          o = 0;C = 41;
	        } else {
	          p = -1;n = 0;
	        }
	      } else {
	        o = d[B >> 0] | 0;C = 41;
	      }do {
	        if ((C | 0) == 41) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = o;else {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | o;
	        }
	      } while (0);c[q >> 2] = n;r = c[E >> 2] | 0;t = F + 16 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) {
	          n = 0;C = 48;
	        } else {
	          p = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 48;
	      }do {
	        if ((C | 0) == 48) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) o = n;else {
	              p = -1;n = 0;break;
	            }
	          } else o = d[B >> 0] | 0;q = o << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) n = o;else {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;o = q | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0) {
	              p = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = (n << 24) + o | 0;
	        }
	      } while (0);c[t >> 2] = n;c[F + 76 >> 2] = n >>> 16 & 31;c[F + 80 >> 2] = (n >>> 21 & 15) + -1;c[F + 84 >> 2] = (n >>> 25) + 1980;c[F + 72 >> 2] = n >>> 11 & 31;c[F + 68 >> 2] = n >>> 5 & 63;c[F + 64 >> 2] = n << 1 & 62;r = c[E >> 2] | 0;t = F + 20 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) {
	          n = 0;C = 61;
	        } else {
	          r = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 61;
	      }do {
	        if ((C | 0) == 61) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) o = n;else {
	              r = -1;n = 0;break;
	            }
	          } else o = d[B >> 0] | 0;q = o << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) n = o;else {
	              r = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;o = q | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0) {
	              r = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;r = p;n = (n << 24) + o | 0;
	        }
	      } while (0);c[t >> 2] = n;q = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) {
	          n = 0;C = 74;
	        } else {
	          r = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 74;
	      }do {
	        if ((C | 0) == 74) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) o = n;else {
	              r = -1;n = 0;break;
	            }
	          } else o = d[B >> 0] | 0;p = o << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) n = o;else {
	              r = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;o = p | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0) {
	              r = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = (n << 24) + o | 0;
	        }
	      } while (0);z = F + 24 | 0;q = z;c[q >> 2] = n;c[q + 4 >> 2] = 0;q = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) {
	          n = 0;C = 87;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 87;
	      }do {
	        if ((C | 0) == 87) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) o = n;else {
	              o = -1;n = 0;break;
	            }
	          } else o = d[B >> 0] | 0;p = o << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0)) n = o;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;p = p | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, q, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, q) | 0) {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;o = r;n = (n << 24) + p | 0;
	        }
	      } while (0);y = F + 32 | 0;u = y;c[u >> 2] = n;c[u + 4 >> 2] = 0;n = c[E >> 2] | 0;u = F + 40 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          p = 0;C = 100;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        p = d[B >> 0] | 0;C = 100;
	      }do {
	        if ((C | 0) == 100) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | p;
	        }
	      } while (0);c[u >> 2] = n;n = c[E >> 2] | 0;w = F + 44 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          p = 0;C = 107;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        p = d[B >> 0] | 0;C = 107;
	      }do {
	        if ((C | 0) == 107) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | p;
	        }
	      } while (0);c[w >> 2] = n;n = c[E >> 2] | 0;x = F + 48 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          p = 0;C = 114;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        p = d[B >> 0] | 0;C = 114;
	      }do {
	        if ((C | 0) == 114) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | p;
	        }
	      } while (0);c[x >> 2] = n;n = c[E >> 2] | 0;v = F + 52 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          p = 0;C = 121;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        p = d[B >> 0] | 0;C = 121;
	      }do {
	        if ((C | 0) == 121) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | p;
	        }
	      } while (0);c[v >> 2] = n;n = c[E >> 2] | 0;q = F + 56 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	          p = 0;C = 128;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        p = d[B >> 0] | 0;C = 128;
	      }do {
	        if ((C | 0) == 128) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = n << 8 | p;
	        }
	      } while (0);c[q >> 2] = n;r = c[E >> 2] | 0;t = F + 60 | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) {
	          n = 0;C = 135;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 135;
	      }do {
	        if ((C | 0) == 135) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) p = n;else {
	              o = -1;n = 0;break;
	            }
	          } else p = d[B >> 0] | 0;q = p << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;p = q | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0) {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = (n << 24) + p | 0;
	        }
	      } while (0);c[t >> 2] = n;r = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) {
	          n = 0;C = 148;
	        } else {
	          o = -1;n = 0;
	        }
	      } else {
	        n = d[B >> 0] | 0;C = 148;
	      }do {
	        if ((C | 0) == 148) {
	          if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) p = n;else {
	              o = -1;n = 0;break;
	            }
	          } else p = d[B >> 0] | 0;q = p << 8 | n;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0)) n = p;else {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;p = q | n << 16;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, r, B, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[s >> 2] | 0, r) | 0) {
	              o = -1;n = 0;break;
	            }
	          } else n = d[B >> 0] | 0;n = (n << 24) + p | 0;
	        }
	      } while (0);p = G;c[p >> 2] = n;c[p + 4 >> 2] = 0;p = c[u >> 2] | 0;if ((g | 0) != 0 & (o | 0) == 0) {
	        if (p >>> 0 < h >>> 0) {
	          a[g + p >> 0] = 0;n = p;
	        } else n = h;if ((h | 0) != 0 & (p | 0) != 0) o = ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, c[E >> 2] | 0, g, n) | 0) != (n | 0)) << 31 >> 31;else o = 0;p = p - n | 0;
	      }n = c[w >> 2] | 0;if ((j | 0) != 0 & (o | 0) == 0) {
	        q = n >>> 0 < k >>> 0 ? n : k;if (!p) {
	          p = 0;o = 0;
	        } else {
	          o = (hb(b, c[E >> 2] | 0, p, ((p | 0) < 0) << 31 >> 31, 1) | 0) == 0;p = o ? 0 : p;o = (o ^ 1) << 31 >> 31;n = c[w >> 2] | 0;
	        }if ((k | 0) != 0 & (n | 0) != 0) {
	          n = (Ga[c[A >> 2] & 3](c[s >> 2] | 0, c[E >> 2] | 0, j, q) | 0) == (q | 0);o = n ? o : -1;n = c[w >> 2] | 0;
	        }p = p - q + n | 0;
	      } else p = n + p | 0;if (o | 0) {
	        f = o;i = H;return f | 0;
	      }do {
	        if (!n) o = 0;else {
	          n = p - n | 0;if (n) {
	            p = (hb(b, c[E >> 2] | 0, n, ((n | 0) < 0) << 31 >> 31, 1) | 0) == 0;o = (p ^ 1) << 31 >> 31;p = p ? 0 : n;if (!(c[w >> 2] | 0)) break;
	          } else {
	            o = 0;p = 0;
	          }u = b + 24 | 0;t = 0;do {
	            n = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	              if (!(Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	                q = 0;C = 179;
	              } else {
	                o = -1;r = 0;
	              }
	            } else {
	              q = d[B >> 0] | 0;C = 179;
	            }do {
	              if ((C | 0) == 179) {
	                C = 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	                  if (!(Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = q;else {
	                    o = -1;r = 0;break;
	                  }
	                } else n = d[B >> 0] | 0;r = n << 8 | q;
	              }
	            } while (0);n = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	              if (!(Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0)) {
	                q = 0;C = 186;
	              } else {
	                o = -1;q = 0;
	              }
	            } else {
	              q = d[B >> 0] | 0;C = 186;
	            }do {
	              if ((C | 0) == 186) {
	                C = 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) {
	                  if (!(Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0)) n = q;else {
	                    o = -1;q = 0;break;
	                  }
	                } else n = d[B >> 0] | 0;q = n << 8 | q;
	              }
	            } while (0);do {
	              if ((r | 0) == 1) {
	                k = y;if ((c[k >> 2] | 0) == -1 & (c[k + 4 >> 2] | 0) == 0) {
	                  k = (Wa(b, c[E >> 2] | 0, y) | 0) == 0;o = k ? o : -1;
	                }k = z;if ((c[k >> 2] | 0) == -1 & (c[k + 4 >> 2] | 0) == 0) {
	                  k = (Wa(b, c[E >> 2] | 0, z) | 0) == 0;o = k ? o : -1;
	                }k = G;if ((c[k >> 2] | 0) == -1 & (c[k + 4 >> 2] | 0) == 0) {
	                  k = (Wa(b, c[E >> 2] | 0, G) | 0) == 0;o = k ? o : -1;
	                }if ((c[v >> 2] | 0) != -1) break;n = c[E >> 2] | 0;if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) if (Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0) {
	                  o = -1;break;
	                }if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) if (Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0) {
	                  o = -1;break;
	                }if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) if (Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0) {
	                  o = -1;break;
	                }if ((Ga[c[A >> 2] & 3](c[s >> 2] | 0, n, B, 1) | 0) != 1) if (Ha[c[u >> 2] & 3](c[s >> 2] | 0, n) | 0) {
	                  o = -1;break;
	                }
	              } else {
	                k = (hb(b, c[E >> 2] | 0, q, 0, 1) | 0) == 0;o = k ? o : -1;
	              }
	            } while (0);t = t + 4 + q | 0;
	          } while (t >>> 0 < (c[w >> 2] | 0) >>> 0);
	        }
	      } while (0);do {
	        if ((l | 0) != 0 & (o | 0) == 0) {
	          n = c[x >> 2] | 0;if (n >>> 0 < m >>> 0) {
	            a[l + n >> 0] = 0;q = n;
	          } else q = m;if (!p) o = 0;else {
	            o = ((hb(b, c[E >> 2] | 0, p, ((p | 0) < 0) << 31 >> 31, 1) | 0) != 0) << 31 >> 31;n = c[x >> 2] | 0;
	          }if (!((m | 0) != 0 & (n | 0) != 0)) break;m = (Ga[c[A >> 2] & 3](c[s >> 2] | 0, c[E >> 2] | 0, l, q) | 0) == (q | 0);o = m ? o : -1;
	        }
	      } while (0);n = (o | 0) == 0;if ((e | 0) != 0 & n) {
	        n = F;o = e + 88 | 0;do {
	          c[e >> 2] = c[n >> 2];e = e + 4 | 0;n = n + 4 | 0;
	        } while ((e | 0) < (o | 0));o = 0;n = 1;
	      }if (!((f | 0) != 0 & n)) {
	        f = o;i = H;return f | 0;
	      }F = G;G = c[F + 4 >> 2] | 0;c[f >> 2] = c[F >> 2];c[f + 4 >> 2] = G;f = o;i = H;return f | 0;
	    }function Ya(a) {
	      a = a | 0;return Va(a, 0, 1) | 0;
	    }function Za(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0;if (!a) {
	        e = -102;return e | 0;
	      }b = a + 224 | 0;d = c[b >> 2] | 0;if (d | 0) {
	        e = c[d >> 2] | 0;if (e | 0) cd(e);c[d >> 2] = 0;if ((c[d + 72 >> 2] | 0) == 8) Eb(d + 4 | 0) | 0;cd(d);c[b >> 2] = 0;
	      }Ha[c[a + 20 >> 2] & 3](c[a + 28 >> 2] | 0, c[a + 48 >> 2] | 0) | 0;cd(a);e = 0;return e | 0;
	    }function _a(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0;if (!a) {
	        e = -102;return e | 0;
	      }b = a + 224 | 0;e = c[b >> 2] | 0;if (!e) {
	        e = -102;return e | 0;
	      }d = e + 128 | 0;if ((c[d >> 2] | 0) == 0 & (c[d + 4 >> 2] | 0) == 0 ? (c[e + 200 >> 2] | 0) == 0 : 0) a = (c[e + 112 >> 2] | 0) == (c[e + 116 >> 2] | 0) ? 0 : -105;else a = 0;d = c[e >> 2] | 0;if (d | 0) cd(d);c[e >> 2] = 0;if ((c[e + 72 >> 2] | 0) == 8) Eb(e + 4 | 0) | 0;cd(e);c[b >> 2] = 0;e = a;return e | 0;
	    }function $a(a, b) {
	      a = a | 0;b = b | 0;if (!a) {
	        b = -102;return b | 0;
	      }a = a + 56 | 0;c[b >> 2] = c[a >> 2];c[b + 4 >> 2] = c[a + 4 >> 2];c[b + 8 >> 2] = c[a + 8 >> 2];c[b + 12 >> 2] = c[a + 12 >> 2];b = 0;return b | 0;
	    }function ab(a, b, c, d, e, f, g, h) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;return Xa(a, b, 0, c, d, e, f, g, h) | 0;
	    }function bb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0;if (!a) {
	        f = -102;return f | 0;
	      }d = a + 96 | 0;f = d;if ((c[f >> 2] | 0) == 0 & (c[f + 4 >> 2] | 0) == 0) {
	        f = -100;return f | 0;
	      }g = a + 56 | 0;h = c[g >> 2] | 0;g = c[g + 4 >> 2] | 0;b = a + 80 | 0;f = b;e = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;i = id(e | 0, f | 0, 1, 0) | 0;if (((h | 0) != 65535 | (g | 0) != 0) & ((i | 0) == (h | 0) & (D | 0) == (g | 0))) {
	        i = -100;return i | 0;
	      }h = a + 88 | 0;i = h;i = id((c[a + 168 >> 2] | 0) + 46 + (c[a + 172 >> 2] | 0) + (c[a + 176 >> 2] | 0) | 0, 0, c[i >> 2] | 0, c[i + 4 >> 2] | 0) | 0;c[h >> 2] = i;c[h + 4 >> 2] = D;h = id(e | 0, f | 0, 1, 0) | 0;i = b;c[i >> 2] = h;c[i + 4 >> 2] = D;i = Xa(a, a + 128 | 0, a + 216 | 0, 0, 0, 0, 0, 0, 0) | 0;h = d;c[h >> 2] = (i | 0) == 0 & 1;c[h + 4 >> 2] = 0;return i | 0;
	    }function cb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0;C = i;i = i + 352 | 0;x = C;p = C + 88 | 0;if (!b) {
	        B = -102;i = C;return B | 0;
	      }if ((Hc(d) | 0) >>> 0 > 255) {
	        B = -102;i = C;return B | 0;
	      }q = b + 96 | 0;B = q;if ((c[B >> 2] | 0) == 0 & (c[B + 4 >> 2] | 0) == 0) {
	        B = -100;i = C;return B | 0;
	      }s = b + 80 | 0;u = s;t = c[u >> 2] | 0;u = c[u + 4 >> 2] | 0;v = b + 88 | 0;y = v;w = c[y >> 2] | 0;y = c[y + 4 >> 2] | 0;z = b + 128 | 0;g = x;h = z;j = g + 88 | 0;do {
	        c[g >> 2] = c[h >> 2];g = g + 4 | 0;h = h + 4 | 0;
	      } while ((g | 0) < (j | 0));r = b + 216 | 0;B = r;A = c[B >> 2] | 0;B = c[B + 4 >> 2] | 0;m = b + 120 | 0;n = c[m + 4 >> 2] | 0;f = v;c[f >> 2] = c[m >> 2];c[f + 4 >> 2] = n;f = s;c[f >> 2] = 0;c[f + 4 >> 2] = 0;f = Xa(b, z, r, 0, 0, 0, 0, 0, 0) | 0;n = (f | 0) == 0;m = q;c[m >> 2] = n & 1;c[m + 4 >> 2] = 0;a: do {
	        if (n) {
	          k = b + 56 | 0;l = b + 168 | 0;m = b + 172 | 0;n = b + 176 | 0;b: do {
	            if ((e | 1 | 0) == 1) {
	              while (1) {
	                f = Xa(b, 0, 0, p, 256, 0, 0, 0, 0) | 0;if (f | 0) break;if (!(hc(p, d) | 0)) break b;o = q;if ((c[o >> 2] | 0) == 0 & (c[o + 4 >> 2] | 0) == 0) {
	                  f = -100;break;
	                }o = k;e = c[o >> 2] | 0;o = c[o + 4 >> 2] | 0;f = s;f = id(c[f >> 2] | 0, c[f + 4 >> 2] | 0, 1, 0) | 0;g = D;if (((e | 0) != 65535 | (o | 0) != 0) & ((f | 0) == (e | 0) & (g | 0) == (o | 0))) {
	                  f = -100;break;
	                }e = v;e = id((c[l >> 2] | 0) + 46 + (c[m >> 2] | 0) + (c[n >> 2] | 0) | 0, 0, c[e >> 2] | 0, c[e + 4 >> 2] | 0) | 0;o = v;c[o >> 2] = e;c[o + 4 >> 2] = D;o = s;c[o >> 2] = f;c[o + 4 >> 2] = g;f = Xa(b, z, r, 0, 0, 0, 0, 0, 0) | 0;o = q;c[o >> 2] = (f | 0) == 0 & 1;c[o + 4 >> 2] = 0;if (f | 0) break a;
	              }break a;
	            } else {
	              while (1) {
	                f = Xa(b, 0, 0, p, 256, 0, 0, 0, 0) | 0;if (!f) {
	                  h = d;j = p;
	                } else break;while (1) {
	                  g = a[j >> 0] | 0;f = a[h >> 0] | 0;g = (g + -97 & 255) < 26 ? (g & 255) + 224 & 255 : g;f = (f + -97 & 255) < 26 ? (f & 255) + 224 & 255 : f;e = f << 24 >> 24 == 0;if (!(g << 24 >> 24)) {
	                    o = 14;break;
	                  }if (g << 24 >> 24 != f << 24 >> 24 | e) break;else {
	                    h = h + 1 | 0;j = j + 1 | 0;
	                  }
	                }if ((o | 0) == 14 ? (o = 0, e) : 0) break b;e = q;if ((c[e >> 2] | 0) == 0 & (c[e + 4 >> 2] | 0) == 0) {
	                  f = -100;break;
	                }e = k;j = c[e >> 2] | 0;e = c[e + 4 >> 2] | 0;f = s;f = id(c[f >> 2] | 0, c[f + 4 >> 2] | 0, 1, 0) | 0;g = D;if (((j | 0) != 65535 | (e | 0) != 0) & ((f | 0) == (j | 0) & (g | 0) == (e | 0))) {
	                  f = -100;break;
	                }j = v;j = id((c[l >> 2] | 0) + 46 + (c[m >> 2] | 0) + (c[n >> 2] | 0) | 0, 0, c[j >> 2] | 0, c[j + 4 >> 2] | 0) | 0;e = v;c[e >> 2] = j;c[e + 4 >> 2] = D;e = s;c[e >> 2] = f;c[e + 4 >> 2] = g;f = Xa(b, z, r, 0, 0, 0, 0, 0, 0) | 0;e = q;c[e >> 2] = (f | 0) == 0 & 1;c[e + 4 >> 2] = 0;if (f | 0) break a;
	              }break a;
	            }
	          } while (0);B = 0;i = C;return B | 0;
	        }
	      } while (0);g = s;c[g >> 2] = t;c[g + 4 >> 2] = u;g = v;c[g >> 2] = w;c[g + 4 >> 2] = y;g = z;h = x;j = g + 88 | 0;do {
	        c[g >> 2] = c[h >> 2];g = g + 4 | 0;h = h + 4 | 0;
	      } while ((g | 0) < (j | 0));z = r;c[z >> 2] = A;c[z + 4 >> 2] = B;B = f;i = C;return B | 0;
	    }function db(b, e, f, g, h) {
	      b = b | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;var j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0;A = i;i = i + 16 | 0;r = A + 12 | 0;z = A;if (!b) {
	        z = -102;i = A;return z | 0;
	      }y = b + 96 | 0;if ((c[y >> 2] | 0) == 0 & (c[y + 4 >> 2] | 0) == 0) {
	        z = -102;i = A;return z | 0;
	      }y = b + 224 | 0;j = c[y >> 2] | 0;if (j | 0) {
	        k = c[j >> 2] | 0;if (k | 0) cd(k);c[j >> 2] = 0;if ((c[j + 72 >> 2] | 0) == 8) Eb(j + 4 | 0) | 0;cd(j);c[y >> 2] = 0;
	      }v = b + 48 | 0;w = c[v >> 2] | 0;u = b + 216 | 0;x = u;t = b + 72 | 0;s = t;x = id(c[s >> 2] | 0, c[s + 4 >> 2] | 0, c[x >> 2] | 0, c[x + 4 >> 2] | 0) | 0;if (hb(b, w, x, D, 0) | 0) {
	        z = -103;i = A;return z | 0;
	      }l = c[v >> 2] | 0;w = b + 4 | 0;x = b + 28 | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, l, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, l) | 0)) {
	          k = 0;q = 13;
	        } else j = -1;
	      } else {
	        k = d[r >> 0] | 0;q = 13;
	      }do {
	        if ((q | 0) == 13) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, l, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, l) | 0)) j = k;else {
	              j = -1;break;
	            }
	          } else j = d[r >> 0] | 0;k = j << 8 | k;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, l, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, l) | 0) {
	              j = -1;break;
	            }
	          } else j = d[r >> 0] | 0;k = k | j << 16;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, l, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, l) | 0) {
	              j = -1;break;
	            }
	          } else j = d[r >> 0] | 0;j = ((j << 24) + k | 0) == 67324752 ? 0 : -103;
	        }
	      } while (0);k = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) != 0 : 0) j = -1;else q = 26;do {
	        if ((q | 0) == 26) if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) {
	          j = -1;break;
	        }
	      } while (0);k = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0)) {
	          l = 0;q = 33;
	        } else {
	          j = -1;n = 0;
	        }
	      } else {
	        l = d[r >> 0] | 0;q = 33;
	      }do {
	        if ((q | 0) == 33) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) {
	            j = -1;n = 0;break;
	          }n = l & 8;
	        }
	      } while (0);k = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0)) {
	          l = 0;q = 40;
	        } else j = -1;
	      } else {
	        l = d[r >> 0] | 0;q = 40;
	      }a: do {
	        if ((q | 0) == 40) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0)) k = l;else {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;if (!j) {
	            j = k << 8 | l;if ((j | 0) == (c[b + 140 >> 2] | 0)) {
	              switch (j | 0) {case 8:case 12:case 0:
	                  {
	                    j = 0;break a;
	                  }default:
	                  {}}j = -103;
	            } else j = -103;
	          }
	        }
	      } while (0);k = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1 ? (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) != 0 : 0) j = -1;else q = 50;do {
	        if ((q | 0) == 50) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) {
	            j = -1;break;
	          }if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) {
	            j = -1;break;
	          }if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0) {
	            j = -1;break;
	          }
	        }
	      } while (0);m = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) {
	          l = 0;q = 63;
	        } else j = -1;
	      } else {
	        l = d[r >> 0] | 0;q = 63;
	      }do {
	        if ((q | 0) == 63) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) k = l;else {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = k << 8 | l;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = l | k << 16;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;if (!j) if (((k << 24) + l | 0) == (c[b + 148 >> 2] | 0)) j = 0;else j = (n | 0) == 0 ? -103 : 0;
	        }
	      } while (0);m = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) {
	          l = 0;q = 78;
	        } else j = -1;
	      } else {
	        l = d[r >> 0] | 0;q = 78;
	      }do {
	        if ((q | 0) == 78) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) k = l;else {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = k << 8 | l;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = l | k << 16;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;k = (k << 24) + l | 0;if ((j | 0) == 0 & (k | 0) != -1) {
	            s = b + 152 | 0;if ((k | 0) == (c[s >> 2] | 0) ? 0 == (c[s + 4 >> 2] | 0) : 0) j = 0;else j = (n | 0) == 0 ? -103 : 0;
	          }
	        }
	      } while (0);m = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) {
	          l = 0;q = 93;
	        } else j = -1;
	      } else {
	        l = d[r >> 0] | 0;q = 93;
	      }do {
	        if ((q | 0) == 93) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0)) k = l;else {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = k << 8 | l;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;l = l | k << 16;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, m, r, 1) | 0) != 1) {
	            if (Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, m) | 0) {
	              j = -1;break;
	            }
	          } else k = d[r >> 0] | 0;k = (k << 24) + l | 0;if ((j | 0) == 0 & (k | 0) != -1) {
	            s = b + 160 | 0;if ((k | 0) == (c[s >> 2] | 0) ? 0 == (c[s + 4 >> 2] | 0) : 0) j = 0;else j = (n | 0) == 0 ? -103 : 0;
	          }
	        }
	      } while (0);k = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0)) {
	          l = 0;q = 108;
	        } else {
	          p = -1;o = 0;
	        }
	      } else {
	        l = d[r >> 0] | 0;q = 108;
	      }do {
	        if ((q | 0) == 108) {
	          if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, k, r, 1) | 0) != 1) {
	            if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, k) | 0)) k = l;else {
	              p = -1;o = 0;break;
	            }
	          } else k = d[r >> 0] | 0;k = k << 8 | l;if (!j) {
	            p = (k | 0) == (c[b + 168 >> 2] | 0) ? 0 : -103;o = k;
	          } else {
	            p = j;o = k;
	          }
	        }
	      } while (0);j = c[v >> 2] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, j, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, j) | 0)) k = 0;else {
	          z = -103;i = A;return z | 0;
	        }
	      } else k = d[r >> 0] | 0;if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, j, r, 1) | 0) != 1) {
	        if (!(Ha[c[b + 24 >> 2] & 3](c[x >> 2] | 0, j) | 0)) j = k;else {
	          z = -103;i = A;return z | 0;
	        }
	      } else j = d[r >> 0] | 0;l = j << 8 | k;j = u;k = c[j >> 2] | 0;j = c[j + 4 >> 2] | 0;m = id(o | 0, 0, 30, 0) | 0;m = id(m | 0, D | 0, k | 0, j | 0) | 0;n = D;s = l + o | 0;if (p | 0) {
	        z = -103;i = A;return z | 0;
	      }r = bd(208) | 0;if (!r) {
	        z = -104;i = A;return z | 0;
	      }q = bd(16384) | 0;c[r >> 2] = q;p = r + 80 | 0;c[p >> 2] = m;c[p + 4 >> 2] = n;c[r + 88 >> 2] = l;p = r + 96 | 0;c[p >> 2] = 0;c[p + 4 >> 2] = 0;p = r + 200 | 0;c[p >> 2] = g;if (!q) {
	        cd(r);z = -104;i = A;return z | 0;
	      }q = r + 72 | 0;c[q >> 2] = 0;if (e | 0) c[e >> 2] = c[b + 140 >> 2];b: do {
	        if (f | 0) {
	          c[f >> 2] = 6;switch (c[b + 136 >> 2] & 6) {case 6:
	              {
	                c[f >> 2] = 1;break b;
	              }case 4:
	              {
	                c[f >> 2] = 2;break b;
	              }case 2:
	              {
	                c[f >> 2] = 9;break b;
	              }default:
	              break b;}
	        }
	      } while (0);c[r + 116 >> 2] = c[b + 148 >> 2];c[r + 112 >> 2] = 0;o = r + 104 | 0;c[o >> 2] = 0;c[o + 4 >> 2] = 0;o = c[b + 140 >> 2] | 0;c[r + 184 >> 2] = o;c[r + 180 >> 2] = c[v >> 2];l = r + 136 | 0;m = b;n = l + 44 | 0;do {
	        c[l >> 2] = c[m >> 2];l = l + 4 | 0;m = m + 4 | 0;
	      } while ((l | 0) < (n | 0));l = c[t + 4 >> 2] | 0;m = r + 192 | 0;c[m >> 2] = c[t >> 2];c[m + 4 >> 2] = l;m = r + 4 | 0;c[r + 24 >> 2] = 0;l = (g | 0) != 0;do {
	        if (l | (o | 0) != 12) {
	          if (l | (o | 0) != 8) break;c[r + 36 >> 2] = 0;c[r + 40 >> 2] = 0;c[r + 44 >> 2] = 0;c[m >> 2] = 0;c[r + 8 >> 2] = 0;j = Ab(m, -15, 12431, 56) | 0;if (!j) {
	            c[q >> 2] = 8;j = u;k = c[j >> 2] | 0;j = c[j + 4 >> 2] | 0;break;
	          }cd(r);z = j;i = A;return z | 0;
	        } else c[p >> 2] = 1;
	      } while (0);g = b + 152 | 0;p = c[g + 4 >> 2] | 0;u = r + 120 | 0;c[u >> 2] = c[g >> 2];c[u + 4 >> 2] = p;u = b + 160 | 0;p = c[u + 4 >> 2] | 0;g = r + 128 | 0;c[g >> 2] = c[u >> 2];c[g + 4 >> 2] = p;g = id(s | 0, 0, 30, 0) | 0;g = id(g | 0, D | 0, k | 0, j | 0) | 0;p = r + 64 | 0;c[p >> 2] = g;c[p + 4 >> 2] = D;c[r + 8 >> 2] = 0;c[y >> 2] = r;p = b + 228 | 0;c[p >> 2] = 0;if (!h) {
	        z = 0;i = A;return z | 0;
	      }n = rb() | 0;o = b + 248 | 0;c[o >> 2] = n;q = b + 236 | 0;c[q >> 2] = 305419896;r = b + 240 | 0;c[r >> 2] = 591751049;s = b + 244 | 0;c[s >> 2] = 878082192;j = a[h >> 0] | 0;if (j << 24 >> 24) {
	        k = 305419896;l = 591751049;m = 878082192;do {
	          k = c[n + ((j & 255 ^ k & 255) << 2) >> 2] ^ k >>> 8;c[q >> 2] = k;l = (S((k & 255) + l | 0, 134775813) | 0) + 1 | 0;c[r >> 2] = l;m = c[n + ((l >>> 24 ^ m & 255) << 2) >> 2] ^ m >>> 8;c[s >> 2] = m;h = h + 1 | 0;j = a[h >> 0] | 0;
	        } while (j << 24 >> 24 != 0);
	      }u = c[v >> 2] | 0;t = c[y >> 2] | 0;g = t + 64 | 0;t = t + 192 | 0;g = id(c[t >> 2] | 0, c[t + 4 >> 2] | 0, c[g >> 2] | 0, c[g + 4 >> 2] | 0) | 0;if (hb(b, u, g, D, 0) | 0) {
	        z = -104;i = A;return z | 0;
	      }if ((Ga[c[w >> 2] & 3](c[x >> 2] | 0, c[v >> 2] | 0, z, 12) | 0) >>> 0 < 12) {
	        z = -104;i = A;return z | 0;
	      }l = c[o >> 2] | 0;j = 0;k = c[s >> 2] | 0;m = c[q >> 2] | 0;h = c[r >> 2] | 0;do {
	        b = k & 65533;b = (S(b | 2, b ^ 3) | 0) >>> 8 & 255;x = z + j | 0;b = b ^ (d[x >> 0] | 0);a[x >> 0] = b;m = c[l + ((b ^ m & 255) << 2) >> 2] ^ m >>> 8;h = (S(h + (m & 255) | 0, 134775813) | 0) + 1 | 0;k = c[l + ((h >>> 24 ^ k & 255) << 2) >> 2] ^ k >>> 8;j = j + 1 | 0;
	      } while ((j | 0) != 12);c[s >> 2] = k;c[q >> 2] = m;c[r >> 2] = h;z = (c[y >> 2] | 0) + 64 | 0;y = z;y = id(c[y >> 2] | 0, c[y + 4 >> 2] | 0, 12, 0) | 0;c[z >> 2] = y;c[z + 4 >> 2] = D;c[p >> 2] = 1;z = 0;i = A;return z | 0;
	    }function eb(a, b) {
	      a = a | 0;b = b | 0;return db(a, 0, 0, 0, b) | 0;
	    }function fb(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0;if (!b) {
	        s = -102;return s | 0;
	      }s = c[b + 224 >> 2] | 0;if (!s) {
	        s = -102;return s | 0;
	      }if (!(c[s >> 2] | 0)) {
	        s = -100;return s | 0;
	      }if (!f) {
	        s = 0;return s | 0;
	      }q = s + 4 | 0;r = s + 16 | 0;c[r >> 2] = e;o = s + 20 | 0;c[o >> 2] = f;p = s + 128 | 0;n = p;e = c[n >> 2] | 0;n = c[n + 4 >> 2] | 0;if (0 > n >>> 0 | 0 == (n | 0) & f >>> 0 > e >>> 0 ? (c[s + 200 >> 2] | 0) == 0 : 0) c[o >> 2] = e;m = s + 120 | 0;l = m;e = c[l >> 2] | 0;n = s + 8 | 0;g = c[n >> 2] | 0;l = id(g | 0, 0, e | 0, c[l + 4 >> 2] | 0) | 0;k = D;if (0 > k >>> 0 | 0 == (k | 0) & f >>> 0 > l >>> 0 ? (c[s + 200 >> 2] | 0) != 0 : 0) {
	        g = e + g | 0;c[o >> 2] = g;e = 0;
	      } else {
	        e = 0;h = 11;
	      }a: while (1) {
	        if ((h | 0) == 11) g = c[o >> 2] | 0;if (!g) {
	          g = 0;h = 33;break;
	        }g = c[n >> 2] | 0;if (!g) {
	          f = m;g = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;if ((g | 0) == 0 & (f | 0) == 0) g = 0;else {
	            l = f >>> 0 < 0 | (f | 0) == 0 & g >>> 0 < 16384;g = l ? g : 16384;if (!g) {
	              e = 0;h = 34;break;
	            }f = s + 180 | 0;j = c[f >> 2] | 0;l = s + 64 | 0;k = l;i = s + 192 | 0;k = id(c[i >> 2] | 0, c[i + 4 >> 2] | 0, c[k >> 2] | 0, c[k + 4 >> 2] | 0) | 0;if (hb(s + 136 | 0, j, k, D, 0) | 0) {
	              e = -1;h = 34;break;
	            }if ((Ga[c[s + 140 >> 2] & 3](c[s + 164 >> 2] | 0, c[f >> 2] | 0, c[s >> 2] | 0, g) | 0) != (g | 0)) {
	              e = -1;h = 34;break;
	            }if (c[b + 228 >> 2] | 0) {
	              i = b + 236 | 0;j = b + 248 | 0;h = b + 244 | 0;k = b + 240 | 0;f = 0;do {
	                w = c[j >> 2] | 0;t = c[h >> 2] & 65533;t = (S(t | 2, t ^ 3) | 0) >>> 8 & 255;v = (c[s >> 2] | 0) + f | 0;t = t ^ (d[v >> 0] | 0);a[v >> 0] = t;t = t << 24 >> 24;v = c[i >> 2] | 0;v = c[w + (((t ^ v) & 255) << 2) >> 2] ^ v >>> 8;c[i >> 2] = v;v = (S((c[k >> 2] | 0) + (v & 255) | 0, 134775813) | 0) + 1 | 0;c[k >> 2] = v;u = c[h >> 2] | 0;c[h >> 2] = c[w + ((v >>> 24 ^ u & 255) << 2) >> 2] ^ u >>> 8;a[(c[s >> 2] | 0) + f >> 0] = t;f = f + 1 | 0;
	              } while (f >>> 0 < g >>> 0);
	            }w = l;w = id(c[w >> 2] | 0, c[w + 4 >> 2] | 0, g | 0, 0) | 0;v = l;c[v >> 2] = w;c[v + 4 >> 2] = D;v = m;v = hd(c[v >> 2] | 0, c[v + 4 >> 2] | 0, g | 0, 0) | 0;w = m;c[w >> 2] = v;c[w + 4 >> 2] = D;c[q >> 2] = c[s >> 2];c[n >> 2] = g;
	          }
	        }f = c[s + 184 >> 2] | 0;if (f | 0 ? (c[s + 200 >> 2] | 0) == 0 : 0) {
	          if ((f | 0) == 12) {
	            h = 11;continue;
	          }f = s + 24 | 0;h = c[f >> 2] | 0;i = c[r >> 2] | 0;g = Bb(q, 2) | 0;if ((g | 0) > -1) g = (c[s + 28 >> 2] | 0) == 0 ? g : -3;w = hd(c[f >> 2] | 0, 0, h | 0, 0) | 0;u = D;v = s + 104 | 0;t = v;t = id(w | 0, u | 0, c[t >> 2] | 0, c[t + 4 >> 2] | 0) | 0;c[v >> 2] = t;c[v + 4 >> 2] = D;v = s + 112 | 0;c[v >> 2] = vb(c[v >> 2] | 0, i, w) | 0;v = p;u = hd(c[v >> 2] | 0, c[v + 4 >> 2] | 0, w | 0, u | 0) | 0;v = p;c[v >> 2] = u;c[v + 4 >> 2] = D;e = w + e | 0;switch (g | 0) {case 0:
	              {
	                h = 11;continue a;
	              }case 1:
	              {
	                h = 34;break a;
	              }default:
	              {
	                h = 33;break a;
	              }}
	        }if ((g | 0) == 0 ? (w = m, (c[w >> 2] | 0) == 0 & (c[w + 4 >> 2] | 0) == 0) : 0) {
	          h = 34;break;
	        }f = c[o >> 2] | 0;f = f >>> 0 < g >>> 0 ? f : g;if (f | 0) {
	          g = 0;do {
	            a[(c[r >> 2] | 0) + g >> 0] = a[(c[q >> 2] | 0) + g >> 0] | 0;g = g + 1 | 0;
	          } while (g >>> 0 < f >>> 0);
	        }w = s + 104 | 0;h = w;h = id(c[h >> 2] | 0, c[h + 4 >> 2] | 0, f | 0, 0) | 0;c[w >> 2] = h;c[w + 4 >> 2] = D;w = s + 112 | 0;c[w >> 2] = vb(c[w >> 2] | 0, c[r >> 2] | 0, f) | 0;w = p;w = hd(c[w >> 2] | 0, c[w + 4 >> 2] | 0, f | 0, 0) | 0;h = p;c[h >> 2] = w;c[h + 4 >> 2] = D;c[n >> 2] = (c[n >> 2] | 0) - f;c[o >> 2] = (c[o >> 2] | 0) - f;c[r >> 2] = (c[r >> 2] | 0) + f;c[q >> 2] = (c[q >> 2] | 0) + f;h = s + 24 | 0;c[h >> 2] = (c[h >> 2] | 0) + f;e = f + e | 0;h = 11;
	      }if ((h | 0) == 33) {
	        w = (g | 0) == 0 ? e : g;return w | 0;
	      } else if ((h | 0) == 34) return e | 0;return 0;
	    }function gb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0;e = c[a >> 2] | 0;f = c[a + 28 >> 2] | 0;if (!e) {
	        f = Ca[c[a + 32 >> 2] & 7](f, b, d) | 0;return f | 0;
	      } else {
	        f = Ca[e & 7](f, b, d) | 0;return f | 0;
	      }return 0;
	    }function hb(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0;g = c[a + 16 >> 2] | 0;if (g | 0) {
	        g = Ia[g & 1](c[a + 28 >> 2] | 0, b, d, e, f) | 0;return g | 0;
	      }if (!((d | 0) == (d | 0) & 0 == (e | 0))) {
	        g = -1;return g | 0;
	      }g = Ga[c[a + 40 >> 2] & 3](c[a + 28 >> 2] | 0, b, d, f) | 0;return g | 0;
	    }function ib(a, b) {
	      a = a | 0;b = b | 0;var d = 0;d = c[a + 28 >> 2] | 0;if (!(c[a + 16 >> 2] | 0)) {
	        d = Ha[c[a + 36 >> 2] & 3](d, b) | 0;a = (d | 0) == -1;b = a ? -1 : 0;d = a ? -1 : d;D = b;return d | 0;
	      } else {
	        d = Ha[c[a + 12 >> 2] & 3](d, b) | 0;b = D;D = b;return d | 0;
	      }return 0;
	    }function jb(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return Yc(c, 1, d, b) | 0;
	    }function kb(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return Tc(c, 1, d, b) | 0;
	    }function lb(a, b) {
	      a = a | 0;b = b | 0;return xc(b) | 0;
	    }function mb(a, b) {
	      a = a | 0;b = b | 0;return Mc(b) | 0;
	    }function nb(a) {
	      a = a | 0;c[a >> 2] = 4;c[a + 4 >> 2] = 1;c[a + 8 >> 2] = 2;c[a + 12 >> 2] = 1;c[a + 16 >> 2] = 1;c[a + 20 >> 2] = 2;c[a + 24 >> 2] = 3;c[a + 28 >> 2] = 0;return;
	    }function ob(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c & 3 | 0) != 1) {
	        if (!(c & 4)) a = (c & 8 | 0) == 0 ? 0 : 12421;else a = 12427;
	      } else a = 12424;if (!((b | 0) != 0 & (a | 0) != 0)) {
	        b = 0;return b | 0;
	      }b = wc(b, a) | 0;return b | 0;
	    }function pb(a, b) {
	      a = a | 0;b = b | 0;b = Zc(b) | 0;D = ((b | 0) < 0) << 31 >> 31;return b | 0;
	    }function qb(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;if (e >>> 0 >= 3) {
	        e = -1;return e | 0;
	      }e = ((Nc(b, c, e) | 0) != 0) << 31 >> 31;return e | 0;
	    }function rb() {
	      return 8;
	    }function sb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;l = i;i = i + 32 | 0;j = l + 16 | 0;f = l + 12 | 0;g = l + 8 | 0;h = l + 4 | 0;k = l;c[f >> 2] = b;c[g >> 2] = d;c[h >> 2] = e;do {
	        if (c[g >> 2] | 0) {
	          c[k >> 2] = 1;e = c[f >> 2] | 0;d = c[g >> 2] | 0;b = c[h >> 2] | 0;if (a[k >> 0] | 0) {
	            c[j >> 2] = tb(e, d, b) | 0;break;
	          } else {
	            c[j >> 2] = ub(e, d, b) | 0;break;
	          }
	        } else c[j >> 2] = 0;
	      } while (0);i = l;return c[j >> 2] | 0;
	    }function tb(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = i;i = i + 32 | 0;l = k + 16 | 0;f = k + 12 | 0;g = k + 8 | 0;h = k + 4 | 0;j = k;c[l >> 2] = a;c[f >> 2] = b;c[g >> 2] = e;c[h >> 2] = c[l >> 2];c[h >> 2] = ~c[h >> 2];while (1) {
	        if (!(c[g >> 2] | 0)) break;if (!(c[f >> 2] & 3)) break;e = c[h >> 2] | 0;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[8 + (((e ^ (d[l >> 0] | 0)) & 255) << 2) >> 2] ^ (c[h >> 2] | 0) >>> 8;c[g >> 2] = (c[g >> 2] | 0) + -1;
	      }c[j >> 2] = c[f >> 2];while (1) {
	        if ((c[g >> 2] | 0) >>> 0 < 32) break;l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 32;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[g >> 2] | 0) >>> 0 < 4) break;c[j >> 2] = a + 4;c[h >> 2] = c[h >> 2] ^ c[a >> 2];c[h >> 2] = c[3080 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[2056 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[1032 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[8 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 4;
	      }c[f >> 2] = a;if (!(c[g >> 2] | 0)) {
	        l = c[h >> 2] | 0;l = ~l;c[h >> 2] = l;l = c[h >> 2] | 0;i = k;return l | 0;
	      }do {
	        j = c[h >> 2] | 0;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[8 + (((j ^ (d[l >> 0] | 0)) & 255) << 2) >> 2] ^ (c[h >> 2] | 0) >>> 8;l = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = l;
	      } while ((l | 0) != 0);l = c[h >> 2] | 0;l = ~l;c[h >> 2] = l;l = c[h >> 2] | 0;i = k;return l | 0;
	    }function ub(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = i;i = i + 32 | 0;l = k + 16 | 0;f = k + 12 | 0;g = k + 8 | 0;h = k + 4 | 0;j = k;c[l >> 2] = a;c[f >> 2] = b;c[g >> 2] = e;c[h >> 2] = ((c[l >> 2] | 0) >>> 24 & 255) + ((c[l >> 2] | 0) >>> 8 & 65280) + ((c[l >> 2] & 65280) << 8) + ((c[l >> 2] & 255) << 24);c[h >> 2] = ~c[h >> 2];while (1) {
	        if (!(c[g >> 2] | 0)) break;if (!(c[f >> 2] & 3)) break;e = (c[h >> 2] | 0) >>> 24;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[4104 + ((e ^ (d[l >> 0] | 0)) << 2) >> 2] ^ c[h >> 2] << 8;c[g >> 2] = (c[g >> 2] | 0) + -1;
	      }c[j >> 2] = c[f >> 2];while (1) {
	        if ((c[g >> 2] | 0) >>> 0 < 32) break;l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];l = c[j >> 2] | 0;c[j >> 2] = l + 4;c[h >> 2] = c[h >> 2] ^ c[l >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 32;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[g >> 2] | 0) >>> 0 < 4) break;c[j >> 2] = a + 4;c[h >> 2] = c[h >> 2] ^ c[a >> 2];c[h >> 2] = c[4104 + ((c[h >> 2] & 255) << 2) >> 2] ^ c[5128 + (((c[h >> 2] | 0) >>> 8 & 255) << 2) >> 2] ^ c[6152 + (((c[h >> 2] | 0) >>> 16 & 255) << 2) >> 2] ^ c[7176 + ((c[h >> 2] | 0) >>> 24 << 2) >> 2];c[g >> 2] = (c[g >> 2] | 0) - 4;
	      }c[f >> 2] = a;if (!(c[g >> 2] | 0)) {
	        j = c[h >> 2] | 0;j = ~j;c[h >> 2] = j;j = c[h >> 2] | 0;j = j >>> 24;j = j & 255;l = c[h >> 2] | 0;l = l >>> 8;l = l & 65280;l = j + l | 0;j = c[h >> 2] | 0;j = j & 65280;j = j << 8;j = l + j | 0;l = c[h >> 2] | 0;l = l & 255;l = l << 24;l = j + l | 0;i = k;return l | 0;
	      }do {
	        j = (c[h >> 2] | 0) >>> 24;l = c[f >> 2] | 0;c[f >> 2] = l + 1;c[h >> 2] = c[4104 + ((j ^ (d[l >> 0] | 0)) << 2) >> 2] ^ c[h >> 2] << 8;l = (c[g >> 2] | 0) + -1 | 0;c[g >> 2] = l;
	      } while ((l | 0) != 0);j = c[h >> 2] | 0;j = ~j;c[h >> 2] = j;j = c[h >> 2] | 0;j = j >>> 24;j = j & 255;l = c[h >> 2] | 0;l = l >>> 8;l = l & 65280;l = j + l | 0;j = c[h >> 2] | 0;j = j & 65280;j = j << 8;j = l + j | 0;l = c[h >> 2] | 0;l = l & 255;l = l << 24;l = j + l | 0;i = k;return l | 0;
	    }function vb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;e = i;i = i + 16 | 0;h = e + 8 | 0;g = e + 4 | 0;f = e;c[h >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = sb(c[h >> 2] | 0, c[g >> 2] | 0, c[f >> 2] | 0) | 0;i = e;return d | 0;
	    }function wb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if (xb(c[d >> 2] | 0) | 0) {
	        c[b >> 2] = -2;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];c[(c[e >> 2] | 0) + 32 >> 2] = 0;c[(c[d >> 2] | 0) + 20 >> 2] = 0;c[(c[d >> 2] | 0) + 8 >> 2] = 0;c[(c[d >> 2] | 0) + 24 >> 2] = 0;if (c[(c[e >> 2] | 0) + 12 >> 2] | 0) c[(c[d >> 2] | 0) + 48 >> 2] = c[(c[e >> 2] | 0) + 12 >> 2] & 1;c[(c[e >> 2] | 0) + 4 >> 2] = 16180;c[(c[e >> 2] | 0) + 8 >> 2] = 0;c[(c[e >> 2] | 0) + 16 >> 2] = 0;c[(c[e >> 2] | 0) + 24 >> 2] = 32768;c[(c[e >> 2] | 0) + 36 >> 2] = 0;c[(c[e >> 2] | 0) + 60 >> 2] = 0;c[(c[e >> 2] | 0) + 64 >> 2] = 0;d = (c[e >> 2] | 0) + 1332 | 0;c[(c[e >> 2] | 0) + 112 >> 2] = d;c[(c[e >> 2] | 0) + 84 >> 2] = d;c[(c[e >> 2] | 0) + 80 >> 2] = d;c[(c[e >> 2] | 0) + 7108 >> 2] = 1;c[(c[e >> 2] | 0) + 7112 >> 2] = -1;c[b >> 2] = 0;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function xb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if ((c[d >> 2] | 0 ? c[(c[d >> 2] | 0) + 32 >> 2] | 0 : 0) ? c[(c[d >> 2] | 0) + 36 >> 2] | 0 : 0) {
	        c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];if (((c[e >> 2] | 0 ? (c[c[e >> 2] >> 2] | 0) == (c[d >> 2] | 0) : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) >>> 0 >= 16180 : 0) ? (c[(c[e >> 2] | 0) + 4 >> 2] | 0) >>> 0 <= 16211 : 0) {
	          c[b >> 2] = 0;e = c[b >> 2] | 0;i = f;return e | 0;
	        }c[b >> 2] = 1;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[b >> 2] = 1;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function yb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if (xb(c[d >> 2] | 0) | 0) {
	        c[b >> 2] = -2;e = c[b >> 2] | 0;i = f;return e | 0;
	      } else {
	        c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];c[(c[e >> 2] | 0) + 44 >> 2] = 0;c[(c[e >> 2] | 0) + 48 >> 2] = 0;c[(c[e >> 2] | 0) + 52 >> 2] = 0;c[b >> 2] = wb(c[d >> 2] | 0) | 0;e = c[b >> 2] | 0;i = f;return e | 0;
	      }return 0;
	    }function zb(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 32 | 0;d = j + 16 | 0;e = j + 12 | 0;f = j + 8 | 0;g = j + 4 | 0;h = j;c[e >> 2] = a;c[f >> 2] = b;if (xb(c[e >> 2] | 0) | 0) {
	        c[d >> 2] = -2;h = c[d >> 2] | 0;i = j;return h | 0;
	      }c[h >> 2] = c[(c[e >> 2] | 0) + 28 >> 2];if ((c[f >> 2] | 0) >= 0) {
	        c[g >> 2] = (c[f >> 2] >> 4) + 5;if ((c[f >> 2] | 0) < 48) c[f >> 2] = c[f >> 2] & 15;
	      } else {
	        c[g >> 2] = 0;c[f >> 2] = 0 - (c[f >> 2] | 0);
	      }if (c[f >> 2] | 0 ? (c[f >> 2] | 0) < 8 | (c[f >> 2] | 0) > 15 : 0) {
	        c[d >> 2] = -2;h = c[d >> 2] | 0;i = j;return h | 0;
	      }if (c[(c[h >> 2] | 0) + 56 >> 2] | 0 ? (c[(c[h >> 2] | 0) + 40 >> 2] | 0) != (c[f >> 2] | 0) : 0) {
	        Ea[c[(c[e >> 2] | 0) + 36 >> 2] & 1](c[(c[e >> 2] | 0) + 40 >> 2] | 0, c[(c[h >> 2] | 0) + 56 >> 2] | 0);c[(c[h >> 2] | 0) + 56 >> 2] = 0;
	      }c[(c[h >> 2] | 0) + 12 >> 2] = c[g >> 2];c[(c[h >> 2] | 0) + 40 >> 2] = c[f >> 2];c[d >> 2] = yb(c[e >> 2] | 0) | 0;h = c[d >> 2] | 0;i = j;return h | 0;
	    }function Ab(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;m = i;i = i + 32 | 0;h = m + 24 | 0;j = m + 20 | 0;k = m + 16 | 0;n = m + 12 | 0;o = m + 8 | 0;l = m + 4 | 0;g = m;c[j >> 2] = b;c[k >> 2] = d;c[n >> 2] = e;c[o >> 2] = f;if (c[n >> 2] | 0 ? !((c[o >> 2] | 0) != 56 ? 1 : (a[c[n >> 2] >> 0] | 0) != (a[12431] | 0)) : 0) {
	        if (!(c[j >> 2] | 0)) {
	          c[h >> 2] = -2;o = c[h >> 2] | 0;i = m;return o | 0;
	        }c[(c[j >> 2] | 0) + 24 >> 2] = 0;if (!(c[(c[j >> 2] | 0) + 32 >> 2] | 0)) {
	          c[(c[j >> 2] | 0) + 32 >> 2] = 5;c[(c[j >> 2] | 0) + 40 >> 2] = 0;
	        }if (!(c[(c[j >> 2] | 0) + 36 >> 2] | 0)) c[(c[j >> 2] | 0) + 36 >> 2] = 1;c[g >> 2] = Ca[c[(c[j >> 2] | 0) + 32 >> 2] & 7](c[(c[j >> 2] | 0) + 40 >> 2] | 0, 1, 7120) | 0;if (!(c[g >> 2] | 0)) {
	          c[h >> 2] = -4;o = c[h >> 2] | 0;i = m;return o | 0;
	        }c[(c[j >> 2] | 0) + 28 >> 2] = c[g >> 2];c[c[g >> 2] >> 2] = c[j >> 2];c[(c[g >> 2] | 0) + 56 >> 2] = 0;c[(c[g >> 2] | 0) + 4 >> 2] = 16180;c[l >> 2] = zb(c[j >> 2] | 0, c[k >> 2] | 0) | 0;if (c[l >> 2] | 0) {
	          Ea[c[(c[j >> 2] | 0) + 36 >> 2] & 1](c[(c[j >> 2] | 0) + 40 >> 2] | 0, c[g >> 2] | 0);c[(c[j >> 2] | 0) + 28 >> 2] = 0;
	        }c[h >> 2] = c[l >> 2];o = c[h >> 2] | 0;i = m;return o | 0;
	      }c[h >> 2] = -6;o = c[h >> 2] | 0;i = m;return o | 0;
	    }function Bb(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0;D = i;i = i + 80 | 0;z = D + 60 | 0;A = D + 56 | 0;B = D + 52 | 0;C = D + 48 | 0;r = D + 44 | 0;s = D + 40 | 0;t = D + 36 | 0;u = D + 32 | 0;j = D + 28 | 0;k = D + 24 | 0;w = D + 20 | 0;x = D + 16 | 0;l = D + 12 | 0;m = D + 8 | 0;n = D + 68 | 0;o = D + 64 | 0;p = D + 4 | 0;y = D;q = D + 72 | 0;c[A >> 2] = f;c[B >> 2] = g;do {
	        if ((xb(c[A >> 2] | 0) | 0) == 0 ? c[(c[A >> 2] | 0) + 12 >> 2] | 0 : 0) {
	          if ((c[c[A >> 2] >> 2] | 0) == 0 ? c[(c[A >> 2] | 0) + 4 >> 2] | 0 : 0) break;c[C >> 2] = c[(c[A >> 2] | 0) + 28 >> 2];if ((c[(c[C >> 2] | 0) + 4 >> 2] | 0) == 16191) c[(c[C >> 2] | 0) + 4 >> 2] = 16192;c[s >> 2] = c[(c[A >> 2] | 0) + 12 >> 2];c[u >> 2] = c[(c[A >> 2] | 0) + 16 >> 2];c[r >> 2] = c[c[A >> 2] >> 2];c[t >> 2] = c[(c[A >> 2] | 0) + 4 >> 2];c[j >> 2] = c[(c[C >> 2] | 0) + 60 >> 2];c[k >> 2] = c[(c[C >> 2] | 0) + 64 >> 2];c[w >> 2] = c[t >> 2];c[x >> 2] = c[u >> 2];c[y >> 2] = 0;a: while (1) {
	            b: do {
	              switch (c[(c[C >> 2] | 0) + 4 >> 2] | 0) {case 16208:
	                  {
	                    v = 313;break a;
	                  }case 16209:
	                  {
	                    v = 314;break a;
	                  }case 16210:
	                  {
	                    v = 315;break a;
	                  }case 16180:
	                  {
	                    if (!(c[(c[C >> 2] | 0) + 12 >> 2] | 0)) {
	                      c[(c[C >> 2] | 0) + 4 >> 2] = 16192;continue a;
	                    }while (1) {
	                      if ((c[k >> 2] | 0) >>> 0 >= 16) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                    }f = c[C >> 2] | 0;if ((c[j >> 2] | 0) == 35615 ? (c[(c[C >> 2] | 0) + 12 >> 2] & 2 | 0) != 0 : 0) {
	                      if (!(c[f + 40 >> 2] | 0)) c[(c[C >> 2] | 0) + 40 >> 2] = 15;h = vb(0, 0, 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;a[q >> 0] = c[j >> 2];a[q + 1 >> 0] = (c[j >> 2] | 0) >>> 8;h = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, q, 2) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16181;continue a;
	                    }c[f + 20 >> 2] = 0;if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 48 >> 2] = -1;if (c[(c[C >> 2] | 0) + 12 >> 2] & 1 | 0 ? (((((c[j >> 2] & 255) << 8) + ((c[j >> 2] | 0) >>> 8) | 0) >>> 0) % 31 | 0 | 0) == 0 : 0) {
	                      if ((c[j >> 2] & 15 | 0) != 8) {
	                        c[(c[A >> 2] | 0) + 24 >> 2] = 12461;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                      }c[j >> 2] = (c[j >> 2] | 0) >>> 4;c[k >> 2] = (c[k >> 2] | 0) - 4;c[p >> 2] = (c[j >> 2] & 15) + 8;if (!(c[(c[C >> 2] | 0) + 40 >> 2] | 0)) c[(c[C >> 2] | 0) + 40 >> 2] = c[p >> 2];if ((c[p >> 2] | 0) >>> 0 <= 15 ? (c[p >> 2] | 0) >>> 0 <= (c[(c[C >> 2] | 0) + 40 >> 2] | 0) >>> 0 : 0) {
	                        c[(c[C >> 2] | 0) + 24 >> 2] = 1 << c[p >> 2];h = Jb(0, 0, 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;c[(c[A >> 2] | 0) + 48 >> 2] = h;c[(c[C >> 2] | 0) + 4 >> 2] = c[j >> 2] & 512 | 0 ? 16189 : 16191;c[j >> 2] = 0;c[k >> 2] = 0;continue a;
	                      }c[(c[A >> 2] | 0) + 24 >> 2] = 12488;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                    }c[(c[A >> 2] | 0) + 24 >> 2] = 12438;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                  }case 16181:
	                  {
	                    while (1) {
	                      if ((c[k >> 2] | 0) >>> 0 >= 16) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                    }c[(c[C >> 2] | 0) + 20 >> 2] = c[j >> 2];if ((c[(c[C >> 2] | 0) + 20 >> 2] & 255 | 0) != 8) {
	                      c[(c[A >> 2] | 0) + 24 >> 2] = 12461;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                    }if (c[(c[C >> 2] | 0) + 20 >> 2] & 57344 | 0) {
	                      c[(c[A >> 2] | 0) + 24 >> 2] = 12508;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                    }if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[c[(c[C >> 2] | 0) + 36 >> 2] >> 2] = (c[j >> 2] | 0) >>> 8 & 1;if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                      a[q >> 0] = c[j >> 2];a[q + 1 >> 0] = (c[j >> 2] | 0) >>> 8;v = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, q, 2) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;
	                    }c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16182;v = 45;break;
	                  }case 16182:
	                  {
	                    v = 45;break;
	                  }case 16183:
	                  {
	                    v = 54;break;
	                  }case 16184:
	                  {
	                    v = 63;break;
	                  }case 16185:
	                  {
	                    v = 76;break;
	                  }case 16186:
	                  {
	                    v = 92;break;
	                  }case 16187:
	                  {
	                    v = 108;break;
	                  }case 16188:
	                  {
	                    v = 124;break;
	                  }case 16189:
	                  {
	                    while (1) {
	                      if ((c[k >> 2] | 0) >>> 0 >= 32) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                    }v = ((c[j >> 2] | 0) >>> 24 & 255) + ((c[j >> 2] | 0) >>> 8 & 65280) + ((c[j >> 2] & 65280) << 8) + ((c[j >> 2] & 255) << 24) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;c[(c[A >> 2] | 0) + 48 >> 2] = v;c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16190;v = 139;break;
	                  }case 16190:
	                  {
	                    v = 139;break;
	                  }case 16191:
	                  {
	                    v = 142;break;
	                  }case 16192:
	                  {
	                    v = 143;break;
	                  }case 16193:
	                  {
	                    c[j >> 2] = (c[j >> 2] | 0) >>> (c[k >> 2] & 7);c[k >> 2] = (c[k >> 2] | 0) - (c[k >> 2] & 7);while (1) {
	                      if ((c[k >> 2] | 0) >>> 0 >= 32) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                    }if ((c[j >> 2] & 65535 | 0) == ((c[j >> 2] | 0) >>> 16 ^ 65535 | 0)) {
	                      c[(c[C >> 2] | 0) + 68 >> 2] = c[j >> 2] & 65535;c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16194;if ((c[B >> 2] | 0) == 6) break a;else {
	                        v = 163;break b;
	                      }
	                    } else {
	                      c[(c[A >> 2] | 0) + 24 >> 2] = 12572;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                    }
	                  }case 16194:
	                  {
	                    v = 163;break;
	                  }case 16195:
	                  {
	                    v = 164;break;
	                  }case 16196:
	                  {
	                    while (1) {
	                      if ((c[k >> 2] | 0) >>> 0 >= 14) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                    }c[(c[C >> 2] | 0) + 100 >> 2] = (c[j >> 2] & 31) + 257;c[j >> 2] = (c[j >> 2] | 0) >>> 5;c[k >> 2] = (c[k >> 2] | 0) - 5;c[(c[C >> 2] | 0) + 104 >> 2] = (c[j >> 2] & 31) + 1;c[j >> 2] = (c[j >> 2] | 0) >>> 5;c[k >> 2] = (c[k >> 2] | 0) - 5;c[(c[C >> 2] | 0) + 96 >> 2] = (c[j >> 2] & 15) + 4;c[j >> 2] = (c[j >> 2] | 0) >>> 4;c[k >> 2] = (c[k >> 2] | 0) - 4;if ((c[(c[C >> 2] | 0) + 100 >> 2] | 0) >>> 0 <= 286 ? (c[(c[C >> 2] | 0) + 104 >> 2] | 0) >>> 0 <= 30 : 0) {
	                      c[(c[C >> 2] | 0) + 108 >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16197;v = 179;break b;
	                    }c[(c[A >> 2] | 0) + 24 >> 2] = 12601;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                  }case 16197:
	                  {
	                    v = 179;break;
	                  }case 16198:
	                  {
	                    v = 189;break;
	                  }case 16199:
	                  {
	                    v = 223;break;
	                  }case 16200:
	                  {
	                    v = 224;break;
	                  }case 16201:
	                  {
	                    v = 245;break;
	                  }case 16202:
	                  {
	                    v = 251;break;
	                  }case 16203:
	                  {
	                    v = 263;break;
	                  }case 16204:
	                  break;case 16205:
	                  {
	                    if (!(c[u >> 2] | 0)) break a;g = c[(c[C >> 2] | 0) + 68 >> 2] & 255;h = c[s >> 2] | 0;c[s >> 2] = h + 1;a[h >> 0] = g;c[u >> 2] = (c[u >> 2] | 0) + -1;c[(c[C >> 2] | 0) + 4 >> 2] = 16200;continue a;
	                  }case 16206:
	                  {
	                    if (c[(c[C >> 2] | 0) + 12 >> 2] | 0) {
	                      while (1) {
	                        if ((c[k >> 2] | 0) >>> 0 >= 32) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                      }c[x >> 2] = (c[x >> 2] | 0) - (c[u >> 2] | 0);h = (c[A >> 2] | 0) + 20 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[x >> 2] | 0);h = (c[C >> 2] | 0) + 32 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[x >> 2] | 0);if (c[x >> 2] | 0 ? (c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0) != 0 : 0) {
	                        f = c[(c[C >> 2] | 0) + 28 >> 2] | 0;g = (c[s >> 2] | 0) + (0 - (c[x >> 2] | 0)) | 0;h = c[x >> 2] | 0;if (c[(c[C >> 2] | 0) + 20 >> 2] | 0) f = vb(f, g, h) | 0;else f = Jb(f, g, h) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = f;c[(c[A >> 2] | 0) + 48 >> 2] = f;
	                      }c[x >> 2] = c[u >> 2];if (c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0) {
	                        f = c[j >> 2] | 0;if (!(c[(c[C >> 2] | 0) + 20 >> 2] | 0)) f = (f >>> 24 & 255) + ((c[j >> 2] | 0) >>> 8 & 65280) + ((c[j >> 2] & 65280) << 8) + ((c[j >> 2] & 255) << 24) | 0;if ((f | 0) != (c[(c[C >> 2] | 0) + 28 >> 2] | 0)) {
	                          c[(c[A >> 2] | 0) + 24 >> 2] = 12775;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                        }
	                      }c[j >> 2] = 0;c[k >> 2] = 0;
	                    }c[(c[C >> 2] | 0) + 4 >> 2] = 16207;v = 304;break;
	                  }case 16207:
	                  {
	                    v = 304;break;
	                  }default:
	                  {
	                    v = 316;break a;
	                  }}
	            } while (0);do {
	              if ((v | 0) == 45) {
	                while (1) {
	                  v = 0;if ((c[k >> 2] | 0) >>> 0 >= 32) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;v = c[r >> 2] | 0;c[r >> 2] = v + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[v >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;v = 45;
	                }if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 4 >> 2] = c[j >> 2];if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                  a[q >> 0] = c[j >> 2];a[q + 1 >> 0] = (c[j >> 2] | 0) >>> 8;a[q + 2 >> 0] = (c[j >> 2] | 0) >>> 16;a[q + 3 >> 0] = (c[j >> 2] | 0) >>> 24;v = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, q, 4) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;
	                }c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16183;v = 54;
	              } else if ((v | 0) == 139) {
	                if (!(c[(c[C >> 2] | 0) + 16 >> 2] | 0)) {
	                  v = 140;break a;
	                }v = Jb(0, 0, 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;c[(c[A >> 2] | 0) + 48 >> 2] = v;c[(c[C >> 2] | 0) + 4 >> 2] = 16191;v = 142;
	              } else if ((v | 0) == 163) {
	                c[(c[C >> 2] | 0) + 4 >> 2] = 16195;v = 164;
	              } else if ((v | 0) == 179) {
	                while (1) {
	                  v = 0;if ((c[(c[C >> 2] | 0) + 108 >> 2] | 0) >>> 0 >= (c[(c[C >> 2] | 0) + 96 >> 2] | 0) >>> 0) break;while (1) {
	                    if ((c[k >> 2] | 0) >>> 0 >= 3) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                  }h = c[j >> 2] & 7;g = (c[C >> 2] | 0) + 108 | 0;v = c[g >> 2] | 0;c[g >> 2] = v + 1;b[(c[C >> 2] | 0) + 116 + ((e[8680 + (v << 1) >> 1] | 0) << 1) >> 1] = h;c[j >> 2] = (c[j >> 2] | 0) >>> 3;c[k >> 2] = (c[k >> 2] | 0) - 3;v = 179;
	                }while (1) {
	                  f = c[C >> 2] | 0;if ((c[(c[C >> 2] | 0) + 108 >> 2] | 0) >>> 0 >= 19) break;g = f + 108 | 0;h = c[g >> 2] | 0;c[g >> 2] = h + 1;b[(c[C >> 2] | 0) + 116 + ((e[8680 + (h << 1) >> 1] | 0) << 1) >> 1] = 0;
	                }c[(c[C >> 2] | 0) + 112 >> 2] = f + 1332;c[(c[C >> 2] | 0) + 80 >> 2] = c[(c[C >> 2] | 0) + 112 >> 2];c[(c[C >> 2] | 0) + 88 >> 2] = 7;c[y >> 2] = Fb(0, (c[C >> 2] | 0) + 116 | 0, 19, (c[C >> 2] | 0) + 112 | 0, (c[C >> 2] | 0) + 88 | 0, (c[C >> 2] | 0) + 756 | 0) | 0;if (c[y >> 2] | 0) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12637;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                } else {
	                  c[(c[C >> 2] | 0) + 108 >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16198;v = 189;break;
	                }
	              } else if ((v | 0) == 304) {
	                v = 0;if (!(c[(c[C >> 2] | 0) + 12 >> 2] | 0)) {
	                  v = 312;break a;
	                }if (!(c[(c[C >> 2] | 0) + 20 >> 2] | 0)) {
	                  v = 312;break a;
	                }while (1) {
	                  if ((c[k >> 2] | 0) >>> 0 >= 32) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }if ((c[j >> 2] | 0) == (c[(c[C >> 2] | 0) + 32 >> 2] | 0)) {
	                  v = 311;break a;
	                }c[(c[A >> 2] | 0) + 24 >> 2] = 12796;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	              }
	            } while (0);do {
	              if ((v | 0) == 54) {
	                while (1) {
	                  v = 0;if ((c[k >> 2] | 0) >>> 0 >= 16) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;v = c[r >> 2] | 0;c[r >> 2] = v + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[v >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;v = 54;
	                }if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) {
	                  c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 8 >> 2] = c[j >> 2] & 255;c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 12 >> 2] = (c[j >> 2] | 0) >>> 8;
	                }if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                  a[q >> 0] = c[j >> 2];a[q + 1 >> 0] = (c[j >> 2] | 0) >>> 8;v = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, q, 2) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;
	                }c[j >> 2] = 0;c[k >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16184;v = 63;
	              } else if ((v | 0) == 142) {
	                v = 0;if ((c[B >> 2] | 0) == 5 | (c[B >> 2] | 0) == 6) break a;else v = 143;
	              } else if ((v | 0) == 164) {
	                v = 0;c[l >> 2] = c[(c[C >> 2] | 0) + 68 >> 2];if (!(c[l >> 2] | 0)) {
	                  c[(c[C >> 2] | 0) + 4 >> 2] = 16191;continue a;
	                }if ((c[l >> 2] | 0) >>> 0 > (c[t >> 2] | 0) >>> 0) c[l >> 2] = c[t >> 2];if ((c[l >> 2] | 0) >>> 0 > (c[u >> 2] | 0) >>> 0) c[l >> 2] = c[u >> 2];if (!(c[l >> 2] | 0)) break a;td(c[s >> 2] | 0, c[r >> 2] | 0, c[l >> 2] | 0) | 0;c[t >> 2] = (c[t >> 2] | 0) - (c[l >> 2] | 0);c[r >> 2] = (c[r >> 2] | 0) + (c[l >> 2] | 0);c[u >> 2] = (c[u >> 2] | 0) - (c[l >> 2] | 0);c[s >> 2] = (c[s >> 2] | 0) + (c[l >> 2] | 0);h = (c[C >> 2] | 0) + 68 | 0;c[h >> 2] = (c[h >> 2] | 0) - (c[l >> 2] | 0);continue a;
	              } else if ((v | 0) == 189) {
	                c: while (1) {
	                  v = 0;if ((c[(c[C >> 2] | 0) + 108 >> 2] | 0) >>> 0 >= ((c[(c[C >> 2] | 0) + 100 >> 2] | 0) + (c[(c[C >> 2] | 0) + 104 >> 2] | 0) | 0) >>> 0) break;while (1) {
	                    h = (c[(c[C >> 2] | 0) + 80 >> 2] | 0) + ((c[j >> 2] & (1 << c[(c[C >> 2] | 0) + 88 >> 2]) - 1) << 2) | 0;b[n >> 1] = b[h >> 1] | 0;b[n + 2 >> 1] = b[h + 2 >> 1] | 0;if ((d[n + 1 >> 0] | 0) >>> 0 <= (c[k >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                  }if ((e[n + 2 >> 1] | 0 | 0) < 16) {
	                    c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);h = b[n + 2 >> 1] | 0;g = (c[C >> 2] | 0) + 108 | 0;v = c[g >> 2] | 0;c[g >> 2] = v + 1;b[(c[C >> 2] | 0) + 116 + (v << 1) >> 1] = h;v = 189;continue;
	                  }do {
	                    if ((e[n + 2 >> 1] | 0 | 0) != 16) {
	                      if ((e[n + 2 >> 1] | 0 | 0) == 17) {
	                        while (1) {
	                          if ((c[k >> 2] | 0) >>> 0 >= ((d[n + 1 >> 0] | 0) + 3 | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                        }c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);c[p >> 2] = 0;c[l >> 2] = 3 + (c[j >> 2] & 7);c[j >> 2] = (c[j >> 2] | 0) >>> 3;c[k >> 2] = (c[k >> 2] | 0) - 3;break;
	                      } else {
	                        while (1) {
	                          if ((c[k >> 2] | 0) >>> 0 >= ((d[n + 1 >> 0] | 0) + 7 | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                        }c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);c[p >> 2] = 0;c[l >> 2] = 11 + (c[j >> 2] & 127);c[j >> 2] = (c[j >> 2] | 0) >>> 7;c[k >> 2] = (c[k >> 2] | 0) - 7;break;
	                      }
	                    } else {
	                      while (1) {
	                        if ((c[k >> 2] | 0) >>> 0 >= ((d[n + 1 >> 0] | 0) + 2 | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                      }c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);if (!(c[(c[C >> 2] | 0) + 108 >> 2] | 0)) {
	                        v = 200;break c;
	                      }c[p >> 2] = e[(c[C >> 2] | 0) + 116 + ((c[(c[C >> 2] | 0) + 108 >> 2] | 0) - 1 << 1) >> 1];c[l >> 2] = 3 + (c[j >> 2] & 3);c[j >> 2] = (c[j >> 2] | 0) >>> 2;c[k >> 2] = (c[k >> 2] | 0) - 2;
	                    }
	                  } while (0);if (((c[(c[C >> 2] | 0) + 108 >> 2] | 0) + (c[l >> 2] | 0) | 0) >>> 0 > ((c[(c[C >> 2] | 0) + 100 >> 2] | 0) + (c[(c[C >> 2] | 0) + 104 >> 2] | 0) | 0) >>> 0) {
	                    v = 212;break;
	                  }while (1) {
	                    v = c[l >> 2] | 0;c[l >> 2] = v + -1;if (!v) {
	                      v = 189;continue c;
	                    }h = c[p >> 2] & 65535;g = (c[C >> 2] | 0) + 108 | 0;v = c[g >> 2] | 0;c[g >> 2] = v + 1;b[(c[C >> 2] | 0) + 116 + (v << 1) >> 1] = h;
	                  }
	                }if ((v | 0) == 200) {
	                  v = 0;c[(c[A >> 2] | 0) + 24 >> 2] = 12662;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;
	                } else if ((v | 0) == 212) {
	                  v = 0;c[(c[A >> 2] | 0) + 24 >> 2] = 12662;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;
	                }if ((c[(c[C >> 2] | 0) + 4 >> 2] | 0) == 16209) continue a;if (!(e[(c[C >> 2] | 0) + 116 + 512 >> 1] | 0)) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12688;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                }c[(c[C >> 2] | 0) + 112 >> 2] = (c[C >> 2] | 0) + 1332;c[(c[C >> 2] | 0) + 80 >> 2] = c[(c[C >> 2] | 0) + 112 >> 2];c[(c[C >> 2] | 0) + 88 >> 2] = 9;c[y >> 2] = Fb(1, (c[C >> 2] | 0) + 116 | 0, c[(c[C >> 2] | 0) + 100 >> 2] | 0, (c[C >> 2] | 0) + 112 | 0, (c[C >> 2] | 0) + 88 | 0, (c[C >> 2] | 0) + 756 | 0) | 0;if (c[y >> 2] | 0) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12725;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                }c[(c[C >> 2] | 0) + 84 >> 2] = c[(c[C >> 2] | 0) + 112 >> 2];c[(c[C >> 2] | 0) + 92 >> 2] = 6;c[y >> 2] = Fb(2, (c[C >> 2] | 0) + 116 + (c[(c[C >> 2] | 0) + 100 >> 2] << 1) | 0, c[(c[C >> 2] | 0) + 104 >> 2] | 0, (c[C >> 2] | 0) + 112 | 0, (c[C >> 2] | 0) + 92 | 0, (c[C >> 2] | 0) + 756 | 0) | 0;if (!(c[y >> 2] | 0)) {
	                  c[(c[C >> 2] | 0) + 4 >> 2] = 16199;if ((c[B >> 2] | 0) == 6) break a;else {
	                    v = 223;break;
	                  }
	                } else {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12753;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                }
	              }
	            } while (0);if ((v | 0) == 63) {
	              v = 0;if (!(c[(c[C >> 2] | 0) + 20 >> 2] & 1024 | 0)) {
	                if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 16 >> 2] = 0;
	              } else {
	                while (1) {
	                  if ((c[k >> 2] | 0) >>> 0 >= 16) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }c[(c[C >> 2] | 0) + 68 >> 2] = c[j >> 2];if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 20 >> 2] = c[j >> 2];if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                  a[q >> 0] = c[j >> 2];a[q + 1 >> 0] = (c[j >> 2] | 0) >>> 8;v = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, q, 2) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = v;
	                }c[j >> 2] = 0;c[k >> 2] = 0;
	              }c[(c[C >> 2] | 0) + 4 >> 2] = 16185;v = 76;
	            } else if ((v | 0) == 143) {
	              v = 0;if (c[(c[C >> 2] | 0) + 8 >> 2] | 0) {
	                c[j >> 2] = (c[j >> 2] | 0) >>> (c[k >> 2] & 7);c[k >> 2] = (c[k >> 2] | 0) - (c[k >> 2] & 7);c[(c[C >> 2] | 0) + 4 >> 2] = 16206;continue;
	              }while (1) {
	                if ((c[k >> 2] | 0) >>> 0 >= 3) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	              }c[(c[C >> 2] | 0) + 8 >> 2] = c[j >> 2] & 1;c[j >> 2] = (c[j >> 2] | 0) >>> 1;c[k >> 2] = (c[k >> 2] | 0) - 1;switch (c[j >> 2] & 3 | 0) {case 0:
	                  {
	                    c[(c[C >> 2] | 0) + 4 >> 2] = 16193;break;
	                  }case 1:
	                  {
	                    Cb(c[C >> 2] | 0);c[(c[C >> 2] | 0) + 4 >> 2] = 16199;if ((c[B >> 2] | 0) == 6) {
	                      v = 151;break a;
	                    }break;
	                  }case 2:
	                  {
	                    c[(c[C >> 2] | 0) + 4 >> 2] = 16196;break;
	                  }case 3:
	                  {
	                    c[(c[A >> 2] | 0) + 24 >> 2] = 12553;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;break;
	                  }default:
	                  {
	                    v = 154;break a;
	                  }}c[j >> 2] = (c[j >> 2] | 0) >>> 2;c[k >> 2] = (c[k >> 2] | 0) - 2;continue;
	            } else if ((v | 0) == 223) {
	              c[(c[C >> 2] | 0) + 4 >> 2] = 16200;v = 224;
	            }do {
	              if ((v | 0) == 76) {
	                v = 0;if (c[(c[C >> 2] | 0) + 20 >> 2] & 1024 | 0) {
	                  c[l >> 2] = c[(c[C >> 2] | 0) + 68 >> 2];if ((c[l >> 2] | 0) >>> 0 > (c[t >> 2] | 0) >>> 0) c[l >> 2] = c[t >> 2];if (c[l >> 2] | 0) {
	                    if (c[(c[C >> 2] | 0) + 36 >> 2] | 0 ? c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 16 >> 2] | 0 : 0) {
	                      c[p >> 2] = (c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 20 >> 2] | 0) - (c[(c[C >> 2] | 0) + 68 >> 2] | 0);if (((c[p >> 2] | 0) + (c[l >> 2] | 0) | 0) >>> 0 > (c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 24 >> 2] | 0) >>> 0) f = (c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 24 >> 2] | 0) - (c[p >> 2] | 0) | 0;else f = c[l >> 2] | 0;td((c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 16 >> 2] | 0) + (c[p >> 2] | 0) | 0, c[r >> 2] | 0, f | 0) | 0;
	                    }if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                      h = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, c[r >> 2] | 0, c[l >> 2] | 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;
	                    }c[t >> 2] = (c[t >> 2] | 0) - (c[l >> 2] | 0);c[r >> 2] = (c[r >> 2] | 0) + (c[l >> 2] | 0);h = (c[C >> 2] | 0) + 68 | 0;c[h >> 2] = (c[h >> 2] | 0) - (c[l >> 2] | 0);
	                  }if (c[(c[C >> 2] | 0) + 68 >> 2] | 0) break a;
	                }c[(c[C >> 2] | 0) + 68 >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16186;v = 92;
	              } else if ((v | 0) == 224) {
	                v = 0;if ((c[t >> 2] | 0) >>> 0 >= 6 & (c[u >> 2] | 0) >>> 0 >= 258) {
	                  c[(c[A >> 2] | 0) + 12 >> 2] = c[s >> 2];c[(c[A >> 2] | 0) + 16 >> 2] = c[u >> 2];c[c[A >> 2] >> 2] = c[r >> 2];c[(c[A >> 2] | 0) + 4 >> 2] = c[t >> 2];c[(c[C >> 2] | 0) + 60 >> 2] = c[j >> 2];c[(c[C >> 2] | 0) + 64 >> 2] = c[k >> 2];Kb(c[A >> 2] | 0, c[x >> 2] | 0);c[s >> 2] = c[(c[A >> 2] | 0) + 12 >> 2];c[u >> 2] = c[(c[A >> 2] | 0) + 16 >> 2];c[r >> 2] = c[c[A >> 2] >> 2];c[t >> 2] = c[(c[A >> 2] | 0) + 4 >> 2];c[j >> 2] = c[(c[C >> 2] | 0) + 60 >> 2];c[k >> 2] = c[(c[C >> 2] | 0) + 64 >> 2];if ((c[(c[C >> 2] | 0) + 4 >> 2] | 0) != 16191) continue a;c[(c[C >> 2] | 0) + 7112 >> 2] = -1;continue a;
	                }c[(c[C >> 2] | 0) + 7112 >> 2] = 0;while (1) {
	                  h = (c[(c[C >> 2] | 0) + 80 >> 2] | 0) + ((c[j >> 2] & (1 << c[(c[C >> 2] | 0) + 88 >> 2]) - 1) << 2) | 0;b[n >> 1] = b[h >> 1] | 0;b[n + 2 >> 1] = b[h + 2 >> 1] | 0;if ((d[n + 1 >> 0] | 0) >>> 0 <= (c[k >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }if (d[n >> 0] | 0 | 0 ? ((d[n >> 0] | 0) & 240 | 0) == 0 : 0) {
	                  b[o >> 1] = b[n >> 1] | 0;b[o + 2 >> 1] = b[n + 2 >> 1] | 0;while (1) {
	                    h = (c[(c[C >> 2] | 0) + 80 >> 2] | 0) + ((e[o + 2 >> 1] | 0) + ((c[j >> 2] & (1 << (d[o + 1 >> 0] | 0) + (d[o >> 0] | 0)) - 1) >>> (d[o + 1 >> 0] | 0)) << 2) | 0;b[n >> 1] = b[h >> 1] | 0;b[n + 2 >> 1] = b[h + 2 >> 1] | 0;if (((d[o + 1 >> 0] | 0) + (d[n + 1 >> 0] | 0) | 0) >>> 0 <= (c[k >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                  }c[j >> 2] = (c[j >> 2] | 0) >>> (d[o + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[o + 1 >> 0] | 0);h = (c[C >> 2] | 0) + 7112 | 0;c[h >> 2] = (c[h >> 2] | 0) + (d[o + 1 >> 0] | 0);
	                }c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);h = (c[C >> 2] | 0) + 7112 | 0;c[h >> 2] = (c[h >> 2] | 0) + (d[n + 1 >> 0] | 0);c[(c[C >> 2] | 0) + 68 >> 2] = e[n + 2 >> 1];if (!(d[n >> 0] | 0)) {
	                  c[(c[C >> 2] | 0) + 4 >> 2] = 16205;continue a;
	                }if ((d[n >> 0] | 0) & 32 | 0) {
	                  c[(c[C >> 2] | 0) + 7112 >> 2] = -1;c[(c[C >> 2] | 0) + 4 >> 2] = 16191;continue a;
	                }if ((d[n >> 0] | 0) & 64 | 0) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12871;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                } else {
	                  c[(c[C >> 2] | 0) + 76 >> 2] = (d[n >> 0] | 0) & 15;c[(c[C >> 2] | 0) + 4 >> 2] = 16201;v = 245;break;
	                }
	              }
	            } while (0);if ((v | 0) == 92) {
	              v = 0;if (c[(c[C >> 2] | 0) + 20 >> 2] & 2048 | 0) {
	                if (!(c[t >> 2] | 0)) break;c[l >> 2] = 0;do {
	                  h = c[l >> 2] | 0;c[l >> 2] = h + 1;c[p >> 2] = d[(c[r >> 2] | 0) + h >> 0];if ((c[(c[C >> 2] | 0) + 36 >> 2] | 0 ? c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 28 >> 2] | 0 : 0) ? (c[(c[C >> 2] | 0) + 68 >> 2] | 0) >>> 0 < (c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 32 >> 2] | 0) >>> 0 : 0) {
	                    g = c[p >> 2] & 255;f = (c[C >> 2] | 0) + 68 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 28 >> 2] | 0) + h >> 0] = g;
	                  }if (!(c[p >> 2] | 0)) break;
	                } while ((c[l >> 2] | 0) >>> 0 < (c[t >> 2] | 0) >>> 0);if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                  h = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, c[r >> 2] | 0, c[l >> 2] | 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;
	                }c[t >> 2] = (c[t >> 2] | 0) - (c[l >> 2] | 0);c[r >> 2] = (c[r >> 2] | 0) + (c[l >> 2] | 0);if (c[p >> 2] | 0) break;
	              } else if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 28 >> 2] = 0;c[(c[C >> 2] | 0) + 68 >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16187;v = 108;
	            } else if ((v | 0) == 245) {
	              v = 0;if (c[(c[C >> 2] | 0) + 76 >> 2] | 0) {
	                while (1) {
	                  if ((c[k >> 2] | 0) >>> 0 >= (c[(c[C >> 2] | 0) + 76 >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }v = (c[C >> 2] | 0) + 68 | 0;c[v >> 2] = (c[v >> 2] | 0) + (c[j >> 2] & (1 << c[(c[C >> 2] | 0) + 76 >> 2]) - 1);c[j >> 2] = (c[j >> 2] | 0) >>> (c[(c[C >> 2] | 0) + 76 >> 2] | 0);c[k >> 2] = (c[k >> 2] | 0) - (c[(c[C >> 2] | 0) + 76 >> 2] | 0);v = (c[C >> 2] | 0) + 7112 | 0;c[v >> 2] = (c[v >> 2] | 0) + (c[(c[C >> 2] | 0) + 76 >> 2] | 0);
	              }c[(c[C >> 2] | 0) + 7116 >> 2] = c[(c[C >> 2] | 0) + 68 >> 2];c[(c[C >> 2] | 0) + 4 >> 2] = 16202;v = 251;
	            }do {
	              if ((v | 0) == 108) {
	                v = 0;if (c[(c[C >> 2] | 0) + 20 >> 2] & 4096 | 0) {
	                  if (!(c[t >> 2] | 0)) break a;c[l >> 2] = 0;do {
	                    h = c[l >> 2] | 0;c[l >> 2] = h + 1;c[p >> 2] = d[(c[r >> 2] | 0) + h >> 0];if ((c[(c[C >> 2] | 0) + 36 >> 2] | 0 ? c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 36 >> 2] | 0 : 0) ? (c[(c[C >> 2] | 0) + 68 >> 2] | 0) >>> 0 < (c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 40 >> 2] | 0) >>> 0 : 0) {
	                      g = c[p >> 2] & 255;f = (c[C >> 2] | 0) + 68 | 0;h = c[f >> 2] | 0;c[f >> 2] = h + 1;a[(c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 36 >> 2] | 0) + h >> 0] = g;
	                    }if (!(c[p >> 2] | 0)) break;
	                  } while ((c[l >> 2] | 0) >>> 0 < (c[t >> 2] | 0) >>> 0);if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0 ? c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 : 0) {
	                    h = vb(c[(c[C >> 2] | 0) + 28 >> 2] | 0, c[r >> 2] | 0, c[l >> 2] | 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;
	                  }c[t >> 2] = (c[t >> 2] | 0) - (c[l >> 2] | 0);c[r >> 2] = (c[r >> 2] | 0) + (c[l >> 2] | 0);if (c[p >> 2] | 0) break a;
	                } else if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 36 >> 2] = 0;c[(c[C >> 2] | 0) + 4 >> 2] = 16188;v = 124;
	              } else if ((v | 0) == 251) {
	                while (1) {
	                  v = 0;h = (c[(c[C >> 2] | 0) + 84 >> 2] | 0) + ((c[j >> 2] & (1 << c[(c[C >> 2] | 0) + 92 >> 2]) - 1) << 2) | 0;b[n >> 1] = b[h >> 1] | 0;b[n + 2 >> 1] = b[h + 2 >> 1] | 0;if ((d[n + 1 >> 0] | 0) >>> 0 <= (c[k >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;v = c[r >> 2] | 0;c[r >> 2] = v + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[v >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;v = 251;
	                }if (!((d[n >> 0] | 0) & 240)) {
	                  b[o >> 1] = b[n >> 1] | 0;b[o + 2 >> 1] = b[n + 2 >> 1] | 0;while (1) {
	                    h = (c[(c[C >> 2] | 0) + 84 >> 2] | 0) + ((e[o + 2 >> 1] | 0) + ((c[j >> 2] & (1 << (d[o + 1 >> 0] | 0) + (d[o >> 0] | 0)) - 1) >>> (d[o + 1 >> 0] | 0)) << 2) | 0;b[n >> 1] = b[h >> 1] | 0;b[n + 2 >> 1] = b[h + 2 >> 1] | 0;if (((d[o + 1 >> 0] | 0) + (d[n + 1 >> 0] | 0) | 0) >>> 0 <= (c[k >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                  }c[j >> 2] = (c[j >> 2] | 0) >>> (d[o + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[o + 1 >> 0] | 0);h = (c[C >> 2] | 0) + 7112 | 0;c[h >> 2] = (c[h >> 2] | 0) + (d[o + 1 >> 0] | 0);
	                }c[j >> 2] = (c[j >> 2] | 0) >>> (d[n + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) - (d[n + 1 >> 0] | 0);h = (c[C >> 2] | 0) + 7112 | 0;c[h >> 2] = (c[h >> 2] | 0) + (d[n + 1 >> 0] | 0);if ((d[n >> 0] | 0) & 64 | 0) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12849;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue a;
	                } else {
	                  c[(c[C >> 2] | 0) + 72 >> 2] = e[n + 2 >> 1];c[(c[C >> 2] | 0) + 76 >> 2] = (d[n >> 0] | 0) & 15;c[(c[C >> 2] | 0) + 4 >> 2] = 16203;v = 263;break;
	                }
	              }
	            } while (0);if ((v | 0) == 124) {
	              v = 0;if (c[(c[C >> 2] | 0) + 20 >> 2] & 512 | 0) {
	                while (1) {
	                  if ((c[k >> 2] | 0) >>> 0 >= 16) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }if (c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0 ? (c[j >> 2] | 0) != (c[(c[C >> 2] | 0) + 28 >> 2] & 65535 | 0) : 0) {
	                  c[(c[A >> 2] | 0) + 24 >> 2] = 12533;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue;
	                }c[j >> 2] = 0;c[k >> 2] = 0;
	              }if (c[(c[C >> 2] | 0) + 36 >> 2] | 0) {
	                c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 44 >> 2] = c[(c[C >> 2] | 0) + 20 >> 2] >> 9 & 1;c[(c[(c[C >> 2] | 0) + 36 >> 2] | 0) + 48 >> 2] = 1;
	              }h = vb(0, 0, 0) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = h;c[(c[A >> 2] | 0) + 48 >> 2] = h;c[(c[C >> 2] | 0) + 4 >> 2] = 16191;continue;
	            } else if ((v | 0) == 263) {
	              v = 0;if (c[(c[C >> 2] | 0) + 76 >> 2] | 0) {
	                while (1) {
	                  if ((c[k >> 2] | 0) >>> 0 >= (c[(c[C >> 2] | 0) + 76 >> 2] | 0) >>> 0) break;if (!(c[t >> 2] | 0)) break a;c[t >> 2] = (c[t >> 2] | 0) + -1;h = c[r >> 2] | 0;c[r >> 2] = h + 1;c[j >> 2] = (c[j >> 2] | 0) + ((d[h >> 0] | 0) << c[k >> 2]);c[k >> 2] = (c[k >> 2] | 0) + 8;
	                }h = (c[C >> 2] | 0) + 72 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[j >> 2] & (1 << c[(c[C >> 2] | 0) + 76 >> 2]) - 1);c[j >> 2] = (c[j >> 2] | 0) >>> (c[(c[C >> 2] | 0) + 76 >> 2] | 0);c[k >> 2] = (c[k >> 2] | 0) - (c[(c[C >> 2] | 0) + 76 >> 2] | 0);h = (c[C >> 2] | 0) + 7112 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[(c[C >> 2] | 0) + 76 >> 2] | 0);
	              }c[(c[C >> 2] | 0) + 4 >> 2] = 16204;
	            }if (!(c[u >> 2] | 0)) break;c[l >> 2] = (c[x >> 2] | 0) - (c[u >> 2] | 0);if ((c[(c[C >> 2] | 0) + 72 >> 2] | 0) >>> 0 > (c[l >> 2] | 0) >>> 0) {
	              c[l >> 2] = (c[(c[C >> 2] | 0) + 72 >> 2] | 0) - (c[l >> 2] | 0);if ((c[l >> 2] | 0) >>> 0 > (c[(c[C >> 2] | 0) + 48 >> 2] | 0) >>> 0 ? c[(c[C >> 2] | 0) + 7108 >> 2] | 0 : 0) {
	                c[(c[A >> 2] | 0) + 24 >> 2] = 12819;c[(c[C >> 2] | 0) + 4 >> 2] = 16209;continue;
	              }f = c[C >> 2] | 0;if ((c[l >> 2] | 0) >>> 0 > (c[(c[C >> 2] | 0) + 52 >> 2] | 0) >>> 0) {
	                c[l >> 2] = (c[l >> 2] | 0) - (c[f + 52 >> 2] | 0);c[m >> 2] = (c[(c[C >> 2] | 0) + 56 >> 2] | 0) + ((c[(c[C >> 2] | 0) + 44 >> 2] | 0) - (c[l >> 2] | 0));
	              } else c[m >> 2] = (c[f + 56 >> 2] | 0) + ((c[(c[C >> 2] | 0) + 52 >> 2] | 0) - (c[l >> 2] | 0));if ((c[l >> 2] | 0) >>> 0 > (c[(c[C >> 2] | 0) + 68 >> 2] | 0) >>> 0) c[l >> 2] = c[(c[C >> 2] | 0) + 68 >> 2];
	            } else {
	              c[m >> 2] = (c[s >> 2] | 0) + (0 - (c[(c[C >> 2] | 0) + 72 >> 2] | 0));c[l >> 2] = c[(c[C >> 2] | 0) + 68 >> 2];
	            }if ((c[l >> 2] | 0) >>> 0 > (c[u >> 2] | 0) >>> 0) c[l >> 2] = c[u >> 2];c[u >> 2] = (c[u >> 2] | 0) - (c[l >> 2] | 0);h = (c[C >> 2] | 0) + 68 | 0;c[h >> 2] = (c[h >> 2] | 0) - (c[l >> 2] | 0);do {
	              g = c[m >> 2] | 0;c[m >> 2] = g + 1;g = a[g >> 0] | 0;h = c[s >> 2] | 0;c[s >> 2] = h + 1;a[h >> 0] = g;h = (c[l >> 2] | 0) + -1 | 0;c[l >> 2] = h;
	            } while ((h | 0) != 0);if (c[(c[C >> 2] | 0) + 68 >> 2] | 0) continue;c[(c[C >> 2] | 0) + 4 >> 2] = 16200;
	          }if ((v | 0) == 140) {
	            c[(c[A >> 2] | 0) + 12 >> 2] = c[s >> 2];c[(c[A >> 2] | 0) + 16 >> 2] = c[u >> 2];c[c[A >> 2] >> 2] = c[r >> 2];c[(c[A >> 2] | 0) + 4 >> 2] = c[t >> 2];c[(c[C >> 2] | 0) + 60 >> 2] = c[j >> 2];c[(c[C >> 2] | 0) + 64 >> 2] = c[k >> 2];c[z >> 2] = 2;C = c[z >> 2] | 0;i = D;return C | 0;
	          } else if ((v | 0) == 151) {
	            c[j >> 2] = (c[j >> 2] | 0) >>> 2;c[k >> 2] = (c[k >> 2] | 0) - 2;
	          } else if ((v | 0) != 154) if ((v | 0) == 311) {
	            c[j >> 2] = 0;c[k >> 2] = 0;v = 312;
	          } else if ((v | 0) == 314) c[y >> 2] = -3;else if ((v | 0) == 315) {
	            c[z >> 2] = -4;C = c[z >> 2] | 0;i = D;return C | 0;
	          } else if ((v | 0) == 316) {
	            c[z >> 2] = -2;C = c[z >> 2] | 0;i = D;return C | 0;
	          }if ((v | 0) == 312) {
	            c[(c[C >> 2] | 0) + 4 >> 2] = 16208;v = 313;
	          }if ((v | 0) == 313) c[y >> 2] = 1;c[(c[A >> 2] | 0) + 12 >> 2] = c[s >> 2];c[(c[A >> 2] | 0) + 16 >> 2] = c[u >> 2];c[c[A >> 2] >> 2] = c[r >> 2];c[(c[A >> 2] | 0) + 4 >> 2] = c[t >> 2];c[(c[C >> 2] | 0) + 60 >> 2] = c[j >> 2];c[(c[C >> 2] | 0) + 64 >> 2] = c[k >> 2];if (!(c[(c[C >> 2] | 0) + 44 >> 2] | 0)) {
	            if (((c[x >> 2] | 0) != (c[(c[A >> 2] | 0) + 16 >> 2] | 0) ? (c[(c[C >> 2] | 0) + 4 >> 2] | 0) >>> 0 < 16209 : 0) ? (c[B >> 2] | 0) != 4 ? 1 : (c[(c[C >> 2] | 0) + 4 >> 2] | 0) >>> 0 < 16206 : 0) v = 321;
	          } else v = 321;if ((v | 0) == 321 ? Db(c[A >> 2] | 0, c[(c[A >> 2] | 0) + 12 >> 2] | 0, (c[x >> 2] | 0) - (c[(c[A >> 2] | 0) + 16 >> 2] | 0) | 0) | 0 : 0) {
	            c[(c[C >> 2] | 0) + 4 >> 2] = 16210;c[z >> 2] = -4;C = c[z >> 2] | 0;i = D;return C | 0;
	          }c[w >> 2] = (c[w >> 2] | 0) - (c[(c[A >> 2] | 0) + 4 >> 2] | 0);c[x >> 2] = (c[x >> 2] | 0) - (c[(c[A >> 2] | 0) + 16 >> 2] | 0);v = (c[A >> 2] | 0) + 8 | 0;c[v >> 2] = (c[v >> 2] | 0) + (c[w >> 2] | 0);v = (c[A >> 2] | 0) + 20 | 0;c[v >> 2] = (c[v >> 2] | 0) + (c[x >> 2] | 0);v = (c[C >> 2] | 0) + 32 | 0;c[v >> 2] = (c[v >> 2] | 0) + (c[x >> 2] | 0);if (c[x >> 2] | 0 ? (c[(c[C >> 2] | 0) + 12 >> 2] & 4 | 0) != 0 : 0) {
	            f = c[(c[C >> 2] | 0) + 28 >> 2] | 0;g = (c[(c[A >> 2] | 0) + 12 >> 2] | 0) + (0 - (c[x >> 2] | 0)) | 0;h = c[x >> 2] | 0;if (c[(c[C >> 2] | 0) + 20 >> 2] | 0) f = vb(f, g, h) | 0;else f = Jb(f, g, h) | 0;c[(c[C >> 2] | 0) + 28 >> 2] = f;c[(c[A >> 2] | 0) + 48 >> 2] = f;
	          }if ((c[(c[C >> 2] | 0) + 4 >> 2] | 0) == 16199) f = 1;else f = (c[(c[C >> 2] | 0) + 4 >> 2] | 0) == 16194;c[(c[A >> 2] | 0) + 44 >> 2] = (c[(c[C >> 2] | 0) + 64 >> 2] | 0) + (c[(c[C >> 2] | 0) + 8 >> 2] | 0 ? 64 : 0) + ((c[(c[C >> 2] | 0) + 4 >> 2] | 0) == 16191 ? 128 : 0) + (f ? 256 : 0);if (((c[w >> 2] | 0) == 0 & (c[x >> 2] | 0) == 0 | (c[B >> 2] | 0) == 4) & (c[y >> 2] | 0) == 0) c[y >> 2] = -5;c[z >> 2] = c[y >> 2];C = c[z >> 2] | 0;i = D;return C | 0;
	        }
	      } while (0);c[z >> 2] = -2;C = c[z >> 2] | 0;i = D;return C | 0;
	    }function Cb(a) {
	      a = a | 0;var b = 0,
	          d = 0;b = i;i = i + 16 | 0;d = b;c[d >> 2] = a;c[(c[d >> 2] | 0) + 80 >> 2] = 8718;c[(c[d >> 2] | 0) + 88 >> 2] = 9;c[(c[d >> 2] | 0) + 84 >> 2] = 10766;c[(c[d >> 2] | 0) + 92 >> 2] = 5;i = b;return;
	    }function Db(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0;l = i;i = i + 32 | 0;f = l + 20 | 0;e = l + 16 | 0;g = l + 12 | 0;h = l + 8 | 0;j = l + 4 | 0;k = l;c[e >> 2] = a;c[g >> 2] = b;c[h >> 2] = d;c[j >> 2] = c[(c[e >> 2] | 0) + 28 >> 2];if ((c[(c[j >> 2] | 0) + 56 >> 2] | 0) == 0 ? (e = Ca[c[(c[e >> 2] | 0) + 32 >> 2] & 7](c[(c[e >> 2] | 0) + 40 >> 2] | 0, 1 << c[(c[j >> 2] | 0) + 40 >> 2], 1) | 0, c[(c[j >> 2] | 0) + 56 >> 2] = e, (c[(c[j >> 2] | 0) + 56 >> 2] | 0) == 0) : 0) {
	        c[f >> 2] = 1;k = c[f >> 2] | 0;i = l;return k | 0;
	      }if (!(c[(c[j >> 2] | 0) + 44 >> 2] | 0)) {
	        c[(c[j >> 2] | 0) + 44 >> 2] = 1 << c[(c[j >> 2] | 0) + 40 >> 2];c[(c[j >> 2] | 0) + 52 >> 2] = 0;c[(c[j >> 2] | 0) + 48 >> 2] = 0;
	      }a = c[j >> 2] | 0;do {
	        if ((c[h >> 2] | 0) >>> 0 < (c[(c[j >> 2] | 0) + 44 >> 2] | 0) >>> 0) {
	          c[k >> 2] = (c[a + 44 >> 2] | 0) - (c[(c[j >> 2] | 0) + 52 >> 2] | 0);if ((c[k >> 2] | 0) >>> 0 > (c[h >> 2] | 0) >>> 0) c[k >> 2] = c[h >> 2];td((c[(c[j >> 2] | 0) + 56 >> 2] | 0) + (c[(c[j >> 2] | 0) + 52 >> 2] | 0) | 0, (c[g >> 2] | 0) + (0 - (c[h >> 2] | 0)) | 0, c[k >> 2] | 0) | 0;c[h >> 2] = (c[h >> 2] | 0) - (c[k >> 2] | 0);if (c[h >> 2] | 0) {
	            td(c[(c[j >> 2] | 0) + 56 >> 2] | 0, (c[g >> 2] | 0) + (0 - (c[h >> 2] | 0)) | 0, c[h >> 2] | 0) | 0;c[(c[j >> 2] | 0) + 52 >> 2] = c[h >> 2];c[(c[j >> 2] | 0) + 48 >> 2] = c[(c[j >> 2] | 0) + 44 >> 2];break;
	          }h = (c[j >> 2] | 0) + 52 | 0;c[h >> 2] = (c[h >> 2] | 0) + (c[k >> 2] | 0);if ((c[(c[j >> 2] | 0) + 52 >> 2] | 0) == (c[(c[j >> 2] | 0) + 44 >> 2] | 0)) c[(c[j >> 2] | 0) + 52 >> 2] = 0;if ((c[(c[j >> 2] | 0) + 48 >> 2] | 0) >>> 0 < (c[(c[j >> 2] | 0) + 44 >> 2] | 0) >>> 0) {
	            j = (c[j >> 2] | 0) + 48 | 0;c[j >> 2] = (c[j >> 2] | 0) + (c[k >> 2] | 0);
	          }
	        } else {
	          td(c[a + 56 >> 2] | 0, (c[g >> 2] | 0) + (0 - (c[(c[j >> 2] | 0) + 44 >> 2] | 0)) | 0, c[(c[j >> 2] | 0) + 44 >> 2] | 0) | 0;c[(c[j >> 2] | 0) + 52 >> 2] = 0;c[(c[j >> 2] | 0) + 48 >> 2] = c[(c[j >> 2] | 0) + 44 >> 2];
	        }
	      } while (0);c[f >> 2] = 0;k = c[f >> 2] | 0;i = l;return k | 0;
	    }function Eb(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = i;i = i + 16 | 0;b = f + 8 | 0;d = f + 4 | 0;e = f;c[d >> 2] = a;if (xb(c[d >> 2] | 0) | 0) {
	        c[b >> 2] = -2;e = c[b >> 2] | 0;i = f;return e | 0;
	      }c[e >> 2] = c[(c[d >> 2] | 0) + 28 >> 2];if (c[(c[e >> 2] | 0) + 56 >> 2] | 0) Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[e >> 2] | 0) + 56 >> 2] | 0);Ea[c[(c[d >> 2] | 0) + 36 >> 2] & 1](c[(c[d >> 2] | 0) + 40 >> 2] | 0, c[(c[d >> 2] | 0) + 28 >> 2] | 0);c[(c[d >> 2] | 0) + 28 >> 2] = 0;c[b >> 2] = 0;e = c[b >> 2] | 0;i = f;return e | 0;
	    }function Fb(d, f, g, h, j, k) {
	      d = d | 0;f = f | 0;g = g | 0;h = h | 0;j = j | 0;k = k | 0;var l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0;O = i;i = i + 176 | 0;K = O + 96 | 0;L = O + 92 | 0;M = O + 88 | 0;m = O + 84 | 0;n = O + 80 | 0;o = O + 76 | 0;p = O + 72 | 0;q = O + 68 | 0;r = O + 64 | 0;s = O + 60 | 0;t = O + 56 | 0;u = O + 52 | 0;v = O + 48 | 0;w = O + 44 | 0;x = O + 40 | 0;y = O + 36 | 0;z = O + 32 | 0;A = O + 28 | 0;B = O + 24 | 0;C = O + 20 | 0;D = O + 16 | 0;E = O + 168 | 0;F = O + 12 | 0;G = O + 8 | 0;H = O + 4 | 0;I = O;J = O + 136 | 0;l = O + 104 | 0;c[L >> 2] = d;c[M >> 2] = f;c[m >> 2] = g;c[n >> 2] = h;c[o >> 2] = j;c[p >> 2] = k;c[q >> 2] = 0;while (1) {
	        if ((c[q >> 2] | 0) >>> 0 > 15) break;b[J + (c[q >> 2] << 1) >> 1] = 0;c[q >> 2] = (c[q >> 2] | 0) + 1;
	      }c[r >> 2] = 0;while (1) {
	        if ((c[r >> 2] | 0) >>> 0 >= (c[m >> 2] | 0) >>> 0) break;k = J + ((e[(c[M >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) << 1) | 0;b[k >> 1] = (b[k >> 1] | 0) + 1 << 16 >> 16;c[r >> 2] = (c[r >> 2] | 0) + 1;
	      }c[u >> 2] = c[c[o >> 2] >> 2];c[t >> 2] = 15;while (1) {
	        if ((c[t >> 2] | 0) >>> 0 < 1) break;if (e[J + (c[t >> 2] << 1) >> 1] | 0 | 0) break;c[t >> 2] = (c[t >> 2] | 0) + -1;
	      }if ((c[u >> 2] | 0) >>> 0 > (c[t >> 2] | 0) >>> 0) c[u >> 2] = c[t >> 2];if (!(c[t >> 2] | 0)) {
	        a[E >> 0] = 64;a[E + 1 >> 0] = 1;b[E + 2 >> 1] = 0;N = c[n >> 2] | 0;M = c[N >> 2] | 0;c[N >> 2] = M + 4;b[M >> 1] = b[E >> 1] | 0;b[M + 2 >> 1] = b[E + 2 >> 1] | 0;M = c[n >> 2] | 0;N = c[M >> 2] | 0;c[M >> 2] = N + 4;b[N >> 1] = b[E >> 1] | 0;b[N + 2 >> 1] = b[E + 2 >> 1] | 0;c[c[o >> 2] >> 2] = 1;c[K >> 2] = 0;N = c[K >> 2] | 0;i = O;return N | 0;
	      }c[s >> 2] = 1;while (1) {
	        if ((c[s >> 2] | 0) >>> 0 >= (c[t >> 2] | 0) >>> 0) break;if (e[J + (c[s >> 2] << 1) >> 1] | 0 | 0) break;c[s >> 2] = (c[s >> 2] | 0) + 1;
	      }if ((c[u >> 2] | 0) >>> 0 < (c[s >> 2] | 0) >>> 0) c[u >> 2] = c[s >> 2];c[x >> 2] = 1;c[q >> 2] = 1;while (1) {
	        d = c[x >> 2] | 0;if ((c[q >> 2] | 0) >>> 0 > 15) break;c[x >> 2] = d << 1;c[x >> 2] = (c[x >> 2] | 0) - (e[J + (c[q >> 2] << 1) >> 1] | 0);if ((c[x >> 2] | 0) < 0) {
	          N = 24;break;
	        }c[q >> 2] = (c[q >> 2] | 0) + 1;
	      }if ((N | 0) == 24) {
	        c[K >> 2] = -1;N = c[K >> 2] | 0;i = O;return N | 0;
	      }if ((d | 0) > 0 ? (c[L >> 2] | 0) == 0 | (c[t >> 2] | 0) != 1 : 0) {
	        c[K >> 2] = -1;N = c[K >> 2] | 0;i = O;return N | 0;
	      }b[l + 2 >> 1] = 0;c[q >> 2] = 1;while (1) {
	        if ((c[q >> 2] | 0) >>> 0 >= 15) break;b[l + ((c[q >> 2] | 0) + 1 << 1) >> 1] = (e[l + (c[q >> 2] << 1) >> 1] | 0) + (e[J + (c[q >> 2] << 1) >> 1] | 0);c[q >> 2] = (c[q >> 2] | 0) + 1;
	      }c[r >> 2] = 0;while (1) {
	        if ((c[r >> 2] | 0) >>> 0 >= (c[m >> 2] | 0) >>> 0) break;if (e[(c[M >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0 | 0) {
	          j = c[r >> 2] & 65535;h = l + ((e[(c[M >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) << 1) | 0;k = b[h >> 1] | 0;b[h >> 1] = k + 1 << 16 >> 16;b[(c[p >> 2] | 0) + ((k & 65535) << 1) >> 1] = j;
	        }c[r >> 2] = (c[r >> 2] | 0) + 1;
	      }switch (c[L >> 2] | 0) {case 0:
	          {
	            m = c[p >> 2] | 0;c[H >> 2] = m;c[G >> 2] = m;c[I >> 2] = 20;break;
	          }case 1:
	          {
	            c[G >> 2] = 10894;c[H >> 2] = 10956;c[I >> 2] = 257;break;
	          }default:
	          {
	            c[G >> 2] = 11018;c[H >> 2] = 11082;c[I >> 2] = 0;
	          }}c[z >> 2] = 0;c[r >> 2] = 0;c[q >> 2] = c[s >> 2];c[F >> 2] = c[c[n >> 2] >> 2];c[v >> 2] = c[u >> 2];c[w >> 2] = 0;c[C >> 2] = -1;c[y >> 2] = 1 << c[u >> 2];c[D >> 2] = (c[y >> 2] | 0) - 1;if (!((c[L >> 2] | 0) == 1 & (c[y >> 2] | 0) >>> 0 > 852) ? !((c[L >> 2] | 0) == 2 & (c[y >> 2] | 0) >>> 0 > 592) : 0) {
	        while (1) {
	          a[E + 1 >> 0] = (c[q >> 2] | 0) - (c[w >> 2] | 0);do {
	            if (((e[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) + 1 | 0) >>> 0 >= (c[I >> 2] | 0) >>> 0) {
	              if ((e[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) >>> 0 >= (c[I >> 2] | 0) >>> 0) {
	                a[E >> 0] = b[(c[H >> 2] | 0) + ((e[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) - (c[I >> 2] | 0) << 1) >> 1];b[E + 2 >> 1] = b[(c[G >> 2] | 0) + ((e[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) - (c[I >> 2] | 0) << 1) >> 1] | 0;break;
	              } else {
	                a[E >> 0] = 96;b[E + 2 >> 1] = 0;break;
	              }
	            } else {
	              a[E >> 0] = 0;b[E + 2 >> 1] = b[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0;
	            }
	          } while (0);c[A >> 2] = 1 << (c[q >> 2] | 0) - (c[w >> 2] | 0);c[B >> 2] = 1 << c[v >> 2];c[s >> 2] = c[B >> 2];do {
	            c[B >> 2] = (c[B >> 2] | 0) - (c[A >> 2] | 0);m = (c[F >> 2] | 0) + (((c[z >> 2] | 0) >>> (c[w >> 2] | 0)) + (c[B >> 2] | 0) << 2) | 0;b[m >> 1] = b[E >> 1] | 0;b[m + 2 >> 1] = b[E + 2 >> 1] | 0;
	          } while ((c[B >> 2] | 0) != 0);c[A >> 2] = 1 << (c[q >> 2] | 0) - 1;while (1) {
	            d = c[A >> 2] | 0;if (!(c[z >> 2] & c[A >> 2])) break;c[A >> 2] = d >>> 1;
	          }if (d | 0) {
	            c[z >> 2] = c[z >> 2] & (c[A >> 2] | 0) - 1;c[z >> 2] = (c[z >> 2] | 0) + (c[A >> 2] | 0);
	          } else c[z >> 2] = 0;c[r >> 2] = (c[r >> 2] | 0) + 1;l = J + (c[q >> 2] << 1) | 0;m = (b[l >> 1] | 0) + -1 << 16 >> 16;b[l >> 1] = m;if (!(m & 65535)) {
	            if ((c[q >> 2] | 0) == (c[t >> 2] | 0)) break;c[q >> 2] = e[(c[M >> 2] | 0) + ((e[(c[p >> 2] | 0) + (c[r >> 2] << 1) >> 1] | 0) << 1) >> 1];
	          }if ((c[q >> 2] | 0) >>> 0 <= (c[u >> 2] | 0) >>> 0) continue;if ((c[z >> 2] & c[D >> 2] | 0) == (c[C >> 2] | 0)) continue;if (!(c[w >> 2] | 0)) c[w >> 2] = c[u >> 2];c[F >> 2] = (c[F >> 2] | 0) + (c[s >> 2] << 2);c[v >> 2] = (c[q >> 2] | 0) - (c[w >> 2] | 0);c[x >> 2] = 1 << c[v >> 2];while (1) {
	            if (((c[v >> 2] | 0) + (c[w >> 2] | 0) | 0) >>> 0 >= (c[t >> 2] | 0) >>> 0) break;c[x >> 2] = (c[x >> 2] | 0) - (e[J + ((c[v >> 2] | 0) + (c[w >> 2] | 0) << 1) >> 1] | 0);if ((c[x >> 2] | 0) <= 0) break;c[v >> 2] = (c[v >> 2] | 0) + 1;c[x >> 2] = c[x >> 2] << 1;
	          }c[y >> 2] = (c[y >> 2] | 0) + (1 << c[v >> 2]);if ((c[L >> 2] | 0) == 1 & (c[y >> 2] | 0) >>> 0 > 852) {
	            N = 70;break;
	          }if ((c[L >> 2] | 0) == 2 & (c[y >> 2] | 0) >>> 0 > 592) {
	            N = 70;break;
	          }c[C >> 2] = c[z >> 2] & c[D >> 2];a[(c[c[n >> 2] >> 2] | 0) + (c[C >> 2] << 2) >> 0] = c[v >> 2];a[(c[c[n >> 2] >> 2] | 0) + (c[C >> 2] << 2) + 1 >> 0] = c[u >> 2];b[(c[c[n >> 2] >> 2] | 0) + (c[C >> 2] << 2) + 2 >> 1] = ((c[F >> 2] | 0) - (c[c[n >> 2] >> 2] | 0) | 0) / 4 | 0;
	        }if ((N | 0) == 70) {
	          c[K >> 2] = 1;N = c[K >> 2] | 0;i = O;return N | 0;
	        }if (c[z >> 2] | 0) {
	          a[E >> 0] = 64;a[E + 1 >> 0] = (c[q >> 2] | 0) - (c[w >> 2] | 0);b[E + 2 >> 1] = 0;N = (c[F >> 2] | 0) + (c[z >> 2] << 2) | 0;b[N >> 1] = b[E >> 1] | 0;b[N + 2 >> 1] = b[E + 2 >> 1] | 0;
	        }N = c[n >> 2] | 0;c[N >> 2] = (c[N >> 2] | 0) + (c[y >> 2] << 2);c[c[o >> 2] >> 2] = c[u >> 2];c[K >> 2] = 0;N = c[K >> 2] | 0;i = O;return N | 0;
	      }c[K >> 2] = 1;N = c[K >> 2] | 0;i = O;return N | 0;
	    }function Gb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;e = i;i = i + 16 | 0;g = e + 4 | 0;f = e;c[e + 8 >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = bd(S(c[g >> 2] | 0, c[f >> 2] | 0) | 0) | 0;i = e;return d | 0;
	    }function Hb(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[d + 4 >> 2] = a;c[e >> 2] = b;cd(c[e >> 2] | 0);i = d;return;
	    }function Ib(a, b, e) {
	      a = a | 0;b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 32 | 0;f = m + 20 | 0;g = m + 16 | 0;h = m + 12 | 0;j = m + 8 | 0;k = m + 4 | 0;l = m;c[g >> 2] = a;c[h >> 2] = b;c[j >> 2] = e;c[k >> 2] = (c[g >> 2] | 0) >>> 16 & 65535;c[g >> 2] = c[g >> 2] & 65535;a = c[h >> 2] | 0;if ((c[j >> 2] | 0) == 1) {
	        c[g >> 2] = (c[g >> 2] | 0) + (d[a >> 0] | 0);if ((c[g >> 2] | 0) >>> 0 >= 65521) c[g >> 2] = (c[g >> 2] | 0) - 65521;c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);if ((c[k >> 2] | 0) >>> 0 >= 65521) c[k >> 2] = (c[k >> 2] | 0) - 65521;c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	      }if (!a) {
	        c[f >> 2] = 1;l = c[f >> 2] | 0;i = m;return l | 0;
	      }if ((c[j >> 2] | 0) >>> 0 < 16) {
	        while (1) {
	          l = c[j >> 2] | 0;c[j >> 2] = l + -1;if (!l) break;l = c[h >> 2] | 0;c[h >> 2] = l + 1;c[g >> 2] = (c[g >> 2] | 0) + (d[l >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);
	        }if ((c[g >> 2] | 0) >>> 0 >= 65521) c[g >> 2] = (c[g >> 2] | 0) - 65521;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	      }while (1) {
	        a = c[j >> 2] | 0;if ((c[j >> 2] | 0) >>> 0 < 5552) break;c[j >> 2] = a - 5552;c[l >> 2] = 347;do {
	          c[g >> 2] = (c[g >> 2] | 0) + (d[c[h >> 2] >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 2 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 3 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 4 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 5 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 6 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 7 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 8 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 9 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 10 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 11 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 12 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 13 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 14 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 15 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[h >> 2] = (c[h >> 2] | 0) + 16;e = (c[l >> 2] | 0) + -1 | 0;c[l >> 2] = e;
	        } while ((e | 0) != 0);c[g >> 2] = ((c[g >> 2] | 0) >>> 0) % 65521 | 0;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;
	      }if (a | 0) {
	        while (1) {
	          if ((c[j >> 2] | 0) >>> 0 < 16) break;c[j >> 2] = (c[j >> 2] | 0) - 16;c[g >> 2] = (c[g >> 2] | 0) + (d[c[h >> 2] >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 1 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 2 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 3 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 4 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 5 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 6 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 7 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 8 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 9 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 10 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 11 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 12 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 13 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 14 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[g >> 2] = (c[g >> 2] | 0) + (d[(c[h >> 2] | 0) + 15 >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);c[h >> 2] = (c[h >> 2] | 0) + 16;
	        }while (1) {
	          l = c[j >> 2] | 0;c[j >> 2] = l + -1;if (!l) break;l = c[h >> 2] | 0;c[h >> 2] = l + 1;c[g >> 2] = (c[g >> 2] | 0) + (d[l >> 0] | 0);c[k >> 2] = (c[k >> 2] | 0) + (c[g >> 2] | 0);
	        }c[g >> 2] = ((c[g >> 2] | 0) >>> 0) % 65521 | 0;c[k >> 2] = ((c[k >> 2] | 0) >>> 0) % 65521 | 0;
	      }c[f >> 2] = c[g >> 2] | c[k >> 2] << 16;l = c[f >> 2] | 0;i = m;return l | 0;
	    }function Jb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;e = i;i = i + 16 | 0;h = e + 8 | 0;g = e + 4 | 0;f = e;c[h >> 2] = a;c[g >> 2] = b;c[f >> 2] = d;d = Ib(c[h >> 2] | 0, c[g >> 2] | 0, c[f >> 2] | 0) | 0;i = e;return d | 0;
	    }function Kb(f, g) {
	      f = f | 0;g = g | 0;var h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0;E = i;i = i + 96 | 0;A = E + 84 | 0;F = E + 80 | 0;B = E + 76 | 0;v = E + 72 | 0;w = E + 68 | 0;C = E + 64 | 0;x = E + 60 | 0;D = E + 56 | 0;h = E + 52 | 0;j = E + 48 | 0;k = E + 44 | 0;l = E + 40 | 0;y = E + 36 | 0;z = E + 32 | 0;m = E + 28 | 0;n = E + 24 | 0;o = E + 20 | 0;p = E + 16 | 0;q = E + 88 | 0;r = E + 12 | 0;s = E + 8 | 0;t = E + 4 | 0;u = E;c[A >> 2] = f;c[F >> 2] = g;c[B >> 2] = c[(c[A >> 2] | 0) + 28 >> 2];c[v >> 2] = c[c[A >> 2] >> 2];c[w >> 2] = (c[v >> 2] | 0) + ((c[(c[A >> 2] | 0) + 4 >> 2] | 0) - 5);c[C >> 2] = c[(c[A >> 2] | 0) + 12 >> 2];c[x >> 2] = (c[C >> 2] | 0) + (0 - ((c[F >> 2] | 0) - (c[(c[A >> 2] | 0) + 16 >> 2] | 0)));c[D >> 2] = (c[C >> 2] | 0) + ((c[(c[A >> 2] | 0) + 16 >> 2] | 0) - 257);c[h >> 2] = c[(c[B >> 2] | 0) + 44 >> 2];c[j >> 2] = c[(c[B >> 2] | 0) + 48 >> 2];c[k >> 2] = c[(c[B >> 2] | 0) + 52 >> 2];c[l >> 2] = c[(c[B >> 2] | 0) + 56 >> 2];c[y >> 2] = c[(c[B >> 2] | 0) + 60 >> 2];c[z >> 2] = c[(c[B >> 2] | 0) + 64 >> 2];c[m >> 2] = c[(c[B >> 2] | 0) + 80 >> 2];c[n >> 2] = c[(c[B >> 2] | 0) + 84 >> 2];c[o >> 2] = (1 << c[(c[B >> 2] | 0) + 88 >> 2]) - 1;c[p >> 2] = (1 << c[(c[B >> 2] | 0) + 92 >> 2]) - 1;a: do {
	        if ((c[z >> 2] | 0) >>> 0 < 15) {
	          F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;
	        }F = (c[m >> 2] | 0) + ((c[y >> 2] & c[o >> 2]) << 2) | 0;b[q >> 1] = b[F >> 1] | 0;b[q + 2 >> 1] = b[F + 2 >> 1] | 0;while (1) {
	          c[r >> 2] = d[q + 1 >> 0];c[y >> 2] = (c[y >> 2] | 0) >>> (c[r >> 2] | 0);c[z >> 2] = (c[z >> 2] | 0) - (c[r >> 2] | 0);c[r >> 2] = d[q >> 0];if (!(c[r >> 2] | 0)) {
	            f = 6;break;
	          }if (c[r >> 2] & 16 | 0) {
	            f = 8;break;
	          }if (c[r >> 2] & 64 | 0) {
	            f = 55;break a;
	          }F = (c[m >> 2] | 0) + ((e[q + 2 >> 1] | 0) + (c[y >> 2] & (1 << c[r >> 2]) - 1) << 2) | 0;b[q >> 1] = b[F >> 1] | 0;b[q + 2 >> 1] = b[F + 2 >> 1] | 0;
	        }do {
	          if ((f | 0) == 6) {
	            f = 0;g = b[q + 2 >> 1] & 255;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;
	          } else if ((f | 0) == 8) {
	            f = 0;c[s >> 2] = e[q + 2 >> 1];c[r >> 2] = c[r >> 2] & 15;if (c[r >> 2] | 0) {
	              if ((c[z >> 2] | 0) >>> 0 < (c[r >> 2] | 0) >>> 0) {
	                F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;
	              }c[s >> 2] = (c[s >> 2] | 0) + (c[y >> 2] & (1 << c[r >> 2]) - 1);c[y >> 2] = (c[y >> 2] | 0) >>> (c[r >> 2] | 0);c[z >> 2] = (c[z >> 2] | 0) - (c[r >> 2] | 0);
	            }if ((c[z >> 2] | 0) >>> 0 < 15) {
	              F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;
	            }F = (c[n >> 2] | 0) + ((c[y >> 2] & c[p >> 2]) << 2) | 0;b[q >> 1] = b[F >> 1] | 0;b[q + 2 >> 1] = b[F + 2 >> 1] | 0;while (1) {
	              c[r >> 2] = d[q + 1 >> 0];c[y >> 2] = (c[y >> 2] | 0) >>> (c[r >> 2] | 0);c[z >> 2] = (c[z >> 2] | 0) - (c[r >> 2] | 0);c[r >> 2] = d[q >> 0];if (c[r >> 2] & 16 | 0) break;if (c[r >> 2] & 64 | 0) {
	                f = 52;break a;
	              }F = (c[n >> 2] | 0) + ((e[q + 2 >> 1] | 0) + (c[y >> 2] & (1 << c[r >> 2]) - 1) << 2) | 0;b[q >> 1] = b[F >> 1] | 0;b[q + 2 >> 1] = b[F + 2 >> 1] | 0;
	            }c[t >> 2] = e[q + 2 >> 1];c[r >> 2] = c[r >> 2] & 15;if ((c[z >> 2] | 0) >>> 0 < (c[r >> 2] | 0) >>> 0 ? (F = c[v >> 2] | 0, c[v >> 2] = F + 1, c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]), c[z >> 2] = (c[z >> 2] | 0) + 8, (c[z >> 2] | 0) >>> 0 < (c[r >> 2] | 0) >>> 0) : 0) {
	              F = c[v >> 2] | 0;c[v >> 2] = F + 1;c[y >> 2] = (c[y >> 2] | 0) + ((d[F >> 0] | 0) << c[z >> 2]);c[z >> 2] = (c[z >> 2] | 0) + 8;
	            }c[t >> 2] = (c[t >> 2] | 0) + (c[y >> 2] & (1 << c[r >> 2]) - 1);c[y >> 2] = (c[y >> 2] | 0) >>> (c[r >> 2] | 0);c[z >> 2] = (c[z >> 2] | 0) - (c[r >> 2] | 0);c[r >> 2] = (c[C >> 2] | 0) - (c[x >> 2] | 0);if ((c[t >> 2] | 0) >>> 0 <= (c[r >> 2] | 0) >>> 0) {
	              c[u >> 2] = (c[C >> 2] | 0) + (0 - (c[t >> 2] | 0));do {
	                g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = c[u >> 2] | 0;c[u >> 2] = F + 1;F = a[F >> 0] | 0;g = c[C >> 2] | 0;c[C >> 2] = g + 1;a[g >> 0] = F;g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;c[s >> 2] = (c[s >> 2] | 0) - 3;
	              } while ((c[s >> 2] | 0) >>> 0 > 2);if (!(c[s >> 2] | 0)) break;g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;if ((c[s >> 2] | 0) >>> 0 <= 1) break;g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;break;
	            }c[r >> 2] = (c[t >> 2] | 0) - (c[r >> 2] | 0);if ((c[r >> 2] | 0) >>> 0 > (c[j >> 2] | 0) >>> 0 ? c[(c[B >> 2] | 0) + 7108 >> 2] | 0 : 0) {
	              f = 22;break a;
	            }c[u >> 2] = c[l >> 2];do {
	              if (!(c[k >> 2] | 0)) {
	                c[u >> 2] = (c[u >> 2] | 0) + ((c[h >> 2] | 0) - (c[r >> 2] | 0));if ((c[r >> 2] | 0) >>> 0 < (c[s >> 2] | 0) >>> 0) {
	                  c[s >> 2] = (c[s >> 2] | 0) - (c[r >> 2] | 0);do {
	                    g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = (c[r >> 2] | 0) + -1 | 0;c[r >> 2] = F;
	                  } while ((F | 0) != 0);c[u >> 2] = (c[C >> 2] | 0) + (0 - (c[t >> 2] | 0));
	                }
	              } else {
	                if ((c[k >> 2] | 0) >>> 0 >= (c[r >> 2] | 0) >>> 0) {
	                  c[u >> 2] = (c[u >> 2] | 0) + ((c[k >> 2] | 0) - (c[r >> 2] | 0));if ((c[r >> 2] | 0) >>> 0 >= (c[s >> 2] | 0) >>> 0) break;c[s >> 2] = (c[s >> 2] | 0) - (c[r >> 2] | 0);do {
	                    g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = (c[r >> 2] | 0) + -1 | 0;c[r >> 2] = F;
	                  } while ((F | 0) != 0);c[u >> 2] = (c[C >> 2] | 0) + (0 - (c[t >> 2] | 0));break;
	                }c[u >> 2] = (c[u >> 2] | 0) + ((c[h >> 2] | 0) + (c[k >> 2] | 0) - (c[r >> 2] | 0));c[r >> 2] = (c[r >> 2] | 0) - (c[k >> 2] | 0);if ((c[r >> 2] | 0) >>> 0 < (c[s >> 2] | 0) >>> 0) {
	                  c[s >> 2] = (c[s >> 2] | 0) - (c[r >> 2] | 0);do {
	                    g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = (c[r >> 2] | 0) + -1 | 0;c[r >> 2] = F;
	                  } while ((F | 0) != 0);c[u >> 2] = c[l >> 2];if ((c[k >> 2] | 0) >>> 0 < (c[s >> 2] | 0) >>> 0) {
	                    c[r >> 2] = c[k >> 2];c[s >> 2] = (c[s >> 2] | 0) - (c[r >> 2] | 0);do {
	                      g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = (c[r >> 2] | 0) + -1 | 0;c[r >> 2] = F;
	                    } while ((F | 0) != 0);c[u >> 2] = (c[C >> 2] | 0) + (0 - (c[t >> 2] | 0));
	                  }
	                }
	              }
	            } while (0);while (1) {
	              if ((c[s >> 2] | 0) >>> 0 <= 2) break;g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;F = c[u >> 2] | 0;c[u >> 2] = F + 1;F = a[F >> 0] | 0;g = c[C >> 2] | 0;c[C >> 2] = g + 1;a[g >> 0] = F;g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;c[s >> 2] = (c[s >> 2] | 0) - 3;
	            }if (c[s >> 2] | 0 ? (g = c[u >> 2] | 0, c[u >> 2] = g + 1, g = a[g >> 0] | 0, F = c[C >> 2] | 0, c[C >> 2] = F + 1, a[F >> 0] = g, (c[s >> 2] | 0) >>> 0 > 1) : 0) {
	              g = c[u >> 2] | 0;c[u >> 2] = g + 1;g = a[g >> 0] | 0;F = c[C >> 2] | 0;c[C >> 2] = F + 1;a[F >> 0] = g;
	            }
	          }
	        } while (0);if ((c[v >> 2] | 0) >>> 0 >= (c[w >> 2] | 0) >>> 0) break;
	      } while ((c[C >> 2] | 0) >>> 0 < (c[D >> 2] | 0) >>> 0);do {
	        if ((f | 0) == 22) {
	          c[(c[A >> 2] | 0) + 24 >> 2] = 12819;c[(c[B >> 2] | 0) + 4 >> 2] = 16209;
	        } else if ((f | 0) == 52) {
	          c[(c[A >> 2] | 0) + 24 >> 2] = 12849;c[(c[B >> 2] | 0) + 4 >> 2] = 16209;
	        } else if ((f | 0) == 55) if (c[r >> 2] & 32 | 0) {
	          c[(c[B >> 2] | 0) + 4 >> 2] = 16191;break;
	        } else {
	          c[(c[A >> 2] | 0) + 24 >> 2] = 12871;c[(c[B >> 2] | 0) + 4 >> 2] = 16209;break;
	        }
	      } while (0);c[s >> 2] = (c[z >> 2] | 0) >>> 3;c[v >> 2] = (c[v >> 2] | 0) + (0 - (c[s >> 2] | 0));c[z >> 2] = (c[z >> 2] | 0) - (c[s >> 2] << 3);c[y >> 2] = c[y >> 2] & (1 << c[z >> 2]) - 1;c[c[A >> 2] >> 2] = c[v >> 2];c[(c[A >> 2] | 0) + 12 >> 2] = c[C >> 2];if ((c[v >> 2] | 0) >>> 0 < (c[w >> 2] | 0) >>> 0) f = 5 + ((c[w >> 2] | 0) - (c[v >> 2] | 0)) | 0;else f = 5 - ((c[v >> 2] | 0) - (c[w >> 2] | 0)) | 0;c[(c[A >> 2] | 0) + 4 >> 2] = f;if ((c[C >> 2] | 0) >>> 0 < (c[D >> 2] | 0) >>> 0) {
	        D = 257 + ((c[D >> 2] | 0) - (c[C >> 2] | 0)) | 0;F = c[A >> 2] | 0;F = F + 16 | 0;c[F >> 2] = D;F = c[y >> 2] | 0;D = c[B >> 2] | 0;D = D + 60 | 0;c[D >> 2] = F;D = c[z >> 2] | 0;F = c[B >> 2] | 0;F = F + 64 | 0;c[F >> 2] = D;i = E;return;
	      } else {
	        D = 257 - ((c[C >> 2] | 0) - (c[D >> 2] | 0)) | 0;F = c[A >> 2] | 0;F = F + 16 | 0;c[F >> 2] = D;F = c[y >> 2] | 0;D = c[B >> 2] | 0;D = D + 60 | 0;c[D >> 2] = F;D = c[z >> 2] | 0;F = c[B >> 2] | 0;F = F + 64 | 0;c[F >> 2] = D;i = E;return;
	      }
	    }function Lb(a) {
	      a = a | 0;var b = 0,
	          d = 0;b = i;i = i + 16 | 0;d = b;c[d >> 2] = c[a + 60 >> 2];a = Ob(na(6, d | 0) | 0) | 0;i = b;return a | 0;
	    }function Mb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;g = i;i = i + 80 | 0;f = g;c[b + 36 >> 2] = 6;if ((c[b >> 2] & 64 | 0) == 0 ? (c[f >> 2] = c[b + 60 >> 2], c[f + 4 >> 2] = 21505, c[f + 8 >> 2] = g + 12, ua(54, f | 0) | 0) : 0) a[b + 75 >> 0] = -1;f = Qb(b, d, e) | 0;i = g;return f | 0;
	    }function Nb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;f = i;i = i + 32 | 0;g = f;e = f + 20 | 0;c[g >> 2] = c[a + 60 >> 2];c[g + 4 >> 2] = 0;c[g + 8 >> 2] = b;c[g + 12 >> 2] = e;c[g + 16 >> 2] = d;if ((Ob(qa(140, g | 0) | 0) | 0) < 0) {
	        c[e >> 2] = -1;a = -1;
	      } else a = c[e >> 2] | 0;i = f;return a | 0;
	    }function Ob(a) {
	      a = a | 0;if (a >>> 0 > 4294963200) {
	        c[(Pb() | 0) >> 2] = 0 - a;a = -1;
	      }return a | 0;
	    }function Pb() {
	      var a = 0;if (!(c[3901] | 0)) a = 15648;else a = c[(ud() | 0) + 64 >> 2] | 0;return a | 0;
	    }function Qb(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;q = i;i = i + 48 | 0;n = q + 16 | 0;m = q;j = q + 32 | 0;o = a + 28 | 0;h = c[o >> 2] | 0;c[j >> 2] = h;p = a + 20 | 0;h = (c[p >> 2] | 0) - h | 0;c[j + 4 >> 2] = h;c[j + 8 >> 2] = b;c[j + 12 >> 2] = d;k = a + 60 | 0;l = a + 44 | 0;g = 2;b = h + d | 0;while (1) {
	        if (!(c[3901] | 0)) {
	          c[n >> 2] = c[k >> 2];c[n + 4 >> 2] = j;c[n + 8 >> 2] = g;f = Ob(za(146, n | 0) | 0) | 0;
	        } else {
	          oa(1, a | 0);c[m >> 2] = c[k >> 2];c[m + 4 >> 2] = j;c[m + 8 >> 2] = g;f = Ob(za(146, m | 0) | 0) | 0;ga(0);
	        }if ((b | 0) == (f | 0)) {
	          b = 6;break;
	        }if ((f | 0) < 0) {
	          b = 8;break;
	        }b = b - f | 0;e = c[j + 4 >> 2] | 0;if (f >>> 0 <= e >>> 0) {
	          if ((g | 0) == 2) {
	            c[o >> 2] = (c[o >> 2] | 0) + f;g = 2;h = j;
	          } else h = j;
	        } else {
	          h = c[l >> 2] | 0;c[o >> 2] = h;c[p >> 2] = h;f = f - e | 0;g = g + -1 | 0;h = j + 8 | 0;e = c[j + 12 >> 2] | 0;
	        }c[h >> 2] = (c[h >> 2] | 0) + f;c[h + 4 >> 2] = e - f;j = h;
	      }if ((b | 0) == 6) {
	        n = c[l >> 2] | 0;c[a + 16 >> 2] = n + (c[a + 48 >> 2] | 0);a = n;c[o >> 2] = a;c[p >> 2] = a;
	      } else if ((b | 0) == 8) {
	        c[a + 16 >> 2] = 0;c[o >> 2] = 0;c[p >> 2] = 0;c[a >> 2] = c[a >> 2] | 32;if ((g | 0) == 2) d = 0;else d = d - (c[j + 4 >> 2] | 0) | 0;
	      }i = q;return d | 0;
	    }function Rb(a) {
	      a = a | 0;if (!(c[a + 68 >> 2] | 0)) Sb(a);return;
	    }function Sb(a) {
	      a = a | 0;return;
	    }function Tb(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0;m = i;i = i + 48 | 0;h = m + 16 | 0;g = m;f = m + 32 | 0;c[f >> 2] = d;j = f + 4 | 0;l = b + 48 | 0;n = c[l >> 2] | 0;c[j >> 2] = e - ((n | 0) != 0 & 1);k = b + 44 | 0;c[f + 8 >> 2] = c[k >> 2];c[f + 12 >> 2] = n;if (!(c[3901] | 0)) {
	        c[h >> 2] = c[b + 60 >> 2];c[h + 4 >> 2] = f;c[h + 8 >> 2] = 2;f = Ob(la(145, h | 0) | 0) | 0;
	      } else {
	        oa(2, b | 0);c[g >> 2] = c[b + 60 >> 2];c[g + 4 >> 2] = f;c[g + 8 >> 2] = 2;f = Ob(la(145, g | 0) | 0) | 0;ga(0);
	      }if ((f | 0) >= 1) {
	        j = c[j >> 2] | 0;if (f >>> 0 > j >>> 0) {
	          g = c[k >> 2] | 0;h = b + 4 | 0;c[h >> 2] = g;c[b + 8 >> 2] = g + (f - j);if (!(c[l >> 2] | 0)) f = e;else {
	            c[h >> 2] = g + 1;a[d + (e + -1) >> 0] = a[g >> 0] | 0;f = e;
	          }
	        }
	      } else {
	        c[b >> 2] = c[b >> 2] | f & 48 ^ 16;c[b + 8 >> 2] = 0;c[b + 4 >> 2] = 0;
	      }i = m;return f | 0;
	    }function Ub(a) {
	      a = a | 0;if (!(c[a + 68 >> 2] | 0)) Sb(a);return;
	    }function Vb(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0;c[a + 104 >> 2] = b;d = c[a + 8 >> 2] | 0;e = c[a + 4 >> 2] | 0;f = d - e | 0;c[a + 108 >> 2] = f;if ((b | 0) != 0 & (f | 0) > (b | 0)) c[a + 100 >> 2] = e + b;else c[a + 100 >> 2] = d;return;
	    }function Wb(b) {
	      b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0;f = b + 104 | 0;i = c[f >> 2] | 0;if ((i | 0) != 0 ? (c[b + 108 >> 2] | 0) >= (i | 0) : 0) j = 4;else {
	        e = Xb(b) | 0;if ((e | 0) >= 0) {
	          f = c[f >> 2] | 0;i = c[b + 8 >> 2] | 0;if (f) {
	            h = c[b + 4 >> 2] | 0;f = f - (c[b + 108 >> 2] | 0) | 0;g = i;if ((i - h | 0) < (f | 0)) j = 9;else c[b + 100 >> 2] = h + (f + -1);
	          } else {
	            g = i;j = 9;
	          }if ((j | 0) == 9) c[b + 100 >> 2] = i;f = b + 4 | 0;if (!g) f = c[f >> 2] | 0;else {
	            f = c[f >> 2] | 0;b = b + 108 | 0;c[b >> 2] = g + 1 - f + (c[b >> 2] | 0);
	          }f = f + -1 | 0;if ((d[f >> 0] | 0 | 0) != (e | 0)) a[f >> 0] = e;
	        } else j = 4;
	      }if ((j | 0) == 4) {
	        c[b + 100 >> 2] = 0;e = -1;
	      }return e | 0;
	    }function Xb(a) {
	      a = a | 0;var b = 0,
	          e = 0;e = i;i = i + 16 | 0;b = e;if ((c[a + 8 >> 2] | 0) == 0 ? (Yb(a) | 0) != 0 : 0) a = -1;else if ((Ca[c[a + 32 >> 2] & 7](a, b, 1) | 0) == 1) a = d[b >> 0] | 0;else a = -1;i = e;return a | 0;
	    }function Yb(b) {
	      b = b | 0;var d = 0,
	          e = 0;d = b + 74 | 0;e = a[d >> 0] | 0;a[d >> 0] = e + 255 | e;d = b + 20 | 0;e = b + 44 | 0;if ((c[d >> 2] | 0) >>> 0 > (c[e >> 2] | 0) >>> 0) Ca[c[b + 36 >> 2] & 7](b, 0, 0) | 0;c[b + 16 >> 2] = 0;c[b + 28 >> 2] = 0;c[d >> 2] = 0;d = c[b >> 2] | 0;if (d & 20) {
	        if (!(d & 4)) d = -1;else {
	          c[b >> 2] = d | 32;d = -1;
	        }
	      } else {
	        d = c[e >> 2] | 0;c[b + 8 >> 2] = d;c[b + 4 >> 2] = d;d = 0;
	      }return d | 0;
	    }
	    function Zb(b, e, f) {
	      b = b | 0;e = e | 0;f = f | 0;var g = 0.0,
	          h = 0,
	          j = 0.0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0.0,
	          q = 0.0,
	          r = 0,
	          u = 0.0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0.0;M = i;i = i + 512 | 0;I = M;switch (e | 0) {case 0:
	          {
	            J = -149;L = 24;A = 4;break;
	          }case 1:
	          {
	            J = -1074;L = 53;A = 4;break;
	          }case 2:
	          {
	            J = -1074;L = 53;A = 4;break;
	          }default:
	          g = 0.0;}a: do {
	        if ((A | 0) == 4) {
	          C = b + 4 | 0;B = b + 100 | 0;do {
	            e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	              c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	            } else e = Wb(b) | 0;
	          } while ((_b(e) | 0) != 0);b: do {
	            switch (e | 0) {case 43:case 45:
	                {
	                  h = 1 - (((e | 0) == 45 & 1) << 1) | 0;e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                    c[C >> 2] = e + 1;k = d[e >> 0] | 0;K = h;break b;
	                  } else {
	                    k = Wb(b) | 0;K = h;break b;
	                  }
	                }default:
	                {
	                  k = e;K = 1;
	                }}
	          } while (0);e = 0;do {
	            if ((k | 32 | 0) != (a[12899 + e >> 0] | 0)) break;do {
	              if (e >>> 0 < 7) {
	                h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                  c[C >> 2] = h + 1;k = d[h >> 0] | 0;break;
	                } else {
	                  k = Wb(b) | 0;break;
	                }
	              }
	            } while (0);e = e + 1 | 0;
	          } while (e >>> 0 < 8);c: do {
	            switch (e | 0) {case 8:
	                break;case 3:
	                {
	                  A = 23;break;
	                }default:
	                {
	                  l = (f | 0) != 0;if (l & e >>> 0 > 3) if ((e | 0) == 8) break c;else {
	                    A = 23;break c;
	                  }d: do {
	                    if (!e) {
	                      e = 0;do {
	                        if ((k | 32 | 0) != (a[13698 + e >> 0] | 0)) break d;do {
	                          if (e >>> 0 < 2) {
	                            h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = h + 1;k = d[h >> 0] | 0;break;
	                            } else {
	                              k = Wb(b) | 0;break;
	                            }
	                          }
	                        } while (0);e = e + 1 | 0;
	                      } while (e >>> 0 < 3);
	                    }
	                  } while (0);switch (e | 0) {case 3:
	                      {
	                        e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                          c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                        } else e = Wb(b) | 0;if ((e | 0) == 40) e = 1;else {
	                          if (!(c[B >> 2] | 0)) {
	                            g = s;break a;
	                          }c[C >> 2] = (c[C >> 2] | 0) + -1;g = s;break a;
	                        }while (1) {
	                          h = c[C >> 2] | 0;if (h >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = h + 1;h = d[h >> 0] | 0;
	                          } else h = Wb(b) | 0;if (!((h + -48 | 0) >>> 0 < 10 | (h + -65 | 0) >>> 0 < 26) ? !((h | 0) == 95 | (h + -97 | 0) >>> 0 < 26) : 0) break;e = e + 1 | 0;
	                        }if ((h | 0) == 41) {
	                          g = s;break a;
	                        }h = (c[B >> 2] | 0) == 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if (!l) {
	                          c[(Pb() | 0) >> 2] = 22;Vb(b, 0);g = 0.0;break a;
	                        }if (!e) {
	                          g = s;break a;
	                        }while (1) {
	                          e = e + -1 | 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if (!e) {
	                            g = s;break a;
	                          }
	                        }
	                      }case 0:
	                      {
	                        do {
	                          if ((k | 0) == 48) {
	                            e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                            } else e = Wb(b) | 0;if ((e | 32 | 0) != 120) {
	                              if (!(c[B >> 2] | 0)) {
	                                e = 48;break;
	                              }c[C >> 2] = (c[C >> 2] | 0) + -1;e = 48;break;
	                            }e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                              c[C >> 2] = e + 1;h = d[e >> 0] | 0;k = 0;
	                            } else {
	                              h = Wb(b) | 0;k = 0;
	                            }e: while (1) {
	                              switch (h | 0) {case 46:
	                                  {
	                                    A = 74;break e;
	                                  }case 48:
	                                  break;default:
	                                  {
	                                    v = 0;m = 0;p = 1.0;g = 0.0;e = 0;l = h;w = k;y = 0;x = 0;k = 0;h = 0;break e;
	                                  }}e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;h = d[e >> 0] | 0;k = 1;continue;
	                              } else {
	                                h = Wb(b) | 0;k = 1;continue;
	                              }
	                            }if ((A | 0) == 74) {
	                              e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;h = d[e >> 0] | 0;
	                              } else h = Wb(b) | 0;if ((h | 0) == 48) {
	                                k = 0;h = 0;do {
	                                  e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                    c[C >> 2] = e + 1;l = d[e >> 0] | 0;
	                                  } else l = Wb(b) | 0;k = id(k | 0, h | 0, -1, -1) | 0;h = D;
	                                } while ((l | 0) == 48);v = 1;m = 0;p = 1.0;g = 0.0;e = 0;w = 1;y = 0;x = 0;
	                              } else {
	                                v = 1;m = 0;p = 1.0;g = 0.0;e = 0;l = h;w = k;y = 0;x = 0;k = 0;h = 0;
	                              }
	                            }while (1) {
	                              o = l + -48 | 0;n = l | 32;if (o >>> 0 >= 10) {
	                                r = (l | 0) == 46;if (!(r | (n + -97 | 0) >>> 0 < 6)) {
	                                  n = l;break;
	                                }if (r) {
	                                  if (!v) {
	                                    v = 1;j = p;r = w;k = x;h = y;o = x;n = y;
	                                  } else {
	                                    n = 46;break;
	                                  }
	                                } else A = 86;
	                              } else A = 86;if ((A | 0) == 86) {
	                                A = 0;l = (l | 0) > 57 ? n + -87 | 0 : o;do {
	                                  if (!((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 8)) {
	                                    if ((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 14) {
	                                      u = p * .0625;j = u;g = g + u * +(l | 0);break;
	                                    }if ((m | 0) != 0 | (l | 0) == 0) j = p;else {
	                                      m = 1;j = p;g = g + p * .5;
	                                    }
	                                  } else {
	                                    j = p;e = l + (e << 4) | 0;
	                                  }
	                                } while (0);o = id(x | 0, y | 0, 1, 0) | 0;r = 1;n = D;
	                              }l = c[C >> 2] | 0;if (l >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = l + 1;p = j;l = d[l >> 0] | 0;w = r;y = n;x = o;continue;
	                              } else {
	                                p = j;l = Wb(b) | 0;w = r;y = n;x = o;continue;
	                              }
	                            }if (!w) {
	                              e = (c[B >> 2] | 0) == 0;if (!e) c[C >> 2] = (c[C >> 2] | 0) + -1;if (f) {
	                                if (!e ? (z = c[C >> 2] | 0, c[C >> 2] = z + -1, v | 0) : 0) c[C >> 2] = z + -2;
	                              } else Vb(b, 0);g = +(K | 0) * 0.0;break a;
	                            }m = (v | 0) == 0;o = m ? x : k;m = m ? y : h;if ((y | 0) < 0 | (y | 0) == 0 & x >>> 0 < 8) {
	                              k = x;h = y;do {
	                                e = e << 4;k = id(k | 0, h | 0, 1, 0) | 0;h = D;
	                              } while ((h | 0) < 0 | (h | 0) == 0 & k >>> 0 < 8);l = e;
	                            } else l = e;if ((n | 32 | 0) == 112) {
	                              h = $b(b, f) | 0;e = D;if ((h | 0) == 0 & (e | 0) == -2147483648) {
	                                if (!f) {
	                                  Vb(b, 0);g = 0.0;break a;
	                                }if (!(c[B >> 2] | 0)) {
	                                  h = 0;e = 0;
	                                } else {
	                                  c[C >> 2] = (c[C >> 2] | 0) + -1;h = 0;e = 0;
	                                }
	                              }
	                            } else if (!(c[B >> 2] | 0)) {
	                              h = 0;e = 0;
	                            } else {
	                              c[C >> 2] = (c[C >> 2] | 0) + -1;h = 0;e = 0;
	                            }k = ld(o | 0, m | 0, 2) | 0;k = id(k | 0, D | 0, -32, -1) | 0;k = id(k | 0, D | 0, h | 0, e | 0) | 0;e = D;if (!l) {
	                              g = +(K | 0) * 0.0;break a;
	                            }if ((e | 0) > 0 | (e | 0) == 0 & k >>> 0 > (0 - J | 0) >>> 0) {
	                              c[(Pb() | 0) >> 2] = 34;g = +(K | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;break a;
	                            }I = J + -106 | 0;H = ((I | 0) < 0) << 31 >> 31;if ((e | 0) < (H | 0) | (e | 0) == (H | 0) & k >>> 0 < I >>> 0) {
	                              c[(Pb() | 0) >> 2] = 34;g = +(K | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;break a;
	                            }if ((l | 0) > -1) {
	                              h = l;do {
	                                H = !(g >= .5);I = H & 1 | h << 1;h = I ^ 1;g = g + (H ? g : g + -1.0);k = id(k | 0, e | 0, -1, -1) | 0;e = D;
	                              } while ((I | 0) > -1);p = g;l = h;
	                            } else p = g;J = hd(32, 0, J | 0, ((J | 0) < 0) << 31 >> 31 | 0) | 0;e = id(k | 0, e | 0, J | 0, D | 0) | 0;J = D;if (0 > (J | 0) | 0 == (J | 0) & L >>> 0 > e >>> 0) {
	                              if ((e | 0) < 0) {
	                                h = 0;e = 84;A = 127;
	                              } else A = 125;
	                            } else {
	                              e = L;A = 125;
	                            }if ((A | 0) == 125) if ((e | 0) < 53) {
	                              h = e;e = 84 - e | 0;A = 127;
	                            } else {
	                              j = 0.0;g = +(K | 0);
	                            }if ((A | 0) == 127) {
	                              g = +(K | 0);j = +bc(+ac(1.0, e), g);e = h;
	                            }L = (l & 1 | 0) == 0 & (p != 0.0 & (e | 0) < 32);g = g * (L ? 0.0 : p) + (j + g * +(((L & 1) + l | 0) >>> 0)) - j;if (!(g != 0.0)) c[(Pb() | 0) >> 2] = 34;g = +cc(g, k);break a;
	                          } else e = k;
	                        } while (0);E = J + L | 0;H = 0 - E | 0;h = 0;f: while (1) {
	                          switch (e | 0) {case 46:
	                              {
	                                A = 138;break f;
	                              }case 48:
	                              break;default:
	                              {
	                                n = 0;l = h;o = 0;m = 0;break f;
	                              }}e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = e + 1;e = d[e >> 0] | 0;h = 1;continue;
	                          } else {
	                            e = Wb(b) | 0;h = 1;continue;
	                          }
	                        }if ((A | 0) == 138) {
	                          e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                            c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                          } else e = Wb(b) | 0;if ((e | 0) == 48) {
	                            h = 0;e = 0;while (1) {
	                              h = id(h | 0, e | 0, -1, -1) | 0;m = D;e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                              } else e = Wb(b) | 0;if ((e | 0) == 48) e = m;else {
	                                n = 1;l = 1;o = h;break;
	                              }
	                            }
	                          } else {
	                            n = 1;l = h;o = 0;m = 0;
	                          }
	                        }c[I >> 2] = 0;r = e + -48 | 0;k = (e | 0) == 46;g: do {
	                          if (k | r >>> 0 < 10) {
	                            A = I + 496 | 0;w = 0;h = 0;z = 0;x = n;y = l;n = 0;l = 0;h: while (1) {
	                              do {
	                                if (k) {
	                                  if (!x) {
	                                    x = 1;v = z;o = n;m = l;
	                                  } else break h;
	                                } else {
	                                  n = id(n | 0, l | 0, 1, 0) | 0;l = D;v = (e | 0) != 48;if ((h | 0) >= 125) {
	                                    if (!v) {
	                                      v = z;break;
	                                    }c[A >> 2] = c[A >> 2] | 1;v = z;break;
	                                  }k = I + (h << 2) | 0;if (!w) e = r;else e = e + -48 + ((c[k >> 2] | 0) * 10 | 0) | 0;c[k >> 2] = e;w = w + 1 | 0;y = (w | 0) == 9;w = y ? 0 : w;h = (y & 1) + h | 0;v = v ? n : z;y = 1;
	                                }
	                              } while (0);e = c[C >> 2] | 0;if (e >>> 0 < (c[B >> 2] | 0) >>> 0) {
	                                c[C >> 2] = e + 1;e = d[e >> 0] | 0;
	                              } else e = Wb(b) | 0;r = e + -48 | 0;k = (e | 0) == 46;if (!(k | r >>> 0 < 10)) {
	                                r = v;v = x;k = y;A = 161;break g;
	                              } else z = v;
	                            }e = w;r = z;k = (y | 0) != 0;A = 169;
	                          } else {
	                            w = 0;h = 0;r = 0;v = n;k = l;n = 0;l = 0;A = 161;
	                          }
	                        } while (0);do {
	                          if ((A | 0) == 161) {
	                            z = (v | 0) == 0;o = z ? n : o;m = z ? l : m;k = (k | 0) != 0;if (!(k & (e | 32 | 0) == 101)) if ((e | 0) > -1) {
	                              e = w;A = 169;break;
	                            } else {
	                              e = w;A = 171;break;
	                            }k = $b(b, f) | 0;e = D;if ((k | 0) == 0 & (e | 0) == -2147483648) {
	                              if (!f) {
	                                Vb(b, 0);g = 0.0;break;
	                              }if (!(c[B >> 2] | 0)) {
	                                k = 0;e = 0;
	                              } else {
	                                c[C >> 2] = (c[C >> 2] | 0) + -1;k = 0;e = 0;
	                              }
	                            }y = id(k | 0, e | 0, o | 0, m | 0) | 0;e = w;m = D;A = 173;
	                          }
	                        } while (0);if ((A | 0) == 169) if (c[B >> 2] | 0) {
	                          c[C >> 2] = (c[C >> 2] | 0) + -1;if (k) {
	                            y = o;A = 173;
	                          } else A = 172;
	                        } else A = 171;if ((A | 0) == 171) if (k) {
	                          y = o;A = 173;
	                        } else A = 172;do {
	                          if ((A | 0) == 172) {
	                            c[(Pb() | 0) >> 2] = 22;Vb(b, 0);g = 0.0;
	                          } else if ((A | 0) == 173) {
	                            k = c[I >> 2] | 0;if (!k) {
	                              g = +(K | 0) * 0.0;break;
	                            }if (((l | 0) < 0 | (l | 0) == 0 & n >>> 0 < 10) & ((y | 0) == (n | 0) & (m | 0) == (l | 0)) ? L >>> 0 > 30 | (k >>> L | 0) == 0 : 0) {
	                              g = +(K | 0) * +(k >>> 0);break;
	                            }b = (J | 0) / -2 | 0;C = ((b | 0) < 0) << 31 >> 31;if ((m | 0) > (C | 0) | (m | 0) == (C | 0) & y >>> 0 > b >>> 0) {
	                              c[(Pb() | 0) >> 2] = 34;g = +(K | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;break;
	                            }b = J + -106 | 0;C = ((b | 0) < 0) << 31 >> 31;if ((m | 0) < (C | 0) | (m | 0) == (C | 0) & y >>> 0 < b >>> 0) {
	                              c[(Pb() | 0) >> 2] = 34;g = +(K | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;break;
	                            }if (e) {
	                              if ((e | 0) < 9) {
	                                l = I + (h << 2) | 0;k = c[l >> 2] | 0;do {
	                                  k = k * 10 | 0;e = e + 1 | 0;
	                                } while ((e | 0) != 9);c[l >> 2] = k;
	                              }h = h + 1 | 0;
	                            }if ((r | 0) < 9 ? (r | 0) <= (y | 0) & (y | 0) < 18 : 0) {
	                              if ((y | 0) == 9) {
	                                g = +(K | 0) * +((c[I >> 2] | 0) >>> 0);break;
	                              }if ((y | 0) < 9) {
	                                g = +(K | 0) * +((c[I >> 2] | 0) >>> 0) / +(c[8640 + (8 - y << 2) >> 2] | 0);break;
	                              }b = L + 27 + (S(y, -3) | 0) | 0;e = c[I >> 2] | 0;if ((b | 0) > 30 | (e >>> b | 0) == 0) {
	                                g = +(K | 0) * +(e >>> 0) * +(c[8640 + (y + -10 << 2) >> 2] | 0);break;
	                              }
	                            }e = (y | 0) % 9 | 0;if (!e) {
	                              e = 0;l = 0;
	                            } else {
	                              r = (y | 0) > -1 ? e : e + 9 | 0;n = c[8640 + (8 - r << 2) >> 2] | 0;if (h) {
	                                o = 1e9 / (n | 0) | 0;l = 0;m = 0;k = y;e = 0;do {
	                                  B = I + (e << 2) | 0;C = c[B >> 2] | 0;b = ((C >>> 0) / (n >>> 0) | 0) + l | 0;c[B >> 2] = b;l = S((C >>> 0) % (n >>> 0) | 0, o) | 0;b = (e | 0) == (m | 0) & (b | 0) == 0;k = b ? k + -9 | 0 : k;m = b ? m + 1 & 127 : m;e = e + 1 | 0;
	                                } while ((e | 0) != (h | 0));if (!l) l = m;else {
	                                  c[I + (h << 2) >> 2] = l;l = m;h = h + 1 | 0;
	                                }
	                              } else {
	                                l = 0;h = 0;k = y;
	                              }e = 0;y = 9 - r + k | 0;
	                            }i: while (1) {
	                              r = (y | 0) < 18;v = (y | 0) == 18;w = I + (l << 2) | 0;while (1) {
	                                if (!r) {
	                                  if (!v) {
	                                    k = y;break i;
	                                  }if ((c[w >> 2] | 0) >>> 0 >= 9007199) {
	                                    k = 18;break i;
	                                  }
	                                }k = 0;x = h;h = h + 127 | 0;while (1) {
	                                  m = h & 127;n = I + (m << 2) | 0;h = ld(c[n >> 2] | 0, 0, 29) | 0;h = id(h | 0, D | 0, k | 0, 0) | 0;k = D;if (k >>> 0 > 0 | (k | 0) == 0 & h >>> 0 > 1e9) {
	                                    o = od(h | 0, k | 0, 1e9, 0) | 0;h = sd(h | 0, k | 0, 1e9, 0) | 0;
	                                  } else o = 0;c[n >> 2] = h;b = (m | 0) == (l | 0);x = (m | 0) != (x + 127 & 127 | 0) | b ? x : (h | 0) == 0 ? m : x;if (b) break;else {
	                                    k = o;h = m + -1 | 0;
	                                  }
	                                }e = e + -29 | 0;if (o | 0) break;else h = x;
	                              }l = l + 127 & 127;h = x + 127 & 127;k = I + ((x + 126 & 127) << 2) | 0;if ((l | 0) == (x | 0)) c[k >> 2] = c[k >> 2] | c[I + (h << 2) >> 2];else h = x;c[I + (l << 2) >> 2] = o;y = y + 9 | 0;
	                            }j: while (1) {
	                              w = h + 1 & 127;x = I + ((h + 127 & 127) << 2) | 0;while (1) {
	                                o = (k | 0) == 18;v = (k | 0) > 27 ? 9 : 1;y = l;while (1) {
	                                  l = 0;while (1) {
	                                    m = l + y & 127;if ((m | 0) == (h | 0)) {
	                                      G = 2;A = 220;break;
	                                    }m = c[I + (m << 2) >> 2] | 0;n = c[8672 + (l << 2) >> 2] | 0;if (m >>> 0 < n >>> 0) {
	                                      G = 2;A = 220;break;
	                                    }if (m >>> 0 > n >>> 0) break;l = l + 1 | 0;if ((l | 0) >= 2) {
	                                      G = l;A = 220;break;
	                                    }
	                                  }if ((A | 0) == 220 ? (A = 0, o & (G | 0) == 2) : 0) {
	                                    g = 0.0;m = 0;break j;
	                                  }e = e + v | 0;if ((y | 0) == (h | 0)) y = h;else break;
	                                }o = (1 << v) + -1 | 0;r = 1e9 >>> v;n = 0;l = y;m = y;do {
	                                  B = I + (m << 2) | 0;C = c[B >> 2] | 0;b = (C >>> v) + n | 0;c[B >> 2] = b;n = S(C & o, r) | 0;b = (m | 0) == (l | 0) & (b | 0) == 0;k = b ? k + -9 | 0 : k;l = b ? l + 1 & 127 : l;m = m + 1 & 127;
	                                } while ((m | 0) != (h | 0));if (!n) continue;if ((w | 0) != (l | 0)) break;c[x >> 2] = c[x >> 2] | 1;
	                              }c[I + (h << 2) >> 2] = n;h = w;
	                            }while (1) {
	                              l = m + y & 127;k = h + 1 & 127;if ((l | 0) == (h | 0)) c[I + (k + -1 << 2) >> 2] = 0;else k = h;g = g * 1.0e9 + +((c[I + (l << 2) >> 2] | 0) >>> 0);m = m + 1 | 0;if ((m | 0) == 2) break;else h = k;
	                            }u = +(K | 0);j = u * g;n = e + 53 | 0;o = n - J | 0;r = (o | 0) < (L | 0);h = r & 1;m = r ? (o | 0) < 0 ? 0 : o : L;if ((m | 0) < 53) {
	                              N = +bc(+ac(1.0, 105 - m | 0), j);p = +dc(j, +ac(1.0, 53 - m | 0));q = N;g = p;p = N + (j - p);
	                            } else {
	                              q = 0.0;g = 0.0;p = j;
	                            }l = y + 2 & 127;do {
	                              if ((l | 0) != (k | 0)) {
	                                l = c[I + (l << 2) >> 2] | 0;do {
	                                  if (l >>> 0 >= 5e8) {
	                                    if ((l | 0) != 5e8) {
	                                      g = u * .75 + g;break;
	                                    }if ((y + 3 & 127 | 0) == (k | 0)) {
	                                      g = u * .5 + g;break;
	                                    } else {
	                                      g = u * .75 + g;break;
	                                    }
	                                  } else {
	                                    if ((l | 0) == 0 ? (y + 3 & 127 | 0) == (k | 0) : 0) break;g = u * .25 + g;
	                                  }
	                                } while (0);if ((53 - m | 0) > 1) {
	                                  if (+dc(g, 1.0) != 0.0) {
	                                    j = g;break;
	                                  }j = g + 1.0;
	                                } else j = g;
	                              } else j = g;
	                            } while (0);g = p + j - q;do {
	                              if ((n & 2147483647 | 0) > (-2 - E | 0)) {
	                                if (+F(+g) >= 9007199254740992.0) {
	                                  g = g * .5;h = r & (m | 0) == (o | 0) ? 0 : h;e = e + 1 | 0;
	                                }if ((e + 50 | 0) <= (H | 0) ? !(j != 0.0 & (h | 0) != 0) : 0) break;c[(Pb() | 0) >> 2] = 34;
	                              }
	                            } while (0);g = +cc(g, e);
	                          }
	                        } while (0);break a;
	                      }default:
	                      {
	                        if (c[B >> 2] | 0) c[C >> 2] = (c[C >> 2] | 0) + -1;c[(Pb() | 0) >> 2] = 22;Vb(b, 0);g = 0.0;break a;
	                      }}
	                }}
	          } while (0);if ((A | 0) == 23) {
	            h = (c[B >> 2] | 0) == 0;if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;if ((f | 0) != 0 & e >>> 0 > 3) do {
	              if (!h) c[C >> 2] = (c[C >> 2] | 0) + -1;e = e + -1 | 0;
	            } while (e >>> 0 > 3);
	          }g = +(K | 0) * t;
	        }
	      } while (0);i = M;return +g;
	    }function _b(a) {
	      a = a | 0;return ((a | 0) == 32 | (a + -9 | 0) >>> 0 < 5) & 1 | 0;
	    }function $b(a, b) {
	      a = a | 0;b = b | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0;h = a + 4 | 0;e = c[h >> 2] | 0;i = a + 100 | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	        c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	      } else e = Wb(a) | 0;switch (e | 0) {case 43:case 45:
	          {
	            f = (e | 0) == 45 & 1;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	              c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	            } else e = Wb(a) | 0;if ((b | 0) != 0 & (e + -48 | 0) >>> 0 > 9 ? (c[i >> 2] | 0) != 0 : 0) c[h >> 2] = (c[h >> 2] | 0) + -1;break;
	          }default:
	          f = 0;}if ((e + -48 | 0) >>> 0 > 9) {
	        if (!(c[i >> 2] | 0)) {
	          f = -2147483648;e = 0;
	        } else {
	          c[h >> 2] = (c[h >> 2] | 0) + -1;f = -2147483648;e = 0;
	        }
	      } else {
	        g = 0;do {
	          g = e + -48 + (g * 10 | 0) | 0;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = Wb(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10 & (g | 0) < 214748364);b = ((g | 0) < 0) << 31 >> 31;if ((e + -48 | 0) >>> 0 < 10) do {
	          b = qd(g | 0, b | 0, 10, 0) | 0;g = D;e = id(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;g = id(e | 0, D | 0, b | 0, g | 0) | 0;b = D;e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = Wb(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10 & ((b | 0) < 21474836 | (b | 0) == 21474836 & g >>> 0 < 2061584302));if ((e + -48 | 0) >>> 0 < 10) do {
	          e = c[h >> 2] | 0;if (e >>> 0 < (c[i >> 2] | 0) >>> 0) {
	            c[h >> 2] = e + 1;e = d[e >> 0] | 0;
	          } else e = Wb(a) | 0;
	        } while ((e + -48 | 0) >>> 0 < 10);if (c[i >> 2] | 0) c[h >> 2] = (c[h >> 2] | 0) + -1;i = (f | 0) != 0;e = hd(0, 0, g | 0, b | 0) | 0;f = i ? D : b;e = i ? e : g;
	      }D = f;return e | 0;
	    }function ac(a, b) {
	      a = +a;b = b | 0;var d = 0;if ((b | 0) > 1023) {
	        a = a * 8988465674311579538646525.0e283;d = b + -1023 | 0;b = b + -2046 | 0;if ((d | 0) > 1023) {
	          a = a * 8988465674311579538646525.0e283;b = (b | 0) > 1023 ? 1023 : b;
	        } else b = d;
	      } else if ((b | 0) < -1022) {
	        a = a * 2.2250738585072014e-308;d = b + 1022 | 0;b = b + 2044 | 0;if ((d | 0) < -1022) {
	          a = a * 2.2250738585072014e-308;b = (b | 0) < -1022 ? -1022 : b;
	        } else b = d;
	      }b = ld(b + 1023 | 0, 0, 52) | 0;d = D;c[l >> 2] = b;c[l + 4 >> 2] = d;return +(a * +h[l >> 3]);
	    }function bc(a, b) {
	      a = +a;b = +b;return + +fc(a, b);
	    }function cc(a, b) {
	      a = +a;b = b | 0;return + +ac(a, b);
	    }function dc(a, b) {
	      a = +a;b = +b;return + +ec(a, b);
	    }function ec(a, b) {
	      a = +a;b = +b;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;h[l >> 3] = a;i = c[l >> 2] | 0;k = c[l + 4 >> 2] | 0;h[l >> 3] = b;n = c[l >> 2] | 0;o = c[l + 4 >> 2] | 0;e = kd(i | 0, k | 0, 52) | 0;e = e & 2047;m = kd(n | 0, o | 0, 52) | 0;m = m & 2047;p = k & -2147483648;g = ld(n | 0, o | 0, 1) | 0;j = D;a: do {
	        if (!((g | 0) == 0 & (j | 0) == 0) ? (f = o & 2147483647, !(f >>> 0 > 2146435072 | (f | 0) == 2146435072 & n >>> 0 > 0 | (e | 0) == 2047)) : 0) {
	          d = ld(i | 0, k | 0, 1) | 0;f = D;if (!(f >>> 0 > j >>> 0 | (f | 0) == (j | 0) & d >>> 0 > g >>> 0)) return +((d | 0) == (g | 0) & (f | 0) == (j | 0) ? a * 0.0 : a);if (!e) {
	            d = ld(i | 0, k | 0, 12) | 0;f = D;if ((f | 0) > -1 | (f | 0) == -1 & d >>> 0 > 4294967295) {
	              e = 0;do {
	                e = e + -1 | 0;d = ld(d | 0, f | 0, 1) | 0;f = D;
	              } while ((f | 0) > -1 | (f | 0) == -1 & d >>> 0 > 4294967295);
	            } else e = 0;i = ld(i | 0, k | 0, 1 - e | 0) | 0;g = D;
	          } else g = k & 1048575 | 1048576;if (!m) {
	            f = ld(n | 0, o | 0, 12) | 0;j = D;if ((j | 0) > -1 | (j | 0) == -1 & f >>> 0 > 4294967295) {
	              d = 0;do {
	                d = d + -1 | 0;f = ld(f | 0, j | 0, 1) | 0;j = D;
	              } while ((j | 0) > -1 | (j | 0) == -1 & f >>> 0 > 4294967295);
	            } else d = 0;n = ld(n | 0, o | 0, 1 - d | 0) | 0;m = d;k = D;
	          } else k = o & 1048575 | 1048576;f = hd(i | 0, g | 0, n | 0, k | 0) | 0;d = D;j = (d | 0) > -1 | (d | 0) == -1 & f >>> 0 > 4294967295;b: do {
	            if ((e | 0) > (m | 0)) {
	              while (1) {
	                if (j) {
	                  if ((f | 0) == 0 & (d | 0) == 0) break;
	                } else {
	                  f = i;d = g;
	                }i = ld(f | 0, d | 0, 1) | 0;g = D;e = e + -1 | 0;f = hd(i | 0, g | 0, n | 0, k | 0) | 0;d = D;j = (d | 0) > -1 | (d | 0) == -1 & f >>> 0 > 4294967295;if ((e | 0) <= (m | 0)) break b;
	              }b = a * 0.0;break a;
	            }
	          } while (0);if (j) {
	            if ((f | 0) == 0 & (d | 0) == 0) {
	              b = a * 0.0;break;
	            }
	          } else {
	            d = g;f = i;
	          }if (d >>> 0 < 1048576 | (d | 0) == 1048576 & f >>> 0 < 0) do {
	            f = ld(f | 0, d | 0, 1) | 0;d = D;e = e + -1 | 0;
	          } while (d >>> 0 < 1048576 | (d | 0) == 1048576 & f >>> 0 < 0);if ((e | 0) > 0) {
	            o = id(f | 0, d | 0, 0, -1048576) | 0;d = D;e = ld(e | 0, 0, 52) | 0;d = d | D;e = o | e;
	          } else {
	            e = kd(f | 0, d | 0, 1 - e | 0) | 0;d = D;
	          }c[l >> 2] = e;c[l + 4 >> 2] = d | p;b = +h[l >> 3];
	        } else q = 3;
	      } while (0);if ((q | 0) == 3) {
	        b = a * b;b = b / b;
	      }return +b;
	    }function fc(a, b) {
	      a = +a;b = +b;var d = 0,
	          e = 0;h[l >> 3] = a;e = c[l >> 2] | 0;d = c[l + 4 >> 2] | 0;h[l >> 3] = b;d = c[l + 4 >> 2] & -2147483648 | d & 2147483647;c[l >> 2] = e;c[l + 4 >> 2] = d;return + +h[l >> 3];
	    }function gc(b, e, f, g, h) {
	      b = b | 0;e = e | 0;f = f | 0;g = g | 0;h = h | 0;var i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;a: do {
	        if (e >>> 0 > 36) {
	          c[(Pb() | 0) >> 2] = 22;h = 0;g = 0;
	        } else {
	          r = b + 4 | 0;q = b + 100 | 0;do {
	            i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	              c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	            } else i = Wb(b) | 0;
	          } while ((_b(i) | 0) != 0);b: do {
	            switch (i | 0) {case 43:case 45:
	                {
	                  i = ((i | 0) == 45) << 31 >> 31;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;p = i;i = d[j >> 0] | 0;break b;
	                  } else {
	                    p = i;i = Wb(b) | 0;break b;
	                  }
	                }default:
	                p = 0;}
	          } while (0);j = (e | 0) == 0;do {
	            if ((e | 16 | 0) == 16 & (i | 0) == 48) {
	              i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = Wb(b) | 0;if ((i | 32 | 0) != 120) if (j) {
	                e = 8;n = 46;break;
	              } else {
	                n = 32;break;
	              }i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = Wb(b) | 0;if ((d[12909 + i >> 0] | 0) > 15) {
	                g = (c[q >> 2] | 0) == 0;if (!g) c[r >> 2] = (c[r >> 2] | 0) + -1;if (!f) {
	                  Vb(b, 0);h = 0;g = 0;break a;
	                }if (g) {
	                  h = 0;g = 0;break a;
	                }c[r >> 2] = (c[r >> 2] | 0) + -1;h = 0;g = 0;break a;
	              } else {
	                e = 16;n = 46;
	              }
	            } else {
	              e = j ? 10 : e;if ((d[12909 + i >> 0] | 0) >>> 0 < e >>> 0) n = 32;else {
	                if (c[q >> 2] | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;Vb(b, 0);c[(Pb() | 0) >> 2] = 22;h = 0;g = 0;break a;
	              }
	            }
	          } while (0);if ((n | 0) == 32) if ((e | 0) == 10) {
	            e = i + -48 | 0;if (e >>> 0 < 10) {
	              i = 0;j = e;do {
	                i = (i * 10 | 0) + j | 0;e = c[r >> 2] | 0;if (e >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                  c[r >> 2] = e + 1;e = d[e >> 0] | 0;
	                } else e = Wb(b) | 0;j = e + -48 | 0;
	              } while (j >>> 0 < 10 & i >>> 0 < 429496729);f = 0;
	            } else {
	              e = i;i = 0;f = 0;
	            }j = e + -48 | 0;if (j >>> 0 < 10) {
	              m = j;while (1) {
	                j = qd(i | 0, f | 0, 10, 0) | 0;k = D;l = ((m | 0) < 0) << 31 >> 31;o = ~l;if (k >>> 0 > o >>> 0 | (k | 0) == (o | 0) & j >>> 0 > ~m >>> 0) {
	                  j = e;e = m;break;
	                }i = id(j | 0, k | 0, m | 0, l | 0) | 0;f = D;e = c[r >> 2] | 0;if (e >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                  c[r >> 2] = e + 1;e = d[e >> 0] | 0;
	                } else e = Wb(b) | 0;k = e + -48 | 0;if (k >>> 0 < 10 & (f >>> 0 < 429496729 | (f | 0) == 429496729 & i >>> 0 < 2576980378)) m = k;else {
	                  j = e;e = k;break;
	                }
	              }if (e >>> 0 > 9) {
	                j = p;e = f;
	              } else {
	                e = 10;n = 72;
	              }
	            } else {
	              j = p;e = f;
	            }
	          } else n = 46;c: do {
	            if ((n | 0) == 46) {
	              if (!(e + -1 & e)) {
	                n = a[13165 + ((e * 23 | 0) >>> 5 & 7) >> 0] | 0;f = a[12909 + i >> 0] | 0;j = f & 255;if (j >>> 0 < e >>> 0) {
	                  i = 0;k = j;do {
	                    i = k | i << n;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                      c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                    } else j = Wb(b) | 0;f = a[12909 + j >> 0] | 0;k = f & 255;
	                  } while (i >>> 0 < 134217728 & k >>> 0 < e >>> 0);k = 0;
	                } else {
	                  j = i;k = 0;i = 0;
	                }l = kd(-1, -1, n | 0) | 0;m = D;if ((f & 255) >>> 0 >= e >>> 0 | (k >>> 0 > m >>> 0 | (k | 0) == (m | 0) & i >>> 0 > l >>> 0)) {
	                  f = k;n = 72;break;
	                } else j = k;while (1) {
	                  i = ld(i | 0, j | 0, n | 0) | 0;k = D;i = f & 255 | i;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = Wb(b) | 0;f = a[12909 + j >> 0] | 0;if ((f & 255) >>> 0 >= e >>> 0 | (k >>> 0 > m >>> 0 | (k | 0) == (m | 0) & i >>> 0 > l >>> 0)) {
	                    f = k;n = 72;break c;
	                  } else j = k;
	                }
	              }f = a[12909 + i >> 0] | 0;j = f & 255;if (j >>> 0 < e >>> 0) {
	                i = 0;k = j;do {
	                  i = k + (S(i, e) | 0) | 0;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = Wb(b) | 0;f = a[12909 + j >> 0] | 0;k = f & 255;
	                } while (i >>> 0 < 119304647 & k >>> 0 < e >>> 0);k = 0;
	              } else {
	                j = i;i = 0;k = 0;
	              }if ((f & 255) >>> 0 < e >>> 0) {
	                n = od(-1, -1, e | 0, 0) | 0;o = D;m = k;while (1) {
	                  if (m >>> 0 > o >>> 0 | (m | 0) == (o | 0) & i >>> 0 > n >>> 0) {
	                    f = m;n = 72;break c;
	                  }k = qd(i | 0, m | 0, e | 0, 0) | 0;l = D;f = f & 255;if (l >>> 0 > 4294967295 | (l | 0) == -1 & k >>> 0 > ~f >>> 0) {
	                    f = m;n = 72;break c;
	                  }i = id(f | 0, 0, k | 0, l | 0) | 0;k = D;j = c[r >> 2] | 0;if (j >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                    c[r >> 2] = j + 1;j = d[j >> 0] | 0;
	                  } else j = Wb(b) | 0;f = a[12909 + j >> 0] | 0;if ((f & 255) >>> 0 >= e >>> 0) {
	                    f = k;n = 72;break;
	                  } else m = k;
	                }
	              } else {
	                f = k;n = 72;
	              }
	            }
	          } while (0);if ((n | 0) == 72) if ((d[12909 + j >> 0] | 0) >>> 0 < e >>> 0) {
	            do {
	              i = c[r >> 2] | 0;if (i >>> 0 < (c[q >> 2] | 0) >>> 0) {
	                c[r >> 2] = i + 1;i = d[i >> 0] | 0;
	              } else i = Wb(b) | 0;
	            } while ((d[12909 + i >> 0] | 0) >>> 0 < e >>> 0);c[(Pb() | 0) >> 2] = 34;j = (g & 1 | 0) == 0 & 0 == 0 ? p : 0;e = h;i = g;
	          } else {
	            j = p;e = f;
	          }if (c[q >> 2] | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;if (!(e >>> 0 < h >>> 0 | (e | 0) == (h | 0) & i >>> 0 < g >>> 0)) {
	            if (!((g & 1 | 0) != 0 | 0 != 0 | (j | 0) != 0)) {
	              c[(Pb() | 0) >> 2] = 34;g = id(g | 0, h | 0, -1, -1) | 0;h = D;break;
	            }if (e >>> 0 > h >>> 0 | (e | 0) == (h | 0) & i >>> 0 > g >>> 0) {
	              c[(Pb() | 0) >> 2] = 34;break;
	            }
	          }g = ((j | 0) < 0) << 31 >> 31;g = hd(i ^ j | 0, e ^ g | 0, j | 0, g | 0) | 0;h = D;
	        }
	      } while (0);D = h;return g | 0;
	    }function hc(b, c) {
	      b = b | 0;c = c | 0;var d = 0,
	          e = 0;d = a[b >> 0] | 0;e = a[c >> 0] | 0;if (d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != e << 24 >> 24) b = e;else {
	        do {
	          b = b + 1 | 0;c = c + 1 | 0;d = a[b >> 0] | 0;e = a[c >> 0] | 0;
	        } while (!(d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != e << 24 >> 24));b = e;
	      }return (d & 255) - (b & 255) | 0;
	    }function ic(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0;s = i;i = i + 224 | 0;n = s + 120 | 0;p = s + 80 | 0;q = s;r = s + 136 | 0;f = p;g = f + 40 | 0;do {
	        c[f >> 2] = 0;f = f + 4 | 0;
	      } while ((f | 0) < (g | 0));c[n >> 2] = c[e >> 2];if ((jc(0, d, n, q, p) | 0) < 0) e = -1;else {
	        if ((c[b + 76 >> 2] | 0) > -1) o = kc(b) | 0;else o = 0;e = c[b >> 2] | 0;m = e & 32;if ((a[b + 74 >> 0] | 0) < 1) c[b >> 2] = e & -33;f = b + 48 | 0;if (!(c[f >> 2] | 0)) {
	          g = b + 44 | 0;h = c[g >> 2] | 0;c[g >> 2] = r;j = b + 28 | 0;c[j >> 2] = r;k = b + 20 | 0;c[k >> 2] = r;c[f >> 2] = 80;l = b + 16 | 0;c[l >> 2] = r + 80;e = jc(b, d, n, q, p) | 0;if (h) {
	            Ca[c[b + 36 >> 2] & 7](b, 0, 0) | 0;e = (c[k >> 2] | 0) == 0 ? -1 : e;c[g >> 2] = h;c[f >> 2] = 0;c[l >> 2] = 0;c[j >> 2] = 0;c[k >> 2] = 0;
	          }
	        } else e = jc(b, d, n, q, p) | 0;f = c[b >> 2] | 0;c[b >> 2] = f | m;if (o | 0) Sb(b);e = (f & 32 | 0) == 0 ? e : -1;
	      }i = s;return e | 0;
	    }function jc(e, f, g, j, k) {
	      e = e | 0;f = f | 0;g = g | 0;j = j | 0;k = k | 0;var m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0.0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0.0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0,
	          P = 0,
	          Q = 0,
	          R = 0,
	          T = 0,
	          U = 0,
	          V = 0,
	          W = 0,
	          X = 0,
	          Y = 0,
	          Z = 0,
	          _ = 0,
	          $ = 0,
	          aa = 0,
	          ba = 0,
	          ca = 0,
	          da = 0,
	          ea = 0,
	          fa = 0,
	          ga = 0,
	          ha = 0,
	          ia = 0,
	          ja = 0;ja = i;i = i + 624 | 0;fa = ja + 24 | 0;ga = ja + 16 | 0;ha = ja + 588 | 0;Y = ja + 576 | 0;ia = ja;T = ja + 536 | 0;N = ja + 8 | 0;O = ja + 528 | 0;P = (e | 0) != 0;Q = T + 40 | 0;R = Q;T = T + 39 | 0;U = N + 4 | 0;V = ha;W = 0 - V | 0;X = Y + 12 | 0;Y = Y + 11 | 0;Z = X;_ = Z - V | 0;$ = -2 - V | 0;aa = Z + 2 | 0;ba = fa + 288 | 0;ca = ha + 9 | 0;da = ca;ea = ha + 8 | 0;n = 0;m = 0;s = 0;a: while (1) {
	        do {
	          if ((m | 0) > -1) if ((n | 0) > (2147483647 - m | 0)) {
	            c[(Pb() | 0) >> 2] = 75;m = -1;break;
	          } else {
	            m = n + m | 0;break;
	          }
	        } while (0);n = a[f >> 0] | 0;if (!(n << 24 >> 24)) {
	          M = 243;break;
	        } else o = f;b: while (1) {
	          switch (n << 24 >> 24) {case 37:
	              {
	                n = o;M = 9;break b;
	              }case 0:
	              {
	                n = o;break b;
	              }default:
	              {}}n = o + 1 | 0;o = n;n = a[n >> 0] | 0;
	        }c: do {
	          if ((M | 0) == 9) while (1) {
	            M = 0;if ((a[o + 1 >> 0] | 0) != 37) break c;n = n + 1 | 0;o = o + 2 | 0;if ((a[o >> 0] | 0) == 37) M = 9;else break;
	          }
	        } while (0);n = n - f | 0;if (P ? (c[e >> 2] & 32 | 0) == 0 : 0) lc(f, n, e) | 0;if (n | 0) {
	          f = o;continue;
	        }r = o + 1 | 0;p = a[r >> 0] | 0;n = (p << 24 >> 24) + -48 | 0;if (n >>> 0 < 10) {
	          u = (a[o + 2 >> 0] | 0) == 36;r = u ? o + 3 | 0 : r;w = u ? n : -1;u = u ? 1 : s;n = a[r >> 0] | 0;
	        } else {
	          w = -1;u = s;n = p;
	        }o = (n << 24 >> 24) + -32 | 0;d: do {
	          if (o >>> 0 < 32) {
	            p = 0;do {
	              if (!(1 << o & 75913)) break d;p = 1 << (n << 24 >> 24) + -32 | p;r = r + 1 | 0;n = a[r >> 0] | 0;o = (n << 24 >> 24) + -32 | 0;
	            } while (o >>> 0 < 32);
	          } else p = 0;
	        } while (0);do {
	          if (n << 24 >> 24 != 42) {
	            o = (n << 24 >> 24) + -48 | 0;if (o >>> 0 < 10) {
	              s = 0;do {
	                s = (s * 10 | 0) + o | 0;r = r + 1 | 0;n = a[r >> 0] | 0;o = (n << 24 >> 24) + -48 | 0;
	              } while (o >>> 0 < 10);if ((s | 0) < 0) {
	                m = -1;break a;
	              } else L = u;
	            } else {
	              s = 0;L = u;
	            }
	          } else {
	            t = r + 1 | 0;n = a[t >> 0] | 0;o = (n << 24 >> 24) + -48 | 0;if (o >>> 0 < 10 ? (a[r + 2 >> 0] | 0) == 36 : 0) {
	              c[k + (o << 2) >> 2] = 10;n = c[j + ((a[t >> 0] | 0) + -48 << 3) >> 2] | 0;o = 1;t = r + 3 | 0;
	            } else {
	              if (u | 0) {
	                m = -1;break a;
	              }if (!P) {
	                s = 0;L = 0;r = t;break;
	              }o = (c[g >> 2] | 0) + (4 - 1) & ~(4 - 1);n = c[o >> 2] | 0;c[g >> 2] = o + 4;o = 0;
	            }L = (n | 0) < 0;s = L ? 0 - n | 0 : n;p = L ? p | 8192 : p;L = o;r = t;n = a[t >> 0] | 0;
	          }
	        } while (0);e: do {
	          if (n << 24 >> 24 == 46) {
	            n = r + 1 | 0;o = a[n >> 0] | 0;if (o << 24 >> 24 != 42) {
	              r = (o << 24 >> 24) + -48 | 0;if (r >>> 0 < 10) o = 0;else {
	                x = 0;break;
	              }while (1) {
	                o = (o * 10 | 0) + r | 0;n = n + 1 | 0;r = (a[n >> 0] | 0) + -48 | 0;if (r >>> 0 >= 10) {
	                  x = o;break e;
	                }
	              }
	            }n = r + 2 | 0;o = (a[n >> 0] | 0) + -48 | 0;if (o >>> 0 < 10 ? (a[r + 3 >> 0] | 0) == 36 : 0) {
	              c[k + (o << 2) >> 2] = 10;x = c[j + ((a[n >> 0] | 0) + -48 << 3) >> 2] | 0;n = r + 4 | 0;break;
	            }if (L | 0) {
	              m = -1;break a;
	            }if (P) {
	              K = (c[g >> 2] | 0) + (4 - 1) & ~(4 - 1);x = c[K >> 2] | 0;c[g >> 2] = K + 4;
	            } else x = 0;
	          } else {
	            x = -1;n = r;
	          }
	        } while (0);u = 0;while (1) {
	          o = (a[n >> 0] | 0) + -65 | 0;if (o >>> 0 > 57) {
	            m = -1;break a;
	          }K = n + 1 | 0;o = a[13174 + (u * 58 | 0) + o >> 0] | 0;r = o & 255;if ((r + -1 | 0) >>> 0 < 8) {
	            u = r;n = K;
	          } else break;
	        }if (!(o << 24 >> 24)) {
	          m = -1;break;
	        }t = (w | 0) > -1;do {
	          if (o << 24 >> 24 == 19) {
	            if (t) {
	              m = -1;break a;
	            } else M = 51;
	          } else {
	            if (t) {
	              c[k + (w << 2) >> 2] = r;I = j + (w << 3) | 0;J = c[I + 4 >> 2] | 0;M = ia;c[M >> 2] = c[I >> 2];c[M + 4 >> 2] = J;M = 51;break;
	            }if (!P) {
	              m = 0;break a;
	            }mc(ia, r, g);
	          }
	        } while (0);if ((M | 0) == 51 ? (M = 0, !P) : 0) {
	          n = 0;s = L;f = K;continue;
	        }F = a[n >> 0] | 0;F = (u | 0) != 0 & (F & 15 | 0) == 3 ? F & -33 : F;t = p & -65537;J = (p & 8192 | 0) == 0 ? p : t;f: do {
	          switch (F | 0) {case 110:
	              switch ((u & 255) << 24 >> 24) {case 0:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 1:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 2:
	                  {
	                    n = c[ia >> 2] | 0;c[n >> 2] = m;c[n + 4 >> 2] = ((m | 0) < 0) << 31 >> 31;n = 0;s = L;f = K;continue a;
	                  }case 3:
	                  {
	                    b[c[ia >> 2] >> 1] = m;n = 0;s = L;f = K;continue a;
	                  }case 4:
	                  {
	                    a[c[ia >> 2] >> 0] = m;n = 0;s = L;f = K;continue a;
	                  }case 6:
	                  {
	                    c[c[ia >> 2] >> 2] = m;n = 0;s = L;f = K;continue a;
	                  }case 7:
	                  {
	                    n = c[ia >> 2] | 0;c[n >> 2] = m;c[n + 4 >> 2] = ((m | 0) < 0) << 31 >> 31;n = 0;s = L;f = K;continue a;
	                  }default:
	                  {
	                    n = 0;s = L;f = K;continue a;
	                  }}case 112:
	              {
	                t = 120;u = x >>> 0 > 8 ? x : 8;n = J | 8;M = 63;break;
	              }case 88:case 120:
	              {
	                t = F;u = x;n = J;M = 63;break;
	              }case 111:
	              {
	                o = ia;n = c[o >> 2] | 0;o = c[o + 4 >> 2] | 0;if ((n | 0) == 0 & (o | 0) == 0) f = Q;else {
	                  f = Q;do {
	                    f = f + -1 | 0;a[f >> 0] = n & 7 | 48;n = kd(n | 0, o | 0, 3) | 0;o = D;
	                  } while (!((n | 0) == 0 & (o | 0) == 0));
	                }if (!(J & 8)) {
	                  o = 0;p = 13654;r = x;n = J;M = 76;
	                } else {
	                  r = R - f | 0;o = 0;p = 13654;r = (x | 0) > (r | 0) ? x : r + 1 | 0;n = J;M = 76;
	                }break;
	              }case 105:case 100:
	              {
	                f = ia;n = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;if ((f | 0) < 0) {
	                  n = hd(0, 0, n | 0, f | 0) | 0;f = D;o = ia;c[o >> 2] = n;c[o + 4 >> 2] = f;o = 1;p = 13654;M = 75;break f;
	                }if (!(J & 2048)) {
	                  p = J & 1;o = p;p = (p | 0) == 0 ? 13654 : 13656;M = 75;
	                } else {
	                  o = 1;p = 13655;M = 75;
	                }break;
	              }case 117:
	              {
	                f = ia;o = 0;p = 13654;n = c[f >> 2] | 0;f = c[f + 4 >> 2] | 0;M = 75;break;
	              }case 99:
	              {
	                a[T >> 0] = c[ia >> 2];f = T;w = 0;u = 13654;o = Q;n = 1;break;
	              }case 109:
	              {
	                n = oc(c[(Pb() | 0) >> 2] | 0) | 0;M = 81;break;
	              }case 115:
	              {
	                n = c[ia >> 2] | 0;n = n | 0 ? n : 13664;M = 81;break;
	              }case 67:
	              {
	                c[N >> 2] = c[ia >> 2];c[U >> 2] = 0;c[ia >> 2] = N;t = -1;o = N;M = 85;break;
	              }case 83:
	              {
	                n = c[ia >> 2] | 0;if (!x) {
	                  qc(e, 32, s, 0, J);n = 0;M = 96;
	                } else {
	                  t = x;o = n;M = 85;
	                }break;
	              }case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:
	              {
	                q = +h[ia >> 3];c[ga >> 2] = 0;h[l >> 3] = q;if ((c[l + 4 >> 2] | 0) >= 0) {
	                  n = J & 1;if (!(J & 2048)) {
	                    H = n;I = (n | 0) == 0 ? 13672 : 13677;
	                  } else {
	                    H = 1;I = 13674;
	                  }
	                } else {
	                  q = -q;H = 1;I = 13671;
	                }h[l >> 3] = q;G = c[l + 4 >> 2] & 2146435072;do {
	                  if (G >>> 0 < 2146435072 | (G | 0) == 2146435072 & 0 < 0) {
	                    v = +sc(q, ga) * 2.0;f = v != 0.0;if (f) c[ga >> 2] = (c[ga >> 2] | 0) + -1;z = F | 32;if ((z | 0) == 97) {
	                      r = F & 32;w = (r | 0) == 0 ? I : I + 9 | 0;u = H | 2;n = 12 - x | 0;do {
	                        if (!(x >>> 0 > 11 | (n | 0) == 0)) {
	                          q = 8.0;do {
	                            n = n + -1 | 0;q = q * 16.0;
	                          } while ((n | 0) != 0);if ((a[w >> 0] | 0) == 45) {
	                            q = -(q + (-v - q));break;
	                          } else {
	                            q = v + q - q;break;
	                          }
	                        } else q = v;
	                      } while (0);f = c[ga >> 2] | 0;n = (f | 0) < 0 ? 0 - f | 0 : f;n = nc(n, ((n | 0) < 0) << 31 >> 31, X) | 0;if ((n | 0) == (X | 0)) {
	                        a[Y >> 0] = 48;n = Y;
	                      }a[n + -1 >> 0] = (f >> 31 & 2) + 43;t = n + -2 | 0;a[t >> 0] = F + 15;p = (x | 0) < 1;o = (J & 8 | 0) == 0;n = ha;do {
	                        I = ~~q;f = n + 1 | 0;a[n >> 0] = d[13638 + I >> 0] | r;q = (q - +(I | 0)) * 16.0;do {
	                          if ((f - V | 0) == 1) {
	                            if (o & (p & q == 0.0)) {
	                              n = f;break;
	                            }a[f >> 0] = 46;n = n + 2 | 0;
	                          } else n = f;
	                        } while (0);
	                      } while (q != 0.0);p = t;o = (x | 0) != 0 & ($ + n | 0) < (x | 0) ? aa + x - p | 0 : _ - p + n | 0;r = o + u | 0;qc(e, 32, s, r, J);if (!(c[e >> 2] & 32)) lc(w, u, e) | 0;qc(e, 48, s, r, J ^ 65536);f = n - V | 0;if (!(c[e >> 2] & 32)) lc(ha, f, e) | 0;n = Z - p | 0;qc(e, 48, o - (f + n) | 0, 0, 0);if (!(c[e >> 2] & 32)) lc(t, n, e) | 0;qc(e, 32, s, r, J ^ 8192);n = (r | 0) < (s | 0) ? s : r;break;
	                    }n = (x | 0) < 0 ? 6 : x;if (f) {
	                      f = (c[ga >> 2] | 0) + -28 | 0;c[ga >> 2] = f;q = v * 268435456.0;
	                    } else {
	                      q = v;f = c[ga >> 2] | 0;
	                    }G = (f | 0) < 0 ? fa : ba;o = G;do {
	                      E = ~~q >>> 0;c[o >> 2] = E;o = o + 4 | 0;q = (q - +(E >>> 0)) * 1.0e9;
	                    } while (q != 0.0);if ((f | 0) > 0) {
	                      p = G;t = o;while (1) {
	                        r = (f | 0) > 29 ? 29 : f;f = t + -4 | 0;do {
	                          if (f >>> 0 >= p >>> 0) {
	                            o = 0;do {
	                              C = ld(c[f >> 2] | 0, 0, r | 0) | 0;C = id(C | 0, D | 0, o | 0, 0) | 0;E = D;B = sd(C | 0, E | 0, 1e9, 0) | 0;c[f >> 2] = B;o = od(C | 0, E | 0, 1e9, 0) | 0;f = f + -4 | 0;
	                            } while (f >>> 0 >= p >>> 0);if (!o) break;p = p + -4 | 0;c[p >> 2] = o;
	                          }
	                        } while (0);o = t;while (1) {
	                          if (o >>> 0 <= p >>> 0) break;f = o + -4 | 0;if (!(c[f >> 2] | 0)) o = f;else break;
	                        }f = (c[ga >> 2] | 0) - r | 0;c[ga >> 2] = f;if ((f | 0) > 0) t = o;else break;
	                      }
	                    } else p = G;if ((f | 0) < 0) {
	                      x = ((n + 25 | 0) / 9 | 0) + 1 | 0;y = (z | 0) == 102;do {
	                        w = 0 - f | 0;w = (w | 0) > 9 ? 9 : w;do {
	                          if (p >>> 0 < o >>> 0) {
	                            r = (1 << w) + -1 | 0;t = 1e9 >>> w;u = 0;f = p;do {
	                              E = c[f >> 2] | 0;c[f >> 2] = (E >>> w) + u;u = S(E & r, t) | 0;f = f + 4 | 0;
	                            } while (f >>> 0 < o >>> 0);f = (c[p >> 2] | 0) == 0 ? p + 4 | 0 : p;if (!u) {
	                              p = f;f = o;break;
	                            }c[o >> 2] = u;p = f;f = o + 4 | 0;
	                          } else {
	                            p = (c[p >> 2] | 0) == 0 ? p + 4 | 0 : p;f = o;
	                          }
	                        } while (0);o = y ? G : p;o = (f - o >> 2 | 0) > (x | 0) ? o + (x << 2) | 0 : f;f = (c[ga >> 2] | 0) + w | 0;c[ga >> 2] = f;
	                      } while ((f | 0) < 0);
	                    }E = G;do {
	                      if (p >>> 0 < o >>> 0) {
	                        f = (E - p >> 2) * 9 | 0;t = c[p >> 2] | 0;if (t >>> 0 < 10) break;else r = 10;do {
	                          r = r * 10 | 0;f = f + 1 | 0;
	                        } while (t >>> 0 >= r >>> 0);
	                      } else f = 0;
	                    } while (0);A = (z | 0) == 103;B = (n | 0) != 0;r = n - ((z | 0) != 102 ? f : 0) + ((B & A) << 31 >> 31) | 0;if ((r | 0) < (((o - E >> 2) * 9 | 0) + -9 | 0)) {
	                      r = r + 9216 | 0;u = G + 4 + (((r | 0) / 9 | 0) + -1024 << 2) | 0;r = ((r | 0) % 9 | 0) + 1 | 0;if ((r | 0) < 9) {
	                        t = 10;do {
	                          t = t * 10 | 0;r = r + 1 | 0;
	                        } while ((r | 0) != 9);
	                      } else t = 10;x = c[u >> 2] | 0;y = (x >>> 0) % (t >>> 0) | 0;r = (u + 4 | 0) == (o | 0);do {
	                        if (r & (y | 0) == 0) r = u;else {
	                          v = (((x >>> 0) / (t >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;w = (t | 0) / 2 | 0;if (y >>> 0 < w >>> 0) q = .5;else q = r & (y | 0) == (w | 0) ? 1.0 : 1.5;do {
	                            if (H) {
	                              if ((a[I >> 0] | 0) != 45) break;q = -q;v = -v;
	                            }
	                          } while (0);r = x - y | 0;c[u >> 2] = r;if (!(v + q != v)) {
	                            r = u;break;
	                          }C = r + t | 0;c[u >> 2] = C;if (C >>> 0 > 999999999) {
	                            r = u;while (1) {
	                              f = r + -4 | 0;c[r >> 2] = 0;if (f >>> 0 < p >>> 0) {
	                                p = p + -4 | 0;c[p >> 2] = 0;
	                              }C = (c[f >> 2] | 0) + 1 | 0;c[f >> 2] = C;if (C >>> 0 > 999999999) r = f;else {
	                                u = f;break;
	                              }
	                            }
	                          }f = (E - p >> 2) * 9 | 0;t = c[p >> 2] | 0;if (t >>> 0 < 10) {
	                            r = u;break;
	                          } else r = 10;do {
	                            r = r * 10 | 0;f = f + 1 | 0;
	                          } while (t >>> 0 >= r >>> 0);r = u;
	                        }
	                      } while (0);C = r + 4 | 0;o = o >>> 0 > C >>> 0 ? C : o;
	                    }y = 0 - f | 0;C = o;while (1) {
	                      if (C >>> 0 <= p >>> 0) {
	                        z = 0;break;
	                      }o = C + -4 | 0;if (!(c[o >> 2] | 0)) C = o;else {
	                        z = 1;break;
	                      }
	                    }do {
	                      if (A) {
	                        n = (B & 1 ^ 1) + n | 0;if ((n | 0) > (f | 0) & (f | 0) > -5) {
	                          u = F + -1 | 0;n = n + -1 - f | 0;
	                        } else {
	                          u = F + -2 | 0;n = n + -1 | 0;
	                        }o = J & 8;if (o | 0) {
	                          w = o;break;
	                        }do {
	                          if (z) {
	                            t = c[C + -4 >> 2] | 0;if (!t) {
	                              r = 9;break;
	                            }if (!((t >>> 0) % 10 | 0)) {
	                              r = 0;o = 10;
	                            } else {
	                              r = 0;break;
	                            }do {
	                              o = o * 10 | 0;r = r + 1 | 0;
	                            } while (!((t >>> 0) % (o >>> 0) | 0 | 0));
	                          } else r = 9;
	                        } while (0);o = ((C - E >> 2) * 9 | 0) + -9 | 0;if ((u | 32 | 0) == 102) {
	                          w = o - r | 0;w = (w | 0) < 0 ? 0 : w;n = (n | 0) < (w | 0) ? n : w;w = 0;break;
	                        } else {
	                          w = o + f - r | 0;w = (w | 0) < 0 ? 0 : w;n = (n | 0) < (w | 0) ? n : w;w = 0;break;
	                        }
	                      } else {
	                        u = F;w = J & 8;
	                      }
	                    } while (0);x = n | w;r = (x | 0) != 0 & 1;t = (u | 32 | 0) == 102;if (t) {
	                      y = 0;f = (f | 0) > 0 ? f : 0;
	                    } else {
	                      o = (f | 0) < 0 ? y : f;o = nc(o, ((o | 0) < 0) << 31 >> 31, X) | 0;if ((Z - o | 0) < 2) do {
	                        o = o + -1 | 0;a[o >> 0] = 48;
	                      } while ((Z - o | 0) < 2);a[o + -1 >> 0] = (f >> 31 & 2) + 43;f = o + -2 | 0;a[f >> 0] = u;y = f;f = Z - f | 0;
	                    }A = H + 1 + n + r + f | 0;qc(e, 32, s, A, J);if (!(c[e >> 2] & 32)) lc(I, H, e) | 0;qc(e, 48, s, A, J ^ 65536);do {
	                      if (t) {
	                        p = p >>> 0 > G >>> 0 ? G : p;o = p;do {
	                          f = nc(c[o >> 2] | 0, 0, ca) | 0;do {
	                            if ((o | 0) == (p | 0)) {
	                              if ((f | 0) != (ca | 0)) break;a[ea >> 0] = 48;f = ea;
	                            } else {
	                              if (f >>> 0 <= ha >>> 0) break;jd(ha | 0, 48, f - V | 0) | 0;do {
	                                f = f + -1 | 0;
	                              } while (f >>> 0 > ha >>> 0);
	                            }
	                          } while (0);if (!(c[e >> 2] & 32)) lc(f, da - f | 0, e) | 0;o = o + 4 | 0;
	                        } while (o >>> 0 <= G >>> 0);do {
	                          if (x | 0) {
	                            if (c[e >> 2] & 32 | 0) break;lc(13706, 1, e) | 0;
	                          }
	                        } while (0);if ((n | 0) > 0 & o >>> 0 < C >>> 0) while (1) {
	                          f = nc(c[o >> 2] | 0, 0, ca) | 0;if (f >>> 0 > ha >>> 0) {
	                            jd(ha | 0, 48, f - V | 0) | 0;do {
	                              f = f + -1 | 0;
	                            } while (f >>> 0 > ha >>> 0);
	                          }if (!(c[e >> 2] & 32)) lc(f, (n | 0) > 9 ? 9 : n, e) | 0;o = o + 4 | 0;f = n + -9 | 0;if (!((n | 0) > 9 & o >>> 0 < C >>> 0)) {
	                            n = f;break;
	                          } else n = f;
	                        }qc(e, 48, n + 9 | 0, 9, 0);
	                      } else {
	                        u = z ? C : p + 4 | 0;if ((n | 0) > -1) {
	                          t = (w | 0) == 0;r = p;do {
	                            f = nc(c[r >> 2] | 0, 0, ca) | 0;if ((f | 0) == (ca | 0)) {
	                              a[ea >> 0] = 48;f = ea;
	                            }do {
	                              if ((r | 0) == (p | 0)) {
	                                o = f + 1 | 0;if (!(c[e >> 2] & 32)) lc(f, 1, e) | 0;if (t & (n | 0) < 1) {
	                                  f = o;break;
	                                }if (c[e >> 2] & 32 | 0) {
	                                  f = o;break;
	                                }lc(13706, 1, e) | 0;f = o;
	                              } else {
	                                if (f >>> 0 <= ha >>> 0) break;jd(ha | 0, 48, f + W | 0) | 0;do {
	                                  f = f + -1 | 0;
	                                } while (f >>> 0 > ha >>> 0);
	                              }
	                            } while (0);o = da - f | 0;if (!(c[e >> 2] & 32)) lc(f, (n | 0) > (o | 0) ? o : n, e) | 0;n = n - o | 0;r = r + 4 | 0;
	                          } while (r >>> 0 < u >>> 0 & (n | 0) > -1);
	                        }qc(e, 48, n + 18 | 0, 18, 0);if (c[e >> 2] & 32 | 0) break;lc(y, Z - y | 0, e) | 0;
	                      }
	                    } while (0);qc(e, 32, s, A, J ^ 8192);n = (A | 0) < (s | 0) ? s : A;
	                  } else {
	                    r = (F & 32 | 0) != 0;p = q != q | 0.0 != 0.0;f = p ? 0 : H;o = f + 3 | 0;qc(e, 32, s, o, t);n = c[e >> 2] | 0;if (!(n & 32)) {
	                      lc(I, f, e) | 0;n = c[e >> 2] | 0;
	                    }if (!(n & 32)) lc(p ? r ? 13698 : 13702 : r ? 13690 : 13694, 3, e) | 0;qc(e, 32, s, o, J ^ 8192);n = (o | 0) < (s | 0) ? s : o;
	                  }
	                } while (0);s = L;f = K;continue a;
	              }default:
	              {
	                w = 0;u = 13654;o = Q;n = x;t = J;
	              }}
	        } while (0);g: do {
	          if ((M | 0) == 63) {
	            p = ia;o = c[p >> 2] | 0;p = c[p + 4 >> 2] | 0;r = t & 32;if ((o | 0) == 0 & (p | 0) == 0) {
	              f = Q;o = 0;p = 0;
	            } else {
	              f = Q;do {
	                f = f + -1 | 0;a[f >> 0] = d[13638 + (o & 15) >> 0] | r;o = kd(o | 0, p | 0, 4) | 0;p = D;
	              } while (!((o | 0) == 0 & (p | 0) == 0));p = ia;o = c[p >> 2] | 0;p = c[p + 4 >> 2] | 0;
	            }p = (n & 8 | 0) == 0 | (o | 0) == 0 & (p | 0) == 0;o = p ? 0 : 2;p = p ? 13654 : 13654 + (t >> 4) | 0;r = u;M = 76;
	          } else if ((M | 0) == 75) {
	            f = nc(n, f, Q) | 0;r = x;n = J;M = 76;
	          } else if ((M | 0) == 81) {
	            M = 0;J = pc(n, 0, x) | 0;I = (J | 0) == 0;f = n;w = 0;u = 13654;o = I ? n + x | 0 : J;n = I ? x : J - n | 0;
	          } else if ((M | 0) == 85) {
	            M = 0;r = o;n = 0;f = 0;while (1) {
	              p = c[r >> 2] | 0;if (!p) break;f = rc(O, p) | 0;if ((f | 0) < 0 | f >>> 0 > (t - n | 0) >>> 0) break;n = f + n | 0;if (t >>> 0 > n >>> 0) r = r + 4 | 0;else break;
	            }if ((f | 0) < 0) {
	              m = -1;break a;
	            }qc(e, 32, s, n, J);if (!n) {
	              n = 0;M = 96;
	            } else {
	              p = 0;while (1) {
	                f = c[o >> 2] | 0;if (!f) {
	                  M = 96;break g;
	                }f = rc(O, f) | 0;p = f + p | 0;if ((p | 0) > (n | 0)) {
	                  M = 96;break g;
	                }if (!(c[e >> 2] & 32)) lc(O, f, e) | 0;if (p >>> 0 >= n >>> 0) {
	                  M = 96;break;
	                } else o = o + 4 | 0;
	              }
	            }
	          }
	        } while (0);if ((M | 0) == 96) {
	          M = 0;qc(e, 32, s, n, J ^ 8192);n = (s | 0) > (n | 0) ? s : n;s = L;f = K;continue;
	        }if ((M | 0) == 76) {
	          M = 0;t = (r | 0) > -1 ? n & -65537 : n;n = ia;n = (c[n >> 2] | 0) != 0 | (c[n + 4 >> 2] | 0) != 0;if ((r | 0) != 0 | n) {
	            n = (n & 1 ^ 1) + (R - f) | 0;w = o;u = p;o = Q;n = (r | 0) > (n | 0) ? r : n;
	          } else {
	            f = Q;w = o;u = p;o = Q;n = 0;
	          }
	        }r = o - f | 0;o = (n | 0) < (r | 0) ? r : n;p = o + w | 0;n = (s | 0) < (p | 0) ? p : s;qc(e, 32, n, p, t);if (!(c[e >> 2] & 32)) lc(u, w, e) | 0;qc(e, 48, n, p, t ^ 65536);qc(e, 48, o, r, 0);if (!(c[e >> 2] & 32)) lc(f, r, e) | 0;qc(e, 32, n, p, t ^ 8192);s = L;f = K;
	      }h: do {
	        if ((M | 0) == 243) if (!e) if (!s) m = 0;else {
	          m = 1;while (1) {
	            n = c[k + (m << 2) >> 2] | 0;if (!n) break;mc(j + (m << 3) | 0, n, g);m = m + 1 | 0;if ((m | 0) >= 10) {
	              m = 1;break h;
	            }
	          }while (1) {
	            if (c[k + (m << 2) >> 2] | 0) {
	              m = -1;break h;
	            }m = m + 1 | 0;if ((m | 0) >= 10) {
	              m = 1;break;
	            }
	          }
	        }
	      } while (0);i = ja;return m | 0;
	    }function kc(a) {
	      a = a | 0;return 0;
	    }function lc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;f = e + 16 | 0;g = c[f >> 2] | 0;if (!g) {
	        if (!(vc(e) | 0)) {
	          f = c[f >> 2] | 0;h = 5;
	        } else f = 0;
	      } else {
	        f = g;h = 5;
	      }a: do {
	        if ((h | 0) == 5) {
	          i = e + 20 | 0;h = c[i >> 2] | 0;g = h;if ((f - h | 0) >>> 0 < d >>> 0) {
	            f = Ca[c[e + 36 >> 2] & 7](e, b, d) | 0;break;
	          }b: do {
	            if ((a[e + 75 >> 0] | 0) > -1) {
	              f = d;while (1) {
	                if (!f) {
	                  h = d;f = 0;break b;
	                }h = f + -1 | 0;if ((a[b + h >> 0] | 0) == 10) break;else f = h;
	              }if ((Ca[c[e + 36 >> 2] & 7](e, b, f) | 0) >>> 0 < f >>> 0) break a;h = d - f | 0;b = b + f | 0;g = c[i >> 2] | 0;
	            } else {
	              h = d;f = 0;
	            }
	          } while (0);td(g | 0, b | 0, h | 0) | 0;c[i >> 2] = (c[i >> 2] | 0) + h;f = f + h | 0;
	        }
	      } while (0);return f | 0;
	    }function mc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0.0;a: do {
	        if (b >>> 0 <= 20) do {
	          switch (b | 0) {case 9:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;c[a >> 2] = b;break a;
	              }case 10:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;e = a;c[e >> 2] = b;c[e + 4 >> 2] = ((b | 0) < 0) << 31 >> 31;break a;
	              }case 11:
	              {
	                e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);b = c[e >> 2] | 0;c[d >> 2] = e + 4;e = a;c[e >> 2] = b;c[e + 4 >> 2] = 0;break a;
	              }case 12:
	              {
	                e = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);b = e;f = c[b >> 2] | 0;b = c[b + 4 >> 2] | 0;c[d >> 2] = e + 8;e = a;c[e >> 2] = f;c[e + 4 >> 2] = b;break a;
	              }case 13:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;e = (e & 65535) << 16 >> 16;f = a;c[f >> 2] = e;c[f + 4 >> 2] = ((e | 0) < 0) << 31 >> 31;break a;
	              }case 14:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;f = a;c[f >> 2] = e & 65535;c[f + 4 >> 2] = 0;break a;
	              }case 15:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;e = (e & 255) << 24 >> 24;f = a;c[f >> 2] = e;c[f + 4 >> 2] = ((e | 0) < 0) << 31 >> 31;break a;
	              }case 16:
	              {
	                f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);e = c[f >> 2] | 0;c[d >> 2] = f + 4;f = a;c[f >> 2] = e & 255;c[f + 4 >> 2] = 0;break a;
	              }case 17:
	              {
	                f = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);g = +h[f >> 3];c[d >> 2] = f + 8;h[a >> 3] = g;break a;
	              }case 18:
	              {
	                f = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);g = +h[f >> 3];c[d >> 2] = f + 8;h[a >> 3] = g;break a;
	              }default:
	              break a;}
	        } while (0);
	      } while (0);return;
	    }function nc(b, c, d) {
	      b = b | 0;c = c | 0;d = d | 0;var e = 0;if (c >>> 0 > 0 | (c | 0) == 0 & b >>> 0 > 4294967295) {
	        while (1) {
	          e = sd(b | 0, c | 0, 10, 0) | 0;d = d + -1 | 0;a[d >> 0] = e | 48;e = b;b = od(b | 0, c | 0, 10, 0) | 0;if (!(c >>> 0 > 9 | (c | 0) == 9 & e >>> 0 > 4294967295)) break;else c = D;
	        }c = b;
	      } else c = b;if (c) while (1) {
	        d = d + -1 | 0;a[d >> 0] = (c >>> 0) % 10 | 0 | 48;if (c >>> 0 < 10) break;else c = (c >>> 0) / 10 | 0;
	      }return d | 0;
	    }function oc(b) {
	      b = b | 0;var c = 0,
	          e = 0;e = 0;while (1) {
	        if ((d[13708 + e >> 0] | 0) == (b | 0)) {
	          b = 2;break;
	        }c = e + 1 | 0;if ((c | 0) == 87) {
	          c = 13796;e = 87;b = 5;break;
	        } else e = c;
	      }if ((b | 0) == 2) if (!e) c = 13796;else {
	        c = 13796;b = 5;
	      }if ((b | 0) == 5) while (1) {
	        do {
	          b = c;c = c + 1 | 0;
	        } while ((a[b >> 0] | 0) != 0);e = e + -1 | 0;if (!e) break;else b = 5;
	      }return c | 0;
	    }function pc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;h = d & 255;f = (e | 0) != 0;a: do {
	        if (f & (b & 3 | 0) != 0) {
	          g = d & 255;while (1) {
	            if ((a[b >> 0] | 0) == g << 24 >> 24) {
	              i = 6;break a;
	            }b = b + 1 | 0;e = e + -1 | 0;f = (e | 0) != 0;if (!(f & (b & 3 | 0) != 0)) {
	              i = 5;break;
	            }
	          }
	        } else i = 5;
	      } while (0);if ((i | 0) == 5) if (f) i = 6;else e = 0;b: do {
	        if ((i | 0) == 6) {
	          g = d & 255;if ((a[b >> 0] | 0) != g << 24 >> 24) {
	            f = S(h, 16843009) | 0;c: do {
	              if (e >>> 0 > 3) while (1) {
	                h = c[b >> 2] ^ f;if ((h & -2139062144 ^ -2139062144) & h + -16843009 | 0) break;b = b + 4 | 0;e = e + -4 | 0;if (e >>> 0 <= 3) {
	                  i = 11;break c;
	                }
	              } else i = 11;
	            } while (0);if ((i | 0) == 11) if (!e) {
	              e = 0;break;
	            }while (1) {
	              if ((a[b >> 0] | 0) == g << 24 >> 24) break b;b = b + 1 | 0;e = e + -1 | 0;if (!e) {
	                e = 0;break;
	              }
	            }
	          }
	        }
	      } while (0);return (e | 0 ? b : 0) | 0;
	    }function qc(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0;j = i;i = i + 256 | 0;h = j;do {
	        if ((d | 0) > (e | 0) & (f & 73728 | 0) == 0) {
	          f = d - e | 0;jd(h | 0, b | 0, (f >>> 0 > 256 ? 256 : f) | 0) | 0;b = c[a >> 2] | 0;g = (b & 32 | 0) == 0;if (f >>> 0 > 255) {
	            d = d - e | 0;do {
	              if (g) {
	                lc(h, 256, a) | 0;b = c[a >> 2] | 0;
	              }f = f + -256 | 0;g = (b & 32 | 0) == 0;
	            } while (f >>> 0 > 255);if (g) f = d & 255;else break;
	          } else if (!g) break;lc(h, f, a) | 0;
	        }
	      } while (0);i = j;return;
	    }function rc(a, b) {
	      a = a | 0;b = b | 0;if (!a) a = 0;else a = uc(a, b, 0) | 0;return a | 0;
	    }function sc(a, b) {
	      a = +a;b = b | 0;return + +tc(a, b);
	    }function tc(a, b) {
	      a = +a;b = b | 0;var d = 0,
	          e = 0,
	          f = 0;h[l >> 3] = a;d = c[l >> 2] | 0;e = c[l + 4 >> 2] | 0;f = kd(d | 0, e | 0, 52) | 0;switch (f & 2047) {case 0:
	          {
	            if (a != 0.0) {
	              a = +tc(a * 18446744073709551616.0, b);d = (c[b >> 2] | 0) + -64 | 0;
	            } else d = 0;c[b >> 2] = d;break;
	          }case 2047:
	          break;default:
	          {
	            c[b >> 2] = (f & 2047) + -1022;c[l >> 2] = d;c[l + 4 >> 2] = e & -2146435073 | 1071644672;a = +h[l >> 3];
	          }}return +a;
	    }function uc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;do {
	        if (b) {
	          if (d >>> 0 < 128) {
	            a[b >> 0] = d;b = 1;break;
	          }if (d >>> 0 < 2048) {
	            a[b >> 0] = d >>> 6 | 192;a[b + 1 >> 0] = d & 63 | 128;b = 2;break;
	          }if (d >>> 0 < 55296 | (d & -8192 | 0) == 57344) {
	            a[b >> 0] = d >>> 12 | 224;a[b + 1 >> 0] = d >>> 6 & 63 | 128;a[b + 2 >> 0] = d & 63 | 128;b = 3;break;
	          }if ((d + -65536 | 0) >>> 0 < 1048576) {
	            a[b >> 0] = d >>> 18 | 240;a[b + 1 >> 0] = d >>> 12 & 63 | 128;a[b + 2 >> 0] = d >>> 6 & 63 | 128;a[b + 3 >> 0] = d & 63 | 128;b = 4;break;
	          } else {
	            c[(Pb() | 0) >> 2] = 84;b = -1;break;
	          }
	        } else b = 1;
	      } while (0);return b | 0;
	    }function vc(b) {
	      b = b | 0;var d = 0,
	          e = 0;d = b + 74 | 0;e = a[d >> 0] | 0;a[d >> 0] = e + 255 | e;d = c[b >> 2] | 0;if (!(d & 8)) {
	        c[b + 8 >> 2] = 0;c[b + 4 >> 2] = 0;e = c[b + 44 >> 2] | 0;c[b + 28 >> 2] = e;c[b + 20 >> 2] = e;c[b + 16 >> 2] = e + (c[b + 48 >> 2] | 0);b = 0;
	      } else {
	        c[b >> 2] = d | 32;b = -1;
	      }return b | 0;
	    }function wc(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0;g = i;i = i + 32 | 0;f = g + 16 | 0;e = g;if (pc(15600, a[d >> 0] | 0, 4) | 0) {
	        h = Dc(d) | 0 | 32768;c[e >> 2] = b;c[e + 4 >> 2] = h;c[e + 8 >> 2] = 438;e = Ob(sa(5, e | 0) | 0) | 0;if ((e | 0) >= 0) {
	          b = Ec(e, d) | 0;if (!b) {
	            c[f >> 2] = e;na(6, f | 0) | 0;b = 0;
	          }
	        } else b = 0;
	      } else {
	        c[(Pb() | 0) >> 2] = 22;b = 0;
	      }i = g;return b | 0;
	    }function xc(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0;e = (c[a >> 2] & 1 | 0) != 0;if (!e) {
	        ma(15632);d = c[a + 52 >> 2] | 0;b = a + 56 | 0;if (d | 0) c[d + 56 >> 2] = c[b >> 2];b = c[b >> 2] | 0;if (b | 0) c[b + 52 >> 2] = d;if ((c[3907] | 0) == (a | 0)) c[3907] = b;va(15632);
	      }b = yc(a) | 0;b = Fa[c[a + 12 >> 2] & 1](a) | 0 | b;d = c[a + 92 >> 2] | 0;if (d | 0) cd(d);if (!e) cd(a);return b | 0;
	    }function yc(a) {
	      a = a | 0;var b = 0,
	          d = 0;do {
	        if (a) {
	          if ((c[a + 76 >> 2] | 0) <= -1) {
	            b = zc(a) | 0;break;
	          }d = (kc(a) | 0) == 0;b = zc(a) | 0;if (!d) Sb(a);
	        } else {
	          if (!(c[2079] | 0)) b = 0;else b = yc(c[2079] | 0) | 0;ma(15632);a = c[3907] | 0;if (a) do {
	            if ((c[a + 76 >> 2] | 0) > -1) d = kc(a) | 0;else d = 0;if ((c[a + 20 >> 2] | 0) >>> 0 > (c[a + 28 >> 2] | 0) >>> 0) b = zc(a) | 0 | b;if (d | 0) Sb(a);a = c[a + 56 >> 2] | 0;
	          } while ((a | 0) != 0);va(15632);
	        }
	      } while (0);return b | 0;
	    }function zc(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0;b = a + 20 | 0;h = a + 28 | 0;if ((c[b >> 2] | 0) >>> 0 > (c[h >> 2] | 0) >>> 0 ? (Ca[c[a + 36 >> 2] & 7](a, 0, 0) | 0, (c[b >> 2] | 0) == 0) : 0) a = -1;else {
	        d = a + 4 | 0;e = c[d >> 2] | 0;f = a + 8 | 0;g = c[f >> 2] | 0;if (e >>> 0 < g >>> 0) Ca[c[a + 40 >> 2] & 7](a, e - g | 0, 1) | 0;c[a + 16 >> 2] = 0;c[h >> 2] = 0;c[b >> 2] = 0;c[f >> 2] = 0;c[d >> 2] = 0;a = 0;
	      }return a | 0;
	    }function Ac(e, f, j) {
	      e = e | 0;f = f | 0;j = j | 0;var k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0.0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0,
	          M = 0,
	          N = 0,
	          O = 0,
	          P = 0,
	          Q = 0,
	          R = 0;R = i;i = i + 304 | 0;K = R + 16 | 0;L = R + 8 | 0;M = R + 33 | 0;N = R;O = R + 32 | 0;if ((c[e + 76 >> 2] | 0) > -1) Q = kc(e) | 0;else Q = 0;m = a[f >> 0] | 0;a: do {
	        if (m << 24 >> 24) {
	          z = e + 4 | 0;A = e + 100 | 0;B = e + 108 | 0;C = e + 8 | 0;E = M + 10 | 0;F = M + 33 | 0;y = L + 4 | 0;G = M + 46 | 0;H = M + 94 | 0;I = M + 1 | 0;J = M + 1 | 0;q = f;v = 0;f = 0;l = 0;k = 0;b: while (1) {
	            c: do {
	              if (!(_b(m & 255) | 0)) {
	                m = m << 24 >> 24 == 37;d: do {
	                  if (m) {
	                    n = q + 1 | 0;o = a[n >> 0] | 0;e: do {
	                      switch (o << 24 >> 24) {case 37:
	                          break d;case 42:
	                          {
	                            x = 0;n = q + 2 | 0;break;
	                          }default:
	                          {
	                            m = (o & 255) + -48 | 0;if (m >>> 0 < 10 ? (a[q + 2 >> 0] | 0) == 36 : 0) {
	                              c[K >> 2] = c[j >> 2];while (1) {
	                                x = (c[K >> 2] | 0) + (4 - 1) & ~(4 - 1);n = c[x >> 2] | 0;c[K >> 2] = x + 4;if (m >>> 0 > 1) m = m + -1 | 0;else break;
	                              }x = n;n = q + 3 | 0;break e;
	                            }w = (c[j >> 2] | 0) + (4 - 1) & ~(4 - 1);x = c[w >> 2] | 0;c[j >> 2] = w + 4;
	                          }}
	                    } while (0);q = a[n >> 0] | 0;m = q & 255;if ((m + -48 | 0) >>> 0 < 10) {
	                      o = 0;do {
	                        o = (o * 10 | 0) + -48 + m | 0;n = n + 1 | 0;q = a[n >> 0] | 0;m = q & 255;
	                      } while ((m + -48 | 0) >>> 0 < 10);
	                    } else o = 0;if (q << 24 >> 24 == 109) {
	                      q = n + 1 | 0;m = (x | 0) != 0 & 1;l = 0;k = 0;n = q;q = a[q >> 0] | 0;
	                    } else m = 0;r = n + 1 | 0;switch (q << 24 >> 24) {case 104:
	                        {
	                          w = (a[r >> 0] | 0) == 104;q = w ? -2 : -1;n = w ? n + 2 | 0 : r;break;
	                        }case 108:
	                        {
	                          w = (a[r >> 0] | 0) == 108;q = w ? 3 : 1;n = w ? n + 2 | 0 : r;break;
	                        }case 106:
	                        {
	                          q = 3;n = r;break;
	                        }case 116:case 122:
	                        {
	                          q = 1;n = r;break;
	                        }case 76:
	                        {
	                          q = 2;n = r;break;
	                        }case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:
	                        {
	                          q = 0;break;
	                        }default:
	                        {
	                          P = 154;break b;
	                        }}t = d[n >> 0] | 0;u = (t & 47 | 0) == 3;t = u ? t | 32 : t;u = u ? 1 : q;s = t & 255;switch (s << 24 >> 24) {case 99:
	                        {
	                          o = (o | 0) < 1 ? 1 : o;break;
	                        }case 91:
	                        break;case 110:
	                        {
	                          if (!x) {
	                            o = v;break c;
	                          }switch (u | 0) {case -2:
	                              {
	                                a[x >> 0] = v;o = v;break c;
	                              }case -1:
	                              {
	                                b[x >> 1] = v;o = v;break c;
	                              }case 0:
	                              {
	                                c[x >> 2] = v;o = v;break c;
	                              }case 1:
	                              {
	                                c[x >> 2] = v;o = v;break c;
	                              }case 3:
	                              {
	                                o = x;c[o >> 2] = v;c[o + 4 >> 2] = ((v | 0) < 0) << 31 >> 31;o = v;break c;
	                              }default:
	                              {
	                                o = v;break c;
	                              }}
	                        }default:
	                        {
	                          Vb(e, 0);do {
	                            q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                              c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                            } else q = Wb(e) | 0;
	                          } while ((_b(q) | 0) != 0);if (!(c[A >> 2] | 0)) q = c[z >> 2] | 0;else {
	                            q = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = q;
	                          }v = (c[B >> 2] | 0) + v + q - (c[C >> 2] | 0) | 0;
	                        }}Vb(e, o);q = c[z >> 2] | 0;r = c[A >> 2] | 0;if (q >>> 0 < r >>> 0) c[z >> 2] = q + 1;else {
	                      if ((Wb(e) | 0) < 0) {
	                        P = 154;break b;
	                      }r = c[A >> 2] | 0;
	                    }if (r | 0) c[z >> 2] = (c[z >> 2] | 0) + -1;f: do {
	                      switch (s << 24 >> 24) {case 91:case 99:case 115:
	                          {
	                            w = (t | 0) == 99;g: do {
	                              if ((t | 16 | 0) == 115) {
	                                jd(I | 0, -1, 256) | 0;a[M >> 0] = 0;if ((t | 0) == 115) {
	                                  a[F >> 0] = 0;a[E >> 0] = 0;a[E + 1 >> 0] = 0;a[E + 2 >> 0] = 0;a[E + 3 >> 0] = 0;a[E + 4 >> 0] = 0;
	                                }
	                              } else {
	                                s = n + 1 | 0;t = (a[s >> 0] | 0) == 94;q = t & 1;n = t ? n + 2 | 0 : s;jd(J | 0, t & 1 | 0, 256) | 0;a[M >> 0] = 0;switch (a[n >> 0] | 0) {case 45:
	                                    {
	                                      t = (q ^ 1) & 255;a[G >> 0] = t;n = n + 1 | 0;break;
	                                    }case 93:
	                                    {
	                                      t = (q ^ 1) & 255;a[H >> 0] = t;n = n + 1 | 0;break;
	                                    }default:
	                                    t = (q ^ 1) & 255;}while (1) {
	                                  q = a[n >> 0] | 0;h: do {
	                                    switch (q << 24 >> 24) {case 0:
	                                        {
	                                          P = 154;break b;
	                                        }case 93:
	                                        break g;case 45:
	                                        {
	                                          s = n + 1 | 0;q = a[s >> 0] | 0;switch (q << 24 >> 24) {case 93:case 0:
	                                              {
	                                                q = 45;break h;
	                                              }default:
	                                              {}}n = a[n + -1 >> 0] | 0;if ((n & 255) < (q & 255)) {
	                                            n = n & 255;do {
	                                              n = n + 1 | 0;a[M + n >> 0] = t;q = a[s >> 0] | 0;
	                                            } while ((n | 0) < (q & 255 | 0));n = s;
	                                          } else n = s;break;
	                                        }default:
	                                        {}}
	                                  } while (0);a[M + ((q & 255) + 1) >> 0] = t;n = n + 1 | 0;
	                                }
	                              }
	                            } while (0);q = w ? o + 1 | 0 : 31;t = (u | 0) == 1;u = (m | 0) != 0;i: do {
	                              if (t) {
	                                if (u) {
	                                  l = bd(q << 2) | 0;if (!l) {
	                                    k = 0;P = 154;break b;
	                                  }
	                                } else l = x;c[L >> 2] = 0;c[y >> 2] = 0;s = q;k = 0;j: while (1) {
	                                  r = (l | 0) == 0;do {
	                                    k: while (1) {
	                                      q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                                        c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                                      } else q = Wb(e) | 0;if (!(a[M + (q + 1) >> 0] | 0)) break j;a[O >> 0] = q;switch (Bc(N, O, 1, L) | 0) {case -1:
	                                          {
	                                            k = 0;P = 154;break b;
	                                          }case -2:
	                                          break;default:
	                                          break k;}
	                                    }if (!r) {
	                                      c[l + (k << 2) >> 2] = c[N >> 2];k = k + 1 | 0;
	                                    }
	                                  } while (!(u & (k | 0) == (s | 0)));k = s << 1 | 1;q = dd(l, k << 2) | 0;if (!q) {
	                                    k = 0;P = 154;break b;
	                                  } else {
	                                    r = s;s = k;l = q;k = r;
	                                  }
	                                }if (!(Cc(L) | 0)) {
	                                  k = 0;P = 154;break b;
	                                } else {
	                                  r = k;k = 0;
	                                }
	                              } else {
	                                if (u) {
	                                  k = bd(q) | 0;if (!k) {
	                                    k = 0;l = 0;P = 154;break b;
	                                  } else {
	                                    r = q;l = 0;
	                                  }while (1) {
	                                    do {
	                                      q = c[z >> 2] | 0;if (q >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                                        c[z >> 2] = q + 1;q = d[q >> 0] | 0;
	                                      } else q = Wb(e) | 0;if (!(a[M + (q + 1) >> 0] | 0)) {
	                                        r = l;l = 0;break i;
	                                      }a[k + l >> 0] = q;l = l + 1 | 0;
	                                    } while ((l | 0) != (r | 0));l = r << 1 | 1;q = dd(k, l) | 0;if (!q) {
	                                      l = 0;P = 154;break b;
	                                    } else {
	                                      s = r;r = l;k = q;l = s;
	                                    }
	                                  }
	                                }if (!x) {
	                                  l = r;while (1) {
	                                    k = c[z >> 2] | 0;if (k >>> 0 < l >>> 0) {
	                                      c[z >> 2] = k + 1;k = d[k >> 0] | 0;
	                                    } else k = Wb(e) | 0;if (!(a[M + (k + 1) >> 0] | 0)) {
	                                      r = 0;k = 0;l = 0;break i;
	                                    }l = c[A >> 2] | 0;
	                                  }
	                                } else {
	                                  q = 0;l = r;while (1) {
	                                    k = c[z >> 2] | 0;if (k >>> 0 < l >>> 0) {
	                                      c[z >> 2] = k + 1;k = d[k >> 0] | 0;
	                                    } else k = Wb(e) | 0;if (!(a[M + (k + 1) >> 0] | 0)) {
	                                      r = q;k = x;l = 0;break i;
	                                    }a[x + q >> 0] = k;q = q + 1 | 0;l = c[A >> 2] | 0;
	                                  }
	                                }
	                              }
	                            } while (0);if (!(c[A >> 2] | 0)) q = c[z >> 2] | 0;else {
	                              q = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = q;
	                            }q = q - (c[C >> 2] | 0) + (c[B >> 2] | 0) | 0;if (!q) break b;if (!((q | 0) == (o | 0) | w ^ 1)) break b;do {
	                              if (u) if (t) {
	                                c[x >> 2] = l;break;
	                              } else {
	                                c[x >> 2] = k;break;
	                              }
	                            } while (0);if (!w) {
	                              if (l | 0) c[l + (r << 2) >> 2] = 0;if (!k) {
	                                k = 0;break f;
	                              }a[k + r >> 0] = 0;
	                            }break;
	                          }case 120:case 88:case 112:
	                          {
	                            o = 16;P = 136;break;
	                          }case 111:
	                          {
	                            o = 8;P = 136;break;
	                          }case 117:case 100:
	                          {
	                            o = 10;P = 136;break;
	                          }case 105:
	                          {
	                            o = 0;P = 136;break;
	                          }case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:
	                          {
	                            p = +Zb(e, u, 0);if ((c[B >> 2] | 0) == ((c[C >> 2] | 0) - (c[z >> 2] | 0) | 0)) break b;if (x) switch (u | 0) {case 0:
	                                {
	                                  g[x >> 2] = p;break f;
	                                }case 1:
	                                {
	                                  h[x >> 3] = p;break f;
	                                }case 2:
	                                {
	                                  h[x >> 3] = p;break f;
	                                }default:
	                                break f;}break;
	                          }default:
	                          {}}
	                    } while (0);l: do {
	                      if ((P | 0) == 136) {
	                        P = 0;o = gc(e, o, 0, -1, -1) | 0;if ((c[B >> 2] | 0) == ((c[C >> 2] | 0) - (c[z >> 2] | 0) | 0)) break b;if ((x | 0) != 0 & (t | 0) == 112) {
	                          c[x >> 2] = o;break;
	                        }if (x) switch (u | 0) {case -2:
	                            {
	                              a[x >> 0] = o;break l;
	                            }case -1:
	                            {
	                              b[x >> 1] = o;break l;
	                            }case 0:
	                            {
	                              c[x >> 2] = o;break l;
	                            }case 1:
	                            {
	                              c[x >> 2] = o;break l;
	                            }case 3:
	                            {
	                              w = x;c[w >> 2] = o;c[w + 4 >> 2] = D;break l;
	                            }default:
	                            break l;}
	                      }
	                    } while (0);f = ((x | 0) != 0 & 1) + f | 0;o = (c[B >> 2] | 0) + v + (c[z >> 2] | 0) - (c[C >> 2] | 0) | 0;break c;
	                  }
	                } while (0);n = q + (m & 1) | 0;Vb(e, 0);m = c[z >> 2] | 0;if (m >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                  c[z >> 2] = m + 1;m = d[m >> 0] | 0;
	                } else m = Wb(e) | 0;if ((m | 0) != (d[n >> 0] | 0)) {
	                  P = 22;break b;
	                }o = v + 1 | 0;
	              } else {
	                n = q;while (1) {
	                  m = n + 1 | 0;if (!(_b(d[m >> 0] | 0) | 0)) break;else n = m;
	                }Vb(e, 0);do {
	                  m = c[z >> 2] | 0;if (m >>> 0 < (c[A >> 2] | 0) >>> 0) {
	                    c[z >> 2] = m + 1;m = d[m >> 0] | 0;
	                  } else m = Wb(e) | 0;
	                } while ((_b(m) | 0) != 0);if (!(c[A >> 2] | 0)) m = c[z >> 2] | 0;else {
	                  m = (c[z >> 2] | 0) + -1 | 0;c[z >> 2] = m;
	                }o = (c[B >> 2] | 0) + v + m - (c[C >> 2] | 0) | 0;
	              }
	            } while (0);q = n + 1 | 0;m = a[q >> 0] | 0;if (!(m << 24 >> 24)) break a;else v = o;
	          }if ((P | 0) == 22) {
	            if (c[A >> 2] | 0) c[z >> 2] = (c[z >> 2] | 0) + -1;if ((f | 0) != 0 | (m | 0) > -1) break;else {
	              m = 0;f = l;P = 155;
	            }
	          } else if ((P | 0) == 154) if (!f) {
	            f = l;P = 155;
	          }if ((P | 0) == 155) {
	            l = f;f = -1;
	          }if (m) {
	            cd(k);cd(l);
	          }
	        } else f = 0;
	      } while (0);if (Q | 0) Sb(e);i = R;return f | 0;
	    }function Bc(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;l = i;i = i + 16 | 0;g = l;j = (f | 0) == 0 ? 15652 : f;f = c[j >> 2] | 0;a: do {
	        if (!d) {
	          if (!f) f = 0;else k = 15;
	        } else {
	          h = (b | 0) == 0 ? g : b;if (!e) f = -2;else {
	            if (!f) {
	              f = a[d >> 0] | 0;b = f & 255;if (f << 24 >> 24 > -1) {
	                c[h >> 2] = b;f = f << 24 >> 24 != 0 & 1;break;
	              }f = b + -194 | 0;if (f >>> 0 > 50) {
	                k = 15;break;
	              }f = c[8436 + (f << 2) >> 2] | 0;g = e + -1 | 0;if (g) {
	                d = d + 1 | 0;k = 9;
	              }
	            } else {
	              g = e;k = 9;
	            }b: do {
	              if ((k | 0) == 9) {
	                b = a[d >> 0] | 0;m = (b & 255) >>> 3;if ((m + -16 | m + (f >> 26)) >>> 0 > 7) {
	                  k = 15;break a;
	                }while (1) {
	                  d = d + 1 | 0;f = (b & 255) + -128 | f << 6;g = g + -1 | 0;if ((f | 0) >= 0) break;if (!g) break b;b = a[d >> 0] | 0;if ((b & -64) << 24 >> 24 != -128) {
	                    k = 15;break a;
	                  }
	                }c[j >> 2] = 0;c[h >> 2] = f;f = e - g | 0;break a;
	              }
	            } while (0);c[j >> 2] = f;f = -2;
	          }
	        }
	      } while (0);if ((k | 0) == 15) {
	        c[j >> 2] = 0;c[(Pb() | 0) >> 2] = 84;f = -1;
	      }i = l;return f | 0;
	    }function Cc(a) {
	      a = a | 0;if (!a) a = 1;else a = (c[a >> 2] | 0) == 0;return a & 1 | 0;
	    }function Dc(b) {
	      b = b | 0;var c = 0,
	          d = 0,
	          e = 0;d = (Fc(b, 43) | 0) == 0;c = a[b >> 0] | 0;d = d ? c << 24 >> 24 != 114 & 1 : 2;e = (Fc(b, 120) | 0) == 0;d = e ? d : d | 128;b = (Fc(b, 101) | 0) == 0;b = b ? d : d | 524288;b = c << 24 >> 24 == 114 ? b : b | 64;b = c << 24 >> 24 == 119 ? b | 512 : b;return (c << 24 >> 24 == 97 ? b | 1024 : b) | 0;
	    }function Ec(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;o = i;i = i + 112 | 0;n = o + 40 | 0;l = o + 24 | 0;k = o + 16 | 0;g = o;m = o + 52 | 0;f = a[d >> 0] | 0;if (pc(15600, f << 24 >> 24, 4) | 0) {
	        e = bd(1144) | 0;if (!e) e = 0;else {
	          h = e;j = h + 112 | 0;do {
	            c[h >> 2] = 0;h = h + 4 | 0;
	          } while ((h | 0) < (j | 0));if (!(Fc(d, 43) | 0)) c[e >> 2] = f << 24 >> 24 == 114 ? 8 : 4;if (Fc(d, 101) | 0) {
	            c[g >> 2] = b;c[g + 4 >> 2] = 2;c[g + 8 >> 2] = 1;ha(221, g | 0) | 0;f = a[d >> 0] | 0;
	          }if (f << 24 >> 24 == 97) {
	            c[k >> 2] = b;c[k + 4 >> 2] = 3;f = ha(221, k | 0) | 0;if (!(f & 1024)) {
	              c[l >> 2] = b;c[l + 4 >> 2] = 4;c[l + 8 >> 2] = f | 1024;ha(221, l | 0) | 0;
	            }d = c[e >> 2] | 128;c[e >> 2] = d;
	          } else d = c[e >> 2] | 0;c[e + 60 >> 2] = b;c[e + 44 >> 2] = e + 120;c[e + 48 >> 2] = 1024;f = e + 75 | 0;a[f >> 0] = -1;if ((d & 8 | 0) == 0 ? (c[n >> 2] = b, c[n + 4 >> 2] = 21505, c[n + 8 >> 2] = m, (ua(54, n | 0) | 0) == 0) : 0) a[f >> 0] = 10;c[e + 32 >> 2] = 3;c[e + 36 >> 2] = 6;c[e + 40 >> 2] = 2;c[e + 12 >> 2] = 1;if (!(c[3902] | 0)) c[e + 76 >> 2] = -1;ma(15632);f = c[3907] | 0;c[e + 56 >> 2] = f;if (f | 0) c[f + 52 >> 2] = e;c[3907] = e;va(15632);
	        }
	      } else {
	        c[(Pb() | 0) >> 2] = 22;e = 0;
	      }i = o;return e | 0;
	    }function Fc(b, c) {
	      b = b | 0;c = c | 0;b = Gc(b, c) | 0;return ((a[b >> 0] | 0) == (c & 255) << 24 >> 24 ? b : 0) | 0;
	    }function Gc(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0;f = d & 255;a: do {
	        if (!f) b = b + (Hc(b) | 0) | 0;else {
	          if (b & 3) {
	            e = d & 255;do {
	              g = a[b >> 0] | 0;if (g << 24 >> 24 == 0 ? 1 : g << 24 >> 24 == e << 24 >> 24) break a;b = b + 1 | 0;
	            } while ((b & 3 | 0) != 0);
	          }f = S(f, 16843009) | 0;e = c[b >> 2] | 0;b: do {
	            if (!((e & -2139062144 ^ -2139062144) & e + -16843009)) do {
	              g = e ^ f;if ((g & -2139062144 ^ -2139062144) & g + -16843009 | 0) break b;b = b + 4 | 0;e = c[b >> 2] | 0;
	            } while (!((e & -2139062144 ^ -2139062144) & e + -16843009 | 0));
	          } while (0);e = d & 255;while (1) {
	            g = a[b >> 0] | 0;if (g << 24 >> 24 == 0 ? 1 : g << 24 >> 24 == e << 24 >> 24) break;else b = b + 1 | 0;
	          }
	        }
	      } while (0);return b | 0;
	    }function Hc(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0;f = b;a: do {
	        if (!(f & 3)) e = 4;else {
	          d = f;while (1) {
	            if (!(a[b >> 0] | 0)) {
	              b = d;break a;
	            }b = b + 1 | 0;d = b;if (!(d & 3)) {
	              e = 4;break;
	            }
	          }
	        }
	      } while (0);if ((e | 0) == 4) {
	        while (1) {
	          d = c[b >> 2] | 0;if (!((d & -2139062144 ^ -2139062144) & d + -16843009)) b = b + 4 | 0;else break;
	        }if ((d & 255) << 24 >> 24) do {
	          b = b + 1 | 0;
	        } while ((a[b >> 0] | 0) != 0);
	      }return b - f | 0;
	    }function Ic(a, b) {
	      a = a | 0;b = b | 0;Jc(a, b) | 0;return a | 0;
	    }function Jc(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0;e = d;a: do {
	        if (!((e ^ b) & 3)) {
	          if (e & 3) do {
	            e = a[d >> 0] | 0;a[b >> 0] = e;if (!(e << 24 >> 24)) break a;d = d + 1 | 0;b = b + 1 | 0;
	          } while ((d & 3 | 0) != 0);e = c[d >> 2] | 0;if (!((e & -2139062144 ^ -2139062144) & e + -16843009)) {
	            f = b;while (1) {
	              d = d + 4 | 0;b = f + 4 | 0;c[f >> 2] = e;e = c[d >> 2] | 0;if ((e & -2139062144 ^ -2139062144) & e + -16843009 | 0) break;else f = b;
	            }
	          }f = 8;
	        } else f = 8;
	      } while (0);if ((f | 0) == 8) {
	        f = a[d >> 0] | 0;a[b >> 0] = f;if (f << 24 >> 24) do {
	          d = d + 1 | 0;b = b + 1 | 0;f = a[d >> 0] | 0;a[b >> 0] = f;
	        } while (f << 24 >> 24 != 0);
	      }return b | 0;
	    }function Kc(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;Lc(a, b, c) | 0;return a | 0;
	    }function Lc(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0;g = d;do {
	        if (!((g ^ b) & 3)) {
	          f = (e | 0) != 0;a: do {
	            if (f & (g & 3 | 0) != 0) while (1) {
	              g = a[d >> 0] | 0;a[b >> 0] = g;if (!(g << 24 >> 24)) break a;e = e + -1 | 0;d = d + 1 | 0;b = b + 1 | 0;f = (e | 0) != 0;if (!(f & (d & 3 | 0) != 0)) {
	                h = 5;break;
	              }
	            } else h = 5;
	          } while (0);if ((h | 0) == 5) if (!f) {
	            e = 0;break;
	          }if (a[d >> 0] | 0) {
	            b: do {
	              if (e >>> 0 > 3) {
	                f = d;while (1) {
	                  d = c[f >> 2] | 0;if ((d & -2139062144 ^ -2139062144) & d + -16843009 | 0) {
	                    d = f;break b;
	                  }c[b >> 2] = d;e = e + -4 | 0;d = f + 4 | 0;b = b + 4 | 0;if (e >>> 0 > 3) f = d;else break;
	                }
	              }
	            } while (0);h = 11;
	          }
	        } else h = 11;
	      } while (0);c: do {
	        if ((h | 0) == 11) if (!e) e = 0;else while (1) {
	          h = a[d >> 0] | 0;a[b >> 0] = h;if (!(h << 24 >> 24)) break c;e = e + -1 | 0;b = b + 1 | 0;if (!e) {
	            e = 0;break;
	          } else d = d + 1 | 0;
	        }
	      } while (0);jd(b | 0, 0, e | 0) | 0;return b | 0;
	    }function Mc(a) {
	      a = a | 0;var b = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        b = (kc(a) | 0) == 0;a = (c[a >> 2] | 0) >>> 5 & 1;
	      } else a = (c[a >> 2] | 0) >>> 5 & 1;return a | 0;
	    }function Nc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        e = (kc(a) | 0) == 0;b = Oc(a, b, d) | 0;if (!e) Sb(a);
	      } else b = Oc(a, b, d) | 0;return b | 0;
	    }function Oc(a, b, d) {
	      a = a | 0;b = b | 0;d = d | 0;var e = 0,
	          f = 0;if ((d | 0) == 1) b = b - (c[a + 8 >> 2] | 0) + (c[a + 4 >> 2] | 0) | 0;e = a + 20 | 0;f = a + 28 | 0;if ((c[e >> 2] | 0) >>> 0 > (c[f >> 2] | 0) >>> 0 ? (Ca[c[a + 36 >> 2] & 7](a, 0, 0) | 0, (c[e >> 2] | 0) == 0) : 0) b = -1;else {
	        c[a + 16 >> 2] = 0;c[f >> 2] = 0;c[e >> 2] = 0;if ((Ca[c[a + 40 >> 2] & 7](a, b, d) | 0) < 0) b = -1;else {
	          c[a + 8 >> 2] = 0;c[a + 4 >> 2] = 0;c[a >> 2] = c[a >> 2] & -17;b = 0;
	        }
	      }return b | 0;
	    }function Pc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = a;c[e + 4 >> 2] = b;b = Ob(xa(39, e | 0) | 0) | 0;i = d;return b | 0;
	    }function Qc(b, e) {
	      b = b | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0;m = i;i = i + 16 | 0;k = m;l = e & 255;a[k >> 0] = l;g = b + 16 | 0;h = c[g >> 2] | 0;if (!h) {
	        if (!(vc(b) | 0)) {
	          h = c[g >> 2] | 0;j = 4;
	        } else f = -1;
	      } else j = 4;do {
	        if ((j | 0) == 4) {
	          j = b + 20 | 0;g = c[j >> 2] | 0;if (g >>> 0 < h >>> 0 ? (f = e & 255, (f | 0) != (a[b + 75 >> 0] | 0)) : 0) {
	            c[j >> 2] = g + 1;a[g >> 0] = l;break;
	          }if ((Ca[c[b + 36 >> 2] & 7](b, k, 1) | 0) == 1) f = d[k >> 0] | 0;else f = -1;
	        }
	      } while (0);i = m;return f | 0;
	    }function Rc(a) {
	      a = a | 0;return Sc(a, c[2050] | 0) | 0;
	    }function Sc(b, d) {
	      b = b | 0;d = d | 0;var e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0;if ((c[d + 76 >> 2] | 0) >= 0 ? (kc(d) | 0) != 0 : 0) {
	        if ((a[d + 75 >> 0] | 0) != (b | 0) ? (g = d + 20 | 0, h = c[g >> 2] | 0, h >>> 0 < (c[d + 16 >> 2] | 0) >>> 0) : 0) {
	          c[g >> 2] = h + 1;a[h >> 0] = b;b = b & 255;
	        } else b = Qc(d, b) | 0;Sb(d);
	      } else i = 3;do {
	        if ((i | 0) == 3) {
	          if ((a[d + 75 >> 0] | 0) != (b | 0) ? (e = d + 20 | 0, f = c[e >> 2] | 0, f >>> 0 < (c[d + 16 >> 2] | 0) >>> 0) : 0) {
	            c[e >> 2] = f + 1;a[f >> 0] = b;b = b & 255;break;
	          }b = Qc(d, b) | 0;
	        }
	      } while (0);return b | 0;
	    }function Tc(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;f = S(d, b) | 0;if ((c[e + 76 >> 2] | 0) > -1) {
	        g = (kc(e) | 0) == 0;a = lc(a, f, e) | 0;if (!g) Sb(e);
	      } else a = lc(a, f, e) | 0;if ((a | 0) != (f | 0)) d = (a >>> 0) / (b >>> 0) | 0;return d | 0;
	    }function Uc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = b;b = ic(c[2050] | 0, a, e) | 0;i = d;return b | 0;
	    }function Vc(a, b) {
	      a = a | 0;b = b | 0;return (Tc(a, Hc(a) | 0, 1, b) | 0) + -1 | 0;
	    }function Wc(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;d = i;i = i + 16 | 0;e = d;c[e >> 2] = b;b = Xc(a, e) | 0;i = d;return b | 0;
	    }function Xc(a, b) {
	      a = a | 0;b = b | 0;return Ac(c[2080] | 0, a, b) | 0;
	    }function Yc(b, d, e, f) {
	      b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0;k = S(e, d) | 0;if ((c[f + 76 >> 2] | 0) > -1) j = kc(f) | 0;else j = 0;g = f + 74 | 0;i = a[g >> 0] | 0;a[g >> 0] = i + 255 | i;g = f + 4 | 0;i = c[g >> 2] | 0;h = (c[f + 8 >> 2] | 0) - i | 0;if ((h | 0) > 0) {
	        h = h >>> 0 < k >>> 0 ? h : k;td(b | 0, i | 0, h | 0) | 0;c[g >> 2] = i + h;g = k - h | 0;b = b + h | 0;
	      } else g = k;a: do {
	        if (!g) l = 13;else {
	          i = f + 32 | 0;while (1) {
	            if (Yb(f) | 0) break;h = Ca[c[i >> 2] & 7](f, b, g) | 0;if ((h + 1 | 0) >>> 0 < 2) break;g = g - h | 0;if (!g) {
	              l = 13;break a;
	            } else b = b + h | 0;
	          }if (j | 0) Sb(f);e = ((k - g | 0) >>> 0) / (d >>> 0) | 0;
	        }
	      } while (0);if ((l | 0) == 13) if (j) Sb(f);return e | 0;
	    }function Zc(a) {
	      a = a | 0;var b = 0;if ((c[a + 76 >> 2] | 0) > -1) {
	        b = (kc(a) | 0) == 0;a = _c(a) | 0;
	      } else a = _c(a) | 0;return a | 0;
	    }function _c(a) {
	      a = a | 0;var b = 0;if (!(c[a >> 2] & 128)) b = 1;else b = (c[a + 20 >> 2] | 0) >>> 0 > (c[a + 28 >> 2] | 0) >>> 0 ? 2 : 1;b = Ca[c[a + 40 >> 2] & 7](a, 0, b) | 0;if ((b | 0) >= 0) b = b - (c[a + 8 >> 2] | 0) + (c[a + 4 >> 2] | 0) + (c[a + 20 >> 2] | 0) - (c[a + 28 >> 2] | 0) | 0;return b | 0;
	    }function $c(b) {
	      b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0;f = c[2050] | 0;if ((c[f + 76 >> 2] | 0) > -1) g = kc(f) | 0;else g = 0;do {
	        if ((Vc(b, f) | 0) < 0) b = 1;else {
	          if ((a[f + 75 >> 0] | 0) != 10 ? (d = f + 20 | 0, e = c[d >> 2] | 0, e >>> 0 < (c[f + 16 >> 2] | 0) >>> 0) : 0) {
	            c[d >> 2] = e + 1;a[e >> 0] = 10;b = 0;break;
	          }b = (Qc(f, 10) | 0) < 0;
	        }
	      } while (0);if (g | 0) Sb(f);return b << 31 >> 31 | 0;
	    }function ad(a) {
	      a = a | 0;var b = 0,
	          d = 0;b = i;i = i + 16 | 0;d = b;c[d >> 2] = a;a = Ob(ya(12, d | 0) | 0) | 0;i = b;return a | 0;
	    }function bd(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0,
	          s = 0,
	          t = 0,
	          u = 0,
	          v = 0,
	          w = 0,
	          x = 0,
	          y = 0,
	          z = 0,
	          A = 0,
	          B = 0,
	          C = 0,
	          D = 0,
	          E = 0,
	          F = 0,
	          G = 0,
	          H = 0,
	          I = 0,
	          J = 0,
	          K = 0,
	          L = 0;L = i;i = i + 16 | 0;p = L;do {
	        if (a >>> 0 < 245) {
	          o = a >>> 0 < 11 ? 16 : a + 11 & -8;a = o >>> 3;t = c[3914] | 0;d = t >>> a;if (d & 3 | 0) {
	            a = (d & 1 ^ 1) + a | 0;d = 15696 + (a << 1 << 2) | 0;e = d + 8 | 0;f = c[e >> 2] | 0;g = f + 8 | 0;h = c[g >> 2] | 0;do {
	              if ((d | 0) != (h | 0)) {
	                if (h >>> 0 < (c[3918] | 0) >>> 0) pa();b = h + 12 | 0;if ((c[b >> 2] | 0) == (f | 0)) {
	                  c[b >> 2] = d;c[e >> 2] = h;break;
	                } else pa();
	              } else c[3914] = t & ~(1 << a);
	            } while (0);K = a << 3;c[f + 4 >> 2] = K | 3;K = f + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;K = g;i = L;return K | 0;
	          }s = c[3916] | 0;if (o >>> 0 > s >>> 0) {
	            if (d | 0) {
	              j = 2 << a;a = d << a & (j | 0 - j);a = (a & 0 - a) + -1 | 0;j = a >>> 12 & 16;a = a >>> j;e = a >>> 5 & 8;a = a >>> e;g = a >>> 2 & 4;a = a >>> g;d = a >>> 1 & 2;a = a >>> d;b = a >>> 1 & 1;b = (e | j | g | d | b) + (a >>> b) | 0;a = 15696 + (b << 1 << 2) | 0;d = a + 8 | 0;g = c[d >> 2] | 0;j = g + 8 | 0;e = c[j >> 2] | 0;do {
	                if ((a | 0) != (e | 0)) {
	                  if (e >>> 0 < (c[3918] | 0) >>> 0) pa();f = e + 12 | 0;if ((c[f >> 2] | 0) == (g | 0)) {
	                    c[f >> 2] = a;c[d >> 2] = e;k = t;break;
	                  } else pa();
	                } else {
	                  k = t & ~(1 << b);c[3914] = k;
	                }
	              } while (0);h = (b << 3) - o | 0;c[g + 4 >> 2] = o | 3;e = g + o | 0;c[e + 4 >> 2] = h | 1;c[e + h >> 2] = h;if (s | 0) {
	                f = c[3919] | 0;b = s >>> 3;d = 15696 + (b << 1 << 2) | 0;b = 1 << b;if (k & b) {
	                  b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                    l = a;m = b;
	                  }
	                } else {
	                  c[3914] = k | b;l = d;m = d + 8 | 0;
	                }c[m >> 2] = f;c[l + 12 >> 2] = f;c[f + 8 >> 2] = l;c[f + 12 >> 2] = d;
	              }c[3916] = h;c[3919] = e;K = j;i = L;return K | 0;
	            }l = c[3915] | 0;if (l) {
	              a = (l & 0 - l) + -1 | 0;J = a >>> 12 & 16;a = a >>> J;I = a >>> 5 & 8;a = a >>> I;K = a >>> 2 & 4;a = a >>> K;j = a >>> 1 & 2;a = a >>> j;k = a >>> 1 & 1;k = c[15960 + ((I | J | K | j | k) + (a >>> k) << 2) >> 2] | 0;a = k;j = k;k = (c[k + 4 >> 2] & -8) - o | 0;while (1) {
	                b = c[a + 16 >> 2] | 0;if (!b) {
	                  b = c[a + 20 >> 2] | 0;if (!b) break;
	                }K = (c[b + 4 >> 2] & -8) - o | 0;J = K >>> 0 < k >>> 0;a = b;j = J ? b : j;k = J ? K : k;
	              }f = c[3918] | 0;if (j >>> 0 < f >>> 0) pa();h = j + o | 0;if (j >>> 0 >= h >>> 0) pa();g = c[j + 24 >> 2] | 0;d = c[j + 12 >> 2] | 0;do {
	                if ((d | 0) == (j | 0)) {
	                  a = j + 20 | 0;b = c[a >> 2] | 0;if (!b) {
	                    a = j + 16 | 0;b = c[a >> 2] | 0;if (!b) {
	                      n = 0;break;
	                    }
	                  }while (1) {
	                    d = b + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                      b = e;a = d;continue;
	                    }d = b + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                      b = e;a = d;
	                    }
	                  }if (a >>> 0 < f >>> 0) pa();else {
	                    c[a >> 2] = 0;n = b;break;
	                  }
	                } else {
	                  e = c[j + 8 >> 2] | 0;if (e >>> 0 < f >>> 0) pa();b = e + 12 | 0;if ((c[b >> 2] | 0) != (j | 0)) pa();a = d + 8 | 0;if ((c[a >> 2] | 0) == (j | 0)) {
	                    c[b >> 2] = d;c[a >> 2] = e;n = d;break;
	                  } else pa();
	                }
	              } while (0);do {
	                if (g | 0) {
	                  b = c[j + 28 >> 2] | 0;a = 15960 + (b << 2) | 0;if ((j | 0) == (c[a >> 2] | 0)) {
	                    c[a >> 2] = n;if (!n) {
	                      c[3915] = l & ~(1 << b);break;
	                    }
	                  } else {
	                    if (g >>> 0 < (c[3918] | 0) >>> 0) pa();b = g + 16 | 0;if ((c[b >> 2] | 0) == (j | 0)) c[b >> 2] = n;else c[g + 20 >> 2] = n;if (!n) break;
	                  }a = c[3918] | 0;if (n >>> 0 < a >>> 0) pa();c[n + 24 >> 2] = g;b = c[j + 16 >> 2] | 0;do {
	                    if (b | 0) if (b >>> 0 < a >>> 0) pa();else {
	                      c[n + 16 >> 2] = b;c[b + 24 >> 2] = n;break;
	                    }
	                  } while (0);b = c[j + 20 >> 2] | 0;if (b | 0) if (b >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                    c[n + 20 >> 2] = b;c[b + 24 >> 2] = n;break;
	                  }
	                }
	              } while (0);if (k >>> 0 < 16) {
	                K = k + o | 0;c[j + 4 >> 2] = K | 3;K = j + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	              } else {
	                c[j + 4 >> 2] = o | 3;c[h + 4 >> 2] = k | 1;c[h + k >> 2] = k;if (s | 0) {
	                  e = c[3919] | 0;b = s >>> 3;d = 15696 + (b << 1 << 2) | 0;b = 1 << b;if (t & b) {
	                    b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                      q = a;r = b;
	                    }
	                  } else {
	                    c[3914] = t | b;q = d;r = d + 8 | 0;
	                  }c[r >> 2] = e;c[q + 12 >> 2] = e;c[e + 8 >> 2] = q;c[e + 12 >> 2] = d;
	                }c[3916] = k;c[3919] = h;
	              }K = j + 8 | 0;i = L;return K | 0;
	            }
	          }
	        } else if (a >>> 0 <= 4294967231) {
	          a = a + 11 | 0;o = a & -8;l = c[3915] | 0;if (l) {
	            e = 0 - o | 0;a = a >>> 8;if (a) {
	              if (o >>> 0 > 16777215) k = 31;else {
	                r = (a + 1048320 | 0) >>> 16 & 8;D = a << r;q = (D + 520192 | 0) >>> 16 & 4;D = D << q;k = (D + 245760 | 0) >>> 16 & 2;k = 14 - (q | r | k) + (D << k >>> 15) | 0;k = o >>> (k + 7 | 0) & 1 | k << 1;
	              }
	            } else k = 0;a = c[15960 + (k << 2) >> 2] | 0;a: do {
	              if (!a) {
	                d = 0;f = 0;D = 86;
	              } else {
	                f = 0;j = a;h = o << ((k | 0) == 31 ? 0 : 25 - (k >>> 1) | 0);d = 0;while (1) {
	                  a = (c[j + 4 >> 2] & -8) - o | 0;if (a >>> 0 < e >>> 0) if (!a) {
	                    a = j;e = 0;d = j;D = 90;break a;
	                  } else {
	                    f = j;e = a;
	                  }a = c[j + 20 >> 2] | 0;j = c[j + 16 + (h >>> 31 << 2) >> 2] | 0;d = (a | 0) == 0 | (a | 0) == (j | 0) ? d : a;a = (j | 0) == 0;if (a) {
	                    D = 86;break;
	                  } else h = h << (a & 1 ^ 1);
	                }
	              }
	            } while (0);if ((D | 0) == 86) {
	              if ((d | 0) == 0 & (f | 0) == 0) {
	                a = 2 << k;a = l & (a | 0 - a);if (!a) break;r = (a & 0 - a) + -1 | 0;m = r >>> 12 & 16;r = r >>> m;k = r >>> 5 & 8;r = r >>> k;n = r >>> 2 & 4;r = r >>> n;q = r >>> 1 & 2;r = r >>> q;d = r >>> 1 & 1;d = c[15960 + ((k | m | n | q | d) + (r >>> d) << 2) >> 2] | 0;
	              }if (!d) {
	                k = f;j = e;
	              } else {
	                a = f;D = 90;
	              }
	            }if ((D | 0) == 90) while (1) {
	              D = 0;r = (c[d + 4 >> 2] & -8) - o | 0;f = r >>> 0 < e >>> 0;e = f ? r : e;a = f ? d : a;f = c[d + 16 >> 2] | 0;if (f | 0) {
	                d = f;D = 90;continue;
	              }d = c[d + 20 >> 2] | 0;if (!d) {
	                k = a;j = e;break;
	              } else D = 90;
	            }if ((k | 0) != 0 ? j >>> 0 < ((c[3916] | 0) - o | 0) >>> 0 : 0) {
	              f = c[3918] | 0;if (k >>> 0 < f >>> 0) pa();h = k + o | 0;if (k >>> 0 >= h >>> 0) pa();g = c[k + 24 >> 2] | 0;d = c[k + 12 >> 2] | 0;do {
	                if ((d | 0) == (k | 0)) {
	                  a = k + 20 | 0;b = c[a >> 2] | 0;if (!b) {
	                    a = k + 16 | 0;b = c[a >> 2] | 0;if (!b) {
	                      s = 0;break;
	                    }
	                  }while (1) {
	                    d = b + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                      b = e;a = d;continue;
	                    }d = b + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                      b = e;a = d;
	                    }
	                  }if (a >>> 0 < f >>> 0) pa();else {
	                    c[a >> 2] = 0;s = b;break;
	                  }
	                } else {
	                  e = c[k + 8 >> 2] | 0;if (e >>> 0 < f >>> 0) pa();b = e + 12 | 0;if ((c[b >> 2] | 0) != (k | 0)) pa();a = d + 8 | 0;if ((c[a >> 2] | 0) == (k | 0)) {
	                    c[b >> 2] = d;c[a >> 2] = e;s = d;break;
	                  } else pa();
	                }
	              } while (0);do {
	                if (g) {
	                  b = c[k + 28 >> 2] | 0;a = 15960 + (b << 2) | 0;if ((k | 0) == (c[a >> 2] | 0)) {
	                    c[a >> 2] = s;if (!s) {
	                      t = l & ~(1 << b);c[3915] = t;break;
	                    }
	                  } else {
	                    if (g >>> 0 < (c[3918] | 0) >>> 0) pa();b = g + 16 | 0;if ((c[b >> 2] | 0) == (k | 0)) c[b >> 2] = s;else c[g + 20 >> 2] = s;if (!s) {
	                      t = l;break;
	                    }
	                  }a = c[3918] | 0;if (s >>> 0 < a >>> 0) pa();c[s + 24 >> 2] = g;b = c[k + 16 >> 2] | 0;do {
	                    if (b | 0) if (b >>> 0 < a >>> 0) pa();else {
	                      c[s + 16 >> 2] = b;c[b + 24 >> 2] = s;break;
	                    }
	                  } while (0);b = c[k + 20 >> 2] | 0;if (b) {
	                    if (b >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                      c[s + 20 >> 2] = b;c[b + 24 >> 2] = s;t = l;break;
	                    }
	                  } else t = l;
	                } else t = l;
	              } while (0);do {
	                if (j >>> 0 >= 16) {
	                  c[k + 4 >> 2] = o | 3;c[h + 4 >> 2] = j | 1;c[h + j >> 2] = j;b = j >>> 3;if (j >>> 0 < 256) {
	                    d = 15696 + (b << 1 << 2) | 0;a = c[3914] | 0;b = 1 << b;if (a & b) {
	                      b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                        B = a;C = b;
	                      }
	                    } else {
	                      c[3914] = a | b;B = d;C = d + 8 | 0;
	                    }c[C >> 2] = h;c[B + 12 >> 2] = h;c[h + 8 >> 2] = B;c[h + 12 >> 2] = d;break;
	                  }b = j >>> 8;if (b) {
	                    if (j >>> 0 > 16777215) b = 31;else {
	                      J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;b = (K + 245760 | 0) >>> 16 & 2;b = 14 - (I | J | b) + (K << b >>> 15) | 0;b = j >>> (b + 7 | 0) & 1 | b << 1;
	                    }
	                  } else b = 0;d = 15960 + (b << 2) | 0;c[h + 28 >> 2] = b;a = h + 16 | 0;c[a + 4 >> 2] = 0;c[a >> 2] = 0;a = 1 << b;if (!(t & a)) {
	                    c[3915] = t | a;c[d >> 2] = h;c[h + 24 >> 2] = d;c[h + 12 >> 2] = h;c[h + 8 >> 2] = h;break;
	                  }a = j << ((b | 0) == 31 ? 0 : 25 - (b >>> 1) | 0);e = c[d >> 2] | 0;while (1) {
	                    if ((c[e + 4 >> 2] & -8 | 0) == (j | 0)) {
	                      D = 148;break;
	                    }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                      D = 145;break;
	                    } else {
	                      a = a << 1;e = b;
	                    }
	                  }if ((D | 0) == 145) {
	                    if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                      c[d >> 2] = h;c[h + 24 >> 2] = e;c[h + 12 >> 2] = h;c[h + 8 >> 2] = h;break;
	                    }
	                  } else if ((D | 0) == 148) {
	                    b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3918] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                      c[a + 12 >> 2] = h;c[b >> 2] = h;c[h + 8 >> 2] = a;c[h + 12 >> 2] = e;c[h + 24 >> 2] = 0;break;
	                    } else pa();
	                  }
	                } else {
	                  K = j + o | 0;c[k + 4 >> 2] = K | 3;K = k + K + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	                }
	              } while (0);K = k + 8 | 0;i = L;return K | 0;
	            }
	          }
	        } else o = -1;
	      } while (0);d = c[3916] | 0;if (d >>> 0 >= o >>> 0) {
	        b = d - o | 0;a = c[3919] | 0;if (b >>> 0 > 15) {
	          K = a + o | 0;c[3919] = K;c[3916] = b;c[K + 4 >> 2] = b | 1;c[K + b >> 2] = b;c[a + 4 >> 2] = o | 3;
	        } else {
	          c[3916] = 0;c[3919] = 0;c[a + 4 >> 2] = d | 3;K = a + d + 4 | 0;c[K >> 2] = c[K >> 2] | 1;
	        }K = a + 8 | 0;i = L;return K | 0;
	      }j = c[3917] | 0;if (j >>> 0 > o >>> 0) {
	        I = j - o | 0;c[3917] = I;K = c[3920] | 0;J = K + o | 0;c[3920] = J;c[J + 4 >> 2] = I | 1;c[K + 4 >> 2] = o | 3;K = K + 8 | 0;i = L;return K | 0;
	      }if (!(c[4032] | 0)) {
	        c[4034] = 4096;c[4033] = 4096;c[4035] = -1;c[4036] = -1;c[4037] = 0;c[4025] = 0;a = p & -16 ^ 1431655768;c[p >> 2] = a;c[4032] = a;a = 4096;
	      } else a = c[4034] | 0;k = o + 48 | 0;l = o + 47 | 0;h = a + l | 0;f = 0 - a | 0;m = h & f;if (m >>> 0 <= o >>> 0) {
	        K = 0;i = L;return K | 0;
	      }a = c[4024] | 0;if (a | 0 ? (B = c[4022] | 0, C = B + m | 0, C >>> 0 <= B >>> 0 | C >>> 0 > a >>> 0) : 0) {
	        K = 0;i = L;return K | 0;
	      }b: do {
	        if (!(c[4025] & 4)) {
	          d = c[3920] | 0;c: do {
	            if (d) {
	              e = 16104;while (1) {
	                a = c[e >> 2] | 0;if (a >>> 0 <= d >>> 0 ? (u = e + 4 | 0, (a + (c[u >> 2] | 0) | 0) >>> 0 > d >>> 0) : 0) break;a = c[e + 8 >> 2] | 0;if (!a) {
	                  D = 172;break c;
	                } else e = a;
	              }d = h - j & f;if (d >>> 0 < 2147483647) {
	                a = rd(d | 0) | 0;if ((a | 0) == ((c[e >> 2] | 0) + (c[u >> 2] | 0) | 0)) {
	                  if ((a | 0) != (-1 | 0)) {
	                    h = d;g = a;D = 190;break b;
	                  }
	                } else {
	                  b = d;D = 180;
	                }
	              }
	            } else D = 172;
	          } while (0);do {
	            if (((D | 0) == 172 ? (g = rd(0) | 0, (g | 0) != (-1 | 0)) : 0) ? (b = g, v = c[4033] | 0, w = v + -1 | 0, b = ((w & b | 0) == 0 ? 0 : (w + b & 0 - v) - b | 0) + m | 0, v = c[4022] | 0, w = b + v | 0, b >>> 0 > o >>> 0 & b >>> 0 < 2147483647) : 0) {
	              C = c[4024] | 0;if (C | 0 ? w >>> 0 <= v >>> 0 | w >>> 0 > C >>> 0 : 0) break;a = rd(b | 0) | 0;if ((a | 0) == (g | 0)) {
	                h = b;D = 190;break b;
	              } else D = 180;
	            }
	          } while (0);d: do {
	            if ((D | 0) == 180) {
	              d = 0 - b | 0;do {
	                if (k >>> 0 > b >>> 0 & (b >>> 0 < 2147483647 & (a | 0) != (-1 | 0)) ? (x = c[4034] | 0, x = l - b + x & 0 - x, x >>> 0 < 2147483647) : 0) if ((rd(x | 0) | 0) == (-1 | 0)) {
	                  rd(d | 0) | 0;break d;
	                } else {
	                  b = x + b | 0;break;
	                }
	              } while (0);if ((a | 0) != (-1 | 0)) {
	                h = b;g = a;D = 190;break b;
	              }
	            }
	          } while (0);c[4025] = c[4025] | 4;D = 187;
	        } else D = 187;
	      } while (0);if ((((D | 0) == 187 ? m >>> 0 < 2147483647 : 0) ? (A = rd(m | 0) | 0, y = rd(0) | 0, A >>> 0 < y >>> 0 & ((A | 0) != (-1 | 0) & (y | 0) != (-1 | 0))) : 0) ? (z = y - A | 0, z >>> 0 > (o + 40 | 0) >>> 0) : 0) {
	        h = z;g = A;D = 190;
	      }if ((D | 0) == 190) {
	        b = (c[4022] | 0) + h | 0;c[4022] = b;if (b >>> 0 > (c[4023] | 0) >>> 0) c[4023] = b;l = c[3920] | 0;do {
	          if (l) {
	            b = 16104;while (1) {
	              a = c[b >> 2] | 0;d = b + 4 | 0;e = c[d >> 2] | 0;if ((g | 0) == (a + e | 0)) {
	                D = 200;break;
	              }f = c[b + 8 >> 2] | 0;if (!f) break;else b = f;
	            }if (((D | 0) == 200 ? (c[b + 12 >> 2] & 8 | 0) == 0 : 0) ? l >>> 0 < g >>> 0 & l >>> 0 >= a >>> 0 : 0) {
	              c[d >> 2] = e + h;K = l + 8 | 0;K = (K & 7 | 0) == 0 ? 0 : 0 - K & 7;J = l + K | 0;K = h - K + (c[3917] | 0) | 0;c[3920] = J;c[3917] = K;c[J + 4 >> 2] = K | 1;c[J + K + 4 >> 2] = 40;c[3921] = c[4036];break;
	            }b = c[3918] | 0;if (g >>> 0 < b >>> 0) {
	              c[3918] = g;j = g;
	            } else j = b;a = g + h | 0;b = 16104;while (1) {
	              if ((c[b >> 2] | 0) == (a | 0)) {
	                D = 208;break;
	              }b = c[b + 8 >> 2] | 0;if (!b) {
	                a = 16104;break;
	              }
	            }if ((D | 0) == 208) if (!(c[b + 12 >> 2] & 8)) {
	              c[b >> 2] = g;n = b + 4 | 0;c[n >> 2] = (c[n >> 2] | 0) + h;n = g + 8 | 0;n = g + ((n & 7 | 0) == 0 ? 0 : 0 - n & 7) | 0;b = a + 8 | 0;b = a + ((b & 7 | 0) == 0 ? 0 : 0 - b & 7) | 0;m = n + o | 0;k = b - n - o | 0;c[n + 4 >> 2] = o | 3;do {
	                if ((b | 0) != (l | 0)) {
	                  if ((b | 0) == (c[3919] | 0)) {
	                    K = (c[3916] | 0) + k | 0;c[3916] = K;c[3919] = m;c[m + 4 >> 2] = K | 1;c[m + K >> 2] = K;break;
	                  }a = c[b + 4 >> 2] | 0;if ((a & 3 | 0) == 1) {
	                    h = a & -8;f = a >>> 3;e: do {
	                      if (a >>> 0 >= 256) {
	                        g = c[b + 24 >> 2] | 0;e = c[b + 12 >> 2] | 0;do {
	                          if ((e | 0) == (b | 0)) {
	                            e = b + 16 | 0;d = e + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                              a = c[e >> 2] | 0;if (!a) {
	                                I = 0;break;
	                              } else d = e;
	                            }while (1) {
	                              e = a + 20 | 0;f = c[e >> 2] | 0;if (f | 0) {
	                                a = f;d = e;continue;
	                              }e = a + 16 | 0;f = c[e >> 2] | 0;if (!f) break;else {
	                                a = f;d = e;
	                              }
	                            }if (d >>> 0 < j >>> 0) pa();else {
	                              c[d >> 2] = 0;I = a;break;
	                            }
	                          } else {
	                            f = c[b + 8 >> 2] | 0;if (f >>> 0 < j >>> 0) pa();a = f + 12 | 0;if ((c[a >> 2] | 0) != (b | 0)) pa();d = e + 8 | 0;if ((c[d >> 2] | 0) == (b | 0)) {
	                              c[a >> 2] = e;c[d >> 2] = f;I = e;break;
	                            } else pa();
	                          }
	                        } while (0);if (!g) break;a = c[b + 28 >> 2] | 0;d = 15960 + (a << 2) | 0;do {
	                          if ((b | 0) != (c[d >> 2] | 0)) {
	                            if (g >>> 0 < (c[3918] | 0) >>> 0) pa();a = g + 16 | 0;if ((c[a >> 2] | 0) == (b | 0)) c[a >> 2] = I;else c[g + 20 >> 2] = I;if (!I) break e;
	                          } else {
	                            c[d >> 2] = I;if (I | 0) break;c[3915] = c[3915] & ~(1 << a);break e;
	                          }
	                        } while (0);e = c[3918] | 0;if (I >>> 0 < e >>> 0) pa();c[I + 24 >> 2] = g;a = b + 16 | 0;d = c[a >> 2] | 0;do {
	                          if (d | 0) if (d >>> 0 < e >>> 0) pa();else {
	                            c[I + 16 >> 2] = d;c[d + 24 >> 2] = I;break;
	                          }
	                        } while (0);a = c[a + 4 >> 2] | 0;if (!a) break;if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                          c[I + 20 >> 2] = a;c[a + 24 >> 2] = I;break;
	                        }
	                      } else {
	                        d = c[b + 8 >> 2] | 0;e = c[b + 12 >> 2] | 0;a = 15696 + (f << 1 << 2) | 0;do {
	                          if ((d | 0) != (a | 0)) {
	                            if (d >>> 0 < j >>> 0) pa();if ((c[d + 12 >> 2] | 0) == (b | 0)) break;pa();
	                          }
	                        } while (0);if ((e | 0) == (d | 0)) {
	                          c[3914] = c[3914] & ~(1 << f);break;
	                        }do {
	                          if ((e | 0) == (a | 0)) F = e + 8 | 0;else {
	                            if (e >>> 0 < j >>> 0) pa();a = e + 8 | 0;if ((c[a >> 2] | 0) == (b | 0)) {
	                              F = a;break;
	                            }pa();
	                          }
	                        } while (0);c[d + 12 >> 2] = e;c[F >> 2] = d;
	                      }
	                    } while (0);b = b + h | 0;f = h + k | 0;
	                  } else f = k;b = b + 4 | 0;c[b >> 2] = c[b >> 2] & -2;c[m + 4 >> 2] = f | 1;c[m + f >> 2] = f;b = f >>> 3;if (f >>> 0 < 256) {
	                    d = 15696 + (b << 1 << 2) | 0;a = c[3914] | 0;b = 1 << b;do {
	                      if (!(a & b)) {
	                        c[3914] = a | b;J = d;K = d + 8 | 0;
	                      } else {
	                        b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 >= (c[3918] | 0) >>> 0) {
	                          J = a;K = b;break;
	                        }pa();
	                      }
	                    } while (0);c[K >> 2] = m;c[J + 12 >> 2] = m;c[m + 8 >> 2] = J;c[m + 12 >> 2] = d;break;
	                  }b = f >>> 8;do {
	                    if (!b) b = 0;else {
	                      if (f >>> 0 > 16777215) {
	                        b = 31;break;
	                      }J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;b = (K + 245760 | 0) >>> 16 & 2;b = 14 - (I | J | b) + (K << b >>> 15) | 0;b = f >>> (b + 7 | 0) & 1 | b << 1;
	                    }
	                  } while (0);e = 15960 + (b << 2) | 0;c[m + 28 >> 2] = b;a = m + 16 | 0;c[a + 4 >> 2] = 0;c[a >> 2] = 0;a = c[3915] | 0;d = 1 << b;if (!(a & d)) {
	                    c[3915] = a | d;c[e >> 2] = m;c[m + 24 >> 2] = e;c[m + 12 >> 2] = m;c[m + 8 >> 2] = m;break;
	                  }a = f << ((b | 0) == 31 ? 0 : 25 - (b >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	                    if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	                      D = 278;break;
	                    }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                      D = 275;break;
	                    } else {
	                      a = a << 1;e = b;
	                    }
	                  }if ((D | 0) == 275) {
	                    if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                      c[d >> 2] = m;c[m + 24 >> 2] = e;c[m + 12 >> 2] = m;c[m + 8 >> 2] = m;break;
	                    }
	                  } else if ((D | 0) == 278) {
	                    b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3918] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                      c[a + 12 >> 2] = m;c[b >> 2] = m;c[m + 8 >> 2] = a;c[m + 12 >> 2] = e;c[m + 24 >> 2] = 0;break;
	                    } else pa();
	                  }
	                } else {
	                  K = (c[3917] | 0) + k | 0;c[3917] = K;c[3920] = m;c[m + 4 >> 2] = K | 1;
	                }
	              } while (0);K = n + 8 | 0;i = L;return K | 0;
	            } else a = 16104;while (1) {
	              b = c[a >> 2] | 0;if (b >>> 0 <= l >>> 0 ? (E = b + (c[a + 4 >> 2] | 0) | 0, E >>> 0 > l >>> 0) : 0) break;a = c[a + 8 >> 2] | 0;
	            }f = E + -47 | 0;a = f + 8 | 0;a = f + ((a & 7 | 0) == 0 ? 0 : 0 - a & 7) | 0;f = l + 16 | 0;a = a >>> 0 < f >>> 0 ? l : a;b = a + 8 | 0;d = g + 8 | 0;d = (d & 7 | 0) == 0 ? 0 : 0 - d & 7;K = g + d | 0;d = h + -40 - d | 0;c[3920] = K;c[3917] = d;c[K + 4 >> 2] = d | 1;c[K + d + 4 >> 2] = 40;c[3921] = c[4036];d = a + 4 | 0;c[d >> 2] = 27;c[b >> 2] = c[4026];c[b + 4 >> 2] = c[4027];c[b + 8 >> 2] = c[4028];c[b + 12 >> 2] = c[4029];c[4026] = g;c[4027] = h;c[4029] = 0;c[4028] = b;b = a + 24 | 0;do {
	              b = b + 4 | 0;c[b >> 2] = 7;
	            } while ((b + 4 | 0) >>> 0 < E >>> 0);if ((a | 0) != (l | 0)) {
	              g = a - l | 0;c[d >> 2] = c[d >> 2] & -2;c[l + 4 >> 2] = g | 1;c[a >> 2] = g;b = g >>> 3;if (g >>> 0 < 256) {
	                d = 15696 + (b << 1 << 2) | 0;a = c[3914] | 0;b = 1 << b;if (a & b) {
	                  b = d + 8 | 0;a = c[b >> 2] | 0;if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                    G = a;H = b;
	                  }
	                } else {
	                  c[3914] = a | b;G = d;H = d + 8 | 0;
	                }c[H >> 2] = l;c[G + 12 >> 2] = l;c[l + 8 >> 2] = G;c[l + 12 >> 2] = d;break;
	              }b = g >>> 8;if (b) {
	                if (g >>> 0 > 16777215) d = 31;else {
	                  J = (b + 1048320 | 0) >>> 16 & 8;K = b << J;I = (K + 520192 | 0) >>> 16 & 4;K = K << I;d = (K + 245760 | 0) >>> 16 & 2;d = 14 - (I | J | d) + (K << d >>> 15) | 0;d = g >>> (d + 7 | 0) & 1 | d << 1;
	                }
	              } else d = 0;e = 15960 + (d << 2) | 0;c[l + 28 >> 2] = d;c[l + 20 >> 2] = 0;c[f >> 2] = 0;b = c[3915] | 0;a = 1 << d;if (!(b & a)) {
	                c[3915] = b | a;c[e >> 2] = l;c[l + 24 >> 2] = e;c[l + 12 >> 2] = l;c[l + 8 >> 2] = l;break;
	              }a = g << ((d | 0) == 31 ? 0 : 25 - (d >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	                if ((c[e + 4 >> 2] & -8 | 0) == (g | 0)) {
	                  D = 304;break;
	                }d = e + 16 + (a >>> 31 << 2) | 0;b = c[d >> 2] | 0;if (!b) {
	                  D = 301;break;
	                } else {
	                  a = a << 1;e = b;
	                }
	              }if ((D | 0) == 301) {
	                if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                  c[d >> 2] = l;c[l + 24 >> 2] = e;c[l + 12 >> 2] = l;c[l + 8 >> 2] = l;break;
	                }
	              } else if ((D | 0) == 304) {
	                b = e + 8 | 0;a = c[b >> 2] | 0;K = c[3918] | 0;if (a >>> 0 >= K >>> 0 & e >>> 0 >= K >>> 0) {
	                  c[a + 12 >> 2] = l;c[b >> 2] = l;c[l + 8 >> 2] = a;c[l + 12 >> 2] = e;c[l + 24 >> 2] = 0;break;
	                } else pa();
	              }
	            }
	          } else {
	            K = c[3918] | 0;if ((K | 0) == 0 | g >>> 0 < K >>> 0) c[3918] = g;c[4026] = g;c[4027] = h;c[4029] = 0;c[3923] = c[4032];c[3922] = -1;b = 0;do {
	              K = 15696 + (b << 1 << 2) | 0;c[K + 12 >> 2] = K;c[K + 8 >> 2] = K;b = b + 1 | 0;
	            } while ((b | 0) != 32);K = g + 8 | 0;K = (K & 7 | 0) == 0 ? 0 : 0 - K & 7;J = g + K | 0;K = h + -40 - K | 0;c[3920] = J;c[3917] = K;c[J + 4 >> 2] = K | 1;c[J + K + 4 >> 2] = 40;c[3921] = c[4036];
	          }
	        } while (0);b = c[3917] | 0;if (b >>> 0 > o >>> 0) {
	          I = b - o | 0;c[3917] = I;K = c[3920] | 0;J = K + o | 0;c[3920] = J;c[J + 4 >> 2] = I | 1;c[K + 4 >> 2] = o | 3;K = K + 8 | 0;i = L;return K | 0;
	        }
	      }c[(Pb() | 0) >> 2] = 12;K = 0;i = L;return K | 0;
	    }function cd(a) {
	      a = a | 0;var b = 0,
	          d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0;if (!a) return;d = a + -8 | 0;h = c[3918] | 0;if (d >>> 0 < h >>> 0) pa();a = c[a + -4 >> 2] | 0;b = a & 3;if ((b | 0) == 1) pa();e = a & -8;n = d + e | 0;do {
	        if (!(a & 1)) {
	          a = c[d >> 2] | 0;if (!b) return;k = d + (0 - a) | 0;j = a + e | 0;if (k >>> 0 < h >>> 0) pa();if ((k | 0) == (c[3919] | 0)) {
	            a = n + 4 | 0;b = c[a >> 2] | 0;if ((b & 3 | 0) != 3) {
	              q = k;f = j;break;
	            }c[3916] = j;c[a >> 2] = b & -2;c[k + 4 >> 2] = j | 1;c[k + j >> 2] = j;return;
	          }e = a >>> 3;if (a >>> 0 < 256) {
	            b = c[k + 8 >> 2] | 0;d = c[k + 12 >> 2] | 0;a = 15696 + (e << 1 << 2) | 0;if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < h >>> 0) pa();if ((c[b + 12 >> 2] | 0) != (k | 0)) pa();
	            }if ((d | 0) == (b | 0)) {
	              c[3914] = c[3914] & ~(1 << e);q = k;f = j;break;
	            }if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < h >>> 0) pa();a = d + 8 | 0;if ((c[a >> 2] | 0) == (k | 0)) g = a;else pa();
	            } else g = d + 8 | 0;c[b + 12 >> 2] = d;c[g >> 2] = b;q = k;f = j;break;
	          }g = c[k + 24 >> 2] | 0;d = c[k + 12 >> 2] | 0;do {
	            if ((d | 0) == (k | 0)) {
	              d = k + 16 | 0;b = d + 4 | 0;a = c[b >> 2] | 0;if (!a) {
	                a = c[d >> 2] | 0;if (!a) {
	                  i = 0;break;
	                } else b = d;
	              }while (1) {
	                d = a + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                  a = e;b = d;continue;
	                }d = a + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                  a = e;b = d;
	                }
	              }if (b >>> 0 < h >>> 0) pa();else {
	                c[b >> 2] = 0;i = a;break;
	              }
	            } else {
	              e = c[k + 8 >> 2] | 0;if (e >>> 0 < h >>> 0) pa();a = e + 12 | 0;if ((c[a >> 2] | 0) != (k | 0)) pa();b = d + 8 | 0;if ((c[b >> 2] | 0) == (k | 0)) {
	                c[a >> 2] = d;c[b >> 2] = e;i = d;break;
	              } else pa();
	            }
	          } while (0);if (g) {
	            a = c[k + 28 >> 2] | 0;b = 15960 + (a << 2) | 0;if ((k | 0) == (c[b >> 2] | 0)) {
	              c[b >> 2] = i;if (!i) {
	                c[3915] = c[3915] & ~(1 << a);q = k;f = j;break;
	              }
	            } else {
	              if (g >>> 0 < (c[3918] | 0) >>> 0) pa();a = g + 16 | 0;if ((c[a >> 2] | 0) == (k | 0)) c[a >> 2] = i;else c[g + 20 >> 2] = i;if (!i) {
	                q = k;f = j;break;
	              }
	            }d = c[3918] | 0;if (i >>> 0 < d >>> 0) pa();c[i + 24 >> 2] = g;a = k + 16 | 0;b = c[a >> 2] | 0;do {
	              if (b | 0) if (b >>> 0 < d >>> 0) pa();else {
	                c[i + 16 >> 2] = b;c[b + 24 >> 2] = i;break;
	              }
	            } while (0);a = c[a + 4 >> 2] | 0;if (a) {
	              if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                c[i + 20 >> 2] = a;c[a + 24 >> 2] = i;q = k;f = j;break;
	              }
	            } else {
	              q = k;f = j;
	            }
	          } else {
	            q = k;f = j;
	          }
	        } else {
	          q = d;f = e;
	        }
	      } while (0);if (q >>> 0 >= n >>> 0) pa();a = n + 4 | 0;b = c[a >> 2] | 0;if (!(b & 1)) pa();if (!(b & 2)) {
	        if ((n | 0) == (c[3920] | 0)) {
	          p = (c[3917] | 0) + f | 0;c[3917] = p;c[3920] = q;c[q + 4 >> 2] = p | 1;if ((q | 0) != (c[3919] | 0)) return;c[3919] = 0;c[3916] = 0;return;
	        }if ((n | 0) == (c[3919] | 0)) {
	          p = (c[3916] | 0) + f | 0;c[3916] = p;c[3919] = q;c[q + 4 >> 2] = p | 1;c[q + p >> 2] = p;return;
	        }f = (b & -8) + f | 0;e = b >>> 3;do {
	          if (b >>> 0 >= 256) {
	            g = c[n + 24 >> 2] | 0;a = c[n + 12 >> 2] | 0;do {
	              if ((a | 0) == (n | 0)) {
	                d = n + 16 | 0;b = d + 4 | 0;a = c[b >> 2] | 0;if (!a) {
	                  a = c[d >> 2] | 0;if (!a) {
	                    m = 0;break;
	                  } else b = d;
	                }while (1) {
	                  d = a + 20 | 0;e = c[d >> 2] | 0;if (e | 0) {
	                    a = e;b = d;continue;
	                  }d = a + 16 | 0;e = c[d >> 2] | 0;if (!e) break;else {
	                    a = e;b = d;
	                  }
	                }if (b >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                  c[b >> 2] = 0;m = a;break;
	                }
	              } else {
	                b = c[n + 8 >> 2] | 0;if (b >>> 0 < (c[3918] | 0) >>> 0) pa();d = b + 12 | 0;if ((c[d >> 2] | 0) != (n | 0)) pa();e = a + 8 | 0;if ((c[e >> 2] | 0) == (n | 0)) {
	                  c[d >> 2] = a;c[e >> 2] = b;m = a;break;
	                } else pa();
	              }
	            } while (0);if (g | 0) {
	              a = c[n + 28 >> 2] | 0;b = 15960 + (a << 2) | 0;if ((n | 0) == (c[b >> 2] | 0)) {
	                c[b >> 2] = m;if (!m) {
	                  c[3915] = c[3915] & ~(1 << a);break;
	                }
	              } else {
	                if (g >>> 0 < (c[3918] | 0) >>> 0) pa();a = g + 16 | 0;if ((c[a >> 2] | 0) == (n | 0)) c[a >> 2] = m;else c[g + 20 >> 2] = m;if (!m) break;
	              }d = c[3918] | 0;if (m >>> 0 < d >>> 0) pa();c[m + 24 >> 2] = g;a = n + 16 | 0;b = c[a >> 2] | 0;do {
	                if (b | 0) if (b >>> 0 < d >>> 0) pa();else {
	                  c[m + 16 >> 2] = b;c[b + 24 >> 2] = m;break;
	                }
	              } while (0);a = c[a + 4 >> 2] | 0;if (a | 0) if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                c[m + 20 >> 2] = a;c[a + 24 >> 2] = m;break;
	              }
	            }
	          } else {
	            b = c[n + 8 >> 2] | 0;d = c[n + 12 >> 2] | 0;a = 15696 + (e << 1 << 2) | 0;if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < (c[3918] | 0) >>> 0) pa();if ((c[b + 12 >> 2] | 0) != (n | 0)) pa();
	            }if ((d | 0) == (b | 0)) {
	              c[3914] = c[3914] & ~(1 << e);break;
	            }if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < (c[3918] | 0) >>> 0) pa();a = d + 8 | 0;if ((c[a >> 2] | 0) == (n | 0)) l = a;else pa();
	            } else l = d + 8 | 0;c[b + 12 >> 2] = d;c[l >> 2] = b;
	          }
	        } while (0);c[q + 4 >> 2] = f | 1;c[q + f >> 2] = f;if ((q | 0) == (c[3919] | 0)) {
	          c[3916] = f;return;
	        }
	      } else {
	        c[a >> 2] = b & -2;c[q + 4 >> 2] = f | 1;c[q + f >> 2] = f;
	      }a = f >>> 3;if (f >>> 0 < 256) {
	        d = 15696 + (a << 1 << 2) | 0;b = c[3914] | 0;a = 1 << a;if (b & a) {
	          a = d + 8 | 0;b = c[a >> 2] | 0;if (b >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	            o = b;p = a;
	          }
	        } else {
	          c[3914] = b | a;o = d;p = d + 8 | 0;
	        }c[p >> 2] = q;c[o + 12 >> 2] = q;c[q + 8 >> 2] = o;c[q + 12 >> 2] = d;return;
	      }a = f >>> 8;if (a) {
	        if (f >>> 0 > 16777215) a = 31;else {
	          o = (a + 1048320 | 0) >>> 16 & 8;p = a << o;n = (p + 520192 | 0) >>> 16 & 4;p = p << n;a = (p + 245760 | 0) >>> 16 & 2;a = 14 - (n | o | a) + (p << a >>> 15) | 0;a = f >>> (a + 7 | 0) & 1 | a << 1;
	        }
	      } else a = 0;e = 15960 + (a << 2) | 0;c[q + 28 >> 2] = a;c[q + 20 >> 2] = 0;c[q + 16 >> 2] = 0;b = c[3915] | 0;d = 1 << a;do {
	        if (b & d) {
	          b = f << ((a | 0) == 31 ? 0 : 25 - (a >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	            if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	              a = 130;break;
	            }d = e + 16 + (b >>> 31 << 2) | 0;a = c[d >> 2] | 0;if (!a) {
	              a = 127;break;
	            } else {
	              b = b << 1;e = a;
	            }
	          }if ((a | 0) == 127) {
	            if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	              c[d >> 2] = q;c[q + 24 >> 2] = e;c[q + 12 >> 2] = q;c[q + 8 >> 2] = q;break;
	            }
	          } else if ((a | 0) == 130) {
	            a = e + 8 | 0;b = c[a >> 2] | 0;p = c[3918] | 0;if (b >>> 0 >= p >>> 0 & e >>> 0 >= p >>> 0) {
	              c[b + 12 >> 2] = q;c[a >> 2] = q;c[q + 8 >> 2] = b;c[q + 12 >> 2] = e;c[q + 24 >> 2] = 0;break;
	            } else pa();
	          }
	        } else {
	          c[3915] = b | d;c[e >> 2] = q;c[q + 24 >> 2] = e;c[q + 12 >> 2] = q;c[q + 8 >> 2] = q;
	        }
	      } while (0);q = (c[3922] | 0) + -1 | 0;c[3922] = q;if (!q) a = 16112;else return;while (1) {
	        a = c[a >> 2] | 0;if (!a) break;else a = a + 8 | 0;
	      }c[3922] = -1;return;
	    }function dd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0;if (!a) {
	        b = bd(b) | 0;return b | 0;
	      }if (b >>> 0 > 4294967231) {
	        c[(Pb() | 0) >> 2] = 12;b = 0;return b | 0;
	      }d = ed(a + -8 | 0, b >>> 0 < 11 ? 16 : b + 11 & -8) | 0;if (d | 0) {
	        b = d + 8 | 0;return b | 0;
	      }d = bd(b) | 0;if (!d) {
	        b = 0;return b | 0;
	      }e = c[a + -4 >> 2] | 0;e = (e & -8) - ((e & 3 | 0) == 0 ? 8 : 4) | 0;td(d | 0, a | 0, (e >>> 0 < b >>> 0 ? e : b) | 0) | 0;cd(a);b = d;return b | 0;
	    }function ed(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0;n = a + 4 | 0;o = c[n >> 2] | 0;d = o & -8;k = a + d | 0;i = c[3918] | 0;e = o & 3;if (!((e | 0) != 1 & a >>> 0 >= i >>> 0 & a >>> 0 < k >>> 0)) pa();f = c[k + 4 >> 2] | 0;if (!(f & 1)) pa();if (!e) {
	        if (b >>> 0 < 256) {
	          a = 0;return a | 0;
	        }if (d >>> 0 >= (b + 4 | 0) >>> 0 ? (d - b | 0) >>> 0 <= c[4034] << 1 >>> 0 : 0) return a | 0;a = 0;return a | 0;
	      }if (d >>> 0 >= b >>> 0) {
	        d = d - b | 0;if (d >>> 0 <= 15) return a | 0;m = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[m + 4 >> 2] = d | 3;o = m + d + 4 | 0;c[o >> 2] = c[o >> 2] | 1;fd(m, d);return a | 0;
	      }if ((k | 0) == (c[3920] | 0)) {
	        d = (c[3917] | 0) + d | 0;if (d >>> 0 <= b >>> 0) {
	          a = 0;return a | 0;
	        }m = d - b | 0;l = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[l + 4 >> 2] = m | 1;c[3920] = l;c[3917] = m;return a | 0;
	      }if ((k | 0) == (c[3919] | 0)) {
	        e = (c[3916] | 0) + d | 0;if (e >>> 0 < b >>> 0) {
	          a = 0;return a | 0;
	        }d = e - b | 0;if (d >>> 0 > 15) {
	          e = a + b | 0;m = e + d | 0;c[n >> 2] = o & 1 | b | 2;c[e + 4 >> 2] = d | 1;c[m >> 2] = d;o = m + 4 | 0;c[o >> 2] = c[o >> 2] & -2;
	        } else {
	          c[n >> 2] = o & 1 | e | 2;e = a + e + 4 | 0;c[e >> 2] = c[e >> 2] | 1;e = 0;d = 0;
	        }c[3916] = d;c[3919] = e;return a | 0;
	      }if (f & 2 | 0) {
	        a = 0;return a | 0;
	      }l = (f & -8) + d | 0;if (l >>> 0 < b >>> 0) {
	        a = 0;return a | 0;
	      }m = l - b | 0;g = f >>> 3;do {
	        if (f >>> 0 >= 256) {
	          h = c[k + 24 >> 2] | 0;f = c[k + 12 >> 2] | 0;do {
	            if ((f | 0) == (k | 0)) {
	              f = k + 16 | 0;e = f + 4 | 0;d = c[e >> 2] | 0;if (!d) {
	                d = c[f >> 2] | 0;if (!d) {
	                  j = 0;break;
	                } else e = f;
	              }while (1) {
	                f = d + 20 | 0;g = c[f >> 2] | 0;if (g | 0) {
	                  d = g;e = f;continue;
	                }f = d + 16 | 0;g = c[f >> 2] | 0;if (!g) break;else {
	                  d = g;e = f;
	                }
	              }if (e >>> 0 < i >>> 0) pa();else {
	                c[e >> 2] = 0;j = d;break;
	              }
	            } else {
	              g = c[k + 8 >> 2] | 0;if (g >>> 0 < i >>> 0) pa();d = g + 12 | 0;if ((c[d >> 2] | 0) != (k | 0)) pa();e = f + 8 | 0;if ((c[e >> 2] | 0) == (k | 0)) {
	                c[d >> 2] = f;c[e >> 2] = g;j = f;break;
	              } else pa();
	            }
	          } while (0);if (h | 0) {
	            d = c[k + 28 >> 2] | 0;e = 15960 + (d << 2) | 0;if ((k | 0) == (c[e >> 2] | 0)) {
	              c[e >> 2] = j;if (!j) {
	                c[3915] = c[3915] & ~(1 << d);break;
	              }
	            } else {
	              if (h >>> 0 < (c[3918] | 0) >>> 0) pa();d = h + 16 | 0;if ((c[d >> 2] | 0) == (k | 0)) c[d >> 2] = j;else c[h + 20 >> 2] = j;if (!j) break;
	            }f = c[3918] | 0;if (j >>> 0 < f >>> 0) pa();c[j + 24 >> 2] = h;d = k + 16 | 0;e = c[d >> 2] | 0;do {
	              if (e | 0) if (e >>> 0 < f >>> 0) pa();else {
	                c[j + 16 >> 2] = e;c[e + 24 >> 2] = j;break;
	              }
	            } while (0);d = c[d + 4 >> 2] | 0;if (d | 0) if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	              c[j + 20 >> 2] = d;c[d + 24 >> 2] = j;break;
	            }
	          }
	        } else {
	          e = c[k + 8 >> 2] | 0;f = c[k + 12 >> 2] | 0;d = 15696 + (g << 1 << 2) | 0;if ((e | 0) != (d | 0)) {
	            if (e >>> 0 < i >>> 0) pa();if ((c[e + 12 >> 2] | 0) != (k | 0)) pa();
	          }if ((f | 0) == (e | 0)) {
	            c[3914] = c[3914] & ~(1 << g);break;
	          }if ((f | 0) != (d | 0)) {
	            if (f >>> 0 < i >>> 0) pa();d = f + 8 | 0;if ((c[d >> 2] | 0) == (k | 0)) h = d;else pa();
	          } else h = f + 8 | 0;c[e + 12 >> 2] = f;c[h >> 2] = e;
	        }
	      } while (0);if (m >>> 0 < 16) {
	        c[n >> 2] = l | o & 1 | 2;o = a + l + 4 | 0;c[o >> 2] = c[o >> 2] | 1;return a | 0;
	      } else {
	        l = a + b | 0;c[n >> 2] = o & 1 | b | 2;c[l + 4 >> 2] = m | 3;o = l + m + 4 | 0;c[o >> 2] = c[o >> 2] | 1;fd(l, m);return a | 0;
	      }return 0;
	    }function fd(a, b) {
	      a = a | 0;b = b | 0;var d = 0,
	          e = 0,
	          f = 0,
	          g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0,
	          q = 0,
	          r = 0;o = a + b | 0;d = c[a + 4 >> 2] | 0;do {
	        if (!(d & 1)) {
	          g = c[a >> 2] | 0;if (!(d & 3)) return;l = a + (0 - g) | 0;k = g + b | 0;i = c[3918] | 0;if (l >>> 0 < i >>> 0) pa();if ((l | 0) == (c[3919] | 0)) {
	            a = o + 4 | 0;d = c[a >> 2] | 0;if ((d & 3 | 0) != 3) {
	              r = l;f = k;break;
	            }c[3916] = k;c[a >> 2] = d & -2;c[l + 4 >> 2] = k | 1;c[l + k >> 2] = k;return;
	          }e = g >>> 3;if (g >>> 0 < 256) {
	            d = c[l + 8 >> 2] | 0;b = c[l + 12 >> 2] | 0;a = 15696 + (e << 1 << 2) | 0;if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < i >>> 0) pa();if ((c[d + 12 >> 2] | 0) != (l | 0)) pa();
	            }if ((b | 0) == (d | 0)) {
	              c[3914] = c[3914] & ~(1 << e);r = l;f = k;break;
	            }if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < i >>> 0) pa();a = b + 8 | 0;if ((c[a >> 2] | 0) == (l | 0)) h = a;else pa();
	            } else h = b + 8 | 0;c[d + 12 >> 2] = b;c[h >> 2] = d;r = l;f = k;break;
	          }g = c[l + 24 >> 2] | 0;b = c[l + 12 >> 2] | 0;do {
	            if ((b | 0) == (l | 0)) {
	              b = l + 16 | 0;d = b + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                a = c[b >> 2] | 0;if (!a) {
	                  j = 0;break;
	                } else d = b;
	              }while (1) {
	                b = a + 20 | 0;e = c[b >> 2] | 0;if (e | 0) {
	                  a = e;d = b;continue;
	                }b = a + 16 | 0;e = c[b >> 2] | 0;if (!e) break;else {
	                  a = e;d = b;
	                }
	              }if (d >>> 0 < i >>> 0) pa();else {
	                c[d >> 2] = 0;j = a;break;
	              }
	            } else {
	              e = c[l + 8 >> 2] | 0;if (e >>> 0 < i >>> 0) pa();a = e + 12 | 0;if ((c[a >> 2] | 0) != (l | 0)) pa();d = b + 8 | 0;if ((c[d >> 2] | 0) == (l | 0)) {
	                c[a >> 2] = b;c[d >> 2] = e;j = b;break;
	              } else pa();
	            }
	          } while (0);if (g) {
	            a = c[l + 28 >> 2] | 0;d = 15960 + (a << 2) | 0;if ((l | 0) == (c[d >> 2] | 0)) {
	              c[d >> 2] = j;if (!j) {
	                c[3915] = c[3915] & ~(1 << a);r = l;f = k;break;
	              }
	            } else {
	              if (g >>> 0 < (c[3918] | 0) >>> 0) pa();a = g + 16 | 0;if ((c[a >> 2] | 0) == (l | 0)) c[a >> 2] = j;else c[g + 20 >> 2] = j;if (!j) {
	                r = l;f = k;break;
	              }
	            }b = c[3918] | 0;if (j >>> 0 < b >>> 0) pa();c[j + 24 >> 2] = g;a = l + 16 | 0;d = c[a >> 2] | 0;do {
	              if (d | 0) if (d >>> 0 < b >>> 0) pa();else {
	                c[j + 16 >> 2] = d;c[d + 24 >> 2] = j;break;
	              }
	            } while (0);a = c[a + 4 >> 2] | 0;if (a) {
	              if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                c[j + 20 >> 2] = a;c[a + 24 >> 2] = j;r = l;f = k;break;
	              }
	            } else {
	              r = l;f = k;
	            }
	          } else {
	            r = l;f = k;
	          }
	        } else {
	          r = a;f = b;
	        }
	      } while (0);h = c[3918] | 0;if (o >>> 0 < h >>> 0) pa();a = o + 4 | 0;d = c[a >> 2] | 0;if (!(d & 2)) {
	        if ((o | 0) == (c[3920] | 0)) {
	          q = (c[3917] | 0) + f | 0;c[3917] = q;c[3920] = r;c[r + 4 >> 2] = q | 1;if ((r | 0) != (c[3919] | 0)) return;c[3919] = 0;c[3916] = 0;return;
	        }if ((o | 0) == (c[3919] | 0)) {
	          q = (c[3916] | 0) + f | 0;c[3916] = q;c[3919] = r;c[r + 4 >> 2] = q | 1;c[r + q >> 2] = q;return;
	        }f = (d & -8) + f | 0;e = d >>> 3;do {
	          if (d >>> 0 >= 256) {
	            g = c[o + 24 >> 2] | 0;b = c[o + 12 >> 2] | 0;do {
	              if ((b | 0) == (o | 0)) {
	                b = o + 16 | 0;d = b + 4 | 0;a = c[d >> 2] | 0;if (!a) {
	                  a = c[b >> 2] | 0;if (!a) {
	                    n = 0;break;
	                  } else d = b;
	                }while (1) {
	                  b = a + 20 | 0;e = c[b >> 2] | 0;if (e | 0) {
	                    a = e;d = b;continue;
	                  }b = a + 16 | 0;e = c[b >> 2] | 0;if (!e) break;else {
	                    a = e;d = b;
	                  }
	                }if (d >>> 0 < h >>> 0) pa();else {
	                  c[d >> 2] = 0;n = a;break;
	                }
	              } else {
	                e = c[o + 8 >> 2] | 0;if (e >>> 0 < h >>> 0) pa();a = e + 12 | 0;if ((c[a >> 2] | 0) != (o | 0)) pa();d = b + 8 | 0;if ((c[d >> 2] | 0) == (o | 0)) {
	                  c[a >> 2] = b;c[d >> 2] = e;n = b;break;
	                } else pa();
	              }
	            } while (0);if (g | 0) {
	              a = c[o + 28 >> 2] | 0;d = 15960 + (a << 2) | 0;if ((o | 0) == (c[d >> 2] | 0)) {
	                c[d >> 2] = n;if (!n) {
	                  c[3915] = c[3915] & ~(1 << a);break;
	                }
	              } else {
	                if (g >>> 0 < (c[3918] | 0) >>> 0) pa();a = g + 16 | 0;if ((c[a >> 2] | 0) == (o | 0)) c[a >> 2] = n;else c[g + 20 >> 2] = n;if (!n) break;
	              }b = c[3918] | 0;if (n >>> 0 < b >>> 0) pa();c[n + 24 >> 2] = g;a = o + 16 | 0;d = c[a >> 2] | 0;do {
	                if (d | 0) if (d >>> 0 < b >>> 0) pa();else {
	                  c[n + 16 >> 2] = d;c[d + 24 >> 2] = n;break;
	                }
	              } while (0);a = c[a + 4 >> 2] | 0;if (a | 0) if (a >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	                c[n + 20 >> 2] = a;c[a + 24 >> 2] = n;break;
	              }
	            }
	          } else {
	            d = c[o + 8 >> 2] | 0;b = c[o + 12 >> 2] | 0;a = 15696 + (e << 1 << 2) | 0;if ((d | 0) != (a | 0)) {
	              if (d >>> 0 < h >>> 0) pa();if ((c[d + 12 >> 2] | 0) != (o | 0)) pa();
	            }if ((b | 0) == (d | 0)) {
	              c[3914] = c[3914] & ~(1 << e);break;
	            }if ((b | 0) != (a | 0)) {
	              if (b >>> 0 < h >>> 0) pa();a = b + 8 | 0;if ((c[a >> 2] | 0) == (o | 0)) m = a;else pa();
	            } else m = b + 8 | 0;c[d + 12 >> 2] = b;c[m >> 2] = d;
	          }
	        } while (0);c[r + 4 >> 2] = f | 1;c[r + f >> 2] = f;if ((r | 0) == (c[3919] | 0)) {
	          c[3916] = f;return;
	        }
	      } else {
	        c[a >> 2] = d & -2;c[r + 4 >> 2] = f | 1;c[r + f >> 2] = f;
	      }a = f >>> 3;if (f >>> 0 < 256) {
	        b = 15696 + (a << 1 << 2) | 0;d = c[3914] | 0;a = 1 << a;if (d & a) {
	          a = b + 8 | 0;d = c[a >> 2] | 0;if (d >>> 0 < (c[3918] | 0) >>> 0) pa();else {
	            p = d;q = a;
	          }
	        } else {
	          c[3914] = d | a;p = b;q = b + 8 | 0;
	        }c[q >> 2] = r;c[p + 12 >> 2] = r;c[r + 8 >> 2] = p;c[r + 12 >> 2] = b;return;
	      }a = f >>> 8;if (a) {
	        if (f >>> 0 > 16777215) a = 31;else {
	          p = (a + 1048320 | 0) >>> 16 & 8;q = a << p;o = (q + 520192 | 0) >>> 16 & 4;q = q << o;a = (q + 245760 | 0) >>> 16 & 2;a = 14 - (o | p | a) + (q << a >>> 15) | 0;a = f >>> (a + 7 | 0) & 1 | a << 1;
	        }
	      } else a = 0;e = 15960 + (a << 2) | 0;c[r + 28 >> 2] = a;c[r + 20 >> 2] = 0;c[r + 16 >> 2] = 0;d = c[3915] | 0;b = 1 << a;if (!(d & b)) {
	        c[3915] = d | b;c[e >> 2] = r;c[r + 24 >> 2] = e;c[r + 12 >> 2] = r;c[r + 8 >> 2] = r;return;
	      }d = f << ((a | 0) == 31 ? 0 : 25 - (a >>> 1) | 0);e = c[e >> 2] | 0;while (1) {
	        if ((c[e + 4 >> 2] & -8 | 0) == (f | 0)) {
	          a = 127;break;
	        }b = e + 16 + (d >>> 31 << 2) | 0;a = c[b >> 2] | 0;if (!a) {
	          a = 124;break;
	        } else {
	          d = d << 1;e = a;
	        }
	      }if ((a | 0) == 124) {
	        if (b >>> 0 < (c[3918] | 0) >>> 0) pa();c[b >> 2] = r;c[r + 24 >> 2] = e;c[r + 12 >> 2] = r;c[r + 8 >> 2] = r;return;
	      } else if ((a | 0) == 127) {
	        a = e + 8 | 0;d = c[a >> 2] | 0;q = c[3918] | 0;if (!(d >>> 0 >= q >>> 0 & e >>> 0 >= q >>> 0)) pa();c[d + 12 >> 2] = r;c[a >> 2] = r;c[r + 8 >> 2] = d;c[r + 12 >> 2] = e;c[r + 24 >> 2] = 0;return;
	      }
	    }function gd() {}function hd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;d = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;return (D = d, a - c >>> 0 | 0) | 0;
	    }function id(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;c = a + c >>> 0;return (D = b + d + (c >>> 0 < a >>> 0 | 0) >>> 0, c | 0) | 0;
	    }function jd(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0,
	          h = 0,
	          i = 0;f = b + e | 0;if ((e | 0) >= 20) {
	        d = d & 255;h = b & 3;i = d | d << 8 | d << 16 | d << 24;g = f & ~3;if (h) {
	          h = b + 4 - h | 0;while ((b | 0) < (h | 0)) {
	            a[b >> 0] = d;b = b + 1 | 0;
	          }
	        }while ((b | 0) < (g | 0)) {
	          c[b >> 2] = i;b = b + 4 | 0;
	        }
	      }while ((b | 0) < (f | 0)) {
	        a[b >> 0] = d;b = b + 1 | 0;
	      }return b - e | 0;
	    }function kd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c | 0) < 32) {
	        D = b >>> c;return a >>> c | (b & (1 << c) - 1) << 32 - c;
	      }D = 0;return b >>> c - 32 | 0;
	    }function ld(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;if ((c | 0) < 32) {
	        D = b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c;return a << c;
	      }D = a << c - 32;return 0;
	    }function md(b) {
	      b = b | 0;var c = 0;c = a[n + (b & 255) >> 0] | 0;if ((c | 0) < 8) return c | 0;c = a[n + (b >> 8 & 255) >> 0] | 0;if ((c | 0) < 8) return c + 8 | 0;c = a[n + (b >> 16 & 255) >> 0] | 0;if ((c | 0) < 8) return c + 16 | 0;return (a[n + (b >>> 24) >> 0] | 0) + 24 | 0;
	    }function nd(a, b, d, e, f) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;f = f | 0;var g = 0,
	          h = 0,
	          i = 0,
	          j = 0,
	          k = 0,
	          l = 0,
	          m = 0,
	          n = 0,
	          o = 0,
	          p = 0;l = a;j = b;k = j;h = d;n = e;i = n;if (!k) {
	        g = (f | 0) != 0;if (!i) {
	          if (g) {
	            c[f >> 2] = (l >>> 0) % (h >>> 0);c[f + 4 >> 2] = 0;
	          }n = 0;f = (l >>> 0) / (h >>> 0) >>> 0;return (D = n, f) | 0;
	        } else {
	          if (!g) {
	            n = 0;f = 0;return (D = n, f) | 0;
	          }c[f >> 2] = a | 0;c[f + 4 >> 2] = b & 0;n = 0;f = 0;return (D = n, f) | 0;
	        }
	      }g = (i | 0) == 0;do {
	        if (h) {
	          if (!g) {
	            g = (V(i | 0) | 0) - (V(k | 0) | 0) | 0;if (g >>> 0 <= 31) {
	              m = g + 1 | 0;i = 31 - g | 0;b = g - 31 >> 31;h = m;a = l >>> (m >>> 0) & b | k << i;b = k >>> (m >>> 0) & b;g = 0;i = l << i;break;
	            }if (!f) {
	              n = 0;f = 0;return (D = n, f) | 0;
	            }c[f >> 2] = a | 0;c[f + 4 >> 2] = j | b & 0;n = 0;f = 0;return (D = n, f) | 0;
	          }g = h - 1 | 0;if (g & h | 0) {
	            i = (V(h | 0) | 0) + 33 - (V(k | 0) | 0) | 0;p = 64 - i | 0;m = 32 - i | 0;j = m >> 31;o = i - 32 | 0;b = o >> 31;h = i;a = m - 1 >> 31 & k >>> (o >>> 0) | (k << m | l >>> (i >>> 0)) & b;b = b & k >>> (i >>> 0);g = l << p & j;i = (k << p | l >>> (o >>> 0)) & j | l << m & i - 33 >> 31;break;
	          }if (f | 0) {
	            c[f >> 2] = g & l;c[f + 4 >> 2] = 0;
	          }if ((h | 0) == 1) {
	            o = j | b & 0;p = a | 0 | 0;return (D = o, p) | 0;
	          } else {
	            p = md(h | 0) | 0;o = k >>> (p >>> 0) | 0;p = k << 32 - p | l >>> (p >>> 0) | 0;return (D = o, p) | 0;
	          }
	        } else {
	          if (g) {
	            if (f | 0) {
	              c[f >> 2] = (k >>> 0) % (h >>> 0);c[f + 4 >> 2] = 0;
	            }o = 0;p = (k >>> 0) / (h >>> 0) >>> 0;return (D = o, p) | 0;
	          }if (!l) {
	            if (f | 0) {
	              c[f >> 2] = 0;c[f + 4 >> 2] = (k >>> 0) % (i >>> 0);
	            }o = 0;p = (k >>> 0) / (i >>> 0) >>> 0;return (D = o, p) | 0;
	          }g = i - 1 | 0;if (!(g & i)) {
	            if (f | 0) {
	              c[f >> 2] = a | 0;c[f + 4 >> 2] = g & k | b & 0;
	            }o = 0;p = k >>> ((md(i | 0) | 0) >>> 0);return (D = o, p) | 0;
	          }g = (V(i | 0) | 0) - (V(k | 0) | 0) | 0;if (g >>> 0 <= 30) {
	            b = g + 1 | 0;i = 31 - g | 0;h = b;a = k << i | l >>> (b >>> 0);b = k >>> (b >>> 0);g = 0;i = l << i;break;
	          }if (!f) {
	            o = 0;p = 0;return (D = o, p) | 0;
	          }c[f >> 2] = a | 0;c[f + 4 >> 2] = j | b & 0;o = 0;p = 0;return (D = o, p) | 0;
	        }
	      } while (0);if (!h) {
	        k = i;j = 0;i = 0;
	      } else {
	        m = d | 0 | 0;l = n | e & 0;k = id(m | 0, l | 0, -1, -1) | 0;d = D;j = i;i = 0;do {
	          e = j;j = g >>> 31 | j << 1;g = i | g << 1;e = a << 1 | e >>> 31 | 0;n = a >>> 31 | b << 1 | 0;hd(k | 0, d | 0, e | 0, n | 0) | 0;p = D;o = p >> 31 | ((p | 0) < 0 ? -1 : 0) << 1;i = o & 1;a = hd(e | 0, n | 0, o & m | 0, (((p | 0) < 0 ? -1 : 0) >> 31 | ((p | 0) < 0 ? -1 : 0) << 1) & l | 0) | 0;b = D;h = h - 1 | 0;
	        } while ((h | 0) != 0);k = j;j = 0;
	      }h = 0;if (f | 0) {
	        c[f >> 2] = a;c[f + 4 >> 2] = b;
	      }o = (g | 0) >>> 31 | (k | h) << 1 | (h << 1 | g >>> 31) & 0 | j;p = (g << 1 | 0 >>> 31) & -2 | i;return (D = o, p) | 0;
	    }function od(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return nd(a, b, c, d, 0) | 0;
	    }function pd(a, b) {
	      a = a | 0;b = b | 0;var c = 0,
	          d = 0,
	          e = 0,
	          f = 0;f = a & 65535;e = b & 65535;c = S(e, f) | 0;d = a >>> 16;a = (c >>> 16) + (S(e, d) | 0) | 0;e = b >>> 16;b = S(e, f) | 0;return (D = (a >>> 16) + (S(e, d) | 0) + (((a & 65535) + b | 0) >>> 16) | 0, a + b << 16 | c & 65535 | 0) | 0;
	    }function qd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;var e = 0,
	          f = 0;e = a;f = c;c = pd(e, f) | 0;a = D;return (D = (S(b, f) | 0) + (S(d, e) | 0) + a | a & 0, c | 0 | 0) | 0;
	    }function rd(a) {
	      a = a | 0;var b = 0,
	          d = 0;d = a + 15 & -16 | 0;b = c[k >> 2] | 0;a = b + d | 0;if ((d | 0) > 0 & (a | 0) < (b | 0) | (a | 0) < 0) {
	        _() | 0;ra(12);return -1;
	      }c[k >> 2] = a;if ((a | 0) > (Z() | 0) ? (Y() | 0) == 0 : 0) {
	        ra(12);c[k >> 2] = b;return -1;
	      }return b | 0;
	    }function sd(a, b, d, e) {
	      a = a | 0;b = b | 0;d = d | 0;e = e | 0;var f = 0,
	          g = 0;g = i;i = i + 16 | 0;f = g | 0;nd(a, b, d, e, f) | 0;i = g;return (D = c[f + 4 >> 2] | 0, c[f >> 2] | 0) | 0;
	    }function td(b, d, e) {
	      b = b | 0;d = d | 0;e = e | 0;var f = 0;if ((e | 0) >= 4096) return ta(b | 0, d | 0, e | 0) | 0;f = b | 0;if ((b & 3) == (d & 3)) {
	        while (b & 3) {
	          if (!e) return f | 0;a[b >> 0] = a[d >> 0] | 0;b = b + 1 | 0;d = d + 1 | 0;e = e - 1 | 0;
	        }while ((e | 0) >= 4) {
	          c[b >> 2] = c[d >> 2];b = b + 4 | 0;d = d + 4 | 0;e = e - 4 | 0;
	        }
	      }while ((e | 0) > 0) {
	        a[b >> 0] = a[d >> 0] | 0;b = b + 1 | 0;d = d + 1 | 0;e = e - 1 | 0;
	      }return f | 0;
	    }function ud() {
	      return 0;
	    }function vd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;return Ca[a & 7](b | 0, c | 0, d | 0) | 0;
	    }function wd(a, b) {
	      a = a | 0;b = b | 0;Da[a & 3](b | 0);
	    }function xd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;Ea[a & 1](b | 0, c | 0);
	    }function yd(a, b) {
	      a = a | 0;b = b | 0;return Fa[a & 1](b | 0) | 0;
	    }function zd(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;return Ga[a & 3](b | 0, c | 0, d | 0, e | 0) | 0;
	    }function Ad(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;return Ha[a & 3](b | 0, c | 0) | 0;
	    }function Bd(a, b, c, d, e, f) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;f = f | 0;return Ia[a & 1](b | 0, c | 0, d | 0, e | 0, f | 0) | 0;
	    }function Cd(a, b, c) {
	      a = a | 0;b = b | 0;c = c | 0;W(0);return 0;
	    }function Dd(a) {
	      a = a | 0;W(1);
	    }function Ed(a, b) {
	      a = a | 0;b = b | 0;W(2);
	    }function Fd(a) {
	      a = a | 0;W(3);return 0;
	    }function Gd(a, b, c, d) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;W(4);return 0;
	    }function Hd(a, b) {
	      a = a | 0;b = b | 0;W(5);return 0;
	    }function Id(a, b, c, d, e) {
	      a = a | 0;b = b | 0;c = c | 0;d = d | 0;e = e | 0;W(6);return 0;
	    }
	
	    // EMSCRIPTEN_END_FUNCS
	    var Ca = [Cd, Mb, Nb, Tb, ob, Gb, Qb, Cd];var Da = [Dd, Rb, Ub, Dd];var Ea = [Ed, Hb];var Fa = [Fd, Lb];var Ga = [Gd, jb, kb, Gd];var Ha = [Hd, pb, lb, mb];var Ia = [Id, qb];return { ___muldsi3: pd, _sbrk: rd, _i64Subtract: hd, _free: cd, _main: Ua, _i64Add: id, _pthread_self: ud, _memset: jd, _llvm_cttz_i32: md, _malloc: bd, _memcpy: td, ___muldi3: qd, _bitshift64Shl: ld, _bitshift64Lshr: kd, _fflush: yc, ___udivdi3: od, ___uremdi3: sd, ___errno_location: Pb, ___udivmoddi4: nd, runPostSets: gd, stackAlloc: Ja, stackSave: Ka, stackRestore: La, establishStackSpace: Ma, setThrew: Na, setTempRet0: Oa, getTempRet0: Pa, dynCall_iiii: vd, dynCall_vi: wd, dynCall_vii: xd, dynCall_ii: yd, dynCall_iiiii: zd, dynCall_iii: Ad, dynCall_iiiiii: Bd };
	  }(
	
	  // EMSCRIPTEN_END_ASM
	  Module.asmGlobalArg, Module.asmLibraryArg, buffer);var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];var _malloc = Module["_malloc"] = asm["_malloc"];var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];var _free = Module["_free"] = asm["_free"];var _main = Module["_main"] = asm["_main"];var _i64Add = Module["_i64Add"] = asm["_i64Add"];var runPostSets = Module["runPostSets"] = asm["runPostSets"];var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];var _memset = Module["_memset"] = asm["_memset"];var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];var _sbrk = Module["_sbrk"] = asm["_sbrk"];var _memcpy = Module["_memcpy"] = asm["_memcpy"];var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];var _fflush = Module["_fflush"] = asm["_fflush"];var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];var ___errno_location = Module["___errno_location"] = asm["___errno_location"];var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];Runtime.stackAlloc = asm["stackAlloc"];Runtime.stackSave = asm["stackSave"];Runtime.stackRestore = asm["stackRestore"];Runtime.establishStackSpace = asm["establishStackSpace"];Runtime.setTempRet0 = asm["setTempRet0"];Runtime.getTempRet0 = asm["getTempRet0"];function ExitStatus(status) {
	    this.name = "ExitStatus";this.message = "Program terminated with exit(" + status + ")";this.status = status;
	  }ExitStatus.prototype = new Error();ExitStatus.prototype.constructor = ExitStatus;var initialStackTop;var preloadStartTime = null;var calledMain = false;dependenciesFulfilled = function runCaller() {
	    if (!Module["calledRun"]) run();if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
	  };Module["callMain"] = Module.callMain = function callMain(args) {
	    args = args || [];ensureInitRuntime();var argc = args.length + 1;function pad() {
	      for (var i = 0; i < 4 - 1; i++) {
	        argv.push(0);
	      }
	    }var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];pad();for (var i = 0; i < argc - 1; i = i + 1) {
	      argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));pad();
	    }argv.push(0);argv = allocate(argv, "i32", ALLOC_NORMAL);try {
	      var ret = Module["_main"](argc, argv, 0);exit(ret, true);
	    } catch (e) {
	      if (e instanceof ExitStatus) {
	        return;
	      } else if (e == "SimulateInfiniteLoop") {
	        Module["noExitRuntime"] = true;return;
	      } else {
	        if (e && (typeof e === "undefined" ? "undefined" : _typeof(e)) === "object" && e.stack) Module.printErr("exception thrown: " + [e, e.stack]);throw e;
	      }
	    } finally {
	      calledMain = true;
	    }
	  };function run(args) {
	    args = args || Module["arguments"];if (preloadStartTime === null) preloadStartTime = Date.now();if (runDependencies > 0) {
	      return;
	    }preRun();if (runDependencies > 0) return;if (Module["calledRun"]) return;function doRun() {
	      if (Module["calledRun"]) return;Module["calledRun"] = true;if (ABORT) return;ensureInitRuntime();preMain();if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();if (Module["_main"] && shouldRunNow) Module["callMain"](args);postRun();
	    }if (Module["setStatus"]) {
	      Module["setStatus"]("Running...");setTimeout(function () {
	        setTimeout(function () {
	          Module["setStatus"]("");
	        }, 1);doRun();
	      }, 1);
	    } else {
	      doRun();
	    }
	  }Module["run"] = Module.run = run;function exit(status, implicit) {
	    if (implicit && Module["noExitRuntime"]) {
	      return;
	    }if (Module["noExitRuntime"]) {} else {
	      ABORT = true;EXITSTATUS = status;STACKTOP = initialStackTop;exitRuntime();if (Module["onExit"]) Module["onExit"](status);
	    }if (ENVIRONMENT_IS_NODE) {
	      process["exit"](status);
	    } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
	      quit(status);
	    }throw new ExitStatus(status);
	  }Module["exit"] = Module.exit = exit;var abortDecorators = [];function abort(what) {
	    if (what !== undefined) {
	      Module.print(what);Module.printErr(what);what = JSON.stringify(what);
	    } else {
	      what = "";
	    }ABORT = true;EXITSTATUS = 1;var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output = "abort(" + what + ") at " + stackTrace() + extra;if (abortDecorators) {
	      abortDecorators.forEach(function (decorator) {
	        output = decorator(output, what);
	      });
	    }throw output;
	  }Module["abort"] = Module.abort = abort;if (Module["preInit"]) {
	    if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];while (Module["preInit"].length > 0) {
	      Module["preInit"].pop()();
	    }
	  }var shouldRunNow = true;if (Module["noInitialRun"]) {
	    shouldRunNow = false;
	  }run();return Module["return"];
	};module["exports"] = unzip;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(10)(module), __webpack_require__(2).Buffer))

/***/ }
/******/ ])
});
;
//# sourceMappingURL=minizip-asm.js.map